public interface  com.android.server.wm.WindowManagerInternal$IDragDropCallback extends java.lang.Object
{

    public void postCancelDragAndDrop()
    {
        com.android.server.wm.WindowManagerInternal$IDragDropCallback r0;

        r0 := @this: com.android.server.wm.WindowManagerInternal$IDragDropCallback;

        return;
    }

    public void postPerformDrag()
    {
        com.android.server.wm.WindowManagerInternal$IDragDropCallback r0;

        r0 := @this: com.android.server.wm.WindowManagerInternal$IDragDropCallback;

        return;
    }

    public void postReportDropResult()
    {
        com.android.server.wm.WindowManagerInternal$IDragDropCallback r0;

        r0 := @this: com.android.server.wm.WindowManagerInternal$IDragDropCallback;

        return;
    }

    public void preCancelDragAndDrop(android.os.IBinder)
    {
        com.android.server.wm.WindowManagerInternal$IDragDropCallback r0;
        android.os.IBinder r1;

        r0 := @this: com.android.server.wm.WindowManagerInternal$IDragDropCallback;

        r1 := @parameter0: android.os.IBinder;

        return;
    }

    public boolean prePerformDrag(android.view.IWindow, android.os.IBinder, int, float, float, float, float, android.content.ClipData)
    {
        com.android.server.wm.WindowManagerInternal$IDragDropCallback r0;
        android.view.IWindow r1;
        android.os.IBinder r2;
        int i0;
        float f0, f1, f2, f3;
        android.content.ClipData r3;

        r0 := @this: com.android.server.wm.WindowManagerInternal$IDragDropCallback;

        r1 := @parameter0: android.view.IWindow;

        r2 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        f0 := @parameter3: float;

        f1 := @parameter4: float;

        f2 := @parameter5: float;

        f3 := @parameter6: float;

        r3 := @parameter7: android.content.ClipData;

        return 1;
    }

    public void preReportDropResult(android.view.IWindow, boolean)
    {
        com.android.server.wm.WindowManagerInternal$IDragDropCallback r0;
        android.view.IWindow r1;
        boolean z0;

        r0 := @this: com.android.server.wm.WindowManagerInternal$IDragDropCallback;

        r1 := @parameter0: android.view.IWindow;

        z0 := @parameter1: boolean;

        return;
    }

    public boolean registerInputChannel(com.android.server.wm.DragState, android.view.Display, com.android.server.input.InputManagerService, android.view.InputChannel)
    {
        com.android.server.wm.WindowManagerInternal$IDragDropCallback r0;
        com.android.server.wm.DragState r1;
        android.view.Display r2;
        com.android.server.input.InputManagerService r3;
        android.view.InputChannel r4, $r5;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowManagerInternal$IDragDropCallback;

        r1 := @parameter0: com.android.server.wm.DragState;

        r2 := @parameter1: android.view.Display;

        r3 := @parameter2: com.android.server.input.InputManagerService;

        r4 := @parameter3: android.view.InputChannel;

        virtualinvoke r1.<com.android.server.wm.DragState: void register(android.view.Display)>(r2);

        $r5 = virtualinvoke r1.<com.android.server.wm.DragState: android.view.InputChannel getInputChannel()>();

        $z0 = virtualinvoke r3.<com.android.server.input.InputManagerService: boolean transferTouchFocus(android.view.InputChannel,android.view.InputChannel)>(r4, $r5);

        return $z0;
    }
}
