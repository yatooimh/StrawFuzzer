public abstract class com.android.server.wm.WindowManagerInternal extends java.lang.Object
{

    public void <init>()
    {
        com.android.server.wm.WindowManagerInternal r0;

        r0 := @this: com.android.server.wm.WindowManagerInternal;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract void addNonHighRefreshRatePackage(java.lang.String);

    public abstract void addWindowToken(android.os.IBinder, int, int);

    public abstract void clearForcedDisplaySize(int);

    public abstract void clearSnapshotCache();

    public abstract void computeWindowsForAccessibility(int);

    public abstract android.view.MagnificationSpec getCompatibleMagnificationSpecForWindow(android.os.IBinder);

    public abstract int getDisplayIdForWindow(android.os.IBinder);

    public abstract android.os.IBinder getFocusedWindowToken();

    public abstract java.lang.String getImeControlTargetNameForLogging(int);

    public abstract java.lang.String getImeTargetNameForLogging(int);

    public abstract int getInputMethodWindowVisibleHeight(int);

    public abstract com.android.internal.policy.KeyInterceptionInfo getKeyInterceptionInfoFromToken(android.os.IBinder);

    public abstract void getMagnificationRegion(int, android.graphics.Region);

    public abstract int getTopFocusedDisplayId();

    public abstract android.content.Context getTopFocusedDisplayUiContext();

    public abstract void getWindowFrame(android.os.IBinder, android.graphics.Rect);

    public abstract java.lang.String getWindowName(android.os.IBinder);

    public abstract int getWindowOwnerUserId(android.os.IBinder);

    public abstract void hideIme(android.os.IBinder, int);

    public abstract boolean isHardKeyboardAvailable();

    public abstract boolean isInputMethodClientFocus(int, int, int);

    public abstract boolean isKeyguardLocked();

    public abstract boolean isKeyguardShowingAndNotOccluded();

    public abstract boolean isStackVisibleLw(int);

    public abstract boolean isTouchableDisplay(int);

    public abstract boolean isUidAllowedOnDisplay(int, int);

    public abstract boolean isUidFocused(int);

    public abstract void lockNow();

    public abstract void registerAppTransitionListener(com.android.server.wm.WindowManagerInternal$AppTransitionListener);

    public abstract void registerDragDropControllerCallback(com.android.server.wm.WindowManagerInternal$IDragDropCallback);

    public abstract void removeNonHighRefreshRatePackage(java.lang.String);

    public abstract void removeWindowToken(android.os.IBinder, boolean, int);

    public abstract void reportPasswordChanged(int);

    public abstract void requestTraversalFromDisplayManager();

    public abstract void setAccessibilityIdToSurfaceMetadata(android.os.IBinder, int);

    public abstract void setForceShowMagnifiableBounds(int, boolean);

    public abstract void setForcedDisplaySize(int, int, int);

    public abstract void setInputFilter(android.view.IInputFilter);

    public abstract boolean setMagnificationCallbacks(int, com.android.server.wm.WindowManagerInternal$MagnificationCallbacks);

    public abstract void setMagnificationSpec(int, android.view.MagnificationSpec);

    public abstract void setOnHardKeyboardStatusChangeListener(com.android.server.wm.WindowManagerInternal$OnHardKeyboardStatusChangeListener);

    public abstract void setVr2dDisplayId(int);

    public abstract boolean setWindowsForAccessibilityCallback(int, com.android.server.wm.WindowManagerInternal$WindowsForAccessibilityCallback);

    public abstract boolean shouldShowIme(int);

    public abstract boolean shouldShowSystemDecorOnDisplay(int);

    public abstract void showGlobalActions();

    public abstract void showImePostLayout(android.os.IBinder);

    public abstract void updateInputMethodTargetWindow(android.os.IBinder, android.os.IBinder);

    public abstract void updateInputMethodWindowStatus(android.os.IBinder, boolean, boolean);

    public abstract void waitForAllWindowsDrawn(java.lang.Runnable, long, int);
}
