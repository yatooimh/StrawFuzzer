class com.android.server.wm.WindowManagerService$3 extends java.lang.Object implements com.android.server.utils.PriorityDump$PriorityDumper
{
    final com.android.server.wm.WindowManagerService this$0;

    void <init>(com.android.server.wm.WindowManagerService)
    {
        com.android.server.wm.WindowManagerService$3 r0;
        com.android.server.wm.WindowManagerService r1;

        r0 := @this: com.android.server.wm.WindowManagerService$3;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        r0.<com.android.server.wm.WindowManagerService$3: com.android.server.wm.WindowManagerService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], boolean)
    {
        com.android.server.wm.WindowManagerService$3 r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        boolean z0;
        com.android.server.wm.WindowManagerService $r4;

        r0 := @this: com.android.server.wm.WindowManagerService$3;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        z0 := @parameter3: boolean;

        $r4 = r0.<com.android.server.wm.WindowManagerService$3: com.android.server.wm.WindowManagerService this$0>;

        staticinvoke <com.android.server.wm.WindowManagerService: void access$100(com.android.server.wm.WindowManagerService,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],boolean)>($r4, r1, r2, r3, z0);

        return;
    }

    public void dumpCritical(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[], boolean)
    {
        com.android.server.wm.WindowManagerService$3 r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3, $r11;
        boolean z0, $z1;
        com.android.server.wm.WindowManagerService $r4, $r6, $r10;
        com.android.server.wm.WindowTracing $r5, $r7;
        android.os.Handler $r8;
        com.android.server.wm._$$Lambda$WindowManagerService$3$FRNc42I1SE4lD0XFYgIp8RCUXng $r9;

        r0 := @this: com.android.server.wm.WindowManagerService$3;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        z0 := @parameter3: boolean;

        if z0 == 0 goto label1;

        $r4 = r0.<com.android.server.wm.WindowManagerService$3: com.android.server.wm.WindowManagerService this$0>;

        $r5 = $r4.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowTracing mWindowTracing>;

        $z1 = virtualinvoke $r5.<com.android.server.wm.WindowTracing: boolean isEnabled()>();

        if $z1 == 0 goto label1;

        $r6 = r0.<com.android.server.wm.WindowManagerService$3: com.android.server.wm.WindowManagerService this$0>;

        $r7 = $r6.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowTracing mWindowTracing>;

        virtualinvoke $r7.<com.android.server.wm.WindowTracing: void stopTrace(java.io.PrintWriter,boolean)>(null, 0);

        $r8 = staticinvoke <com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>();

        $r9 = new com.android.server.wm._$$Lambda$WindowManagerService$3$FRNc42I1SE4lD0XFYgIp8RCUXng;

        specialinvoke $r9.<com.android.server.wm._$$Lambda$WindowManagerService$3$FRNc42I1SE4lD0XFYgIp8RCUXng: void <init>(com.android.server.wm.WindowManagerService$3)>(r0);

        virtualinvoke $r8.<android.os.Handler: boolean post(java.lang.Runnable)>($r9);

     label1:
        $r10 = r0.<com.android.server.wm.WindowManagerService$3: com.android.server.wm.WindowManagerService this$0>;

        $r11 = newarray (java.lang.String)[1];

        $r11[0] = "-a";

        staticinvoke <com.android.server.wm.WindowManagerService: void access$100(com.android.server.wm.WindowManagerService,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],boolean)>($r10, r1, r2, $r11, z0);

        return;
    }

    public void lambda$dumpCritical$0$WindowManagerService$3()
    {
        com.android.server.wm.WindowManagerService$3 r0;
        com.android.server.wm.WindowManagerService $r1, $r3;
        com.android.server.wm.WindowTracing $r2, $r4;

        r0 := @this: com.android.server.wm.WindowManagerService$3;

        $r1 = r0.<com.android.server.wm.WindowManagerService$3: com.android.server.wm.WindowManagerService this$0>;

        $r2 = $r1.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowTracing mWindowTracing>;

        virtualinvoke $r2.<com.android.server.wm.WindowTracing: void writeTraceToFile()>();

        $r3 = r0.<com.android.server.wm.WindowManagerService$3: com.android.server.wm.WindowManagerService this$0>;

        $r4 = $r3.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowTracing mWindowTracing>;

        virtualinvoke $r4.<com.android.server.wm.WindowTracing: void startTrace(java.io.PrintWriter)>(null);

        return;
    }
}
