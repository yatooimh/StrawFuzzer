class com.android.server.wm.WindowManagerService$6 extends java.lang.Object implements android.os.PowerManagerInternal$LowPowerModeListener
{
    final com.android.server.wm.WindowManagerService this$0;

    void <init>(com.android.server.wm.WindowManagerService)
    {
        com.android.server.wm.WindowManagerService$6 r0;
        com.android.server.wm.WindowManagerService r1;

        r0 := @this: com.android.server.wm.WindowManagerService$6;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        r0.<com.android.server.wm.WindowManagerService$6: com.android.server.wm.WindowManagerService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int getServiceType()
    {
        com.android.server.wm.WindowManagerService$6 r0;

        r0 := @this: com.android.server.wm.WindowManagerService$6;

        return 3;
    }

    public void onLowPowerModeChanged(android.os.PowerSaveState)
    {
        com.android.server.wm.WindowManagerService$6 r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        boolean z0, $z1, $z2;
        com.android.server.wm.WindowManagerService $r2, $r3, $r4, $r5, $r6;
        java.lang.Throwable $r7;
        android.os.PowerSaveState r8;

        r0 := @this: com.android.server.wm.WindowManagerService$6;

        r8 := @parameter0: android.os.PowerSaveState;

        $r2 = r0.<com.android.server.wm.WindowManagerService$6: com.android.server.wm.WindowManagerService this$0>;

        r1 = $r2.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        z0 = r8.<android.os.PowerSaveState: boolean batterySaverEnabled>;

        $r3 = r0.<com.android.server.wm.WindowManagerService$6: com.android.server.wm.WindowManagerService this$0>;

        $z1 = staticinvoke <com.android.server.wm.WindowManagerService: boolean access$300(com.android.server.wm.WindowManagerService)>($r3);

        if $z1 == z0 goto label2;

        $r4 = r0.<com.android.server.wm.WindowManagerService$6: com.android.server.wm.WindowManagerService this$0>;

        $z2 = $r4.<com.android.server.wm.WindowManagerService: boolean mAllowAnimationsInLowPowerMode>;

        if $z2 != 0 goto label2;

        $r5 = r0.<com.android.server.wm.WindowManagerService$6: com.android.server.wm.WindowManagerService this$0>;

        staticinvoke <com.android.server.wm.WindowManagerService: boolean access$302(com.android.server.wm.WindowManagerService,boolean)>($r5, z0);

        $r6 = r0.<com.android.server.wm.WindowManagerService$6: com.android.server.wm.WindowManagerService this$0>;

        virtualinvoke $r6.<com.android.server.wm.WindowManagerService: void dispatchNewAnimatorScaleLocked(com.android.server.wm.Session)>(null);

     label2:
        exitmonitor r1;

     label3:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label4:
        $r7 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
