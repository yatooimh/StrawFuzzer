final class com.android.server.wm.WindowManagerService$H extends android.os.Handler
{
    public static final int ALL_WINDOWS_DRAWN;
    public static final int ANIMATION_FAILSAFE;
    public static final int APP_FREEZE_TIMEOUT;
    public static final int BOOT_TIMEOUT;
    public static final int CHECK_IF_BOOT_ANIMATION_FINISHED;
    public static final int CLIENT_FREEZE_TIMEOUT;
    public static final int ENABLE_SCREEN;
    public static final int FORCE_GC;
    public static final int LAYOUT_AND_ASSIGN_WINDOW_LAYERS_IF_NEEDED;
    public static final int NEW_ANIMATOR_SCALE;
    public static final int NOTIFY_ACTIVITY_DRAWN;
    public static final int ON_POINTER_DOWN_OUTSIDE_FOCUS;
    public static final int PERSIST_ANIMATION_SCALE;
    public static final int RECOMPUTE_FOCUS;
    public static final int REPORT_FOCUS_CHANGE;
    public static final int REPORT_HARD_KEYBOARD_STATUS_CHANGE;
    public static final int REPORT_LOSING_FOCUS;
    public static final int REPORT_WINDOWS_CHANGE;
    public static final int RESET_ANR_MESSAGE;
    public static final int RESTORE_POINTER_ICON;
    public static final int SEAMLESS_ROTATION_TIMEOUT;
    public static final int SET_HAS_OVERLAY_UI;
    public static final int SHOW_EMULATOR_DISPLAY_OVERLAY;
    public static final int SHOW_STRICT_MODE_VIOLATION;
    public static final int UNUSED;
    public static final int UPDATE_ANIMATION_SCALE;
    public static final int UPDATE_MULTI_WINDOW_STACKS;
    public static final int WAITING_FOR_DRAWN_TIMEOUT;
    public static final int WALLPAPER_DRAW_PENDING_TIMEOUT;
    public static final int WINDOW_FREEZE_TIMEOUT;
    public static final int WINDOW_HIDE_TIMEOUT;
    public static final int WINDOW_REPLACEMENT_TIMEOUT;
    public static final int WINDOW_STATE_BLAST_SYNC_TIMEOUT;
    final com.android.server.wm.WindowManagerService this$0;

    void <init>(com.android.server.wm.WindowManagerService)
    {
        com.android.server.wm.WindowManagerService$H r0;
        com.android.server.wm.WindowManagerService r1;

        r0 := @this: com.android.server.wm.WindowManagerService$H;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>()>();

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.wm.WindowManagerService$H r0;
        float f0, $f1, $f2, $f4, $f5, $f7, $f8, $f10, $f11, $f12, $f13, $f14;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18, i19, i20, i21, i22;
        com.android.server.wm.DisplayContent r1, $r69, $r153, r231, r245, r251, r254;
        com.android.server.wm.WindowState r2, $r23, $r150, r234, r262, r264;
        java.lang.String r3, r222, r258, r263, r265, r266;
        long l1;
        java.lang.Object $r4, $r20, $r22, $r24, $r27, $r47, $r60, $r64, $r68, $r77, $r100, $r105, $r112, $r117, $r121, $r125, $r129, $r131, $r135, $r149, $r152, $r155;
        com.android.server.wm.WindowManagerService $r5, $r6, $r10, $r19, $r21, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r43, $r45, $r49, $r52, $r55, $r58, $r59, $r61, $r62, $r65, $r67, $r70, $r71, $r72, $r73, $r75, $r81, $r82, $r83, $r85, $r87, $r90, $r91, $r94, $r95, $r98, $r99, $r101, $r103, $r109, $r110, $r111, $r114, $r115, $r119, $r126, $r127, $r130, $r134, $r136, $r138, $r139, $r140, $r142, $r143, $r144, $r147, $r148, $r151, $r154, $r156, $r157, $r158, $r159, $r160, $r162, r238, r239, r240;
        com.android.server.wm.AccessibilityController $r7, r260;
        boolean $z0, $z1, $z2, $z3, $z4, $z6, $z7, $z8, $z9, $z10, $z11, $z16, $z18, $z19, z21, z22;
        java.lang.Object[] $r8, $r11, $r14, $r16, $r25, $r79, $r107, $r145;
        com.android.server.wm.ProtoLogGroup $r9, $r12, $r15, $r17, $r26, $r80, $r108, $r146;
        java.util.ArrayList $r13, $r42, $r44, $r46, $r74, $r76, $r102, $r106, $r113, r256, r257;
        java.lang.Long $r18;
        com.android.server.wm.ActivityRecord $r48;
        android.content.Context $r50, $r53, $r56, $r88, $r92, $r96;
        android.content.ContentResolver $r51, $r54, $r57, $r89, $r93, $r97;
        com.android.server.wm.WindowSurfacePlacer $r63, $r137;
        com.android.server.wm.DisplayRotation $r66;
        com.android.server.wm.WindowManagerService$AppFreezeListener $r78;
        com.android.server.wm.WindowAnimator $r84;
        java.lang.Runtime $r86;
        java.util.HashMap $r104, $r128;
        android.util.ArraySet $r116, $r120;
        android.view.IWindowSessionCallback $r118, $r123, $r124;
        com.android.server.wm.Session $r122, r209;
        android.os.IBinder $r132, r196;
        android.app.IActivityTaskManager $r133;
        com.android.server.wm.ActivityTaskManagerInternal $r141;
        com.android.server.wm.RecentsAnimationController $r161, $r163;
        java.lang.Throwable $r164, $r165, $r166, $r167, $r168, $r170, $r171, $r172, $r173, $r174, $r175, $r176, $r177, $r178, $r180, $r181, $r182, $r183, $r184, $r186, $r187, $r188, $r189;
        android.os.RemoteException $r169, $r179, $r185;
        android.os.Message r190;
        com.android.server.wm.WindowManagerGlobalLock r191, r193, r195, r198, r200, r202, r205, r207, r212, r216, r221, r225, r227, r229, r232, r235, r242, r244, r247, r249, r252, r255, r261;
        com.android.server.wm.WallpaperController r203;
        com.android.server.wm.WindowContainer r215, r220;
        java.lang.Runnable r217, r223;
        android.view.WindowManager$LayoutParams r236;
        android.app.ActivityManagerInternal r241;

        r0 := @this: com.android.server.wm.WindowManagerService$H;

        r190 := @parameter0: android.os.Message;

        i15 = r190.<android.os.Message: int what>;

        z21 = 1;

        if i15 == 2 goto label196;

        if i15 == 3 goto label187;

        if i15 == 11 goto label181;

        if i15 == 19 goto label175;

        if i15 == 30 goto label168;

        if i15 == 41 goto label159;

        if i15 == 46 goto label149;

        if i15 == 58 goto label146;

        if i15 == 51 goto label141;

        if i15 == 52 goto label135;

        if i15 == 54 goto label129;

        if i15 == 55 goto label123;

        tableswitch(i15)
        {
            case 14: goto label122;
            case 15: goto label112;
            case 16: goto label111;
            case 17: goto label100;
            default: goto label001;
        };

     label001:
        tableswitch(i15)
        {
            case 22: goto label099;
            case 23: goto label098;
            case 24: goto label091;
            case 25: goto label090;
            default: goto label002;
        };

     label002:
        tableswitch(i15)
        {
            case 32: goto label087;
            case 33: goto label081;
            case 34: goto label060;
            default: goto label003;
        };

     label003:
        tableswitch(i15)
        {
            case 36: goto label059;
            case 37: goto label052;
            case 38: goto label046;
            case 39: goto label037;
            default: goto label004;
        };

     label004:
        tableswitch(i15)
        {
            case 60: goto label030;
            case 61: goto label024;
            case 62: goto label018;
            case 63: goto label012;
            case 64: goto label006;
            default: goto label005;
        };

     label005:
        goto label214;

     label006:
        $r148 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r191 = $r148.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r191;

     label007:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r149 = r190.<android.os.Message: java.lang.Object obj>;

        $r150 = (com.android.server.wm.WindowState) $r149;

        virtualinvoke $r150.<com.android.server.wm.WindowState: void immediatelyNotifyBlastSync()>();

        exitmonitor r191;

     label008:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        goto label214;

     label009:
        $r181 := @caughtexception;

     label010:
        exitmonitor r191;

     label011:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r181;

     label012:
        $r151 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r193 = $r151.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r193;

     label013:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r152 = r190.<android.os.Message: java.lang.Object obj>;

        $r153 = (com.android.server.wm.DisplayContent) $r152;

        virtualinvoke $r153.<com.android.server.wm.DisplayContent: void layoutAndAssignWindowLayersIfNeeded()>();

        exitmonitor r193;

     label014:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        goto label214;

     label015:
        $r189 := @caughtexception;

     label016:
        exitmonitor r193;

     label017:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r189;

     label018:
        $r154 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r195 = $r154.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r195;

     label019:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r155 = r190.<android.os.Message: java.lang.Object obj>;

        r196 = (android.os.IBinder) $r155;

        $r156 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        staticinvoke <com.android.server.wm.WindowManagerService: void access$1600(com.android.server.wm.WindowManagerService,android.os.IBinder)>($r156, r196);

        exitmonitor r195;

     label020:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        goto label214;

     label021:
        $r177 := @caughtexception;

     label022:
        exitmonitor r195;

     label023:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r177;

     label024:
        $r157 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r198 = $r157.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r198;

     label025:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r158 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        virtualinvoke $r158.<com.android.server.wm.WindowManagerService: boolean updateFocusedWindowLocked(int,boolean)>(0, 1);

        exitmonitor r198;

     label026:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        goto label214;

     label027:
        $r167 := @caughtexception;

     label028:
        exitmonitor r198;

     label029:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r167;

     label030:
        $r159 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r200 = $r159.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r200;

     label031:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r160 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r161 = staticinvoke <com.android.server.wm.WindowManagerService: com.android.server.wm.RecentsAnimationController access$1500(com.android.server.wm.WindowManagerService)>($r160);

        if $r161 == null goto label032;

        $r162 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r163 = staticinvoke <com.android.server.wm.WindowManagerService: com.android.server.wm.RecentsAnimationController access$1500(com.android.server.wm.WindowManagerService)>($r162);

        virtualinvoke $r163.<com.android.server.wm.RecentsAnimationController: void scheduleFailsafe()>();

     label032:
        exitmonitor r200;

     label033:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        goto label214;

     label034:
        $r173 := @caughtexception;

     label035:
        exitmonitor r200;

     label036:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r173;

     label037:
        $r134 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r202 = $r134.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r202;

     label038:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r135 = r190.<android.os.Message: java.lang.Object obj>;

        r203 = (com.android.server.wm.WallpaperController) $r135;

     label039:
        if r203 == null goto label041;

     label040:
        $z18 = virtualinvoke r203.<com.android.server.wm.WallpaperController: boolean processWallpaperDrawPendingTimeout()>();

        if $z18 == 0 goto label041;

        $r136 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r137 = $r136.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowSurfacePlacer mWindowPlacerLocked>;

        virtualinvoke $r137.<com.android.server.wm.WindowSurfacePlacer: void performSurfacePlacement()>();

     label041:
        exitmonitor r202;

     label042:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        goto label214;

     label043:
        $r187 := @caughtexception;

     label044:
        exitmonitor r202;

     label045:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r187;

     label046:
        $r138 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r205 = $r138.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r205;

     label047:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r139 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r139.<com.android.server.wm.WindowManagerService: java.lang.String mLastANRState> = null;

        exitmonitor r205;

     label048:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        $r140 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r141 = $r140.<com.android.server.wm.WindowManagerService: com.android.server.wm.ActivityTaskManagerInternal mAtmInternal>;

        virtualinvoke $r141.<com.android.server.wm.ActivityTaskManagerInternal: void clearSavedANRState()>();

        goto label214;

     label049:
        $r170 := @caughtexception;

     label050:
        exitmonitor r205;

     label051:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r170;

     label052:
        $r142 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r207 = $r142.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r207;

     label053:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $z19 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_BOOT_enabled>;

        if $z19 == 0 goto label054;

        $r146 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_BOOT>;

        $r145 = (java.lang.Object[]) null;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void i(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r146, 2034780299, 0, null, $r145);

     label054:
        $r143 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        z22 = staticinvoke <com.android.server.wm.WindowManagerService: boolean access$1400(com.android.server.wm.WindowManagerService)>($r143);

        exitmonitor r207;

     label055:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        if z22 == 0 goto label214;

        $r144 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        staticinvoke <com.android.server.wm.WindowManagerService: void access$1100(com.android.server.wm.WindowManagerService)>($r144);

        goto label214;

     label056:
        $r166 := @caughtexception;

     label057:
        exitmonitor r207;

     label058:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r166;

     label059:
        $r147 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        virtualinvoke $r147.<com.android.server.wm.WindowManagerService: void showEmulatorDisplayOverlay()>();

        goto label214;

     label060:
        $r111 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        f0 = virtualinvoke $r111.<com.android.server.wm.WindowManagerService: float getCurrentAnimatorScale()>();

        staticinvoke <android.animation.ValueAnimator: void setDurationScale(float)>(f0);

        $r112 = r190.<android.os.Message: java.lang.Object obj>;

        r209 = (com.android.server.wm.Session) $r112;

        if r209 == null goto label065;

     label061:
        $r124 = r209.<com.android.server.wm.Session: android.view.IWindowSessionCallback mCallback>;

        interfaceinvoke $r124.<android.view.IWindowSessionCallback: void onAnimatorScaleChanged(float)>(f0);

     label062:
        goto label064;

     label063:
        $r185 := @caughtexception;

     label064:
        goto label214;

     label065:
        $r113 = new java.util.ArrayList;

        specialinvoke $r113.<java.util.ArrayList: void <init>()>();

        $r114 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r212 = $r114.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r212;

     label066:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

     label067:
        i16 = 0;

     label068:
        $r115 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r116 = $r115.<com.android.server.wm.WindowManagerService: android.util.ArraySet mSessions>;

        $i13 = virtualinvoke $r116.<android.util.ArraySet: int size()>();

        if i16 >= $i13 goto label070;

        $r119 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r120 = $r119.<com.android.server.wm.WindowManagerService: android.util.ArraySet mSessions>;

        $r121 = virtualinvoke $r120.<android.util.ArraySet: java.lang.Object valueAt(int)>(i16);

        $r122 = (com.android.server.wm.Session) $r121;

        $r123 = $r122.<com.android.server.wm.Session: android.view.IWindowSessionCallback mCallback>;

        virtualinvoke $r113.<java.util.ArrayList: boolean add(java.lang.Object)>($r123);

     label069:
        i16 = i16 + 1;

        goto label068;

     label070:
        exitmonitor r212;

     label071:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        i17 = 0;

     label072:
        $i14 = virtualinvoke $r113.<java.util.ArrayList: int size()>();

        if i17 >= $i14 goto label077;

     label073:
        $r117 = virtualinvoke $r113.<java.util.ArrayList: java.lang.Object get(int)>(i17);

        $r118 = (android.view.IWindowSessionCallback) $r117;

        interfaceinvoke $r118.<android.view.IWindowSessionCallback: void onAnimatorScaleChanged(float)>(f0);

     label074:
        goto label076;

     label075:
        $r179 := @caughtexception;

     label076:
        i17 = i17 + 1;

        goto label072;

     label077:
        goto label214;

     label078:
        $r172 := @caughtexception;

     label079:
        exitmonitor r212;

     label080:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r172;

     label081:
        $r125 = r190.<android.os.Message: java.lang.Object obj>;

        r215 = (com.android.server.wm.WindowContainer) $r125;

        $r126 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r216 = $r126.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r216;

     label082:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r127 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r128 = $r127.<com.android.server.wm.WindowManagerService: java.util.HashMap mWaitingForDrawnCallbacks>;

        $r129 = virtualinvoke $r128.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r215);

        r217 = (java.lang.Runnable) $r129;

        exitmonitor r216;

     label083:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        if r217 == null goto label214;

        interfaceinvoke r217.<java.lang.Runnable: void run()>();

        goto label214;

     label084:
        $r165 := @caughtexception;

     label085:
        exitmonitor r216;

     label086:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r165;

     label087:
        $r130 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r133 = $r130.<com.android.server.wm.WindowManagerService: android.app.IActivityTaskManager mActivityTaskManager>;

        $r131 = r190.<android.os.Message: java.lang.Object obj>;

        $r132 = (android.os.IBinder) $r131;

        interfaceinvoke $r133.<android.app.IActivityTaskManager: void notifyActivityDrawn(android.os.IBinder)>($r132);

     label088:
        goto label214;

     label089:
        $r169 := @caughtexception;

        goto label214;

     label090:
        $r99 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $i12 = r190.<android.os.Message: int arg1>;

        $i11 = r190.<android.os.Message: int arg2>;

        staticinvoke <com.android.server.wm.WindowManagerService: void access$1300(com.android.server.wm.WindowManagerService,int,int)>($r99, $i12, $i11);

        goto label214;

     label091:
        $r100 = r190.<android.os.Message: java.lang.Object obj>;

        r220 = (com.android.server.wm.WindowContainer) $r100;

        $r101 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r221 = $r101.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r221;

     label092:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $z16 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_ERROR_enabled>;

        if $z16 == 0 goto label093;

        $r106 = r220.<com.android.server.wm.WindowContainer: java.util.ArrayList mWaitingForDrawn>;

        r222 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r106);

        $r108 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_ERROR>;

        $r107 = newarray (java.lang.Object)[1];

        $r107[0] = r222;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void w(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r108, -1526645239, 0, "Timeout waiting for drawn: undrawn=%s", $r107);

     label093:
        $r102 = r220.<com.android.server.wm.WindowContainer: java.util.ArrayList mWaitingForDrawn>;

        virtualinvoke $r102.<java.util.ArrayList: void clear()>();

        $r103 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r104 = $r103.<com.android.server.wm.WindowManagerService: java.util.HashMap mWaitingForDrawnCallbacks>;

        $r105 = virtualinvoke $r104.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r220);

        r223 = (java.lang.Runnable) $r105;

        exitmonitor r221;

     label094:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        if r223 == null goto label214;

        interfaceinvoke r223.<java.lang.Runnable: void run()>();

        goto label214;

     label095:
        $r180 := @caughtexception;

     label096:
        exitmonitor r221;

     label097:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r180;

     label098:
        $r109 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        virtualinvoke $r109.<com.android.server.wm.WindowManagerService: void performBootTimeout()>();

        goto label214;

     label099:
        $r110 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        virtualinvoke $r110.<com.android.server.wm.WindowManagerService: void notifyHardKeyboardStatusChange()>();

        goto label214;

     label100:
        $r71 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r225 = $r71.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r225;

     label101:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $z9 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_ERROR_enabled>;

        if $z9 == 0 goto label102;

        $r80 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_ERROR>;

        $r79 = (java.lang.Object[]) null;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void w(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r80, -322035974, 0, "App freeze timeout expired.", $r79);

     label102:
        $r72 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r72.<com.android.server.wm.WindowManagerService: int mWindowsFreezingScreen> = 2;

        $r73 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r74 = $r73.<com.android.server.wm.WindowManagerService: java.util.ArrayList mAppFreezeListeners>;

        $i10 = virtualinvoke $r74.<java.util.ArrayList: int size()>();

        i18 = $i10 - 1;

     label103:
        if i18 < 0 goto label106;

     label104:
        $r75 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r76 = $r75.<com.android.server.wm.WindowManagerService: java.util.ArrayList mAppFreezeListeners>;

        $r77 = virtualinvoke $r76.<java.util.ArrayList: java.lang.Object get(int)>(i18);

        $r78 = (com.android.server.wm.WindowManagerService$AppFreezeListener) $r77;

        interfaceinvoke $r78.<com.android.server.wm.WindowManagerService$AppFreezeListener: void onAppFreezeTimeout()>();

     label105:
        i18 = i18 + -1;

        goto label103;

     label106:
        exitmonitor r225;

     label107:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        goto label214;

     label108:
        $r186 := @caughtexception;

     label109:
        exitmonitor r225;

     label110:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r186;

     label111:
        $r81 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        staticinvoke <com.android.server.wm.WindowManagerService: void access$1100(com.android.server.wm.WindowManagerService)>($r81);

        goto label214;

     label112:
        $r82 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r227 = $r82.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r227;

     label113:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r83 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r84 = $r83.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowAnimator mAnimator>;

        $z10 = virtualinvoke $r84.<com.android.server.wm.WindowAnimator: boolean isAnimationScheduled()>();

        if $z10 == 0 goto label115;

        virtualinvoke r0.<com.android.server.wm.WindowManagerService$H: boolean sendEmptyMessageDelayed(int,long)>(15, 2000L);

        exitmonitor r227;

     label114:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label115:
        $r85 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $z11 = $r85.<com.android.server.wm.WindowManagerService: boolean mDisplayFrozen>;

        if $z11 == 0 goto label117;

        exitmonitor r227;

     label116:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label117:
        exitmonitor r227;

     label118:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        $r86 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        virtualinvoke $r86.<java.lang.Runtime: void gc()>();

        goto label214;

     label119:
        $r183 := @caughtexception;

     label120:
        exitmonitor r227;

     label121:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r183;

     label122:
        $r87 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r88 = $r87.<com.android.server.wm.WindowManagerService: android.content.Context mContext>;

        $r89 = virtualinvoke $r88.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r90 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $f12 = staticinvoke <com.android.server.wm.WindowManagerService: float access$800(com.android.server.wm.WindowManagerService)>($r90);

        staticinvoke <android.provider.Settings$Global: boolean putFloat(android.content.ContentResolver,java.lang.String,float)>($r89, "window_animation_scale", $f12);

        $r91 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r92 = $r91.<com.android.server.wm.WindowManagerService: android.content.Context mContext>;

        $r93 = virtualinvoke $r92.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r94 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $f13 = staticinvoke <com.android.server.wm.WindowManagerService: float access$900(com.android.server.wm.WindowManagerService)>($r94);

        staticinvoke <android.provider.Settings$Global: boolean putFloat(android.content.ContentResolver,java.lang.String,float)>($r93, "transition_animation_scale", $f13);

        $r95 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r96 = $r95.<com.android.server.wm.WindowManagerService: android.content.Context mContext>;

        $r97 = virtualinvoke $r96.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r98 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $f14 = staticinvoke <com.android.server.wm.WindowManagerService: float access$1000(com.android.server.wm.WindowManagerService)>($r98);

        staticinvoke <android.provider.Settings$Global: boolean putFloat(android.content.ContentResolver,java.lang.String,float)>($r97, "animator_duration_scale", $f14);

        goto label214;

     label123:
        $r67 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r229 = $r67.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r229;

     label124:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r70 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r68 = r190.<android.os.Message: java.lang.Object obj>;

        $r69 = (com.android.server.wm.DisplayContent) $r68;

        $i8 = r190.<android.os.Message: int arg1>;

        $f11 = (float) $i8;

        $i9 = r190.<android.os.Message: int arg2>;

        $f10 = (float) $i9;

        virtualinvoke $r70.<com.android.server.wm.WindowManagerService: void restorePointerIconLocked(com.android.server.wm.DisplayContent,float,float)>($r69, $f11, $f10);

        exitmonitor r229;

     label125:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        goto label214;

     label126:
        $r188 := @caughtexception;

     label127:
        exitmonitor r229;

     label128:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r188;

     label129:
        $r64 = r190.<android.os.Message: java.lang.Object obj>;

        r231 = (com.android.server.wm.DisplayContent) $r64;

        $r65 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r232 = $r65.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r232;

     label130:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r66 = virtualinvoke r231.<com.android.server.wm.DisplayContent: com.android.server.wm.DisplayRotation getDisplayRotation()>();

        virtualinvoke $r66.<com.android.server.wm.DisplayRotation: void onSeamlessRotationTimeout()>();

        exitmonitor r232;

     label131:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        goto label214;

     label132:
        $r178 := @caughtexception;

     label133:
        exitmonitor r232;

     label134:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r178;

     label135:
        $r60 = r190.<android.os.Message: java.lang.Object obj>;

        r234 = (com.android.server.wm.WindowState) $r60;

        $r61 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r235 = $r61.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r235;

     label136:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        r236 = r234.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i6 = r236.<android.view.WindowManager$LayoutParams: int flags>;

        $i7 = $i6 & -129;

        r236.<android.view.WindowManager$LayoutParams: int flags> = $i7;

        virtualinvoke r234.<com.android.server.wm.WindowState: void hidePermanentlyLw()>();

        virtualinvoke r234.<com.android.server.wm.WindowState: void setDisplayLayoutNeeded()>();

        $r62 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r63 = $r62.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowSurfacePlacer mWindowPlacerLocked>;

        virtualinvoke $r63.<com.android.server.wm.WindowSurfacePlacer: void performSurfacePlacement()>();

        exitmonitor r235;

     label137:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        goto label214;

     label138:
        $r171 := @caughtexception;

     label139:
        exitmonitor r235;

     label140:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r171;

     label141:
        i19 = r190.<android.os.Message: int arg1>;

        if i19 == 0 goto label144;

        if i19 == 1 goto label143;

        if i19 == 2 goto label142;

        goto label145;

     label142:
        r238 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r56 = r238.<com.android.server.wm.WindowManagerService: android.content.Context mContext>;

        $r57 = virtualinvoke $r56.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r58 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $f7 = staticinvoke <com.android.server.wm.WindowManagerService: float access$1000(com.android.server.wm.WindowManagerService)>($r58);

        $f8 = staticinvoke <android.provider.Settings$Global: float getFloat(android.content.ContentResolver,java.lang.String,float)>($r57, "animator_duration_scale", $f7);

        staticinvoke <com.android.server.wm.WindowManagerService: float access$1002(com.android.server.wm.WindowManagerService,float)>(r238, $f8);

        $r59 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        virtualinvoke $r59.<com.android.server.wm.WindowManagerService: void dispatchNewAnimatorScaleLocked(com.android.server.wm.Session)>(null);

        goto label145;

     label143:
        r239 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r53 = r239.<com.android.server.wm.WindowManagerService: android.content.Context mContext>;

        $r54 = virtualinvoke $r53.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r55 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $f4 = staticinvoke <com.android.server.wm.WindowManagerService: float access$900(com.android.server.wm.WindowManagerService)>($r55);

        $f5 = staticinvoke <android.provider.Settings$Global: float getFloat(android.content.ContentResolver,java.lang.String,float)>($r54, "transition_animation_scale", $f4);

        staticinvoke <com.android.server.wm.WindowManagerService: float access$902(com.android.server.wm.WindowManagerService,float)>(r239, $f5);

        goto label145;

     label144:
        r240 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r50 = r240.<com.android.server.wm.WindowManagerService: android.content.Context mContext>;

        $r51 = virtualinvoke $r50.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r52 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $f1 = staticinvoke <com.android.server.wm.WindowManagerService: float access$800(com.android.server.wm.WindowManagerService)>($r52);

        $f2 = staticinvoke <android.provider.Settings$Global: float getFloat(android.content.ContentResolver,java.lang.String,float)>($r51, "window_animation_scale", $f1);

        staticinvoke <com.android.server.wm.WindowManagerService: float access$802(com.android.server.wm.WindowManagerService,float)>(r240, $f2);

     label145:
        goto label214;

     label146:
        $r49 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r241 = $r49.<com.android.server.wm.WindowManagerService: android.app.ActivityManagerInternal mAmInternal>;

        i20 = r190.<android.os.Message: int arg1>;

        $i5 = r190.<android.os.Message: int arg2>;

        if $i5 != 1 goto label147;

        goto label148;

     label147:
        z21 = 0;

     label148:
        virtualinvoke r241.<android.app.ActivityManagerInternal: void setHasOverlayUi(int,boolean)>(i20, z21);

        goto label214;

     label149:
        $r40 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r242 = $r40.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r242;

     label150:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r41 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r42 = $r41.<com.android.server.wm.WindowManagerService: java.util.ArrayList mWindowReplacementTimeouts>;

        $i4 = virtualinvoke $r42.<java.util.ArrayList: int size()>();

        i21 = $i4 - 1;

     label151:
        if i21 < 0 goto label154;

     label152:
        $r45 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r46 = $r45.<com.android.server.wm.WindowManagerService: java.util.ArrayList mWindowReplacementTimeouts>;

        $r47 = virtualinvoke $r46.<java.util.ArrayList: java.lang.Object get(int)>(i21);

        $r48 = (com.android.server.wm.ActivityRecord) $r47;

        virtualinvoke $r48.<com.android.server.wm.ActivityRecord: void onWindowReplacementTimeout()>();

     label153:
        i21 = i21 + -1;

        goto label151;

     label154:
        $r43 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r44 = $r43.<com.android.server.wm.WindowManagerService: java.util.ArrayList mWindowReplacementTimeouts>;

        virtualinvoke $r44.<java.util.ArrayList: void clear()>();

        exitmonitor r242;

     label155:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        goto label214;

     label156:
        $r175 := @caughtexception;

     label157:
        exitmonitor r242;

     label158:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r175;

     label159:
        $r38 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r244 = $r38.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r244;

     label160:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r39 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r245 = virtualinvoke $r39.<com.android.server.wm.WindowManagerService: com.android.server.wm.DisplayContent getDefaultDisplayContentLocked()>();

     label161:
        if r245 == null goto label163;

     label162:
        virtualinvoke r245.<com.android.server.wm.DisplayContent: void adjustForImeIfNeeded()>();

     label163:
        exitmonitor r244;

     label164:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        goto label214;

     label165:
        $r182 := @caughtexception;

     label166:
        exitmonitor r244;

     label167:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r182;

     label168:
        $r33 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r247 = $r33.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r247;

     label169:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r34 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $z8 = $r34.<com.android.server.wm.WindowManagerService: boolean mClientFreezingScreen>;

        if $z8 == 0 goto label170;

        $r35 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r35.<com.android.server.wm.WindowManagerService: boolean mClientFreezingScreen> = 0;

        $r36 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r36.<com.android.server.wm.WindowManagerService: java.lang.Object mLastFinishedFreezeSource> = "client-timeout";

        $r37 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        virtualinvoke $r37.<com.android.server.wm.WindowManagerService: void stopFreezingDisplayLocked()>();

     label170:
        exitmonitor r247;

     label171:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        goto label214;

     label172:
        $r164 := @caughtexception;

     label173:
        exitmonitor r247;

     label174:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r164;

     label175:
        $r29 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $z7 = $r29.<com.android.server.wm.WindowManagerService: boolean mWindowsChanged>;

        if $z7 == 0 goto label214;

        $r30 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r249 = $r30.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r249;

     label176:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r31 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r31.<com.android.server.wm.WindowManagerService: boolean mWindowsChanged> = 0;

        exitmonitor r249;

     label177:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        $r32 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        staticinvoke <com.android.server.wm.WindowManagerService: void access$1200(com.android.server.wm.WindowManagerService)>($r32);

        goto label214;

     label178:
        $r174 := @caughtexception;

     label179:
        exitmonitor r249;

     label180:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r174;

     label181:
        $r27 = r190.<android.os.Message: java.lang.Object obj>;

        r251 = (com.android.server.wm.DisplayContent) $r27;

        $r28 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r252 = $r28.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r252;

     label182:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        virtualinvoke r251.<com.android.server.wm.DisplayContent: void onWindowFreezeTimeout()>();

        exitmonitor r252;

     label183:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        goto label214;

     label184:
        $r184 := @caughtexception;

     label185:
        exitmonitor r252;

     label186:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r184;

     label187:
        $r20 = r190.<android.os.Message: java.lang.Object obj>;

        r254 = (com.android.server.wm.DisplayContent) $r20;

        $r21 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r255 = $r21.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r255;

     label188:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        r256 = r254.<com.android.server.wm.DisplayContent: java.util.ArrayList mLosingFocus>;

        r257 = new java.util.ArrayList;

        specialinvoke r257.<java.util.ArrayList: void <init>()>();

        r254.<com.android.server.wm.DisplayContent: java.util.ArrayList mLosingFocus> = r257;

        exitmonitor r255;

     label189:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        i0 = virtualinvoke r256.<java.util.ArrayList: int size()>();

        i22 = 0;

     label190:
        if i22 >= i0 goto label192;

        $z6 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_FOCUS_LIGHT_enabled>;

        if $z6 == 0 goto label191;

        $r24 = virtualinvoke r256.<java.util.ArrayList: java.lang.Object get(int)>(i22);

        r258 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r24);

        $r26 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_FOCUS_LIGHT>;

        $r25 = newarray (java.lang.Object)[1];

        $r25[0] = r258;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void i(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r26, -714291355, 0, null, $r25);

     label191:
        $r22 = virtualinvoke r256.<java.util.ArrayList: java.lang.Object get(int)>(i22);

        $r23 = (com.android.server.wm.WindowState) $r22;

        virtualinvoke $r23.<com.android.server.wm.WindowState: void reportFocusChangedSerialized(boolean)>(0);

        i22 = i22 + 1;

        goto label190;

     label192:
        goto label214;

     label193:
        $r176 := @caughtexception;

     label194:
        exitmonitor r255;

     label195:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r176;

     label196:
        $r4 = r190.<android.os.Message: java.lang.Object obj>;

        r1 = (com.android.server.wm.DisplayContent) $r4;

        r260 = null;

        $r5 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r261 = $r5.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r261;

     label197:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

     label198:
        $r6 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        $r7 = $r6.<com.android.server.wm.WindowManagerService: com.android.server.wm.AccessibilityController mAccessibilityController>;

        if $r7 == null goto label199;

        $r19 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        r260 = $r19.<com.android.server.wm.WindowManagerService: com.android.server.wm.AccessibilityController mAccessibilityController>;

     label199:
        r262 = r1.<com.android.server.wm.DisplayContent: com.android.server.wm.WindowState mLastFocus>;

        r2 = r1.<com.android.server.wm.DisplayContent: com.android.server.wm.WindowState mCurrentFocus>;

     label200:
        if r262 != r2 goto label203;

     label201:
        exitmonitor r261;

     label202:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label203:
        r1.<com.android.server.wm.DisplayContent: com.android.server.wm.WindowState mLastFocus> = r2;

        $z0 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_FOCUS_LIGHT_enabled>;

        if $z0 == 0 goto label204;

        r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r262);

        r263 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        $i3 = virtualinvoke r1.<com.android.server.wm.DisplayContent: int getDisplayId()>();

        l1 = (long) $i3;

        $r17 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_FOCUS_LIGHT>;

        $r16 = newarray (java.lang.Object)[3];

        $r16[0] = r3;

        $r16[1] = r263;

        $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r16[2] = $r18;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void i(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r17, -1587841219, 16, null, $r16);

     label204:
        r264 = r262;

        if r2 == null goto label208;

        r264 = r262;

        if r262 == null goto label208;

        r264 = r262;

     label205:
        $z3 = virtualinvoke r2.<com.android.server.wm.WindowState: boolean isDisplayedLw()>();

        if $z3 != 0 goto label208;

        $z4 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_FOCUS_LIGHT_enabled>;

        if $z4 == 0 goto label206;

        $r15 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_FOCUS_LIGHT>;

        $r14 = (java.lang.Object[]) null;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void i(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r15, 385096046, 0, null, $r14);

     label206:
        $r13 = r1.<com.android.server.wm.DisplayContent: java.util.ArrayList mLosingFocus>;

        virtualinvoke $r13.<java.util.ArrayList: boolean add(java.lang.Object)>(r262);

     label207:
        r264 = null;

     label208:
        exitmonitor r261;

     label209:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        if r260 == null goto label210;

        $i2 = virtualinvoke r1.<com.android.server.wm.DisplayContent: int getDisplayId()>();

        virtualinvoke r260.<com.android.server.wm.AccessibilityController: void onWindowFocusChangedNotLocked(int)>($i2);

     label210:
        if r2 == null goto label212;

        $z2 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_FOCUS_LIGHT_enabled>;

        if $z2 == 0 goto label211;

        r265 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        $r12 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_FOCUS_LIGHT>;

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r265;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void i(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r12, -96848838, 0, null, $r11);

        goto label211;

     label211:
        virtualinvoke r2.<com.android.server.wm.WindowState: void reportFocusChangedSerialized(boolean)>(1);

        $r10 = r0.<com.android.server.wm.WindowManagerService$H: com.android.server.wm.WindowManagerService this$0>;

        staticinvoke <com.android.server.wm.WindowManagerService: void access$700(com.android.server.wm.WindowManagerService)>($r10);

     label212:
        if r264 == null goto label214;

        $z1 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_FOCUS_LIGHT_enabled>;

        if $z1 == 0 goto label213;

        r266 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r264);

        $r9 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_FOCUS_LIGHT>;

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = r266;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void i(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r9, -771282525, 0, null, $r8);

        goto label213;

     label213:
        virtualinvoke r264.<com.android.server.wm.WindowState: void reportFocusChangedSerialized(boolean)>(0);

     label214:
        return;

     label215:
        $r168 := @caughtexception;

     label216:
        exitmonitor r261;

     label217:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r168;

        catch java.lang.Throwable from label007 to label008 with label009;
        catch java.lang.Throwable from label010 to label011 with label009;
        catch java.lang.Throwable from label013 to label014 with label015;
        catch java.lang.Throwable from label016 to label017 with label015;
        catch java.lang.Throwable from label019 to label020 with label021;
        catch java.lang.Throwable from label022 to label023 with label021;
        catch java.lang.Throwable from label025 to label026 with label027;
        catch java.lang.Throwable from label028 to label029 with label027;
        catch java.lang.Throwable from label031 to label032 with label034;
        catch java.lang.Throwable from label032 to label033 with label034;
        catch java.lang.Throwable from label035 to label036 with label034;
        catch java.lang.Throwable from label038 to label039 with label043;
        catch java.lang.Throwable from label040 to label041 with label043;
        catch java.lang.Throwable from label041 to label042 with label043;
        catch java.lang.Throwable from label044 to label045 with label043;
        catch java.lang.Throwable from label047 to label048 with label049;
        catch java.lang.Throwable from label050 to label051 with label049;
        catch java.lang.Throwable from label053 to label054 with label056;
        catch java.lang.Throwable from label054 to label055 with label056;
        catch java.lang.Throwable from label057 to label058 with label056;
        catch android.os.RemoteException from label061 to label062 with label063;
        catch java.lang.Throwable from label066 to label067 with label078;
        catch java.lang.Throwable from label068 to label069 with label078;
        catch java.lang.Throwable from label070 to label071 with label078;
        catch android.os.RemoteException from label073 to label074 with label075;
        catch java.lang.Throwable from label079 to label080 with label078;
        catch java.lang.Throwable from label082 to label083 with label084;
        catch java.lang.Throwable from label085 to label086 with label084;
        catch android.os.RemoteException from label087 to label088 with label089;
        catch java.lang.Throwable from label092 to label093 with label095;
        catch java.lang.Throwable from label093 to label094 with label095;
        catch java.lang.Throwable from label096 to label097 with label095;
        catch java.lang.Throwable from label101 to label102 with label108;
        catch java.lang.Throwable from label102 to label103 with label108;
        catch java.lang.Throwable from label104 to label105 with label108;
        catch java.lang.Throwable from label106 to label107 with label108;
        catch java.lang.Throwable from label109 to label110 with label108;
        catch java.lang.Throwable from label113 to label114 with label119;
        catch java.lang.Throwable from label115 to label116 with label119;
        catch java.lang.Throwable from label117 to label118 with label119;
        catch java.lang.Throwable from label120 to label121 with label119;
        catch java.lang.Throwable from label124 to label125 with label126;
        catch java.lang.Throwable from label127 to label128 with label126;
        catch java.lang.Throwable from label130 to label131 with label132;
        catch java.lang.Throwable from label133 to label134 with label132;
        catch java.lang.Throwable from label136 to label137 with label138;
        catch java.lang.Throwable from label139 to label140 with label138;
        catch java.lang.Throwable from label150 to label151 with label156;
        catch java.lang.Throwable from label152 to label153 with label156;
        catch java.lang.Throwable from label154 to label155 with label156;
        catch java.lang.Throwable from label157 to label158 with label156;
        catch java.lang.Throwable from label160 to label161 with label165;
        catch java.lang.Throwable from label162 to label163 with label165;
        catch java.lang.Throwable from label163 to label164 with label165;
        catch java.lang.Throwable from label166 to label167 with label165;
        catch java.lang.Throwable from label169 to label170 with label172;
        catch java.lang.Throwable from label170 to label171 with label172;
        catch java.lang.Throwable from label173 to label174 with label172;
        catch java.lang.Throwable from label176 to label177 with label178;
        catch java.lang.Throwable from label179 to label180 with label178;
        catch java.lang.Throwable from label182 to label183 with label184;
        catch java.lang.Throwable from label185 to label186 with label184;
        catch java.lang.Throwable from label188 to label189 with label193;
        catch java.lang.Throwable from label194 to label195 with label193;
        catch java.lang.Throwable from label197 to label198 with label215;
        catch java.lang.Throwable from label198 to label199 with label215;
        catch java.lang.Throwable from label199 to label200 with label215;
        catch java.lang.Throwable from label201 to label202 with label215;
        catch java.lang.Throwable from label203 to label204 with label215;
        catch java.lang.Throwable from label205 to label206 with label215;
        catch java.lang.Throwable from label206 to label207 with label215;
        catch java.lang.Throwable from label208 to label209 with label215;
        catch java.lang.Throwable from label216 to label217 with label215;
    }

    void sendNewMessageDelayed(int, java.lang.Object, long)
    {
        com.android.server.wm.WindowManagerService$H r0;
        int i0;
        java.lang.Object r1;
        long l1;
        android.os.Message $r2;

        r0 := @this: com.android.server.wm.WindowManagerService$H;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        l1 := @parameter2: long;

        virtualinvoke r0.<com.android.server.wm.WindowManagerService$H: void removeMessages(int,java.lang.Object)>(i0, r1);

        $r2 = virtualinvoke r0.<com.android.server.wm.WindowManagerService$H: android.os.Message obtainMessage(int,java.lang.Object)>(i0, r1);

        virtualinvoke r0.<com.android.server.wm.WindowManagerService$H: boolean sendMessageDelayed(android.os.Message,long)>($r2, l1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.WindowManagerService$H: int WINDOW_STATE_BLAST_SYNC_TIMEOUT> = 64;

        <com.android.server.wm.WindowManagerService$H: int WINDOW_REPLACEMENT_TIMEOUT> = 46;

        <com.android.server.wm.WindowManagerService$H: int WINDOW_HIDE_TIMEOUT> = 52;

        <com.android.server.wm.WindowManagerService$H: int WINDOW_FREEZE_TIMEOUT> = 11;

        <com.android.server.wm.WindowManagerService$H: int WALLPAPER_DRAW_PENDING_TIMEOUT> = 39;

        <com.android.server.wm.WindowManagerService$H: int WAITING_FOR_DRAWN_TIMEOUT> = 24;

        <com.android.server.wm.WindowManagerService$H: int UPDATE_MULTI_WINDOW_STACKS> = 41;

        <com.android.server.wm.WindowManagerService$H: int UPDATE_ANIMATION_SCALE> = 51;

        <com.android.server.wm.WindowManagerService$H: int UNUSED> = 0;

        <com.android.server.wm.WindowManagerService$H: int SHOW_STRICT_MODE_VIOLATION> = 25;

        <com.android.server.wm.WindowManagerService$H: int SHOW_EMULATOR_DISPLAY_OVERLAY> = 36;

        <com.android.server.wm.WindowManagerService$H: int SET_HAS_OVERLAY_UI> = 58;

        <com.android.server.wm.WindowManagerService$H: int SEAMLESS_ROTATION_TIMEOUT> = 54;

        <com.android.server.wm.WindowManagerService$H: int RESTORE_POINTER_ICON> = 55;

        <com.android.server.wm.WindowManagerService$H: int RESET_ANR_MESSAGE> = 38;

        <com.android.server.wm.WindowManagerService$H: int REPORT_WINDOWS_CHANGE> = 19;

        <com.android.server.wm.WindowManagerService$H: int REPORT_LOSING_FOCUS> = 3;

        <com.android.server.wm.WindowManagerService$H: int REPORT_HARD_KEYBOARD_STATUS_CHANGE> = 22;

        <com.android.server.wm.WindowManagerService$H: int REPORT_FOCUS_CHANGE> = 2;

        <com.android.server.wm.WindowManagerService$H: int RECOMPUTE_FOCUS> = 61;

        <com.android.server.wm.WindowManagerService$H: int PERSIST_ANIMATION_SCALE> = 14;

        <com.android.server.wm.WindowManagerService$H: int ON_POINTER_DOWN_OUTSIDE_FOCUS> = 62;

        <com.android.server.wm.WindowManagerService$H: int NOTIFY_ACTIVITY_DRAWN> = 32;

        <com.android.server.wm.WindowManagerService$H: int NEW_ANIMATOR_SCALE> = 34;

        <com.android.server.wm.WindowManagerService$H: int LAYOUT_AND_ASSIGN_WINDOW_LAYERS_IF_NEEDED> = 63;

        <com.android.server.wm.WindowManagerService$H: int FORCE_GC> = 15;

        <com.android.server.wm.WindowManagerService$H: int ENABLE_SCREEN> = 16;

        <com.android.server.wm.WindowManagerService$H: int CLIENT_FREEZE_TIMEOUT> = 30;

        <com.android.server.wm.WindowManagerService$H: int CHECK_IF_BOOT_ANIMATION_FINISHED> = 37;

        <com.android.server.wm.WindowManagerService$H: int BOOT_TIMEOUT> = 23;

        <com.android.server.wm.WindowManagerService$H: int APP_FREEZE_TIMEOUT> = 17;

        <com.android.server.wm.WindowManagerService$H: int ANIMATION_FAILSAFE> = 60;

        <com.android.server.wm.WindowManagerService$H: int ALL_WINDOWS_DRAWN> = 33;

        return;
    }
}
