public class com.android.server.wm.WindowManagerShellCommand extends android.os.ShellCommand
{
    private final android.view.IWindowManager mInterface;
    private final com.android.server.wm.WindowManagerService mInternal;

    public void <init>(com.android.server.wm.WindowManagerService)
    {
        com.android.server.wm.WindowManagerShellCommand r0;
        com.android.server.wm.WindowManagerService r1;

        r0 := @this: com.android.server.wm.WindowManagerShellCommand;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        specialinvoke r0.<android.os.ShellCommand: void <init>()>();

        r0.<com.android.server.wm.WindowManagerShellCommand: android.view.IWindowManager mInterface> = r1;

        r0.<com.android.server.wm.WindowManagerShellCommand: com.android.server.wm.WindowManagerService mInternal> = r1;

        return;
    }

    private int getDisplayId(java.lang.String)
    {
        com.android.server.wm.WindowManagerShellCommand r0;
        java.lang.String $r1, $r2, $r3, $r8, $r13, r14;
        boolean $z0, $z1;
        java.lang.Throwable $r4, $r9;
        java.lang.StringBuilder $r5, $r10;
        int i2;
        java.io.PrintWriter r16, r19;

        r0 := @this: com.android.server.wm.WindowManagerShellCommand;

        r14 := @parameter0: java.lang.String;

        $r1 = "-d";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r14);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        r14 = virtualinvoke r0.<com.android.server.wm.WindowManagerShellCommand: java.lang.String getNextOption()>();

     label2:
        i2 = 0;

        if r14 == null goto label7;

        i2 = 0;

        $r2 = "-d";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r14);

        if $z1 == 0 goto label7;

     label3:
        $r3 = virtualinvoke r0.<com.android.server.wm.WindowManagerShellCommand: java.lang.String getNextArgRequired()>();

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

     label4:
        goto label7;

     label5:
        $r9 := @caughtexception;

        r16 = virtualinvoke r0.<com.android.server.wm.WindowManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r16.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        i2 = 0;

        goto label7;

     label6:
        $r4 := @caughtexception;

        r19 = virtualinvoke r0.<com.android.server.wm.WindowManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: bad number ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r19.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        i2 = 0;

        goto label4;

     label7:
        return i2;

        catch java.lang.NumberFormatException from label3 to label4 with label6;
        catch java.lang.IllegalArgumentException from label3 to label4 with label5;
    }

    static void lambda$runDumpVisibleWindowViews$0(java.util.ArrayList, com.android.server.wm.WindowState)
    {
        com.android.server.wm.WindowState r0;
        com.android.internal.os.ByteTransferPipe r1, r8;
        boolean $z0;
        android.view.IWindow $r2;
        android.os.ParcelFileDescriptor $r3;
        java.lang.String $r4;
        android.util.Pair $r5;
        java.lang.Throwable $r6;
        java.util.ArrayList r7;

        r7 := @parameter0: java.util.ArrayList;

        r0 := @parameter1: com.android.server.wm.WindowState;

        $z0 = virtualinvoke r0.<com.android.server.wm.WindowState: boolean isVisible()>();

        if $z0 == 0 goto label10;

        r8 = null;

     label01:
        r1 = new com.android.internal.os.ByteTransferPipe;

     label02:
        r8 = null;

     label03:
        specialinvoke r1.<com.android.internal.os.ByteTransferPipe: void <init>()>();

     label04:
        r8 = r1;

     label05:
        $r2 = r0.<com.android.server.wm.WindowState: android.view.IWindow mClient>;

        $r3 = virtualinvoke r1.<com.android.internal.os.ByteTransferPipe: android.os.ParcelFileDescriptor getWriteFd()>();

        interfaceinvoke $r2.<android.view.IWindow: void executeCommand(java.lang.String,java.lang.String,android.os.ParcelFileDescriptor)>("DUMP_ENCODED", null, $r3);

     label06:
        r8 = r1;

     label07:
        $r4 = virtualinvoke r0.<com.android.server.wm.WindowState: java.lang.String getName()>();

        $r5 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>($r4, r1);

        virtualinvoke r7.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

     label08:
        goto label10;

     label09:
        $r6 := @caughtexception;

        if r8 == null goto label10;

        virtualinvoke r8.<com.android.internal.os.ByteTransferPipe: void kill()>();

     label10:
        return;

        catch java.io.IOException from label01 to label02 with label09;
        catch android.os.RemoteException from label01 to label02 with label09;
        catch java.io.IOException from label03 to label04 with label09;
        catch android.os.RemoteException from label03 to label04 with label09;
        catch java.io.IOException from label05 to label06 with label09;
        catch android.os.RemoteException from label05 to label06 with label09;
        catch java.io.IOException from label07 to label08 with label09;
        catch android.os.RemoteException from label07 to label08 with label09;
    }

    private int parseDimension(java.lang.String, int) throws java.lang.NumberFormatException
    {
        com.android.server.wm.WindowManagerShellCommand r0;
        java.lang.String r1, $r4, $r5;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        android.view.IWindowManager $r3;
        android.os.RemoteException $r6;

        r0 := @this: com.android.server.wm.WindowManagerShellCommand;

        r1 := @parameter0: java.lang.String;

        i9 := @parameter1: int;

        $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("px");

        if $z0 == 0 goto label1;

        $i6 = virtualinvoke r1.<java.lang.String: int length()>();

        $i7 = $i6 - 2;

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i7);

        $i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        return $i8;

     label1:
        $z1 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("dp");

        if $z1 == 0 goto label6;

     label2:
        $r3 = r0.<com.android.server.wm.WindowManagerShellCommand: android.view.IWindowManager mInterface>;

        i10 = interfaceinvoke $r3.<android.view.IWindowManager: int getBaseDisplayDensity(int)>(i9);

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        i10 = 160;

     label5:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = $i1 - 2;

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        $i4 = $i3 * i10;

        $i5 = $i4 / 160;

        return $i5;

     label6:
        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

        return $i0;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void printFoldedArea(java.io.PrintWriter)
    {
        com.android.server.wm.WindowManagerShellCommand r0;
        java.io.PrintWriter r1;
        android.graphics.Rect r2;
        com.android.server.wm.WindowManagerService $r4;
        boolean $z0;
        java.lang.StringBuilder $r5;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r14;

        r0 := @this: com.android.server.wm.WindowManagerShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        $r4 = r0.<com.android.server.wm.WindowManagerShellCommand: com.android.server.wm.WindowManagerService mInternal>;

        r2 = virtualinvoke $r4.<com.android.server.wm.WindowManagerService: android.graphics.Rect getFoldedArea()>();

        $z0 = virtualinvoke r2.<android.graphics.Rect: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Folded area: none");

        goto label2;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Folded area: ");

        $i0 = r2.<android.graphics.Rect: int left>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i1 = r2.<android.graphics.Rect: int top>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i2 = r2.<android.graphics.Rect: int right>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i3 = r2.<android.graphics.Rect: int bottom>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r14 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r14);

     label2:
        return;
    }

    private void printInitialDisplayDensity(java.io.PrintWriter, int)
    {
        com.android.server.wm.WindowManagerShellCommand r0;
        java.io.PrintWriter r1;
        int i0, i1, i2;
        android.view.IWindowManager $r3, $r4;
        java.lang.String $r7, $r10, $r15;
        android.os.RemoteException $r11;
        java.lang.StringBuilder $r12, r16, r17;

        r0 := @this: com.android.server.wm.WindowManagerShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        i1 := @parameter1: int;

     label1:
        $r3 = r0.<com.android.server.wm.WindowManagerShellCommand: android.view.IWindowManager mInterface>;

        i0 = interfaceinvoke $r3.<android.view.IWindowManager: int getInitialDisplayDensity(int)>(i1);

        $r4 = r0.<com.android.server.wm.WindowManagerShellCommand: android.view.IWindowManager mInterface>;

        i2 = interfaceinvoke $r4.<android.view.IWindowManager: int getBaseDisplayDensity(int)>(i1);

        r16 = new java.lang.StringBuilder;

        specialinvoke r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Physical density: ");

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r7);

     label2:
        if i0 == i2 goto label4;

     label3:
        r17 = new java.lang.StringBuilder;

        specialinvoke r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Override density: ");

        virtualinvoke r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r10 = virtualinvoke r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r10);

     label4:
        goto label6;

     label5:
        $r11 := @caughtexception;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remote exception: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r15);

     label6:
        return;

        catch android.os.RemoteException from label1 to label2 with label5;
        catch android.os.RemoteException from label3 to label4 with label5;
    }

    private void printInitialDisplaySize(java.io.PrintWriter, int)
    {
        com.android.server.wm.WindowManagerShellCommand r0;
        java.io.PrintWriter r1;
        int i0, $i1, $i2, $i3, $i4;
        android.graphics.Point $r3, $r4;
        android.view.IWindowManager $r5, $r6;
        java.lang.String $r11, $r16, $r21;
        boolean $z0;
        android.os.RemoteException $r17;
        java.lang.StringBuilder $r18, r23, r24;

        r0 := @this: com.android.server.wm.WindowManagerShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        i0 := @parameter1: int;

        $r3 = new android.graphics.Point;

        specialinvoke $r3.<android.graphics.Point: void <init>()>();

        $r4 = new android.graphics.Point;

        specialinvoke $r4.<android.graphics.Point: void <init>()>();

     label1:
        $r5 = r0.<com.android.server.wm.WindowManagerShellCommand: android.view.IWindowManager mInterface>;

        interfaceinvoke $r5.<android.view.IWindowManager: void getInitialDisplaySize(int,android.graphics.Point)>(i0, $r3);

        $r6 = r0.<com.android.server.wm.WindowManagerShellCommand: android.view.IWindowManager mInterface>;

        interfaceinvoke $r6.<android.view.IWindowManager: void getBaseDisplaySize(int,android.graphics.Point)>(i0, $r4);

        r23 = new java.lang.StringBuilder;

        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Physical size: ");

        $i1 = $r3.<android.graphics.Point: int x>;

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $i2 = $r3.<android.graphics.Point: int y>;

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r11 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        $z0 = virtualinvoke $r3.<android.graphics.Point: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label2;

        r24 = new java.lang.StringBuilder;

        specialinvoke r24.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Override size: ");

        $i3 = $r4.<android.graphics.Point: int x>;

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $i4 = $r4.<android.graphics.Point: int y>;

        virtualinvoke r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r16 = virtualinvoke r24.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r16);

     label2:
        goto label4;

     label3:
        $r17 := @caughtexception;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remote exception: ");

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r21);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private int runDismissKeyguard(java.io.PrintWriter) throws android.os.RemoteException
    {
        com.android.server.wm.WindowManagerShellCommand r0;
        java.io.PrintWriter r1;
        android.view.IWindowManager $r2;

        r0 := @this: com.android.server.wm.WindowManagerShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        $r2 = r0.<com.android.server.wm.WindowManagerShellCommand: android.view.IWindowManager mInterface>;

        interfaceinvoke $r2.<android.view.IWindowManager: void dismissKeyguard(com.android.internal.policy.IKeyguardDismissCallback,java.lang.CharSequence)>(null, null);

        return 0;
    }

    private int runDisplayDensity(java.io.PrintWriter) throws android.os.RemoteException
    {
        com.android.server.wm.WindowManagerShellCommand r0;
        int i0, i1;
        java.lang.String $r2, $r3, $r11, r13;
        boolean $z0, $z1;
        android.view.IWindowManager $r4, $r5;
        java.io.PrintWriter $r6, r12, r14;
        java.lang.Throwable $r7;
        java.lang.StringBuilder $r8;

        r0 := @this: com.android.server.wm.WindowManagerShellCommand;

        r12 := @parameter0: java.io.PrintWriter;

        r13 = virtualinvoke r0.<com.android.server.wm.WindowManagerShellCommand: java.lang.String getNextArg()>();

        i0 = specialinvoke r0.<com.android.server.wm.WindowManagerShellCommand: int getDisplayId(java.lang.String)>(r13);

        if r13 != null goto label1;

        specialinvoke r0.<com.android.server.wm.WindowManagerShellCommand: void printInitialDisplayDensity(java.io.PrintWriter,int)>(r12, i0);

        return 0;

     label1:
        $r2 = "-d";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r13);

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.android.server.wm.WindowManagerShellCommand: void printInitialDisplayDensity(java.io.PrintWriter,int)>(r12, i0);

        return 0;

     label2:
        $r3 = "reset";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r13);

        if $z1 == 0 goto label3;

        i1 = -1;

        goto label5;

     label3:
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r13);

     label4:
        if i1 >= 72 goto label5;

        $r6 = virtualinvoke r0.<com.android.server.wm.WindowManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r6.<java.io.PrintWriter: void println(java.lang.String)>("Error: density must be >= 72");

        return -1;

     label5:
        if i1 <= 0 goto label6;

        $r5 = r0.<com.android.server.wm.WindowManagerShellCommand: android.view.IWindowManager mInterface>;

        interfaceinvoke $r5.<android.view.IWindowManager: void setForcedDisplayDensityForUser(int,int,int)>(i0, i1, -2);

        goto label7;

     label6:
        $r4 = r0.<com.android.server.wm.WindowManagerShellCommand: android.view.IWindowManager mInterface>;

        interfaceinvoke $r4.<android.view.IWindowManager: void clearForcedDisplayDensityForUser(int,int)>(i0, -2);

     label7:
        return 0;

     label8:
        $r7 := @caughtexception;

        r14 = virtualinvoke r0.<com.android.server.wm.WindowManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: bad number ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r14.<java.io.PrintWriter: void println(java.lang.String)>($r11);

        return -1;

        catch java.lang.NumberFormatException from label3 to label4 with label8;
    }

    private int runDisplayFoldedArea(java.io.PrintWriter)
    {
        com.android.server.wm.WindowManagerShellCommand r0;
        java.lang.String r1, $r4, $r6, $r7, $r8, $r9;
        android.graphics.Rect $r3;
        boolean $z0, $z1;
        java.util.regex.Pattern $r5;
        int $i0, $i1, $i2, $i3;
        com.android.server.wm.WindowManagerService $r10;
        java.io.PrintWriter $r11, r12;
        java.util.regex.Matcher r13;

        r0 := @this: com.android.server.wm.WindowManagerShellCommand;

        r12 := @parameter0: java.io.PrintWriter;

        r1 = virtualinvoke r0.<com.android.server.wm.WindowManagerShellCommand: java.lang.String getNextArg()>();

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        if r1 != null goto label1;

        specialinvoke r0.<com.android.server.wm.WindowManagerShellCommand: void printFoldedArea(java.io.PrintWriter)>(r12);

        return 0;

     label1:
        $r4 = "reset";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        virtualinvoke $r3.<android.graphics.Rect: void setEmpty()>();

        goto label4;

     label2:
        $r5 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(-?\\d+),(-?\\d+),(-?\\d+),(-?\\d+)");

        r13 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z1 = virtualinvoke r13.<java.util.regex.Matcher: boolean matches()>();

        if $z1 != 0 goto label3;

        $r11 = virtualinvoke r0.<com.android.server.wm.WindowManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r11.<java.io.PrintWriter: void println(java.lang.String)>("Error: area should be LEFT,TOP,RIGHT,BOTTOM");

        return -1;

     label3:
        $r6 = virtualinvoke r13.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

        $r7 = virtualinvoke r13.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        $r8 = virtualinvoke r13.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r8);

        $r9 = virtualinvoke r13.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        virtualinvoke $r3.<android.graphics.Rect: void set(int,int,int,int)>($i0, $i1, $i2, $i3);

     label4:
        $r10 = r0.<com.android.server.wm.WindowManagerShellCommand: com.android.server.wm.WindowManagerService mInternal>;

        virtualinvoke $r10.<com.android.server.wm.WindowManagerService: void setOverrideFoldedArea(android.graphics.Rect)>($r3);

        return 0;
    }

    private int runDisplayScaling(java.io.PrintWriter) throws android.os.RemoteException
    {
        com.android.server.wm.WindowManagerShellCommand r0;
        java.lang.String $r1, $r2, r7;
        boolean $z0, $z1;
        java.io.PrintWriter $r3, r6;
        android.view.IWindowManager $r4, $r5;
        int $i0, $i1;

        r0 := @this: com.android.server.wm.WindowManagerShellCommand;

        r6 := @parameter0: java.io.PrintWriter;

        r7 = virtualinvoke r0.<com.android.server.wm.WindowManagerShellCommand: java.lang.String getNextArgRequired()>();

        $r1 = "auto";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z0 == 0 goto label1;

        $r5 = r0.<com.android.server.wm.WindowManagerShellCommand: android.view.IWindowManager mInterface>;

        $i1 = specialinvoke r0.<com.android.server.wm.WindowManagerShellCommand: int getDisplayId(java.lang.String)>(r7);

        interfaceinvoke $r5.<android.view.IWindowManager: void setForcedDisplayScalingMode(int,int)>($i1, 0);

        goto label2;

     label1:
        $r2 = "off";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z1 == 0 goto label3;

        $r4 = r0.<com.android.server.wm.WindowManagerShellCommand: android.view.IWindowManager mInterface>;

        $i0 = specialinvoke r0.<com.android.server.wm.WindowManagerShellCommand: int getDisplayId(java.lang.String)>(r7);

        interfaceinvoke $r4.<android.view.IWindowManager: void setForcedDisplayScalingMode(int,int)>($i0, 1);

     label2:
        return 0;

     label3:
        $r3 = virtualinvoke r0.<com.android.server.wm.WindowManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r3.<java.io.PrintWriter: void println(java.lang.String)>("Error: scaling must be \'auto\' or \'off\'");

        return -1;
    }

    private int runDisplaySize(java.io.PrintWriter) throws android.os.RemoteException
    {
        com.android.server.wm.WindowManagerShellCommand r0;
        int i0, $i1, $i2, $i3, i4, i5, i6;
        boolean z0, $z1;
        java.lang.String $r1, $r2, $r6, $r13, r15, r16, r17;
        java.lang.StringBuilder $r3, $r10;
        android.view.IWindowManager $r7, $r8;
        java.lang.Throwable $r9;
        java.io.PrintWriter r14, r19, r21;

        r0 := @this: com.android.server.wm.WindowManagerShellCommand;

        r14 := @parameter0: java.io.PrintWriter;

        r15 = virtualinvoke r0.<com.android.server.wm.WindowManagerShellCommand: java.lang.String getNextArg()>();

        i0 = specialinvoke r0.<com.android.server.wm.WindowManagerShellCommand: int getDisplayId(java.lang.String)>(r15);

        if r15 != null goto label01;

        specialinvoke r0.<com.android.server.wm.WindowManagerShellCommand: void printInitialDisplaySize(java.io.PrintWriter,int)>(r14, i0);

        return 0;

     label01:
        $r1 = "-d";

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z1 == 0 goto label02;

        specialinvoke r0.<com.android.server.wm.WindowManagerShellCommand: void printInitialDisplaySize(java.io.PrintWriter,int)>(r14, i0);

        return 0;

     label02:
        $r2 = "reset";

        z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        i4 = -1;

        if z0 == 0 goto label03;

        i5 = -1;

        goto label06;

     label03:
        i6 = virtualinvoke r15.<java.lang.String: int indexOf(int)>(120);

        if i6 <= 0 goto label10;

        $i1 = virtualinvoke r15.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        if i6 < $i2 goto label04;

        goto label10;

     label04:
        r16 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int,int)>(0, i6);

        $i3 = i6 + 1;

        r17 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int)>($i3);

     label05:
        i4 = specialinvoke r0.<com.android.server.wm.WindowManagerShellCommand: int parseDimension(java.lang.String,int)>(r16, i0);

        i5 = specialinvoke r0.<com.android.server.wm.WindowManagerShellCommand: int parseDimension(java.lang.String,int)>(r17, i0);

     label06:
        if i4 < 0 goto label07;

        if i5 < 0 goto label07;

        $r8 = r0.<com.android.server.wm.WindowManagerShellCommand: android.view.IWindowManager mInterface>;

        interfaceinvoke $r8.<android.view.IWindowManager: void setForcedDisplaySize(int,int,int)>(i0, i4, i5);

        goto label08;

     label07:
        $r7 = r0.<com.android.server.wm.WindowManagerShellCommand: android.view.IWindowManager mInterface>;

        interfaceinvoke $r7.<android.view.IWindowManager: void clearForcedDisplaySize(int)>(i0);

     label08:
        return 0;

     label09:
        $r9 := @caughtexception;

        r19 = virtualinvoke r0.<com.android.server.wm.WindowManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: bad number ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r19.<java.io.PrintWriter: void println(java.lang.String)>($r13);

        return -1;

     label10:
        r21 = virtualinvoke r0.<com.android.server.wm.WindowManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: bad size ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r21.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        return -1;

        catch java.lang.NumberFormatException from label05 to label06 with label09;
    }

    private int runDumpVisibleWindowViews(java.io.PrintWriter)
    {
        com.android.server.wm.WindowManagerShellCommand r0;
        java.io.PrintWriter r1;
        com.android.server.wm.WindowManagerService $r2, $r5, $r6;
        boolean $z0, $z1;
        java.io.OutputStream $r4;
        java.lang.Object $r7, $r8, $r10;
        com.android.internal.os.ByteTransferPipe $r9;
        java.lang.String $r11, $r15, $r17;
        java.lang.Throwable $r12, $r18, $r19, $r20, $r21;
        com.android.server.wm.WindowManagerGlobalLock r24;
        com.android.server.wm.RootWindowContainer r25;
        java.util.Iterator r27;
        android.util.Pair r28;
        byte[] r29;
        java.util.zip.ZipOutputStream r37;
        java.util.ArrayList r38;
        com.android.server.wm._$$Lambda$WindowManagerShellCommand$prjQFpVCgSa5hzjzlwN4oL9HnaI r39;
        java.util.zip.ZipEntry r40;
        java.lang.StringBuilder r41;
        java.lang.SecurityException r42;
        java.io.IOException r43;

        r0 := @this: com.android.server.wm.WindowManagerShellCommand;

        r1 := @parameter0: java.io.PrintWriter;

        $r2 = r0.<com.android.server.wm.WindowManagerShellCommand: com.android.server.wm.WindowManagerService mInternal>;

        $z0 = virtualinvoke $r2.<com.android.server.wm.WindowManagerService: boolean checkCallingPermission(java.lang.String,java.lang.String)>("android.permission.DUMP", "runDumpVisibleWindowViews()");

        if $z0 == 0 goto label23;

     label01:
        r37 = new java.util.zip.ZipOutputStream;

        $r4 = virtualinvoke r0.<com.android.server.wm.WindowManagerShellCommand: java.io.OutputStream getRawOutputStream()>();

        specialinvoke r37.<java.util.zip.ZipOutputStream: void <init>(java.io.OutputStream)>($r4);

     label02:
        r38 = new java.util.ArrayList;

        specialinvoke r38.<java.util.ArrayList: void <init>()>();

        $r5 = r0.<com.android.server.wm.WindowManagerShellCommand: com.android.server.wm.WindowManagerService mInternal>;

        r24 = $r5.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r24;

     label03:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r6 = r0.<com.android.server.wm.WindowManagerShellCommand: com.android.server.wm.WindowManagerService mInternal>;

        r25 = $r6.<com.android.server.wm.WindowManagerService: com.android.server.wm.RootWindowContainer mRoot>;

        r39 = new com.android.server.wm._$$Lambda$WindowManagerShellCommand$prjQFpVCgSa5hzjzlwN4oL9HnaI;

        specialinvoke r39.<com.android.server.wm._$$Lambda$WindowManagerShellCommand$prjQFpVCgSa5hzjzlwN4oL9HnaI: void <init>(java.util.ArrayList)>(r38);

        virtualinvoke r25.<com.android.server.wm.RootWindowContainer: void forAllWindows(java.util.function.Consumer,boolean)>(r39, 0);

        exitmonitor r24;

     label04:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        r27 = virtualinvoke r38.<java.util.ArrayList: java.util.Iterator iterator()>();

     label05:
        $z1 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r7 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>();

        r28 = (android.util.Pair) $r7;

     label06:
        $r8 = r28.<android.util.Pair: java.lang.Object second>;

        $r9 = (com.android.internal.os.ByteTransferPipe) $r8;

        r29 = virtualinvoke $r9.<com.android.internal.os.ByteTransferPipe: byte[] get()>();

     label07:
        r40 = new java.util.zip.ZipEntry;

        $r10 = r28.<android.util.Pair: java.lang.Object first>;

        $r11 = (java.lang.String) $r10;

        specialinvoke r40.<java.util.zip.ZipEntry: void <init>(java.lang.String)>($r11);

        virtualinvoke r37.<java.util.zip.ZipOutputStream: void putNextEntry(java.util.zip.ZipEntry)>(r40);

        virtualinvoke r37.<java.util.zip.ZipOutputStream: void write(byte[])>(r29);

     label08:
        goto label05;

     label09:
        $r20 := @caughtexception;

        goto label05;

     label10:
        virtualinvoke r37.<java.util.zip.ZipOutputStream: void close()>();

     label11:
        goto label22;

     label12:
        $r19 := @caughtexception;

     label13:
        exitmonitor r24;

     label14:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r19;

     label15:
        $r21 := @caughtexception;

     label16:
        virtualinvoke r37.<java.util.zip.ZipOutputStream: void close()>();

     label17:
        goto label20;

     label18:
        $r18 := @caughtexception;

     label19:
        virtualinvoke $r21.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r18);

     label20:
        throw $r21;

     label21:
        $r12 := @caughtexception;

        r41 = new java.lang.StringBuilder;

        specialinvoke r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error fetching dump ");

        r43 = (java.io.IOException) $r12;

        $r15 = virtualinvoke r43.<java.io.IOException: java.lang.String getMessage()>();

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r17);

     label22:
        return 0;

     label23:
        r42 = new java.lang.SecurityException;

        specialinvoke r42.<java.lang.SecurityException: void <init>(java.lang.String)>("Requires DUMP permission");

        throw r42;

        catch java.io.IOException from label01 to label02 with label21;
        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.io.IOException from label06 to label07 with label09;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.io.IOException from label10 to label11 with label21;
        catch java.lang.Throwable from label13 to label14 with label12;
        catch java.lang.Throwable from label14 to label15 with label15;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.io.IOException from label20 to label21 with label21;
    }

    private int runSetDisplayUserRotation(java.io.PrintWriter)
    {
        com.android.server.wm.WindowManagerShellCommand r0;
        java.lang.String $r1, $r2, $r6, $r10, $r12, r14, r15, r16;
        boolean $z0, $z1, $z2;
        com.android.server.wm.WindowManagerService $r3, $r5;
        java.io.PrintWriter $r4, r13, r18;
        java.lang.Throwable $r7;
        int i0, i1;
        java.lang.StringBuilder r20;
        java.lang.IllegalArgumentException r21;

        r0 := @this: com.android.server.wm.WindowManagerShellCommand;

        r13 := @parameter0: java.io.PrintWriter;

        r14 = virtualinvoke r0.<com.android.server.wm.WindowManagerShellCommand: java.lang.String getNextArgRequired()>();

        i0 = 0;

        r15 = virtualinvoke r0.<com.android.server.wm.WindowManagerShellCommand: java.lang.String getNextArg()>();

        r16 = r15;

        $r1 = "-d";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r15);

        if $z0 == 0 goto label01;

        $r6 = virtualinvoke r0.<com.android.server.wm.WindowManagerShellCommand: java.lang.String getNextArgRequired()>();

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

        r16 = virtualinvoke r0.<com.android.server.wm.WindowManagerShellCommand: java.lang.String getNextArg()>();

     label01:
        $r2 = "free";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r14);

        if $z1 == 0 goto label02;

        $r5 = r0.<com.android.server.wm.WindowManagerShellCommand: com.android.server.wm.WindowManagerService mInternal>;

        virtualinvoke $r5.<com.android.server.wm.WindowManagerService: void thawDisplayRotation(int)>(i0);

        return 0;

     label02:
        $z2 = virtualinvoke r14.<java.lang.String: boolean equals(java.lang.Object)>("lock");

        if $z2 != 0 goto label03;

        $r4 = virtualinvoke r0.<com.android.server.wm.WindowManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        virtualinvoke $r4.<java.io.PrintWriter: void println(java.lang.String)>("Error: lock mode needs to be either free or lock.");

        return -1;

     label03:
        if r16 == null goto label07;

     label04:
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r16);

     label05:
        goto label08;

     label06:
        $r7 := @caughtexception;

        goto label10;

     label07:
        i1 = 0;

     label08:
        $r3 = r0.<com.android.server.wm.WindowManagerShellCommand: com.android.server.wm.WindowManagerService mInternal>;

        virtualinvoke $r3.<com.android.server.wm.WindowManagerService: void freezeDisplayRotation(int,int)>(i0, i1);

     label09:
        return 0;

     label10:
        r18 = virtualinvoke r0.<com.android.server.wm.WindowManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: ");

        r21 = (java.lang.IllegalArgumentException) $r7;

        $r10 = virtualinvoke r21.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r18.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        return -1;

        catch java.lang.IllegalArgumentException from label04 to label05 with label06;
        catch java.lang.IllegalArgumentException from label08 to label09 with label06;
    }

    private int runSetFixToUserRotation(java.io.PrintWriter) throws android.os.RemoteException
    {
        com.android.server.wm.WindowManagerShellCommand r0;
        java.lang.String $r2, $r6, $r7, r9, r10;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r3;
        java.io.PrintWriter r8, r11;
        int i0, i1;
        byte b2, b3;
        android.view.IWindowManager $r12;

        r0 := @this: com.android.server.wm.WindowManagerShellCommand;

        r8 := @parameter0: java.io.PrintWriter;

        i0 = 0;

        r9 = virtualinvoke r0.<com.android.server.wm.WindowManagerShellCommand: java.lang.String getNextArgRequired()>();

        r10 = r9;

        $r2 = "-d";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r9);

        if $z0 == 0 goto label01;

        $r7 = virtualinvoke r0.<com.android.server.wm.WindowManagerShellCommand: java.lang.String getNextArgRequired()>();

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        r10 = virtualinvoke r0.<com.android.server.wm.WindowManagerShellCommand: java.lang.String getNextArgRequired()>();

     label01:
        i1 = virtualinvoke r10.<java.lang.String: int hashCode()>();

        if i1 == -1609594047 goto label05;

        if i1 == 270940796 goto label04;

        if i1 == 1544803905 goto label03;

     label02:
        goto label06;

     label03:
        $z3 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("default");

        if $z3 == 0 goto label02;

        b2 = 2;

        goto label07;

     label04:
        $z2 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("disabled");

        if $z2 == 0 goto label02;

        b2 = 1;

        goto label07;

     label05:
        $z1 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("enabled");

        if $z1 == 0 goto label02;

        b2 = 0;

        goto label07;

     label06:
        b2 = -1;

     label07:
        if b2 == 0 goto label10;

        if b2 == 1 goto label09;

        if b2 == 2 goto label08;

        r11 = virtualinvoke r0.<com.android.server.wm.WindowManagerShellCommand: java.io.PrintWriter getErrPrintWriter()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: expecting enabled, disabled or default, but we get ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r11.<java.io.PrintWriter: void println(java.lang.String)>($r6);

        return -1;

     label08:
        b3 = 0;

        goto label11;

     label09:
        b3 = 1;

        goto label11;

     label10:
        b3 = 2;

     label11:
        $r12 = r0.<com.android.server.wm.WindowManagerShellCommand: android.view.IWindowManager mInterface>;

        interfaceinvoke $r12.<android.view.IWindowManager: void setFixedToUserRotation(int,int)>(i0, b3);

        return 0;
    }

    public int onCommand(java.lang.String)
    {
        com.android.server.wm.WindowManagerShellCommand r0;
        java.io.PrintWriter r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i12, i13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        com.android.server.protolog.ProtoLogImpl $r3;
        com.android.server.wm.WindowManagerService $r4;
        com.android.server.wm.WindowTracing $r5;
        android.os.RemoteException $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r10, r11;
        byte b11;

        r0 := @this: com.android.server.wm.WindowManagerShellCommand;

        r11 := @parameter0: java.lang.String;

        if r11 != null goto label01;

        $i10 = virtualinvoke r0.<com.android.server.wm.WindowManagerShellCommand: int handleDefaultCommands(java.lang.String)>(r11);

        return $i10;

     label01:
        r1 = virtualinvoke r0.<com.android.server.wm.WindowManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

     label02:
        $i0 = virtualinvoke r11.<java.lang.String: int hashCode()>();

        lookupswitch($i0)
        {
            case -1999459663: goto label22;
            case -1316842219: goto label20;
            case -1067396926: goto label18;
            case -1014709755: goto label16;
            case -336752166: goto label14;
            case -229462135: goto label12;
            case 3530753: goto label10;
            case 342281055: goto label08;
            case 1552717032: goto label06;
            case 1910897543: goto label04;
            default: goto label03;
        };

     label03:
        goto label24;

     label04:
        $z0 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>("scaling");

        if $z0 == 0 goto label03;

     label05:
        b11 = 3;

        goto label25;

     label06:
        $z1 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>("density");

        if $z1 == 0 goto label03;

     label07:
        b11 = 1;

        goto label25;

     label08:
        $z2 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>("logging");

        if $z2 == 0 goto label03;

     label09:
        b11 = 6;

        goto label25;

     label10:
        $z3 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>("size");

        if $z3 == 0 goto label03;

     label11:
        b11 = 0;

        goto label25;

     label12:
        $z4 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>("dismiss-keyguard");

        if $z4 == 0 goto label03;

     label13:
        b11 = 4;

        goto label25;

     label14:
        $z5 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>("folded-area");

        if $z5 == 0 goto label03;

     label15:
        b11 = 2;

        goto label25;

     label16:
        $z6 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>("dump-visible-window-views");

        if $z6 == 0 goto label03;

     label17:
        b11 = 9;

        goto label25;

     label18:
        $z7 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>("tracing");

        if $z7 == 0 goto label03;

     label19:
        b11 = 5;

        goto label25;

     label20:
        $z8 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>("set-user-rotation");

        if $z8 == 0 goto label03;

     label21:
        b11 = 7;

        goto label25;

     label22:
        $z9 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>("set-fix-to-user-rotation");

        if $z9 == 0 goto label03;

     label23:
        b11 = 8;

        goto label25;

     label24:
        b11 = -1;

     label25:
        tableswitch(b11)
        {
            case 0: goto label37;
            case 1: goto label36;
            case 2: goto label35;
            case 3: goto label34;
            case 4: goto label33;
            case 5: goto label32;
            case 6: goto label31;
            case 7: goto label30;
            case 8: goto label29;
            case 9: goto label28;
            default: goto label26;
        };

     label26:
        i12 = virtualinvoke r0.<com.android.server.wm.WindowManagerShellCommand: int handleDefaultCommands(java.lang.String)>(r11);

     label27:
        goto label39;

     label28:
        $i1 = specialinvoke r0.<com.android.server.wm.WindowManagerShellCommand: int runDumpVisibleWindowViews(java.io.PrintWriter)>(r1);

        return $i1;

     label29:
        $i2 = specialinvoke r0.<com.android.server.wm.WindowManagerShellCommand: int runSetFixToUserRotation(java.io.PrintWriter)>(r1);

        return $i2;

     label30:
        $i3 = specialinvoke r0.<com.android.server.wm.WindowManagerShellCommand: int runSetDisplayUserRotation(java.io.PrintWriter)>(r1);

        return $i3;

     label31:
        $r3 = staticinvoke <com.android.server.protolog.ProtoLogImpl: com.android.server.protolog.ProtoLogImpl getSingleInstance()>();

        $i4 = virtualinvoke $r3.<com.android.server.protolog.ProtoLogImpl: int onShellCommand(android.os.ShellCommand)>(r0);

        return $i4;

     label32:
        $r4 = r0.<com.android.server.wm.WindowManagerShellCommand: com.android.server.wm.WindowManagerService mInternal>;

        $r5 = $r4.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowTracing mWindowTracing>;

        $i5 = virtualinvoke $r5.<com.android.server.wm.WindowTracing: int onShellCommand(android.os.ShellCommand)>(r0);

        return $i5;

     label33:
        $i6 = specialinvoke r0.<com.android.server.wm.WindowManagerShellCommand: int runDismissKeyguard(java.io.PrintWriter)>(r1);

        return $i6;

     label34:
        $i7 = specialinvoke r0.<com.android.server.wm.WindowManagerShellCommand: int runDisplayScaling(java.io.PrintWriter)>(r1);

        return $i7;

     label35:
        $i8 = specialinvoke r0.<com.android.server.wm.WindowManagerShellCommand: int runDisplayFoldedArea(java.io.PrintWriter)>(r1);

        return $i8;

     label36:
        $i9 = specialinvoke r0.<com.android.server.wm.WindowManagerShellCommand: int runDisplayDensity(java.io.PrintWriter)>(r1);

        return $i9;

     label37:
        i13 = specialinvoke r0.<com.android.server.wm.WindowManagerShellCommand: int runDisplaySize(java.io.PrintWriter)>(r1);

     label38:
        return i13;

     label39:
        return i12;

     label40:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Remote exception: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        return -1;

        catch android.os.RemoteException from label02 to label03 with label40;
        catch android.os.RemoteException from label04 to label05 with label40;
        catch android.os.RemoteException from label06 to label07 with label40;
        catch android.os.RemoteException from label08 to label09 with label40;
        catch android.os.RemoteException from label10 to label11 with label40;
        catch android.os.RemoteException from label12 to label13 with label40;
        catch android.os.RemoteException from label14 to label15 with label40;
        catch android.os.RemoteException from label16 to label17 with label40;
        catch android.os.RemoteException from label18 to label19 with label40;
        catch android.os.RemoteException from label20 to label21 with label40;
        catch android.os.RemoteException from label22 to label23 with label40;
        catch android.os.RemoteException from label26 to label27 with label40;
        catch android.os.RemoteException from label28 to label29 with label40;
        catch android.os.RemoteException from label29 to label30 with label40;
        catch android.os.RemoteException from label30 to label31 with label40;
        catch android.os.RemoteException from label31 to label32 with label40;
        catch android.os.RemoteException from label32 to label33 with label40;
        catch android.os.RemoteException from label33 to label34 with label40;
        catch android.os.RemoteException from label34 to label35 with label40;
        catch android.os.RemoteException from label35 to label36 with label40;
        catch android.os.RemoteException from label36 to label37 with label40;
        catch android.os.RemoteException from label37 to label38 with label40;
    }

    public void onHelp()
    {
        com.android.server.wm.WindowManagerShellCommand r0;
        java.io.PrintWriter r1;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowManagerShellCommand;

        r1 = virtualinvoke r0.<com.android.server.wm.WindowManagerShellCommand: java.io.PrintWriter getOutPrintWriter()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("Window manager (window) commands:");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  help");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("      Print this help text.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  size [reset|WxH|WdpxHdp] [-d DISPLAY_ID]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Return or override display size.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    width and height in pixels unless suffixed with \'dp\'.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  density [reset|DENSITY] [-d DISPLAY_ID]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Return or override display density.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  folded-area [reset|LEFT,TOP,RIGHT,BOTTOM]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Return or override folded area.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  scaling [off|auto] [-d DISPLAY_ID]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Set display scaling mode.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  dismiss-keyguard");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Dismiss the keyguard, prompting user for auth if\u00a0necessary.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  set-user-rotation [free|lock] [-d DISPLAY_ID] [rotation]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Set user rotation mode and user rotation.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  dump-visible-window-views");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Dumps the encoded view hierarchies of visible windows");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  set-fix-to-user-rotation [-d DISPLAY_ID] [enabled|disabled]");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Enable or disable rotating display for app requested orientation.");

        $z0 = <android.os.Build: boolean IS_USER>;

        if $z0 != 0 goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  tracing (start | stop)");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Start or stop window tracing.");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("  logging (start | stop | enable | disable | enable-text | disable-text)");

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>("    Logging settings.");

     label1:
        return;
    }
}
