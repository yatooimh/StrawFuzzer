class com.android.server.wm.WindowManagerThreadPriorityBooster extends com.android.server.ThreadPriorityBooster
{
    private final int mAnimationThreadId;
    private boolean mAppTransitionRunning;
    private boolean mBoundsAnimationRunning;
    private final java.lang.Object mLock;
    private final int mSurfaceAnimationThreadId;

    void <init>()
    {
        com.android.server.wm.WindowManagerThreadPriorityBooster r0;
        java.lang.Object $r1;
        com.android.server.AnimationThread $r2;
        int $i0, $i1;
        com.android.server.wm.SurfaceAnimationThread $r3;

        r0 := @this: com.android.server.wm.WindowManagerThreadPriorityBooster;

        specialinvoke r0.<com.android.server.ThreadPriorityBooster: void <init>(int,int)>(-4, 5);

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<com.android.server.wm.WindowManagerThreadPriorityBooster: java.lang.Object mLock> = $r1;

        $r2 = staticinvoke <com.android.server.AnimationThread: com.android.server.AnimationThread get()>();

        $i0 = virtualinvoke $r2.<com.android.server.AnimationThread: int getThreadId()>();

        r0.<com.android.server.wm.WindowManagerThreadPriorityBooster: int mAnimationThreadId> = $i0;

        $r3 = staticinvoke <com.android.server.wm.SurfaceAnimationThread: com.android.server.wm.SurfaceAnimationThread get()>();

        $i1 = virtualinvoke $r3.<com.android.server.wm.SurfaceAnimationThread: int getThreadId()>();

        r0.<com.android.server.wm.WindowManagerThreadPriorityBooster: int mSurfaceAnimationThreadId> = $i1;

        return;
    }

    private void updatePriorityLocked()
    {
        com.android.server.wm.WindowManagerThreadPriorityBooster r0;
        boolean $z0, $z1;
        byte b0;
        int $i1, $i2;

        r0 := @this: com.android.server.wm.WindowManagerThreadPriorityBooster;

        $z0 = r0.<com.android.server.wm.WindowManagerThreadPriorityBooster: boolean mAppTransitionRunning>;

        if $z0 != 0 goto label2;

        $z1 = r0.<com.android.server.wm.WindowManagerThreadPriorityBooster: boolean mBoundsAnimationRunning>;

        if $z1 == 0 goto label1;

        goto label2;

     label1:
        b0 = -4;

        goto label3;

     label2:
        b0 = -10;

     label3:
        virtualinvoke r0.<com.android.server.wm.WindowManagerThreadPriorityBooster: void setBoostToPriority(int)>(b0);

        $i1 = r0.<com.android.server.wm.WindowManagerThreadPriorityBooster: int mAnimationThreadId>;

        staticinvoke <android.os.Process: void setThreadPriority(int,int)>($i1, b0);

        $i2 = r0.<com.android.server.wm.WindowManagerThreadPriorityBooster: int mSurfaceAnimationThreadId>;

        staticinvoke <android.os.Process: void setThreadPriority(int,int)>($i2, b0);

        return;
    }

    public void boost()
    {
        com.android.server.wm.WindowManagerThreadPriorityBooster r0;
        int i0, $i1, $i2;

        r0 := @this: com.android.server.wm.WindowManagerThreadPriorityBooster;

        i0 = staticinvoke <android.os.Process: int myTid()>();

        $i1 = r0.<com.android.server.wm.WindowManagerThreadPriorityBooster: int mAnimationThreadId>;

        if i0 == $i1 goto label2;

        $i2 = r0.<com.android.server.wm.WindowManagerThreadPriorityBooster: int mSurfaceAnimationThreadId>;

        if i0 != $i2 goto label1;

        goto label2;

     label1:
        specialinvoke r0.<com.android.server.ThreadPriorityBooster: void boost()>();

        return;

     label2:
        return;
    }

    public void reset()
    {
        com.android.server.wm.WindowManagerThreadPriorityBooster r0;
        int i0, $i1, $i2;

        r0 := @this: com.android.server.wm.WindowManagerThreadPriorityBooster;

        i0 = staticinvoke <android.os.Process: int myTid()>();

        $i1 = r0.<com.android.server.wm.WindowManagerThreadPriorityBooster: int mAnimationThreadId>;

        if i0 == $i1 goto label2;

        $i2 = r0.<com.android.server.wm.WindowManagerThreadPriorityBooster: int mSurfaceAnimationThreadId>;

        if i0 != $i2 goto label1;

        goto label2;

     label1:
        specialinvoke r0.<com.android.server.ThreadPriorityBooster: void reset()>();

        return;

     label2:
        return;
    }

    void setAppTransitionRunning(boolean)
    {
        com.android.server.wm.WindowManagerThreadPriorityBooster r0;
        boolean z0, $z1;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.wm.WindowManagerThreadPriorityBooster;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.server.wm.WindowManagerThreadPriorityBooster: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z1 = r0.<com.android.server.wm.WindowManagerThreadPriorityBooster: boolean mAppTransitionRunning>;

        if $z1 == z0 goto label2;

        r0.<com.android.server.wm.WindowManagerThreadPriorityBooster: boolean mAppTransitionRunning> = z0;

        specialinvoke r0.<com.android.server.wm.WindowManagerThreadPriorityBooster: void updatePriorityLocked()>();

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    void setBoundsAnimationRunning(boolean)
    {
        com.android.server.wm.WindowManagerThreadPriorityBooster r0;
        boolean z0, $z1;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.server.wm.WindowManagerThreadPriorityBooster;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.server.wm.WindowManagerThreadPriorityBooster: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $z1 = r0.<com.android.server.wm.WindowManagerThreadPriorityBooster: boolean mBoundsAnimationRunning>;

        if $z1 == z0 goto label2;

        r0.<com.android.server.wm.WindowManagerThreadPriorityBooster: boolean mBoundsAnimationRunning> = z0;

        specialinvoke r0.<com.android.server.wm.WindowManagerThreadPriorityBooster: void updatePriorityLocked()>();

     label2:
        exitmonitor r1;

     label3:
        return;

     label4:
        $r3 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
