public class com.android.server.wm.WindowProcessController extends com.android.server.wm.ConfigurationContainer implements com.android.server.wm.ConfigurationContainerListener
{
    private static final java.lang.String TAG;
    private static final java.lang.String TAG_CONFIGURATION;
    private static final java.lang.String TAG_RELEASE;
    private final java.util.ArrayList mActivities;
    private volatile boolean mAllowBackgroundActivityStarts;
    private final com.android.server.wm.ActivityTaskManagerService mAtm;
    private volatile android.util.ArraySet mBoundClientUids;
    private com.android.server.wm.ActivityRecord mConfigActivityRecord;
    private volatile boolean mCrashing;
    private volatile int mCurProcState;
    private volatile int mCurSchedGroup;
    private volatile boolean mDebugging;
    private int mDisplayId;
    private volatile long mFgInteractionTime;
    private volatile boolean mHasClientActivities;
    private volatile boolean mHasForegroundActivities;
    private volatile boolean mHasForegroundServices;
    private volatile boolean mHasImeService;
    private volatile boolean mHasOverlayUi;
    private volatile boolean mHasTopUi;
    private final java.util.ArrayList mHostActivities;
    final android.content.pm.ApplicationInfo mInfo;
    private volatile boolean mInstrumenting;
    private volatile boolean mInstrumentingWithBackgroundActivityStartPrivileges;
    private volatile long mInteractionEventTime;
    private volatile boolean mIsActivityConfigOverrideAllowed;
    private long mLastActivityFinishTime;
    private long mLastActivityLaunchTime;
    private final android.content.res.Configuration mLastReportedConfiguration;
    private final com.android.server.wm.WindowProcessListener mListener;
    final java.lang.String mName;
    private final android.content.res.Configuration mNewOverrideConfig;
    private volatile boolean mNotResponding;
    public final java.lang.Object mOwner;
    private android.content.res.Configuration mPendingConfiguration;
    private volatile boolean mPendingUiClean;
    private volatile boolean mPerceptible;
    private volatile boolean mPersistent;
    private volatile int mPid;
    final android.util.ArraySet mPkgList;
    private com.android.server.wm.ActivityRecord mPreQTopResumedActivity;
    private final java.util.ArrayList mRecentTasks;
    private volatile int mRepProcState;
    private volatile java.lang.String mRequiredAbi;
    private boolean mRunningRecentsAnimation;
    private boolean mRunningRemoteAnimation;
    private android.app.IApplicationThread mThread;
    final int mUid;
    final int mUserId;
    private volatile boolean mUsingWrapper;
    int mVrThreadTid;
    private volatile long mWhenUnimportant;

    public void <init>(com.android.server.wm.ActivityTaskManagerService, android.content.pm.ApplicationInfo, java.lang.String, int, int, java.lang.Object, com.android.server.wm.WindowProcessListener)
    {
        com.android.server.wm.WindowProcessController r0;
        com.android.server.wm.ActivityTaskManagerService r1, $r13;
        android.content.pm.ApplicationInfo r2;
        java.lang.String r3, $r14, $r16;
        int i0, i1, $i2;
        java.lang.Object r4;
        com.android.server.wm.WindowProcessListener r5;
        android.util.ArraySet $r6, $r7;
        java.util.ArrayList $r8, $r9, $r12;
        android.content.res.Configuration $r10, $r11, $r17;
        android.content.ComponentName $r15;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r1 := @parameter0: com.android.server.wm.ActivityTaskManagerService;

        r2 := @parameter1: android.content.pm.ApplicationInfo;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r4 := @parameter5: java.lang.Object;

        r5 := @parameter6: com.android.server.wm.WindowProcessListener;

        specialinvoke r0.<com.android.server.wm.ConfigurationContainer: void <init>()>();

        $r6 = new android.util.ArraySet;

        specialinvoke $r6.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.wm.WindowProcessController: android.util.ArraySet mPkgList> = $r6;

        r0.<com.android.server.wm.WindowProcessController: int mCurProcState> = 20;

        r0.<com.android.server.wm.WindowProcessController: int mRepProcState> = 20;

        $r7 = new android.util.ArraySet;

        specialinvoke $r7.<android.util.ArraySet: void <init>()>();

        r0.<com.android.server.wm.WindowProcessController: android.util.ArraySet mBoundClientUids> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mRecentTasks> = $r9;

        r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityRecord mPreQTopResumedActivity> = null;

        $r10 = new android.content.res.Configuration;

        specialinvoke $r10.<android.content.res.Configuration: void <init>()>();

        r0.<com.android.server.wm.WindowProcessController: android.content.res.Configuration mLastReportedConfiguration> = $r10;

        $r11 = new android.content.res.Configuration;

        specialinvoke $r11.<android.content.res.Configuration: void <init>()>();

        r0.<com.android.server.wm.WindowProcessController: android.content.res.Configuration mNewOverrideConfig> = $r11;

        r0.<com.android.server.wm.WindowProcessController: boolean mIsActivityConfigOverrideAllowed> = 1;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>()>();

        r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mHostActivities> = $r12;

        r0.<com.android.server.wm.WindowProcessController: android.content.pm.ApplicationInfo mInfo> = r2;

        r0.<com.android.server.wm.WindowProcessController: java.lang.String mName> = r3;

        r0.<com.android.server.wm.WindowProcessController: int mUid> = i0;

        r0.<com.android.server.wm.WindowProcessController: int mUserId> = i1;

        r0.<com.android.server.wm.WindowProcessController: java.lang.Object mOwner> = r4;

        r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.WindowProcessListener mListener> = r5;

        r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm> = r1;

        r0.<com.android.server.wm.WindowProcessController: int mDisplayId> = -1;

        $r14 = r2.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r13 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        $r15 = virtualinvoke $r13.<com.android.server.wm.ActivityTaskManagerService: android.content.ComponentName getSysUiServiceComponentLocked()>();

        $r16 = virtualinvoke $r15.<android.content.ComponentName: java.lang.String getPackageName()>();

        $z0 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z0 != 0 goto label1;

        $i2 = r0.<com.android.server.wm.WindowProcessController: int mUid>;

        if $i2 != 1000 goto label2;

     label1:
        r0.<com.android.server.wm.WindowProcessController: boolean mIsActivityConfigOverrideAllowed> = 0;

     label2:
        $r17 = virtualinvoke r1.<com.android.server.wm.ActivityTaskManagerService: android.content.res.Configuration getGlobalConfiguration()>();

        virtualinvoke r0.<com.android.server.wm.WindowProcessController: void onConfigurationChanged(android.content.res.Configuration)>($r17);

        return;
    }

    private void dispatchConfigurationChange(android.content.res.Configuration)
    {
        com.android.server.wm.WindowProcessController r0;
        android.app.IApplicationThread $r2, $r22;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r3, $r10;
        java.lang.String $r5, $r9, $r12, $r15;
        java.lang.Exception $r16;
        android.content.res.Configuration r17;
        com.android.server.wm.ActivityTaskManagerService $r19, $r20;
        int $i3;
        com.android.server.wm.ClientLifecycleManager $r21;
        android.app.servertransaction.ConfigurationChangeItem $r23;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r17 := @parameter0: android.content.res.Configuration;

        $r2 = r0.<com.android.server.wm.WindowProcessController: android.app.IApplicationThread mThread>;

        if $r2 != null goto label2;

        $z2 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z2 == 0 goto label1;

        $z3 = r0.<com.android.server.wm.WindowProcessController: boolean mHasImeService>;

        if $z3 == 0 goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to send config for IME proc ");

        $r12 = r0.<com.android.server.wm.WindowProcessController: java.lang.String mName>;

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": no app thread");

        $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityTaskManager", $r15);

     label1:
        return;

     label2:
        $z0 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z0 == 0 goto label3;

        $z1 = r0.<com.android.server.wm.WindowProcessController: boolean mHasImeService>;

        if $z1 == 0 goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending to IME proc ");

        $r5 = r0.<com.android.server.wm.WindowProcessController: java.lang.String mName>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" new config ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int v(java.lang.String,java.lang.String)>("ActivityTaskManager", $r9);

     label3:
        $r19 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        $i3 = virtualinvoke $r19.<com.android.server.wm.ActivityTaskManagerService: int increaseConfigurationSeqLocked()>();

        r17.<android.content.res.Configuration: int seq> = $i3;

        $r20 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        $r21 = virtualinvoke $r20.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ClientLifecycleManager getLifecycleManager()>();

        $r22 = r0.<com.android.server.wm.WindowProcessController: android.app.IApplicationThread mThread>;

        $r23 = staticinvoke <android.app.servertransaction.ConfigurationChangeItem: android.app.servertransaction.ConfigurationChangeItem obtain(android.content.res.Configuration)>(r17);

        virtualinvoke $r21.<com.android.server.wm.ClientLifecycleManager: void scheduleTransaction(android.app.IApplicationThread,android.app.servertransaction.ClientTransactionItem)>($r22, $r23);

        specialinvoke r0.<com.android.server.wm.WindowProcessController: void setLastReportedConfiguration(android.content.res.Configuration)>(r17);

     label4:
        goto label6;

     label5:
        $r16 := @caughtexception;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ActivityTaskManager", "Failed to schedule configuration change", $r16);

     label6:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    private boolean hasActivityInVisibleTask()
    {
        com.android.server.wm.WindowProcessController r0;
        java.util.ArrayList $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        com.android.server.wm.ActivityRecord $r4, r6;
        boolean $z0;
        com.android.server.wm.Task r5;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $r1 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label4;

        $r2 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (com.android.server.wm.ActivityRecord) $r3;

        r5 = virtualinvoke $r4.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        if r5 != null goto label2;

        goto label3;

     label2:
        r6 = virtualinvoke r5.<com.android.server.wm.Task: com.android.server.wm.ActivityRecord getTopNonFinishingActivity()>();

        if r6 == null goto label3;

        $z0 = r6.<com.android.server.wm.ActivityRecord: boolean mVisibleRequested>;

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + -1;

        goto label1;

     label4:
        return 0;
    }

    private boolean isBoundByForegroundUid()
    {
        com.android.server.wm.WindowProcessController r0;
        android.util.ArraySet $r1, $r2;
        int $i0, $i1, i2;
        com.android.server.wm.ActivityTaskManagerService $r3;
        java.lang.Object $r4;
        java.lang.Integer $r5;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $r1 = r0.<com.android.server.wm.WindowProcessController: android.util.ArraySet mBoundClientUids>;

        $i0 = virtualinvoke $r1.<android.util.ArraySet: int size()>();

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label3;

        $r3 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        $r2 = r0.<com.android.server.wm.WindowProcessController: android.util.ArraySet mBoundClientUids>;

        $r4 = virtualinvoke $r2.<android.util.ArraySet: java.lang.Object valueAt(int)>(i2);

        $r5 = (java.lang.Integer) $r4;

        $i1 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        $z0 = virtualinvoke $r3.<com.android.server.wm.ActivityTaskManagerService: boolean isUidForeground(int)>($i1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i2 = i2 + -1;

        goto label1;

     label3:
        return 0;
    }

    private boolean isEmbedded()
    {
        com.android.server.wm.WindowProcessController r0;
        java.util.ArrayList $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        com.android.server.wm.ActivityRecord $r4;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $r1 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mHostActivities>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r2 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mHostActivities>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (com.android.server.wm.ActivityRecord) $r3;

        $z0 = virtualinvoke $r4.<com.android.server.wm.ActivityRecord: boolean isInterestingToUserLocked()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return 0;
    }

    private void registerActivityConfigurationListener(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.WindowProcessController r0;
        com.android.server.wm.ActivityRecord r1;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        if r1 == null goto label2;

        $z0 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: boolean containsListener(com.android.server.wm.ConfigurationContainerListener)>(r0);

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        virtualinvoke r0.<com.android.server.wm.WindowProcessController: void unregisterDisplayConfigurationListener()>();

        specialinvoke r0.<com.android.server.wm.WindowProcessController: void unregisterActivityConfigurationListener()>();

        r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityRecord mConfigActivityRecord> = r1;

        virtualinvoke r1.<com.android.server.wm.ActivityRecord: void registerConfigurationChangeListener(com.android.server.wm.ConfigurationContainerListener)>(r0);

        return;

     label2:
        return;
    }

    private void setLastReportedConfiguration(android.content.res.Configuration)
    {
        com.android.server.wm.WindowProcessController r0;
        android.content.res.Configuration r1, $r2;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r1 := @parameter0: android.content.res.Configuration;

        $r2 = r0.<com.android.server.wm.WindowProcessController: android.content.res.Configuration mLastReportedConfiguration>;

        virtualinvoke $r2.<android.content.res.Configuration: void setTo(android.content.res.Configuration)>(r1);

        return;
    }

    private boolean shouldSetProfileProc()
    {
        com.android.server.wm.WindowProcessController r0, $r7, $r9;
        com.android.server.wm.ActivityTaskManagerService $r1, $r3, $r6, $r8;
        java.lang.String $r2, $r4, $r5;
        boolean $z0, z1;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $r1 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        $r2 = $r1.<com.android.server.wm.ActivityTaskManagerService: java.lang.String mProfileApp>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        $r5 = $r3.<com.android.server.wm.ActivityTaskManagerService: java.lang.String mProfileApp>;

        $r4 = r0.<com.android.server.wm.WindowProcessController: java.lang.String mName>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        $r6 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        $r7 = $r6.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mProfileProc>;

        if $r7 == null goto label1;

        $r8 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        $r9 = $r8.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mProfileProc>;

        if $r9 != r0 goto label2;

     label1:
        z1 = 1;

        goto label3;

     label2:
        z1 = 0;

     label3:
        return z1;
    }

    private void unregisterActivityConfigurationListener()
    {
        com.android.server.wm.WindowProcessController r0;
        com.android.server.wm.ActivityRecord r1;
        android.content.res.Configuration $r2;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r1 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityRecord mConfigActivityRecord>;

        if r1 != null goto label1;

        return;

     label1:
        virtualinvoke r1.<com.android.server.wm.ActivityRecord: void unregisterConfigurationChangeListener(com.android.server.wm.ConfigurationContainerListener)>(r0);

        r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityRecord mConfigActivityRecord> = null;

        $r2 = <android.content.res.Configuration: android.content.res.Configuration EMPTY>;

        virtualinvoke r0.<com.android.server.wm.WindowProcessController: void onMergedOverrideConfigurationChanged(android.content.res.Configuration)>($r2);

        return;
    }

    private void updateActivityConfigurationListener()
    {
        com.android.server.wm.WindowProcessController r0;
        com.android.server.wm.ActivityRecord r1;
        boolean $z0, $z1;
        java.util.ArrayList $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $z0 = r0.<com.android.server.wm.WindowProcessController: boolean mIsActivityConfigOverrideAllowed>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label2:
        if i1 < 0 goto label4;

        $r3 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (com.android.server.wm.ActivityRecord) $r4;

        $z1 = r1.<com.android.server.wm.ActivityRecord: boolean finishing>;

        if $z1 != 0 goto label3;

        specialinvoke r0.<com.android.server.wm.WindowProcessController: void registerActivityConfigurationListener(com.android.server.wm.ActivityRecord)>(r1);

        return;

     label3:
        i1 = i1 + -1;

        goto label2;

     label4:
        specialinvoke r0.<com.android.server.wm.WindowProcessController: void unregisterActivityConfigurationListener()>();

        return;
    }

    private void updateConfiguration()
    {
        com.android.server.wm.WindowProcessController r0;
        android.content.res.Configuration r1, $r2, $r4, r13;
        int $i0;
        com.android.server.wm.WindowProcessListener $r3;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r5;
        java.lang.String $r9, $r11;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r1 = virtualinvoke r0.<com.android.server.wm.WindowProcessController: android.content.res.Configuration getConfiguration()>();

        $r2 = r0.<com.android.server.wm.WindowProcessController: android.content.res.Configuration mLastReportedConfiguration>;

        $i0 = virtualinvoke $r2.<android.content.res.Configuration: int diff(android.content.res.Configuration)>(r1);

        if $i0 != 0 goto label2;

        $z1 = <android.os.Build: boolean IS_DEBUGGABLE>;

        if $z1 == 0 goto label1;

        $z2 = r0.<com.android.server.wm.WindowProcessController: boolean mHasImeService>;

        if $z2 == 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current config: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unchanged for IME proc ");

        $r9 = r0.<com.android.server.wm.WindowProcessController: java.lang.String mName>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityTaskManager", $r11);

     label1:
        return;

     label2:
        $r3 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.WindowProcessListener mListener>;

        $z0 = interfaceinvoke $r3.<com.android.server.wm.WindowProcessListener: boolean isCached()>();

        if $z0 == 0 goto label5;

        r13 = r0.<com.android.server.wm.WindowProcessController: android.content.res.Configuration mPendingConfiguration>;

        if r13 != null goto label3;

        $r4 = new android.content.res.Configuration;

        specialinvoke $r4.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>(r1);

        r0.<com.android.server.wm.WindowProcessController: android.content.res.Configuration mPendingConfiguration> = $r4;

        goto label4;

     label3:
        virtualinvoke r13.<android.content.res.Configuration: void setTo(android.content.res.Configuration)>(r1);

     label4:
        return;

     label5:
        specialinvoke r0.<com.android.server.wm.WindowProcessController: void dispatchConfigurationChange(android.content.res.Configuration)>(r1);

        return;
    }

    private void updateRunningRemoteOrRecentsAnimation()
    {
        com.android.server.wm.WindowProcessController r0;
        com.android.server.wm.ActivityTaskManagerService$H r1;
        com.android.server.wm.'-$$Lambda$uwO6wQlqU3CG7OTdH7NBCKnHs64' r2;
        com.android.server.wm.WindowProcessListener r3;
        com.android.server.wm.ActivityTaskManagerService $r4;
        boolean $z0, $z2, z3;
        java.lang.Boolean $r5;
        android.os.Message $r6;
        java.util.function.BiConsumer r7;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $r4 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        r1 = $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityTaskManagerService$H mH>;

        r2 = <com.android.server.wm._$$Lambda$uwO6wQlqU3CG7OTdH7NBCKnHs64: com.android.server.wm.'-$$Lambda$uwO6wQlqU3CG7OTdH7NBCKnHs64' INSTANCE>;

        r3 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.WindowProcessListener mListener>;

        $z0 = r0.<com.android.server.wm.WindowProcessController: boolean mRunningRecentsAnimation>;

        if $z0 != 0 goto label2;

        $z2 = r0.<com.android.server.wm.WindowProcessController: boolean mRunningRemoteAnimation>;

        if $z2 == 0 goto label1;

        goto label2;

     label1:
        z3 = 0;

        goto label3;

     label2:
        z3 = 1;

     label3:
        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z3);

        r7 = (java.util.function.BiConsumer) r2;

        $r6 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(java.util.function.BiConsumer,java.lang.Object,java.lang.Object)>(r7, r3, $r5);

        virtualinvoke r1.<com.android.server.wm.ActivityTaskManagerService$H: boolean sendMessage(android.os.Message)>($r6);

        return;
    }

    void addActivityIfNeeded(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.WindowProcessController r0;
        com.android.server.wm.ActivityRecord r1;
        long $l0;
        java.util.ArrayList $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        $l0 = r1.<com.android.server.wm.ActivityRecord: long lastLaunchTime>;

        virtualinvoke r0.<com.android.server.wm.WindowProcessController: void setLastActivityLaunchTime(long)>($l0);

        $r2 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        specialinvoke r0.<com.android.server.wm.WindowProcessController: void updateActivityConfigurationListener()>();

        return;
    }

    void addHostActivity(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.WindowProcessController r0;
        com.android.server.wm.ActivityRecord r1;
        java.util.ArrayList $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        $r2 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mHostActivities>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mHostActivities>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void addPackage(java.lang.String)
    {
        com.android.server.wm.WindowProcessController r0;
        java.lang.Object r1;
        com.android.server.wm.ActivityTaskManagerService $r2;
        android.util.ArraySet $r3;
        java.lang.Throwable $r4;
        java.lang.String r5;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r5 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: java.lang.Object mGlobalLockWithoutBoost>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.wm.WindowProcessController: android.util.ArraySet mPkgList>;

        virtualinvoke $r3.<android.util.ArraySet: boolean add(java.lang.Object)>(r5);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void addRecentTask(com.android.server.wm.Task)
    {
        com.android.server.wm.WindowProcessController r0;
        com.android.server.wm.Task r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r1 := @parameter0: com.android.server.wm.Task;

        $r2 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mRecentTasks>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return;
    }

    void appDied(java.lang.String)
    {
        com.android.server.wm.WindowProcessController r0;
        com.android.server.wm.WindowProcessListener $r1, $r2;
        com.android.server.wm.'-$$Lambda$VDG7MoD_7v7qIdkguJXls8nmhGU' $r3;
        com.android.server.wm.ActivityTaskManagerService $r4;
        com.android.server.wm.ActivityTaskManagerService$H $r5;
        java.lang.String r6;
        android.os.Message r7;
        java.util.function.BiConsumer r8;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.WindowProcessListener mListener>;

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = <com.android.server.wm._$$Lambda$VDG7MoD_7v7qIdkguJXls8nmhGU: com.android.server.wm.'-$$Lambda$VDG7MoD_7v7qIdkguJXls8nmhGU' INSTANCE>;

        $r2 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.WindowProcessListener mListener>;

        r8 = (java.util.function.BiConsumer) $r3;

        r7 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(java.util.function.BiConsumer,java.lang.Object,java.lang.Object)>(r8, $r2, r6);

        $r4 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        $r5 = $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityTaskManagerService$H mH>;

        virtualinvoke $r5.<com.android.server.wm.ActivityTaskManagerService$H: boolean sendMessage(android.os.Message)>(r7);

        return;
    }

    public void appEarlyNotResponding(java.lang.String, java.lang.Runnable)
    {
        com.android.server.wm.WindowProcessController r0;
        java.lang.Runnable r1, r14;
        com.android.server.wm.WindowManagerGlobalLock r2;
        int i0, i1, $i2, $i3;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4, $r6, $r10;
        android.app.IActivityController $r5, $r8;
        java.lang.String $r7, r13;
        android.os.RemoteException $r9;
        com.android.server.Watchdog $r11;
        java.lang.Throwable $r12;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r13 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Runnable;

        $r3 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        r2 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r2;

     label01:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        $r5 = $r4.<com.android.server.wm.ActivityTaskManagerService: android.app.IActivityController mController>;

        if $r5 != null goto label03;

        exitmonitor r2;

     label02:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label03:
        r14 = null;

     label04:
        $r6 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        $r8 = $r6.<com.android.server.wm.ActivityTaskManagerService: android.app.IActivityController mController>;

        $r7 = r0.<com.android.server.wm.WindowProcessController: java.lang.String mName>;

        $i2 = r0.<com.android.server.wm.WindowProcessController: int mPid>;

        $i3 = interfaceinvoke $r8.<android.app.IActivityController: int appEarlyNotResponding(java.lang.String,int,java.lang.String)>($r7, $i2, r13);

        if $i3 >= 0 goto label06;

        i0 = r0.<com.android.server.wm.WindowProcessController: int mPid>;

        i1 = <com.android.server.am.ActivityManagerService: int MY_PID>;

     label05:
        r14 = null;

        if i0 == i1 goto label06;

        r14 = r1;

     label06:
        goto label10;

     label07:
        $r9 := @caughtexception;

     label08:
        $r10 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        $r10.<com.android.server.wm.ActivityTaskManagerService: android.app.IActivityController mController> = null;

        $r11 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r11.<com.android.server.Watchdog: void setActivityController(android.app.IActivityController)>(null);

     label09:
        r14 = null;

     label10:
        exitmonitor r2;

     label11:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        if r14 == null goto label12;

        interfaceinvoke r14.<java.lang.Runnable: void run()>();

     label12:
        return;

     label13:
        $r12 := @caughtexception;

     label14:
        exitmonitor r2;

     label15:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r12;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch android.os.RemoteException from label04 to label05 with label07;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public boolean appNotResponding(java.lang.String, java.lang.Runnable, java.lang.Runnable)
    {
        com.android.server.wm.WindowProcessController r0;
        java.lang.Runnable r1, r2, r15;
        com.android.server.wm.WindowManagerGlobalLock r3;
        int i0, $i1, i2, i3;
        com.android.server.wm.ActivityTaskManagerService $r4, $r5, $r7, $r11;
        android.app.IActivityController $r6, $r9;
        java.lang.String $r8, r14;
        android.os.RemoteException $r10;
        com.android.server.Watchdog $r12;
        java.lang.Throwable $r13;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r14 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Runnable;

        r2 := @parameter2: java.lang.Runnable;

        $r4 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        r3 = $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r3;

     label01:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r5 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        $r6 = $r5.<com.android.server.wm.ActivityTaskManagerService: android.app.IActivityController mController>;

        if $r6 != null goto label03;

        exitmonitor r3;

     label02:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return 0;

     label03:
        $r7 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        $r9 = $r7.<com.android.server.wm.ActivityTaskManagerService: android.app.IActivityController mController>;

        $r8 = r0.<com.android.server.wm.WindowProcessController: java.lang.String mName>;

        $i1 = r0.<com.android.server.wm.WindowProcessController: int mPid>;

        i2 = interfaceinvoke $r9.<android.app.IActivityController: int appNotResponding(java.lang.String,int,java.lang.String)>($r8, $i1, r14);

     label04:
        r15 = null;

        if i2 == 0 goto label08;

        if i2 >= 0 goto label07;

     label05:
        i3 = r0.<com.android.server.wm.WindowProcessController: int mPid>;

        i0 = <com.android.server.am.ActivityManagerService: int MY_PID>;

     label06:
        if i3 == i0 goto label07;

        r15 = r1;

        goto label08;

     label07:
        r15 = r2;

     label08:
        exitmonitor r3;

     label09:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        if r15 == null goto label10;

        interfaceinvoke r15.<java.lang.Runnable: void run()>();

        return 1;

     label10:
        return 0;

     label11:
        $r10 := @caughtexception;

     label12:
        $r11 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        $r11.<com.android.server.wm.ActivityTaskManagerService: android.app.IActivityController mController> = null;

        $r12 = staticinvoke <com.android.server.Watchdog: com.android.server.Watchdog getInstance()>();

        virtualinvoke $r12.<com.android.server.Watchdog: void setActivityController(android.app.IActivityController)>(null);

        exitmonitor r3;

     label13:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return 0;

     label14:
        $r13 := @caughtexception;

     label15:
        exitmonitor r3;

     label16:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch android.os.RemoteException from label03 to label04 with label11;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch android.os.RemoteException from label05 to label06 with label11;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label15 to label16 with label14;
    }

    boolean areBackgroundActivityStartsAllowed()
    {
        com.android.server.wm.WindowProcessController r0;
        long l0, $l1, $l2, $l4, $l5, $l7, $l8, $l10, $l11;
        boolean $z0, $z1, $z2, $z3;
        byte $b3, $b6, $b9, $b12;
        com.android.server.wm.ActivityTaskManagerService $r1, $r2;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $z0 = r0.<com.android.server.wm.WindowProcessController: boolean mAllowBackgroundActivityStarts>;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l1 = r0.<com.android.server.wm.WindowProcessController: long mLastActivityLaunchTime>;

        $l2 = l0 - $l1;

        $b3 = $l2 cmp 10000L;

        if $b3 < 0 goto label2;

        $l10 = r0.<com.android.server.wm.WindowProcessController: long mLastActivityFinishTime>;

        $l11 = l0 - $l10;

        $b12 = $l11 cmp 10000L;

        if $b12 >= 0 goto label3;

     label2:
        $l4 = r0.<com.android.server.wm.WindowProcessController: long mLastActivityLaunchTime>;

        $r1 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        $l5 = virtualinvoke $r1.<com.android.server.wm.ActivityTaskManagerService: long getLastStopAppSwitchesTime()>();

        $b6 = $l4 cmp $l5;

        if $b6 > 0 goto label7;

        $l7 = r0.<com.android.server.wm.WindowProcessController: long mLastActivityFinishTime>;

        $r2 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        $l8 = virtualinvoke $r2.<com.android.server.wm.ActivityTaskManagerService: long getLastStopAppSwitchesTime()>();

        $b9 = $l7 cmp $l8;

        if $b9 <= 0 goto label3;

        goto label7;

     label3:
        $z1 = r0.<com.android.server.wm.WindowProcessController: boolean mInstrumentingWithBackgroundActivityStartPrivileges>;

        if $z1 == 0 goto label4;

        return 1;

     label4:
        $z2 = specialinvoke r0.<com.android.server.wm.WindowProcessController: boolean hasActivityInVisibleTask()>();

        if $z2 == 0 goto label5;

        return 1;

     label5:
        $z3 = specialinvoke r0.<com.android.server.wm.WindowProcessController: boolean isBoundByForegroundUid()>();

        if $z3 == 0 goto label6;

        return 1;

     label6:
        return 0;

     label7:
        return 1;
    }

    void clearActivities()
    {
        com.android.server.wm.WindowProcessController r0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $r1 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        specialinvoke r0.<com.android.server.wm.WindowProcessController: void updateActivityConfigurationListener()>();

        return;
    }

    public void clearPackageList()
    {
        com.android.server.wm.WindowProcessController r0;
        java.lang.Object r1;
        com.android.server.wm.ActivityTaskManagerService $r3;
        android.util.ArraySet $r4;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $r3 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: java.lang.Object mGlobalLockWithoutBoost>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.wm.WindowProcessController: android.util.ArraySet mPkgList>;

        virtualinvoke $r4.<android.util.ArraySet: void clear()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void clearPackagePreferredForHomeActivities()
    {
        com.android.server.wm.WindowProcessController r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        java.lang.StringBuilder r2;
        com.android.server.wm.ActivityTaskManagerService $r3;
        java.util.ArrayList $r4, $r5;
        int $i0, i2;
        java.lang.Object $r6;
        boolean $z0;
        java.lang.String $r8, $r10, $r12;
        android.content.pm.IPackageManager $r11;
        android.os.RemoteException $r13;
        java.lang.Throwable $r14;
        com.android.server.wm.ActivityRecord r15;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $r3 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i2 = $i0 - 1;

     label02:
        if i2 < 0 goto label08;

     label03:
        $r5 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r15 = (com.android.server.wm.ActivityRecord) $r6;

        $z0 = virtualinvoke r15.<com.android.server.wm.ActivityRecord: boolean isActivityTypeHome()>();

        if $z0 == 0 goto label07;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Clearing package preferred activities from ");

        $r8 = r15.<com.android.server.wm.ActivityRecord: java.lang.String packageName>;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("ActivityTaskManager", $r10);

     label04:
        $r11 = staticinvoke <android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>();

        $r12 = r15.<com.android.server.wm.ActivityRecord: java.lang.String packageName>;

        interfaceinvoke $r11.<android.content.pm.IPackageManager: void clearPackagePreferredActivities(java.lang.String)>($r12);

     label05:
        goto label07;

     label06:
        $r13 := @caughtexception;

     label07:
        i2 = i2 + -1;

        goto label02;

     label08:
        exitmonitor r1;

     label09:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label10:
        $r14 := @caughtexception;

     label11:
        exitmonitor r1;

     label12:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label04 with label10;
        catch android.os.RemoteException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    void clearProfilerIfNeeded()
    {
        com.android.server.wm.WindowProcessController r0;
        com.android.server.wm.WindowProcessListener $r1, $r3;
        com.android.server.wm.ActivityTaskManagerService $r2;
        com.android.server.wm.'-$$Lambda$9Kj79s-YFqaGRhFHazfExnbZExw' $r4;
        com.android.server.wm.ActivityTaskManagerService$H $r5;
        android.os.Message $r6;
        java.util.function.Consumer r7;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $r1 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.WindowProcessListener mListener>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        $r5 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityTaskManagerService$H mH>;

        $r4 = <com.android.server.wm._$$Lambda$9Kj79s_YFqaGRhFHazfExnbZExw: com.android.server.wm.'-$$Lambda$9Kj79s-YFqaGRhFHazfExnbZExw' INSTANCE>;

        $r3 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.WindowProcessListener mListener>;

        r7 = (java.util.function.Consumer) $r4;

        $r6 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(java.util.function.Consumer,java.lang.Object)>(r7, $r3);

        virtualinvoke $r5.<com.android.server.wm.ActivityTaskManagerService$H: boolean sendMessage(android.os.Message)>($r6);

        return;
    }

    void clearRecentTasks()
    {
        com.android.server.wm.WindowProcessController r0;
        java.util.ArrayList $r1, $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        com.android.server.wm.Task $r5;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $r1 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mRecentTasks>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r3 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mRecentTasks>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (com.android.server.wm.Task) $r4;

        virtualinvoke $r5.<com.android.server.wm.Task: void clearRootProcess()>();

        i1 = i1 + -1;

        goto label1;

     label2:
        $r2 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mRecentTasks>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

        return;
    }

    public int computeOomAdjFromActivities(int, com.android.server.wm.WindowProcessController$ComputeOomAdjCallback)
    {
        com.android.server.wm.WindowProcessController r0, $r9, $r18, $r23, $r24;
        java.lang.Object r1, $r8;
        int i0, $i2, $i3, i4, i5, i6, i7;
        com.android.server.wm.ActivityRecord r2;
        com.android.server.wm.ActivityTaskManagerService $r3;
        java.util.ArrayList $r4, $r7;
        com.android.server.wm.ActivityStack$ActivityState $r5, $r6, $r10, $r11, $r12, $r13, $r14, r27, r29;
        boolean $z0, $z1, $z2, z3, z4, z5, z6, $z7;
        java.lang.String $r22;
        java.lang.Throwable $r25;
        com.android.server.wm.WindowProcessController$ComputeOomAdjCallback r26;
        java.lang.StringBuilder r28;
        com.android.server.wm.Task r30;

        r0 := @this: com.android.server.wm.WindowProcessController;

        i4 := @parameter0: int;

        r26 := @parameter1: com.android.server.wm.WindowProcessController$ComputeOomAdjCallback;

        r27 = <com.android.server.wm.ActivityStack$ActivityState: com.android.server.wm.ActivityStack$ActivityState DESTROYED>;

        z3 = 1;

        z4 = 0;

        $r3 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: java.lang.Object mGlobalLockWithoutBoost>;

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

     label02:
        i5 = 0;

     label03:
        if i5 >= i0 goto label22;

     label04:
        $r7 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r2 = (com.android.server.wm.ActivityRecord) $r8;

        $r9 = r2.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowProcessController app>;

        if $r9 == r0 goto label08;

        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found activity ");

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in proc activity list using ");

        $r18 = r2.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowProcessController app>;

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" instead of expected ");

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r22 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ActivityTaskManager", $r22);

        $r23 = r2.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowProcessController app>;

        if $r23 == null goto label07;

     label05:
        r29 = r27;

        z5 = z3;

        z6 = z4;

        i6 = i4;

     label06:
        $r24 = r2.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowProcessController app>;

        $i3 = $r24.<com.android.server.wm.WindowProcessController: int mUid>;

        $i2 = r0.<com.android.server.wm.WindowProcessController: int mUid>;

        if $i3 != $i2 goto label21;

     label07:
        virtualinvoke r2.<com.android.server.wm.ActivityRecord: void setProcess(com.android.server.wm.WindowProcessController)>(r0);

     label08:
        $z7 = r2.<com.android.server.wm.ActivityRecord: boolean mVisibleRequested>;

        if $z7 == 0 goto label13;

        r30 = virtualinvoke r2.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

     label09:
        i6 = i4;

        if r30 == null goto label12;

        i6 = i4;

        if i4 <= 0 goto label12;

     label10:
        i7 = r30.<com.android.server.wm.Task: int mLayerRank>;

     label11:
        i6 = i4;

        if i7 < 0 goto label12;

        i6 = i4;

        if i4 <= i7 goto label12;

        i6 = i7;

     label12:
        z6 = 1;

        r29 = r27;

        z5 = z3;

        goto label21;

     label13:
        r29 = r27;

        z5 = z3;

        z6 = z4;

        i6 = i4;

     label14:
        $r10 = <com.android.server.wm.ActivityStack$ActivityState: com.android.server.wm.ActivityStack$ActivityState PAUSING>;

        if r27 == $r10 goto label21;

     label15:
        r29 = r27;

        z5 = z3;

        z6 = z4;

        i6 = i4;

     label16:
        $r11 = <com.android.server.wm.ActivityStack$ActivityState: com.android.server.wm.ActivityStack$ActivityState PAUSED>;

        if r27 == $r11 goto label21;

        $r13 = <com.android.server.wm.ActivityStack$ActivityState: com.android.server.wm.ActivityStack$ActivityState PAUSING>;

        $r12 = <com.android.server.wm.ActivityStack$ActivityState: com.android.server.wm.ActivityStack$ActivityState PAUSED>;

        $z0 = virtualinvoke r2.<com.android.server.wm.ActivityRecord: boolean isState(com.android.server.wm.ActivityStack$ActivityState,com.android.server.wm.ActivityStack$ActivityState)>($r13, $r12);

        if $z0 == 0 goto label18;

        r29 = <com.android.server.wm.ActivityStack$ActivityState: com.android.server.wm.ActivityStack$ActivityState PAUSING>;

     label17:
        z5 = z3;

        z6 = z4;

        i6 = i4;

        goto label21;

     label18:
        r29 = r27;

        z5 = z3;

        z6 = z4;

        i6 = i4;

     label19:
        $r14 = <com.android.server.wm.ActivityStack$ActivityState: com.android.server.wm.ActivityStack$ActivityState STOPPING>;

        $z1 = virtualinvoke r2.<com.android.server.wm.ActivityRecord: boolean isState(com.android.server.wm.ActivityStack$ActivityState)>($r14);

        if $z1 == 0 goto label21;

        r29 = <com.android.server.wm.ActivityStack$ActivityState: com.android.server.wm.ActivityStack$ActivityState STOPPING>;

        $z2 = r2.<com.android.server.wm.ActivityRecord: boolean finishing>;

        z5 = z3 & $z2;

     label20:
        i6 = i4;

        z6 = z4;

     label21:
        i5 = i5 + 1;

        r27 = r29;

        z3 = z5;

        z4 = z6;

        i4 = i6;

        goto label03;

     label22:
        exitmonitor r1;

     label23:
        if z4 == 0 goto label24;

        interfaceinvoke r26.<com.android.server.wm.WindowProcessController$ComputeOomAdjCallback: void onVisibleActivity()>();

        goto label27;

     label24:
        $r5 = <com.android.server.wm.ActivityStack$ActivityState: com.android.server.wm.ActivityStack$ActivityState PAUSING>;

        if r27 != $r5 goto label25;

        interfaceinvoke r26.<com.android.server.wm.WindowProcessController$ComputeOomAdjCallback: void onPausedActivity()>();

        goto label27;

     label25:
        $r6 = <com.android.server.wm.ActivityStack$ActivityState: com.android.server.wm.ActivityStack$ActivityState STOPPING>;

        if r27 != $r6 goto label26;

        interfaceinvoke r26.<com.android.server.wm.WindowProcessController$ComputeOomAdjCallback: void onStoppingActivity(boolean)>(z3);

        goto label27;

     label26:
        interfaceinvoke r26.<com.android.server.wm.WindowProcessController$ComputeOomAdjCallback: void onOtherActivity()>();

     label27:
        return i4;

     label28:
        $r25 := @caughtexception;

     label29:
        exitmonitor r1;

     label30:
        throw $r25;

        catch java.lang.Throwable from label01 to label02 with label28;
        catch java.lang.Throwable from label04 to label05 with label28;
        catch java.lang.Throwable from label06 to label07 with label28;
        catch java.lang.Throwable from label07 to label08 with label28;
        catch java.lang.Throwable from label08 to label09 with label28;
        catch java.lang.Throwable from label10 to label11 with label28;
        catch java.lang.Throwable from label14 to label15 with label28;
        catch java.lang.Throwable from label16 to label17 with label28;
        catch java.lang.Throwable from label19 to label20 with label28;
        catch java.lang.Throwable from label22 to label23 with label28;
        catch java.lang.Throwable from label29 to label30 with label28;
    }

    public int computeRelaunchReason()
    {
        com.android.server.wm.WindowProcessController r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r2;
        java.util.ArrayList $r3, $r4;
        int $i0, $i1, i2, i3;
        java.lang.Object $r5;
        java.lang.Throwable $r6;
        com.android.server.wm.ActivityRecord r7;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $r2 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i2 = $i0 - 1;

     label02:
        if i2 < 0 goto label06;

     label03:
        $r4 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r7 = (com.android.server.wm.ActivityRecord) $r5;

        $i1 = r7.<com.android.server.wm.ActivityRecord: int mRelaunchReason>;

        if $i1 == 0 goto label05;

        i3 = r7.<com.android.server.wm.ActivityRecord: int mRelaunchReason>;

        exitmonitor r1;

     label04:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return i3;

     label05:
        i2 = i2 + -1;

        goto label02;

     label06:
        exitmonitor r1;

     label07:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return 0;

     label08:
        $r6 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    android.app.ProfilerInfo createProfilerInfoIfNeeded()
    {
        com.android.server.wm.WindowProcessController r0;
        android.app.ProfilerInfo r1, $r9;
        com.android.server.wm.ActivityTaskManagerService $r3;
        java.lang.String $r4;
        boolean $z0;
        android.os.ParcelFileDescriptor $r5, $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $r3 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: android.app.ProfilerInfo mProfilerInfo>;

        if r1 == null goto label6;

        $r4 = r1.<android.app.ProfilerInfo: java.lang.String profileFile>;

        if $r4 == null goto label6;

        $z0 = specialinvoke r0.<com.android.server.wm.WindowProcessController: boolean shouldSetProfileProc()>();

        if $z0 != 0 goto label1;

        goto label6;

     label1:
        $r5 = r1.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd>;

        if $r5 == null goto label5;

     label2:
        $r6 = r1.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd>;

        $r7 = virtualinvoke $r6.<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup()>();

        r1.<android.app.ProfilerInfo: android.os.ParcelFileDescriptor profileFd> = $r7;

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        virtualinvoke r1.<android.app.ProfilerInfo: void closeFd()>();

     label5:
        $r9 = new android.app.ProfilerInfo;

        specialinvoke $r9.<android.app.ProfilerInfo: void <init>(android.app.ProfilerInfo)>(r1);

        return $r9;

     label6:
        return null;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public void dump(java.io.PrintWriter, java.lang.String)
    {
        com.android.server.wm.WindowProcessController r0;
        java.lang.String r1, $r10, $r16, $r22, $r25, $r32;
        com.android.server.wm.ActivityTaskManagerService $r2;
        java.util.ArrayList $r3, $r4, $r26, $r29, $r33, $r34;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7;
        java.lang.StringBuilder $r5, $r11, $r17, r39, r40;
        android.content.res.Configuration $r8, $r14, $r20;
        java.lang.Object $r30, $r35;
        java.lang.Throwable $r36;
        java.io.PrintWriter r37;
        com.android.server.wm.WindowManagerGlobalLock r38;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r37 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        r38 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r38;

     label01:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i0 <= 0 goto label05;

        virtualinvoke r37.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r37.<java.io.PrintWriter: void println(java.lang.String)>("Activities:");

     label02:
        i6 = 0;

     label03:
        $r33 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $i5 = virtualinvoke $r33.<java.util.ArrayList: int size()>();

        if i6 >= $i5 goto label05;

        virtualinvoke r37.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r37.<java.io.PrintWriter: void print(java.lang.String)>("  - ");

        $r34 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $r35 = virtualinvoke $r34.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        virtualinvoke r37.<java.io.PrintWriter: void println(java.lang.Object)>($r35);

     label04:
        i6 = i6 + 1;

        goto label03;

     label05:
        $r4 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mRecentTasks>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label09;

        r39 = new java.lang.StringBuilder;

        specialinvoke r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Recent Tasks:");

        $r25 = virtualinvoke r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r37.<java.io.PrintWriter: void println(java.lang.String)>($r25);

     label06:
        i7 = 0;

     label07:
        $r26 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mRecentTasks>;

        $i4 = virtualinvoke $r26.<java.util.ArrayList: int size()>();

        if i7 >= $i4 goto label09;

        r40 = new java.lang.StringBuilder;

        specialinvoke r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  - ");

        $r29 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mRecentTasks>;

        $r30 = virtualinvoke $r29.<java.util.ArrayList: java.lang.Object get(int)>(i7);

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r32 = virtualinvoke r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r37.<java.io.PrintWriter: void println(java.lang.String)>($r32);

     label08:
        i7 = i7 + 1;

        goto label07;

     label09:
        $i2 = r0.<com.android.server.wm.WindowProcessController: int mVrThreadTid>;

        if $i2 == 0 goto label10;

        virtualinvoke r37.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        virtualinvoke r37.<java.io.PrintWriter: void print(java.lang.String)>("mVrThreadTid=");

        $i3 = r0.<com.android.server.wm.WindowProcessController: int mVrThreadTid>;

        virtualinvoke r37.<java.io.PrintWriter: void println(int)>($i3);

     label10:
        exitmonitor r38;

     label11:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Configuration=");

        $r8 = virtualinvoke r0.<com.android.server.wm.WindowProcessController: android.content.res.Configuration getConfiguration()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r37.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" OverrideConfiguration=");

        $r14 = virtualinvoke r0.<com.android.server.wm.WindowProcessController: android.content.res.Configuration getRequestedOverrideConfiguration()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r37.<java.io.PrintWriter: void println(java.lang.String)>($r16);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLastReportedConfiguration=");

        $r20 = r0.<com.android.server.wm.WindowProcessController: android.content.res.Configuration mLastReportedConfiguration>;

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r37.<java.io.PrintWriter: void println(java.lang.String)>($r22);

        return;

     label12:
        $r36 := @caughtexception;

     label13:
        exitmonitor r38;

     label14:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r36;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label13 to label14 with label12;
    }

    void dumpDebug(android.util.proto.ProtoOutputStream, long)
    {
        com.android.server.wm.WindowProcessController r0;
        android.util.proto.ProtoOutputStream r1;
        long l0;
        com.android.server.wm.WindowProcessListener r2;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l0 := @parameter1: long;

        r2 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.WindowProcessListener mListener>;

        if r2 == null goto label1;

        interfaceinvoke r2.<com.android.server.wm.WindowProcessListener: void dumpDebug(android.util.proto.ProtoOutputStream,long)>(r1, l0);

     label1:
        return;
    }

    void finishActivities()
    {
        com.android.server.wm.WindowProcessController r0;
        com.android.server.wm.ActivityRecord r2;
        java.util.ArrayList $r3, $r4;
        int $i0, i2;
        java.lang.Object $r5;
        boolean $z0, $z1;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $r3 = new java.util.ArrayList;

        $r4 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        i2 = 0;

     label1:
        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i2 >= $i0 goto label3;

        $r5 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (com.android.server.wm.ActivityRecord) $r5;

        $z0 = r2.<com.android.server.wm.ActivityRecord: boolean finishing>;

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r2.<com.android.server.wm.ActivityRecord: boolean isInStackLocked()>();

        if $z1 == 0 goto label2;

        virtualinvoke r2.<com.android.server.wm.ActivityRecord: int finishIfPossible(java.lang.String,boolean)>("finish-heavy", 1);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    protected com.android.server.wm.ConfigurationContainer getChildAt(int)
    {
        com.android.server.wm.WindowProcessController r0;
        int i0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        i0 := @parameter0: int;

        return null;
    }

    protected int getChildCount()
    {
        com.android.server.wm.WindowProcessController r0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        return 0;
    }

    public long getCpuTime()
    {
        com.android.server.wm.WindowProcessController r0;
        com.android.server.wm.WindowProcessListener r1;
        long l0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r1 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.WindowProcessListener mListener>;

        if r1 == null goto label1;

        l0 = interfaceinvoke r1.<com.android.server.wm.WindowProcessListener: long getCpuTime()>();

        goto label2;

     label1:
        l0 = 0L;

     label2:
        return l0;
    }

    int getCurrentProcState()
    {
        com.android.server.wm.WindowProcessController r0;
        int $i0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $i0 = r0.<com.android.server.wm.WindowProcessController: int mCurProcState>;

        return $i0;
    }

    int getCurrentSchedulingGroup()
    {
        com.android.server.wm.WindowProcessController r0;
        int $i0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $i0 = r0.<com.android.server.wm.WindowProcessController: int mCurSchedGroup>;

        return $i0;
    }

    public void getDisplayContextsWithErrorDialogs(java.util.List)
    {
        com.android.server.wm.WindowProcessController r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.RootWindowContainer r2;
        com.android.server.wm.ActivityRecord r3;
        android.content.Context r4;
        com.android.server.wm.ActivityTaskManagerService $r5, $r6;
        com.android.server.wm.WindowManagerService $r7;
        int $i0, $i1, $i2, i3;
        java.util.ArrayList $r8, $r9;
        java.lang.Object $r10;
        boolean $z0, $z1;
        java.lang.Throwable $r11;
        java.util.List r12;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r12 := @parameter0: java.util.List;

        if r12 != null goto label01;

        return;

     label01:
        $r5 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        r1 = $r5.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label02:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r6 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        $r7 = $r6.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerService mWindowManager>;

        r2 = $r7.<com.android.server.wm.WindowManagerService: com.android.server.wm.RootWindowContainer mRoot>;

        $i0 = r0.<com.android.server.wm.WindowProcessController: int mPid>;

        virtualinvoke r2.<com.android.server.wm.RootWindowContainer: void getDisplayContextsWithNonToastVisibleWindows(int,java.util.List)>($i0, r12);

        $r8 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $i1 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        i3 = $i1 - 1;

     label03:
        if i3 < 0 goto label06;

     label04:
        $r9 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $r10 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r3 = (com.android.server.wm.ActivityRecord) $r10;

        $i2 = virtualinvoke r3.<com.android.server.wm.ActivityRecord: int getDisplayId()>();

        r4 = virtualinvoke r2.<com.android.server.wm.RootWindowContainer: android.content.Context getDisplayUiContext(int)>($i2);

        $z0 = r3.<com.android.server.wm.ActivityRecord: boolean mVisibleRequested>;

        if $z0 == 0 goto label05;

        $z1 = interfaceinvoke r12.<java.util.List: boolean contains(java.lang.Object)>(r4);

        if $z1 != 0 goto label05;

        interfaceinvoke r12.<java.util.List: boolean add(java.lang.Object)>(r4);

     label05:
        i3 = i3 + -1;

        goto label03;

     label06:
        exitmonitor r1;

     label07:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label08:
        $r11 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r11;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    int getDisplayId()
    {
        com.android.server.wm.WindowProcessController r0;
        int $i0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $i0 = r0.<com.android.server.wm.WindowProcessController: int mDisplayId>;

        return $i0;
    }

    long getFgInteractionTime()
    {
        com.android.server.wm.WindowProcessController r0;
        long $l0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $l0 = r0.<com.android.server.wm.WindowProcessController: long mFgInteractionTime>;

        return $l0;
    }

    public long getInputDispatchingTimeout()
    {
        com.android.server.wm.WindowProcessController r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r3;
        boolean $z0, $z1;
        java.lang.Throwable $r4;
        long l0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $r3 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $z0 = virtualinvoke r0.<com.android.server.wm.WindowProcessController: boolean isInstrumenting()>();

        if $z0 != 0 goto label4;

        $z1 = virtualinvoke r0.<com.android.server.wm.WindowProcessController: boolean isUsingWrapper()>();

        if $z1 == 0 goto label3;

     label2:
        goto label4;

     label3:
        l0 = 5000L;

        goto label5;

     label4:
        l0 = 60000L;

     label5:
        exitmonitor r1;

     label6:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return l0;

     label7:
        $r4 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    long getInteractionEventTime()
    {
        com.android.server.wm.WindowProcessController r0;
        long $l0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $l0 = r0.<com.android.server.wm.WindowProcessController: long mInteractionEventTime>;

        return $l0;
    }

    android.content.res.Configuration getLastReportedConfiguration()
    {
        com.android.server.wm.WindowProcessController r0;
        android.content.res.Configuration $r1;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $r1 = r0.<com.android.server.wm.WindowProcessController: android.content.res.Configuration mLastReportedConfiguration>;

        return $r1;
    }

    protected com.android.server.wm.ConfigurationContainer getParent()
    {
        com.android.server.wm.WindowProcessController r0;
        com.android.server.wm.ActivityTaskManagerService $r1;
        com.android.server.wm.RootWindowContainer $r2;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $r1 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        $r2 = $r1.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        return $r2;
    }

    public int getPid()
    {
        com.android.server.wm.WindowProcessController r0;
        int $i0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $i0 = r0.<com.android.server.wm.WindowProcessController: int mPid>;

        return $i0;
    }

    int getReportedProcState()
    {
        com.android.server.wm.WindowProcessController r0;
        int $i0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $i0 = r0.<com.android.server.wm.WindowProcessController: int mRepProcState>;

        return $i0;
    }

    java.lang.String getRequiredAbi()
    {
        com.android.server.wm.WindowProcessController r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $r1 = r0.<com.android.server.wm.WindowProcessController: java.lang.String mRequiredAbi>;

        return $r1;
    }

    android.app.IApplicationThread getThread()
    {
        com.android.server.wm.WindowProcessController r0;
        android.app.IApplicationThread $r1;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $r1 = r0.<com.android.server.wm.WindowProcessController: android.app.IApplicationThread mThread>;

        return $r1;
    }

    long getWhenUnimportant()
    {
        com.android.server.wm.WindowProcessController r0;
        long $l0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $l0 = r0.<com.android.server.wm.WindowProcessController: long mWhenUnimportant>;

        return $l0;
    }

    public boolean hasActivities()
    {
        com.android.server.wm.WindowProcessController r0;
        java.lang.Object r1;
        com.android.server.wm.ActivityTaskManagerService $r3;
        java.util.ArrayList $r4;
        boolean $z0, z1;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $r3 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: java.lang.Object mGlobalLockWithoutBoost>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label3;

     label2:
        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        exitmonitor r1;

     label5:
        return z1;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public boolean hasActivitiesOrRecentTasks()
    {
        com.android.server.wm.WindowProcessController r0;
        java.lang.Object r1;
        com.android.server.wm.ActivityTaskManagerService $r3;
        java.util.ArrayList $r4, $r5;
        boolean $z0, $z1, z2;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $r3 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: java.lang.Object mGlobalLockWithoutBoost>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label4;

        $r5 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mRecentTasks>;

        $z1 = virtualinvoke $r5.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 != 0 goto label3;

     label2:
        goto label4;

     label3:
        z2 = 0;

        goto label5;

     label4:
        z2 = 1;

     label5:
        exitmonitor r1;

     label6:
        return z2;

     label7:
        $r6 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    boolean hasClientActivities()
    {
        com.android.server.wm.WindowProcessController r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $z0 = r0.<com.android.server.wm.WindowProcessController: boolean mHasClientActivities>;

        return $z0;
    }

    boolean hasForegroundActivities()
    {
        com.android.server.wm.WindowProcessController r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $z0 = r0.<com.android.server.wm.WindowProcessController: boolean mHasForegroundActivities>;

        return $z0;
    }

    boolean hasForegroundServices()
    {
        com.android.server.wm.WindowProcessController r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $z0 = r0.<com.android.server.wm.WindowProcessController: boolean mHasForegroundServices>;

        return $z0;
    }

    boolean hasOverlayUi()
    {
        com.android.server.wm.WindowProcessController r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $z0 = r0.<com.android.server.wm.WindowProcessController: boolean mHasOverlayUi>;

        return $z0;
    }

    boolean hasPendingUiClean()
    {
        com.android.server.wm.WindowProcessController r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $z0 = r0.<com.android.server.wm.WindowProcessController: boolean mPendingUiClean>;

        return $z0;
    }

    public boolean hasRecentTasks()
    {
        com.android.server.wm.WindowProcessController r0;
        java.lang.Object r1;
        com.android.server.wm.ActivityTaskManagerService $r3;
        java.util.ArrayList $r4;
        boolean $z0, z1;
        java.lang.Throwable $r5;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $r3 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: java.lang.Object mGlobalLockWithoutBoost>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mRecentTasks>;

        $z0 = virtualinvoke $r4.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label3;

     label2:
        z1 = 1;

        goto label4;

     label3:
        z1 = 0;

     label4:
        exitmonitor r1;

     label5:
        return z1;

     label6:
        $r5 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    boolean hasResumedActivity()
    {
        com.android.server.wm.WindowProcessController r0;
        java.util.ArrayList $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        com.android.server.wm.ActivityStack$ActivityState $r4;
        com.android.server.wm.ActivityRecord $r5;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $r1 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r2 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (com.android.server.wm.ActivityRecord) $r3;

        $r4 = <com.android.server.wm.ActivityStack$ActivityState: com.android.server.wm.ActivityStack$ActivityState RESUMED>;

        $z0 = virtualinvoke $r5.<com.android.server.wm.ActivityRecord: boolean isState(com.android.server.wm.ActivityStack$ActivityState)>($r4);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return 0;
    }

    public boolean hasRunningActivity(java.lang.String)
    {
        com.android.server.wm.WindowProcessController r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r2;
        java.util.ArrayList $r3, $r4;
        int $i0, i1;
        java.lang.Object $r5;
        com.android.server.wm.ActivityRecord $r6;
        java.lang.String $r7, r9;
        boolean $z0;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r9 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r3 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label02:
        if i1 < 0 goto label06;

     label03:
        $r4 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r6 = (com.android.server.wm.ActivityRecord) $r5;

        $r7 = $r6.<com.android.server.wm.ActivityRecord: java.lang.String packageName>;

        $z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 == 0 goto label05;

        exitmonitor r1;

     label04:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return 1;

     label05:
        i1 = i1 + -1;

        goto label02;

     label06:
        exitmonitor r1;

     label07:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return 0;

     label08:
        $r8 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    boolean hasStartedActivity(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.WindowProcessController r0;
        com.android.server.wm.ActivityRecord r1, r2;
        java.util.ArrayList $r3, $r4;
        int $i0, i1;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        $r3 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label4;

        $r4 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.server.wm.ActivityRecord) $r5;

        if r1 != r2 goto label2;

        goto label3;

     label2:
        $z0 = r2.<com.android.server.wm.ActivityRecord: boolean stopped>;

        if $z0 != 0 goto label3;

        return 1;

     label3:
        i1 = i1 + -1;

        goto label1;

     label4:
        return 0;
    }

    boolean hasThread()
    {
        com.android.server.wm.WindowProcessController r0;
        android.app.IApplicationThread $r1;
        boolean z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $r1 = r0.<com.android.server.wm.WindowProcessController: android.app.IApplicationThread mThread>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    boolean hasTopUi()
    {
        com.android.server.wm.WindowProcessController r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $z0 = r0.<com.android.server.wm.WindowProcessController: boolean mHasTopUi>;

        return $z0;
    }

    public boolean hasVisibleActivities()
    {
        com.android.server.wm.WindowProcessController r0;
        java.lang.Object r1, $r6;
        com.android.server.wm.ActivityTaskManagerService $r3;
        java.util.ArrayList $r4, $r5;
        int $i0, i1;
        com.android.server.wm.ActivityRecord $r7;
        boolean $z0;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $r3 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: java.lang.Object mGlobalLockWithoutBoost>;

        entermonitor r1;

     label01:
        $r4 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label02:
        if i1 < 0 goto label06;

     label03:
        $r5 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r7 = (com.android.server.wm.ActivityRecord) $r6;

        $z0 = $r7.<com.android.server.wm.ActivityRecord: boolean mVisibleRequested>;

        if $z0 == 0 goto label05;

        exitmonitor r1;

     label04:
        return 1;

     label05:
        i1 = i1 + -1;

        goto label02;

     label06:
        exitmonitor r1;

     label07:
        return 0;

     label08:
        $r8 := @caughtexception;

     label09:
        exitmonitor r1;

     label10:
        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label04 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    boolean isCrashing()
    {
        com.android.server.wm.WindowProcessController r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $z0 = r0.<com.android.server.wm.WindowProcessController: boolean mCrashing>;

        return $z0;
    }

    boolean isDebugging()
    {
        com.android.server.wm.WindowProcessController r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $z0 = r0.<com.android.server.wm.WindowProcessController: boolean mDebugging>;

        return $z0;
    }

    public boolean isHomeProcess()
    {
        com.android.server.wm.WindowProcessController r0, $r5;
        java.lang.Object r1;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4;
        java.lang.Throwable $r6;
        boolean z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $r3 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: java.lang.Object mGlobalLockWithoutBoost>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        $r5 = $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mHomeProcess>;

        if r0 != $r5 goto label3;

     label2:
        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r1;

     label5:
        return z0;

     label6:
        $r6 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    boolean isInstrumenting()
    {
        com.android.server.wm.WindowProcessController r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $z0 = r0.<com.android.server.wm.WindowProcessController: boolean mInstrumenting>;

        return $z0;
    }

    public boolean isInterestingToUser()
    {
        com.android.server.wm.WindowProcessController r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        int i0, i1;
        com.android.server.wm.ActivityTaskManagerService $r3;
        java.util.ArrayList $r4, $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        com.android.server.wm.ActivityRecord $r7;
        java.lang.Throwable $r8;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $r3 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label01:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

     label02:
        i1 = 0;

     label03:
        if i1 >= i0 goto label07;

     label04:
        $r5 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r7 = (com.android.server.wm.ActivityRecord) $r6;

        $z1 = virtualinvoke $r7.<com.android.server.wm.ActivityRecord: boolean isInterestingToUserLocked()>();

        if $z1 == 0 goto label06;

        exitmonitor r1;

     label05:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return 1;

     label06:
        i1 = i1 + 1;

        goto label03;

     label07:
        $z0 = specialinvoke r0.<com.android.server.wm.WindowProcessController: boolean isEmbedded()>();

        if $z0 == 0 goto label09;

        exitmonitor r1;

     label08:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return 1;

     label09:
        exitmonitor r1;

     label10:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return 0;

     label11:
        $r8 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    boolean isNotResponding()
    {
        com.android.server.wm.WindowProcessController r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $z0 = r0.<com.android.server.wm.WindowProcessController: boolean mNotResponding>;

        return $z0;
    }

    boolean isPerceptible()
    {
        com.android.server.wm.WindowProcessController r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $z0 = r0.<com.android.server.wm.WindowProcessController: boolean mPerceptible>;

        return $z0;
    }

    boolean isPersistent()
    {
        com.android.server.wm.WindowProcessController r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $z0 = r0.<com.android.server.wm.WindowProcessController: boolean mPersistent>;

        return $z0;
    }

    public boolean isPreviousProcess()
    {
        com.android.server.wm.WindowProcessController r0, $r5;
        java.lang.Object r1;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4;
        java.lang.Throwable $r6;
        boolean z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $r3 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: java.lang.Object mGlobalLockWithoutBoost>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        $r5 = $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessController mPreviousProcess>;

        if r0 != $r5 goto label3;

     label2:
        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r1;

     label5:
        return z0;

     label6:
        $r6 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    boolean isRemoved()
    {
        com.android.server.wm.WindowProcessController r0;
        com.android.server.wm.WindowProcessListener r1;
        boolean z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r1 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.WindowProcessListener mListener>;

        if r1 != null goto label1;

        z0 = 0;

        goto label2;

     label1:
        z0 = interfaceinvoke r1.<com.android.server.wm.WindowProcessListener: boolean isRemoved()>();

     label2:
        return z0;
    }

    boolean isUsingWrapper()
    {
        com.android.server.wm.WindowProcessController r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $z0 = r0.<com.android.server.wm.WindowProcessController: boolean mUsingWrapper>;

        return $z0;
    }

    void makeFinishingForProcessRemoved()
    {
        com.android.server.wm.WindowProcessController r0;
        java.util.ArrayList $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        com.android.server.wm.ActivityRecord $r4;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $r1 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label2;

        $r2 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (com.android.server.wm.ActivityRecord) $r3;

        virtualinvoke $r4.<com.android.server.wm.ActivityRecord: void makeFinishingLocked()>();

        i1 = i1 + -1;

        goto label1;

     label2:
        return;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        com.android.server.wm.WindowProcessController r0;
        android.content.res.Configuration r1;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<com.android.server.wm.ConfigurationContainer: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        specialinvoke r0.<com.android.server.wm.WindowProcessController: void updateConfiguration()>();

        return;
    }

    public void onMergedOverrideConfigurationChanged(android.content.res.Configuration)
    {
        com.android.server.wm.WindowProcessController r0;
        android.content.res.Configuration r1, $r2, $r3, $r5;
        android.app.WindowConfiguration $r4;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r1 := @parameter0: android.content.res.Configuration;

        $r2 = r0.<com.android.server.wm.WindowProcessController: android.content.res.Configuration mNewOverrideConfig>;

        virtualinvoke $r2.<android.content.res.Configuration: void setTo(android.content.res.Configuration)>(r1);

        $r3 = r0.<com.android.server.wm.WindowProcessController: android.content.res.Configuration mNewOverrideConfig>;

        $r4 = $r3.<android.content.res.Configuration: android.app.WindowConfiguration windowConfiguration>;

        virtualinvoke $r4.<android.app.WindowConfiguration: void setActivityType(int)>(0);

        $r5 = r0.<com.android.server.wm.WindowProcessController: android.content.res.Configuration mNewOverrideConfig>;

        specialinvoke r0.<com.android.server.wm.ConfigurationContainer: void onRequestedOverrideConfigurationChanged(android.content.res.Configuration)>($r5);

        return;
    }

    public void onProcCachedStateChanged(boolean)
    {
        com.android.server.wm.WindowProcessController r0;
        boolean z0;
        java.lang.Object r1;
        com.android.server.wm.ActivityTaskManagerService $r2;
        android.content.res.Configuration $r3, r5;
        java.lang.Throwable $r4;

        r0 := @this: com.android.server.wm.WindowProcessController;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label7;

        $r2 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: java.lang.Object mGlobalLockWithoutBoost>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.server.wm.WindowProcessController: android.content.res.Configuration mPendingConfiguration>;

        if $r3 == null goto label2;

        r5 = r0.<com.android.server.wm.WindowProcessController: android.content.res.Configuration mPendingConfiguration>;

        r0.<com.android.server.wm.WindowProcessController: android.content.res.Configuration mPendingConfiguration> = null;

        specialinvoke r0.<com.android.server.wm.WindowProcessController: void dispatchConfigurationChange(android.content.res.Configuration)>(r5);

     label2:
        exitmonitor r1;

     label3:
        goto label7;

     label4:
        $r4 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void onServiceStarted(android.content.pm.ServiceInfo)
    {
        com.android.server.wm.WindowProcessController r0;
        int i0;
        boolean $z0, $z1, $z2;
        android.content.pm.ServiceInfo r1;
        java.lang.String r2;
        byte b1;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r1 := @parameter0: android.content.pm.ServiceInfo;

        r2 = r1.<android.content.pm.ServiceInfo: java.lang.String permission>;

        if r2 != null goto label1;

        return;

     label1:
        b1 = -1;

        i0 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        if i0 == -769871357 goto label5;

        if i0 == 1412417858 goto label4;

        if i0 == 1448369304 goto label3;

     label2:
        goto label6;

     label3:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("android.permission.BIND_INPUT_METHOD");

        if $z2 == 0 goto label2;

        b1 = 0;

        goto label6;

     label4:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("android.permission.BIND_ACCESSIBILITY_SERVICE");

        if $z1 == 0 goto label2;

        b1 = 1;

        goto label6;

     label5:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("android.permission.BIND_VOICE_INTERACTION");

        if $z0 == 0 goto label2;

        b1 = 2;

     label6:
        if b1 == 0 goto label7;

        if b1 == 1 goto label8;

        if b1 == 2 goto label8;

        goto label9;

     label7:
        r0.<com.android.server.wm.WindowProcessController: boolean mHasImeService> = 1;

     label8:
        r0.<com.android.server.wm.WindowProcessController: boolean mIsActivityConfigOverrideAllowed> = 0;

     label9:
        return;
    }

    void onStartActivity(int, android.content.pm.ActivityInfo)
    {
        com.android.server.wm.WindowProcessController r0;
        int i0, $i1, $i2, $i4, $i5;
        com.android.server.wm.WindowProcessListener $r1, $r3;
        com.android.server.wm.'-$$Lambda$VY87MmFWaCLMkNa2qHGaPrThyrI' $r2;
        java.lang.Integer $r4;
        boolean $z0, $z2;
        java.lang.Boolean $r5;
        android.content.pm.ApplicationInfo $r6;
        long $l3;
        java.lang.Long $r7;
        com.android.server.wm.ActivityTaskManagerService $r8, $r10;
        com.android.server.wm.ActivityTaskManagerService$H $r9;
        android.app.ActivityManagerInternal $r11;
        java.lang.String $r12, $r13, r15;
        android.content.pm.ActivityInfo r14;
        android.os.Message r16;
        com.android.internal.util.function.QuintConsumer r17;

        r0 := @this: com.android.server.wm.WindowProcessController;

        i0 := @parameter0: int;

        r14 := @parameter1: android.content.pm.ActivityInfo;

        $r1 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.WindowProcessListener mListener>;

        if $r1 != null goto label1;

        return;

     label1:
        r15 = null;

        $i1 = r14.<android.content.pm.ActivityInfo: int flags>;

        $i2 = $i1 & 1;

        if $i2 == 0 goto label2;

        $r13 = "android";

        $r12 = r14.<android.content.pm.ActivityInfo: java.lang.String packageName>;

        $z2 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z2 != 0 goto label3;

     label2:
        r15 = r14.<android.content.pm.ActivityInfo: java.lang.String packageName>;

     label3:
        if i0 != 2 goto label4;

        $r10 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        $r11 = $r10.<com.android.server.wm.ActivityTaskManagerService: android.app.ActivityManagerInternal mAmInternal>;

        $i5 = r0.<com.android.server.wm.WindowProcessController: int mUid>;

        $i4 = r0.<com.android.server.wm.WindowProcessController: int mPid>;

        virtualinvoke $r11.<android.app.ActivityManagerInternal: void addPendingTopUid(int,int)>($i5, $i4);

     label4:
        $r2 = <com.android.server.wm._$$Lambda$VY87MmFWaCLMkNa2qHGaPrThyrI: com.android.server.wm.'-$$Lambda$VY87MmFWaCLMkNa2qHGaPrThyrI' INSTANCE>;

        $r3 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.WindowProcessListener mListener>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = specialinvoke r0.<com.android.server.wm.WindowProcessController: boolean shouldSetProfileProc()>();

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r6 = r14.<android.content.pm.ActivityInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $l3 = $r6.<android.content.pm.ApplicationInfo: long longVersionCode>;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        r17 = (com.android.internal.util.function.QuintConsumer) $r2;

        r16 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(com.android.internal.util.function.QuintConsumer,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r17, $r3, $r4, $r5, r15, $r7);

        $r8 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        $r9 = $r8.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityTaskManagerService$H mH>;

        virtualinvoke $r9.<com.android.server.wm.ActivityTaskManagerService$H: boolean sendMessageAtFrontOfQueue(android.os.Message)>(r16);

        return;
    }

    public void onTopProcChanged()
    {
        com.android.server.wm.WindowProcessController r0;
        java.lang.Object r1;
        com.android.server.wm.ActivityTaskManagerService $r3, $r4;
        com.android.server.wm.VrController $r5;
        java.lang.Throwable $r6;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $r3 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: java.lang.Object mGlobalLockWithoutBoost>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        $r5 = $r4.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.VrController mVrController>;

        virtualinvoke $r5.<com.android.server.wm.VrController: void onTopProcChangedLocked(com.android.server.wm.WindowProcessController)>(r0);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    void postPendingUiCleanMsg(boolean)
    {
        com.android.server.wm.WindowProcessController r0;
        boolean z0;
        android.os.Message r1;
        com.android.server.wm.WindowProcessListener $r2, $r4;
        com.android.server.wm.'-$$Lambda$zP5AObb0-v-Zzwr-v8NXOg4Yt1c' $r3;
        java.lang.Boolean $r5;
        com.android.server.wm.ActivityTaskManagerService $r6;
        com.android.server.wm.ActivityTaskManagerService$H $r7;
        java.util.function.BiConsumer r8;

        r0 := @this: com.android.server.wm.WindowProcessController;

        z0 := @parameter0: boolean;

        $r2 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.WindowProcessListener mListener>;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = <com.android.server.wm._$$Lambda$zP5AObb0_v_Zzwr_v8NXOg4Yt1c: com.android.server.wm.'-$$Lambda$zP5AObb0-v-Zzwr-v8NXOg4Yt1c' INSTANCE>;

        $r4 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.WindowProcessListener mListener>;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r8 = (java.util.function.BiConsumer) $r3;

        r1 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(java.util.function.BiConsumer,java.lang.Object,java.lang.Object)>(r8, $r4, $r5);

        $r6 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        $r7 = $r6.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityTaskManagerService$H mH>;

        virtualinvoke $r7.<com.android.server.wm.ActivityTaskManagerService$H: boolean sendMessage(android.os.Message)>(r1);

        return;
    }

    void registerDisplayConfigurationListener(com.android.server.wm.DisplayContent)
    {
        com.android.server.wm.WindowProcessController r0;
        com.android.server.wm.DisplayContent r1;
        int $i0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r1 := @parameter0: com.android.server.wm.DisplayContent;

        if r1 != null goto label1;

        return;

     label1:
        virtualinvoke r0.<com.android.server.wm.WindowProcessController: void unregisterDisplayConfigurationListener()>();

        specialinvoke r0.<com.android.server.wm.WindowProcessController: void unregisterActivityConfigurationListener()>();

        $i0 = r1.<com.android.server.wm.DisplayContent: int mDisplayId>;

        r0.<com.android.server.wm.WindowProcessController: int mDisplayId> = $i0;

        virtualinvoke r1.<com.android.server.wm.DisplayContent: void registerConfigurationChangeListener(com.android.server.wm.ConfigurationContainerListener)>(r0);

        return;
    }

    boolean registeredForActivityConfigChanges()
    {
        com.android.server.wm.WindowProcessController r0;
        com.android.server.wm.ActivityRecord $r1;
        boolean z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $r1 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityRecord mConfigActivityRecord>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    boolean registeredForDisplayConfigChanges()
    {
        com.android.server.wm.WindowProcessController r0;
        int $i0;
        boolean z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $i0 = r0.<com.android.server.wm.WindowProcessController: int mDisplayId>;

        if $i0 == -1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    void releaseSomeActivities(java.lang.String)
    {
        com.android.server.wm.WindowProcessController r0;
        java.lang.String r1;
        com.android.server.wm.ActivityRecord r2, $r6;
        int i0, $i1, $i2, i3, i4;
        java.util.ArrayList $r3, $r7, r18, r19, r20;
        com.android.server.wm.'-$$Lambda$h-x5kpt7iRsCHGk24gs4Sab2qLw' $r4;
        java.lang.Object $r5, $r8;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.android.server.wm.ActivityStack$ActivityState $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        com.android.server.wm.WindowContainer $r16;
        java.util.Comparator r21;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r1 := @parameter0: java.lang.String;

        r18 = null;

        i3 = 0;

     label1:
        $r3 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i3 >= $i1 goto label7;

        $r7 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r2 = (com.android.server.wm.ActivityRecord) $r8;

        $z1 = r2.<com.android.server.wm.ActivityRecord: boolean finishing>;

        if $z1 != 0 goto label6;

        $r10 = <com.android.server.wm.ActivityStack$ActivityState: com.android.server.wm.ActivityStack$ActivityState DESTROYING>;

        $r9 = <com.android.server.wm.ActivityStack$ActivityState: com.android.server.wm.ActivityStack$ActivityState DESTROYED>;

        $z2 = virtualinvoke r2.<com.android.server.wm.ActivityRecord: boolean isState(com.android.server.wm.ActivityStack$ActivityState,com.android.server.wm.ActivityStack$ActivityState)>($r10, $r9);

        if $z2 == 0 goto label2;

        goto label6;

     label2:
        r19 = r18;

        $z3 = r2.<com.android.server.wm.ActivityRecord: boolean mVisibleRequested>;

        if $z3 != 0 goto label5;

        r19 = r18;

        $z4 = r2.<com.android.server.wm.ActivityRecord: boolean stopped>;

        if $z4 == 0 goto label5;

        r19 = r18;

        $z5 = virtualinvoke r2.<com.android.server.wm.ActivityRecord: boolean hasSavedState()>();

        if $z5 == 0 goto label5;

        r19 = r18;

        $z6 = virtualinvoke r2.<com.android.server.wm.ActivityRecord: boolean isDestroyable()>();

        if $z6 == 0 goto label5;

        $r15 = <com.android.server.wm.ActivityStack$ActivityState: com.android.server.wm.ActivityStack$ActivityState STARTED>;

        $r14 = <com.android.server.wm.ActivityStack$ActivityState: com.android.server.wm.ActivityStack$ActivityState RESUMED>;

        $r13 = <com.android.server.wm.ActivityStack$ActivityState: com.android.server.wm.ActivityStack$ActivityState PAUSING>;

        $r12 = <com.android.server.wm.ActivityStack$ActivityState: com.android.server.wm.ActivityStack$ActivityState PAUSED>;

        $r11 = <com.android.server.wm.ActivityStack$ActivityState: com.android.server.wm.ActivityStack$ActivityState STOPPING>;

        $z7 = virtualinvoke r2.<com.android.server.wm.ActivityRecord: boolean isState(com.android.server.wm.ActivityStack$ActivityState,com.android.server.wm.ActivityStack$ActivityState,com.android.server.wm.ActivityStack$ActivityState,com.android.server.wm.ActivityStack$ActivityState,com.android.server.wm.ActivityStack$ActivityState)>($r15, $r14, $r13, $r12, $r11);

        if $z7 == 0 goto label3;

        r19 = r18;

        goto label5;

     label3:
        r19 = r18;

        $r16 = virtualinvoke r2.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowContainer getParent()>();

        if $r16 == null goto label5;

        r19 = r18;

        if r18 != null goto label4;

        r20 = new java.util.ArrayList;

        specialinvoke r20.<java.util.ArrayList: void <init>()>();

        r19 = r20;

     label4:
        virtualinvoke r19.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

     label5:
        i3 = i3 + 1;

        r18 = r19;

        goto label1;

     label6:
        return;

     label7:
        if r18 == null goto label9;

        $r4 = <com.android.server.wm._$$Lambda$h_x5kpt7iRsCHGk24gs4Sab2qLw: com.android.server.wm.'-$$Lambda$h-x5kpt7iRsCHGk24gs4Sab2qLw' INSTANCE>;

        r21 = (java.util.Comparator) $r4;

        virtualinvoke r18.<java.util.ArrayList: void sort(java.util.Comparator)>(r21);

        $i2 = virtualinvoke r18.<java.util.ArrayList: int size()>();

        i4 = staticinvoke <java.lang.Math: int max(int,int)>($i2, 1);

     label8:
        $r5 = virtualinvoke r18.<java.util.ArrayList: java.lang.Object remove(int)>(0);

        $r6 = (com.android.server.wm.ActivityRecord) $r5;

        virtualinvoke $r6.<com.android.server.wm.ActivityRecord: boolean destroyImmediately(boolean,java.lang.String)>(1, r1);

        i0 = i4 - 1;

        i4 = i0;

        if i0 > 0 goto label8;

     label9:
        return;
    }

    void removeActivity(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.WindowProcessController r0;
        com.android.server.wm.ActivityRecord r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        $r2 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        specialinvoke r0.<com.android.server.wm.WindowProcessController: void updateActivityConfigurationListener()>();

        return;
    }

    void removeHostActivity(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.WindowProcessController r0;
        com.android.server.wm.ActivityRecord r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        $r2 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mHostActivities>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    void removeRecentTask(com.android.server.wm.Task)
    {
        com.android.server.wm.WindowProcessController r0;
        com.android.server.wm.Task r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r1 := @parameter0: com.android.server.wm.Task;

        $r2 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mRecentTasks>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void setAllowBackgroundActivityStarts(boolean)
    {
        com.android.server.wm.WindowProcessController r0;
        boolean z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        z0 := @parameter0: boolean;

        r0.<com.android.server.wm.WindowProcessController: boolean mAllowBackgroundActivityStarts> = z0;

        return;
    }

    public void setBoundClientUids(android.util.ArraySet)
    {
        com.android.server.wm.WindowProcessController r0;
        android.util.ArraySet r1;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r1 := @parameter0: android.util.ArraySet;

        r0.<com.android.server.wm.WindowProcessController: android.util.ArraySet mBoundClientUids> = r1;

        return;
    }

    public void setCrashing(boolean)
    {
        com.android.server.wm.WindowProcessController r0;
        boolean z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        z0 := @parameter0: boolean;

        r0.<com.android.server.wm.WindowProcessController: boolean mCrashing> = z0;

        return;
    }

    public void setCurrentProcState(int)
    {
        com.android.server.wm.WindowProcessController r0;
        int i0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        i0 := @parameter0: int;

        r0.<com.android.server.wm.WindowProcessController: int mCurProcState> = i0;

        return;
    }

    public void setCurrentSchedulingGroup(int)
    {
        com.android.server.wm.WindowProcessController r0;
        int i0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        i0 := @parameter0: int;

        r0.<com.android.server.wm.WindowProcessController: int mCurSchedGroup> = i0;

        return;
    }

    public void setDebugging(boolean)
    {
        com.android.server.wm.WindowProcessController r0;
        boolean z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        z0 := @parameter0: boolean;

        r0.<com.android.server.wm.WindowProcessController: boolean mDebugging> = z0;

        return;
    }

    public void setFgInteractionTime(long)
    {
        com.android.server.wm.WindowProcessController r0;
        long l0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        l0 := @parameter0: long;

        r0.<com.android.server.wm.WindowProcessController: long mFgInteractionTime> = l0;

        return;
    }

    public void setHasClientActivities(boolean)
    {
        com.android.server.wm.WindowProcessController r0;
        boolean z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        z0 := @parameter0: boolean;

        r0.<com.android.server.wm.WindowProcessController: boolean mHasClientActivities> = z0;

        return;
    }

    public void setHasForegroundActivities(boolean)
    {
        com.android.server.wm.WindowProcessController r0;
        boolean z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        z0 := @parameter0: boolean;

        r0.<com.android.server.wm.WindowProcessController: boolean mHasForegroundActivities> = z0;

        return;
    }

    public void setHasForegroundServices(boolean)
    {
        com.android.server.wm.WindowProcessController r0;
        boolean z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        z0 := @parameter0: boolean;

        r0.<com.android.server.wm.WindowProcessController: boolean mHasForegroundServices> = z0;

        return;
    }

    public void setHasOverlayUi(boolean)
    {
        com.android.server.wm.WindowProcessController r0;
        boolean z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        z0 := @parameter0: boolean;

        r0.<com.android.server.wm.WindowProcessController: boolean mHasOverlayUi> = z0;

        return;
    }

    public void setHasTopUi(boolean)
    {
        com.android.server.wm.WindowProcessController r0;
        boolean z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        z0 := @parameter0: boolean;

        r0.<com.android.server.wm.WindowProcessController: boolean mHasTopUi> = z0;

        return;
    }

    public void setInstrumenting(boolean, boolean)
    {
        com.android.server.wm.WindowProcessController r0;
        boolean z0, z1;

        r0 := @this: com.android.server.wm.WindowProcessController;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        r0.<com.android.server.wm.WindowProcessController: boolean mInstrumenting> = z0;

        r0.<com.android.server.wm.WindowProcessController: boolean mInstrumentingWithBackgroundActivityStartPrivileges> = z1;

        return;
    }

    public void setInteractionEventTime(long)
    {
        com.android.server.wm.WindowProcessController r0;
        long l0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        l0 := @parameter0: long;

        r0.<com.android.server.wm.WindowProcessController: long mInteractionEventTime> = l0;

        return;
    }

    void setLastActivityFinishTimeIfNeeded(long)
    {
        com.android.server.wm.WindowProcessController r0;
        long l0, $l1;
        byte $b2;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        l0 := @parameter0: long;

        $l1 = r0.<com.android.server.wm.WindowProcessController: long mLastActivityFinishTime>;

        $b2 = l0 cmp $l1;

        if $b2 <= 0 goto label2;

        $z0 = specialinvoke r0.<com.android.server.wm.WindowProcessController: boolean hasActivityInVisibleTask()>();

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        r0.<com.android.server.wm.WindowProcessController: long mLastActivityFinishTime> = l0;

        return;

     label2:
        return;
    }

    void setLastActivityLaunchTime(long)
    {
        com.android.server.wm.WindowProcessController r0;
        long l0, l1, $l4;
        byte $b2, $b3;
        java.lang.StringBuilder $r2;
        java.lang.String $r8;

        r0 := @this: com.android.server.wm.WindowProcessController;

        l0 := @parameter0: long;

        l1 = r0.<com.android.server.wm.WindowProcessController: long mLastActivityLaunchTime>;

        $b2 = l0 cmp l1;

        if $b2 > 0 goto label2;

        $b3 = l0 cmp l1;

        if $b3 >= 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tried to set launchTime (");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") < mLastActivityLaunchTime (");

        $l4 = r0.<com.android.server.wm.WindowProcessController: long mLastActivityLaunchTime>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("ActivityTaskManager", $r8);

     label1:
        return;

     label2:
        r0.<com.android.server.wm.WindowProcessController: long mLastActivityLaunchTime> = l0;

        return;
    }

    public void setNotResponding(boolean)
    {
        com.android.server.wm.WindowProcessController r0;
        boolean z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        z0 := @parameter0: boolean;

        r0.<com.android.server.wm.WindowProcessController: boolean mNotResponding> = z0;

        return;
    }

    public void setPendingUiClean(boolean)
    {
        com.android.server.wm.WindowProcessController r0;
        boolean z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        z0 := @parameter0: boolean;

        r0.<com.android.server.wm.WindowProcessController: boolean mPendingUiClean> = z0;

        return;
    }

    void setPendingUiCleanAndForceProcessStateUpTo(int)
    {
        com.android.server.wm.WindowProcessController r0;
        int i0;
        android.os.Message r1;
        com.android.server.wm.WindowProcessListener $r2, $r4;
        com.android.server.wm.'-$$Lambda$LI60v4Y5Me6khV12IZ-zEQtSx7A' $r3;
        java.lang.Integer $r5;
        com.android.server.wm.ActivityTaskManagerService $r6;
        com.android.server.wm.ActivityTaskManagerService$H $r7;
        java.util.function.BiConsumer r8;

        r0 := @this: com.android.server.wm.WindowProcessController;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.WindowProcessListener mListener>;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = <com.android.server.wm._$$Lambda$LI60v4Y5Me6khV12IZ_zEQtSx7A: com.android.server.wm.'-$$Lambda$LI60v4Y5Me6khV12IZ-zEQtSx7A' INSTANCE>;

        $r4 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.WindowProcessListener mListener>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        r8 = (java.util.function.BiConsumer) $r3;

        r1 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(java.util.function.BiConsumer,java.lang.Object,java.lang.Object)>(r8, $r4, $r5);

        $r6 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        $r7 = $r6.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityTaskManagerService$H mH>;

        virtualinvoke $r7.<com.android.server.wm.ActivityTaskManagerService$H: boolean sendMessage(android.os.Message)>(r1);

        return;
    }

    public void setPerceptible(boolean)
    {
        com.android.server.wm.WindowProcessController r0;
        boolean z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        z0 := @parameter0: boolean;

        r0.<com.android.server.wm.WindowProcessController: boolean mPerceptible> = z0;

        return;
    }

    public void setPersistent(boolean)
    {
        com.android.server.wm.WindowProcessController r0;
        boolean z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        z0 := @parameter0: boolean;

        r0.<com.android.server.wm.WindowProcessController: boolean mPersistent> = z0;

        return;
    }

    public void setPid(int)
    {
        com.android.server.wm.WindowProcessController r0;
        int i0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        i0 := @parameter0: int;

        r0.<com.android.server.wm.WindowProcessController: int mPid> = i0;

        return;
    }

    public void setReportedProcState(int)
    {
        com.android.server.wm.WindowProcessController r0;
        int i0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        i0 := @parameter0: int;

        r0.<com.android.server.wm.WindowProcessController: int mRepProcState> = i0;

        return;
    }

    public void setRequiredAbi(java.lang.String)
    {
        com.android.server.wm.WindowProcessController r0;
        java.lang.String r1;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r1 := @parameter0: java.lang.String;

        r0.<com.android.server.wm.WindowProcessController: java.lang.String mRequiredAbi> = r1;

        return;
    }

    void setRunningRecentsAnimation(boolean)
    {
        com.android.server.wm.WindowProcessController r0;
        boolean z0, $z1;

        r0 := @this: com.android.server.wm.WindowProcessController;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.wm.WindowProcessController: boolean mRunningRecentsAnimation>;

        if $z1 != z0 goto label1;

        return;

     label1:
        r0.<com.android.server.wm.WindowProcessController: boolean mRunningRecentsAnimation> = z0;

        specialinvoke r0.<com.android.server.wm.WindowProcessController: void updateRunningRemoteOrRecentsAnimation()>();

        return;
    }

    void setRunningRemoteAnimation(boolean)
    {
        com.android.server.wm.WindowProcessController r0;
        boolean z0, $z1;

        r0 := @this: com.android.server.wm.WindowProcessController;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.wm.WindowProcessController: boolean mRunningRemoteAnimation>;

        if $z1 != z0 goto label1;

        return;

     label1:
        r0.<com.android.server.wm.WindowProcessController: boolean mRunningRemoteAnimation> = z0;

        specialinvoke r0.<com.android.server.wm.WindowProcessController: void updateRunningRemoteOrRecentsAnimation()>();

        return;
    }

    public void setThread(android.app.IApplicationThread)
    {
        com.android.server.wm.WindowProcessController r0;
        java.lang.Object r1;
        com.android.server.wm.ActivityTaskManagerService $r2;
        android.content.res.Configuration $r3;
        java.lang.Throwable $r4;
        android.app.IApplicationThread r5;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r5 := @parameter0: android.app.IApplicationThread;

        $r2 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        r1 = $r2.<com.android.server.wm.ActivityTaskManagerService: java.lang.Object mGlobalLockWithoutBoost>;

        entermonitor r1;

     label1:
        r0.<com.android.server.wm.WindowProcessController: android.app.IApplicationThread mThread> = r5;

     label2:
        if r5 == null goto label4;

     label3:
        $r3 = virtualinvoke r0.<com.android.server.wm.WindowProcessController: android.content.res.Configuration getConfiguration()>();

        specialinvoke r0.<com.android.server.wm.WindowProcessController: void setLastReportedConfiguration(android.content.res.Configuration)>($r3);

     label4:
        exitmonitor r1;

     label5:
        return;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public void setUsingWrapper(boolean)
    {
        com.android.server.wm.WindowProcessController r0;
        boolean z0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        z0 := @parameter0: boolean;

        r0.<com.android.server.wm.WindowProcessController: boolean mUsingWrapper> = z0;

        return;
    }

    public void setWhenUnimportant(long)
    {
        com.android.server.wm.WindowProcessController r0;
        long l0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        l0 := @parameter0: long;

        r0.<com.android.server.wm.WindowProcessController: long mWhenUnimportant> = l0;

        return;
    }

    boolean shouldKillProcessForRemovedTask(com.android.server.wm.Task)
    {
        com.android.server.wm.WindowProcessController r0;
        com.android.server.wm.Task r1, r6;
        java.util.ArrayList $r2, $r3;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r4;
        boolean $z0, $z1;
        com.android.server.wm.ActivityRecord r5;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r1 := @parameter0: com.android.server.wm.Task;

        i3 = 0;

     label1:
        $r2 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i3 >= $i0 goto label4;

        $r3 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r5 = (com.android.server.wm.ActivityRecord) $r4;

        $z0 = r5.<com.android.server.wm.ActivityRecord: boolean stopped>;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r6 = virtualinvoke r5.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        $i2 = r1.<com.android.server.wm.Task: int mTaskId>;

        $i1 = r6.<com.android.server.wm.Task: int mTaskId>;

        if $i2 == $i1 goto label3;

        $z1 = r6.<com.android.server.wm.Task: boolean inRecents>;

        if $z1 == 0 goto label3;

        return 0;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        return 1;
    }

    public void stopFreezingActivities()
    {
        com.android.server.wm.WindowProcessController r0;
        com.android.server.wm.WindowManagerGlobalLock r1;
        com.android.server.wm.ActivityTaskManagerService $r3;
        java.util.ArrayList $r4, $r5;
        java.lang.Object $r6;
        com.android.server.wm.ActivityRecord $r7;
        java.lang.Throwable $r8;
        int i0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $r3 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        r1 = $r3.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r1;

     label1:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

     label2:
        if i0 <= 0 goto label5;

        i0 = i0 + -1;

     label3:
        $r5 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r7 = (com.android.server.wm.ActivityRecord) $r6;

        virtualinvoke $r7.<com.android.server.wm.ActivityRecord: void stopFreezingScreenLocked(boolean)>(1);

     label4:
        goto label2;

     label5:
        exitmonitor r1;

     label6:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        return;

     label7:
        $r8 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public java.lang.String toString()
    {
        com.android.server.wm.WindowProcessController r0;
        java.lang.Object r1;
        java.lang.String r2;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r1 = r0.<com.android.server.wm.WindowProcessController: java.lang.Object mOwner>;

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    void unregisterDisplayConfigurationListener()
    {
        com.android.server.wm.WindowProcessController r0;
        com.android.server.wm.DisplayContent r1;
        int $i0, $i1;
        com.android.server.wm.ActivityTaskManagerService $r2;
        com.android.server.wm.RootWindowContainer $r3;
        android.content.res.Configuration $r4;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $i0 = r0.<com.android.server.wm.WindowProcessController: int mDisplayId>;

        if $i0 != -1 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        $r3 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.RootWindowContainer mRootWindowContainer>;

        $i1 = r0.<com.android.server.wm.WindowProcessController: int mDisplayId>;

        r1 = virtualinvoke $r3.<com.android.server.wm.RootWindowContainer: com.android.server.wm.DisplayContent getDisplayContent(int)>($i1);

        if r1 == null goto label2;

        virtualinvoke r1.<com.android.server.wm.DisplayContent: void unregisterConfigurationChangeListener(com.android.server.wm.ConfigurationContainerListener)>(r0);

     label2:
        r0.<com.android.server.wm.WindowProcessController: int mDisplayId> = -1;

        $r4 = <android.content.res.Configuration: android.content.res.Configuration EMPTY>;

        virtualinvoke r0.<com.android.server.wm.WindowProcessController: void onMergedOverrideConfigurationChanged(android.content.res.Configuration)>($r4);

        return;
    }

    void updateIntentForHeavyWeightActivity(android.content.Intent)
    {
        com.android.server.wm.WindowProcessController r0;
        android.content.Intent r1;
        com.android.server.wm.ActivityRecord r2;
        java.util.ArrayList $r3, $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.String $r6;
        com.android.server.wm.Task $r8;
        int $i0;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r1 := @parameter0: android.content.Intent;

        $r3 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $z0 = virtualinvoke $r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = r0.<com.android.server.wm.WindowProcessController: java.util.ArrayList mActivities>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r2 = (com.android.server.wm.ActivityRecord) $r5;

        $r6 = r2.<com.android.server.wm.ActivityRecord: java.lang.String packageName>;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("cur_app", $r6);

        $r8 = virtualinvoke r2.<com.android.server.wm.ActivityRecord: com.android.server.wm.Task getTask()>();

        $i0 = $r8.<com.android.server.wm.Task: int mTaskId>;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("cur_task", $i0);

        return;
    }

    void updateProcessInfo(boolean, boolean, boolean, boolean)
    {
        com.android.server.wm.WindowProcessController r0;
        boolean z0, z1, z2, z3;
        android.os.Message r1;
        com.android.server.wm.WindowProcessListener $r2, $r4;
        com.android.server.wm.'-$$Lambda$BEx3OWenCvYAaV5h_J2ZkZXhEcY' $r3;
        java.lang.Boolean $r5, $r6, $r7;
        com.android.server.wm.ActivityTaskManagerService $r8, $r10;
        com.android.server.wm.ActivityTaskManagerService$H $r9;
        int $i0, $i1;
        android.app.ActivityManagerInternal $r11;
        com.android.internal.util.function.QuadConsumer r12;

        r0 := @this: com.android.server.wm.WindowProcessController;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        z3 := @parameter3: boolean;

        $r2 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.WindowProcessListener mListener>;

        if $r2 != null goto label1;

        return;

     label1:
        if z3 == 0 goto label2;

        $r10 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        $r11 = $r10.<com.android.server.wm.ActivityTaskManagerService: android.app.ActivityManagerInternal mAmInternal>;

        $i1 = r0.<com.android.server.wm.WindowProcessController: int mUid>;

        $i0 = r0.<com.android.server.wm.WindowProcessController: int mPid>;

        virtualinvoke $r11.<android.app.ActivityManagerInternal: void addPendingTopUid(int,int)>($i1, $i0);

     label2:
        $r3 = <com.android.server.wm._$$Lambda$BEx3OWenCvYAaV5h_J2ZkZXhEcY: com.android.server.wm.'-$$Lambda$BEx3OWenCvYAaV5h_J2ZkZXhEcY' INSTANCE>;

        $r4 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.WindowProcessListener mListener>;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z2);

        r12 = (com.android.internal.util.function.QuadConsumer) $r3;

        r1 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(com.android.internal.util.function.QuadConsumer,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(r12, $r4, $r5, $r6, $r7);

        $r8 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        $r9 = $r8.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityTaskManagerService$H mH>;

        virtualinvoke $r9.<com.android.server.wm.ActivityTaskManagerService$H: boolean sendMessage(android.os.Message)>(r1);

        return;
    }

    void updateServiceConnectionActivities()
    {
        com.android.server.wm.WindowProcessController r0;
        com.android.server.wm.WindowProcessListener $r1, $r3;
        com.android.server.wm.ActivityTaskManagerService $r2;
        com.android.server.wm.'-$$Lambda$HLz_SQuxQoIiuaK5SB5xJ6FnoxY' $r4;
        com.android.server.wm.ActivityTaskManagerService$H $r5;
        android.os.Message $r6;
        java.util.function.Consumer r7;

        r0 := @this: com.android.server.wm.WindowProcessController;

        $r1 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.WindowProcessListener mListener>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityTaskManagerService mAtm>;

        $r5 = $r2.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ActivityTaskManagerService$H mH>;

        $r4 = <com.android.server.wm._$$Lambda$HLz_SQuxQoIiuaK5SB5xJ6FnoxY: com.android.server.wm.'-$$Lambda$HLz_SQuxQoIiuaK5SB5xJ6FnoxY' INSTANCE>;

        $r3 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.WindowProcessListener mListener>;

        r7 = (java.util.function.Consumer) $r4;

        $r6 = staticinvoke <com.android.internal.util.function.pooled.PooledLambda: android.os.Message obtainMessage(java.util.function.Consumer,java.lang.Object)>(r7, $r3);

        virtualinvoke $r5.<com.android.server.wm.ActivityTaskManagerService$H: boolean sendMessage(android.os.Message)>($r6);

        return;
    }

    boolean updateTopResumingActivityInProcessIfNeeded(com.android.server.wm.ActivityRecord)
    {
        com.android.server.wm.WindowProcessController r0;
        com.android.server.wm.ActivityRecord r1, $r4, $r6, $r7, $r12, $r13, r14, r16;
        com.android.server.wm.DisplayContent r2, $r10, $r11, r15;
        android.content.pm.ApplicationInfo $r3;
        int $i0, $i1, $i2;
        com.android.server.wm.ActivityStack$ActivityState $r5;
        boolean $z0, $z2, $z3, z4, z5, z6;
        com.android.server.wm.ActivityStack $r8, $r9, r17;

        r0 := @this: com.android.server.wm.WindowProcessController;

        r1 := @parameter0: com.android.server.wm.ActivityRecord;

        $r3 = r0.<com.android.server.wm.WindowProcessController: android.content.pm.ApplicationInfo mInfo>;

        $i0 = $r3.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i0 >= 29 goto label11;

        $r4 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityRecord mPreQTopResumedActivity>;

        if $r4 != r1 goto label01;

        goto label11;

     label01:
        r2 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: com.android.server.wm.DisplayContent getDisplay()>();

        if r2 != null goto label02;

        return 0;

     label02:
        z4 = 0;

        r14 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityRecord mPreQTopResumedActivity>;

        if r14 == null goto label03;

        r15 = virtualinvoke r14.<com.android.server.wm.ActivityRecord: com.android.server.wm.DisplayContent getDisplay()>();

        goto label04;

     label03:
        r15 = null;

     label04:
        if r15 == null goto label05;

        $r12 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityRecord mPreQTopResumedActivity>;

        $z2 = $r12.<com.android.server.wm.ActivityRecord: boolean mVisibleRequested>;

        if $z2 == 0 goto label05;

        $r13 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityRecord mPreQTopResumedActivity>;

        $z3 = virtualinvoke $r13.<com.android.server.wm.ActivityRecord: boolean isFocusable()>();

        if $z3 != 0 goto label06;

     label05:
        z4 = 1;

     label06:
        z5 = z4;

        if z4 != 0 goto label07;

        z5 = z4;

        $r11 = r15.<com.android.server.wm.DisplayContent: com.android.server.wm.DisplayContent mDisplayContent>;

        $r10 = r2.<com.android.server.wm.DisplayContent: com.android.server.wm.DisplayContent mDisplayContent>;

        $i2 = virtualinvoke $r11.<com.android.server.wm.DisplayContent: int compareTo(com.android.server.wm.WindowContainer)>($r10);

        if $i2 >= 0 goto label07;

        z5 = 1;

     label07:
        z6 = z5;

        if r2 != r15 goto label08;

        z6 = z5;

        $r7 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityRecord mPreQTopResumedActivity>;

        $r8 = virtualinvoke $r7.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityStack getRootTask()>();

        $r9 = virtualinvoke r1.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityStack getRootTask()>();

        $i1 = virtualinvoke $r8.<com.android.server.wm.ActivityStack: int compareTo(com.android.server.wm.WindowContainer)>($r9);

        if $i1 > 0 goto label08;

        z6 = 1;

     label08:
        if z6 == 0 goto label10;

        r16 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityRecord mPreQTopResumedActivity>;

        if r16 == null goto label09;

        $r5 = <com.android.server.wm.ActivityStack$ActivityState: com.android.server.wm.ActivityStack$ActivityState RESUMED>;

        $z0 = virtualinvoke r16.<com.android.server.wm.ActivityRecord: boolean isState(com.android.server.wm.ActivityStack$ActivityState)>($r5);

        if $z0 == 0 goto label09;

        $r6 = r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityRecord mPreQTopResumedActivity>;

        r17 = virtualinvoke $r6.<com.android.server.wm.ActivityRecord: com.android.server.wm.ActivityStack getRootTask()>();

        if r17 == null goto label09;

        virtualinvoke r17.<com.android.server.wm.ActivityStack: boolean startPausingLocked(boolean,boolean,com.android.server.wm.ActivityRecord)>(0, 0, r1);

     label09:
        r0.<com.android.server.wm.WindowProcessController: com.android.server.wm.ActivityRecord mPreQTopResumedActivity> = r1;

     label10:
        return z6;

     label11:
        return 1;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.WindowProcessController: java.lang.String TAG_RELEASE> = "ActivityTaskManager";

        <com.android.server.wm.WindowProcessController: java.lang.String TAG_CONFIGURATION> = "ActivityTaskManager";

        <com.android.server.wm.WindowProcessController: java.lang.String TAG> = "ActivityTaskManager";

        return;
    }
}
