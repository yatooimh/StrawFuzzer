final class com.android.server.wm.WindowProcessControllerMap extends java.lang.Object
{
    private final android.util.SparseArray mPidMap;
    private final java.util.Map mUidMap;

    void <init>()
    {
        com.android.server.wm.WindowProcessControllerMap r0;
        android.util.SparseArray $r1;
        java.util.HashMap $r2;

        r0 := @this: com.android.server.wm.WindowProcessControllerMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.util.SparseArray;

        specialinvoke $r1.<android.util.SparseArray: void <init>()>();

        r0.<com.android.server.wm.WindowProcessControllerMap: android.util.SparseArray mPidMap> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.android.server.wm.WindowProcessControllerMap: java.util.Map mUidMap> = $r2;

        return;
    }

    private void removeProcessFromUidMap(com.android.server.wm.WindowProcessController)
    {
        com.android.server.wm.WindowProcessControllerMap r0;
        com.android.server.wm.WindowProcessController r1;
        int i0;
        android.util.ArraySet r2;
        java.util.Map $r3, $r6;
        java.lang.Integer $r4, $r7;
        java.lang.Object $r5;
        boolean $z1;

        r0 := @this: com.android.server.wm.WindowProcessControllerMap;

        r1 := @parameter0: com.android.server.wm.WindowProcessController;

        if r1 != null goto label1;

        return;

     label1:
        i0 = r1.<com.android.server.wm.WindowProcessController: int mUid>;

        $r3 = r0.<com.android.server.wm.WindowProcessControllerMap: java.util.Map mUidMap>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r2 = (android.util.ArraySet) $r5;

        if r2 == null goto label2;

        virtualinvoke r2.<android.util.ArraySet: boolean remove(java.lang.Object)>(r1);

        $z1 = virtualinvoke r2.<android.util.ArraySet: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        $r6 = r0.<com.android.server.wm.WindowProcessControllerMap: java.util.Map mUidMap>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r7);

     label2:
        return;
    }

    android.util.SparseArray getPidMap()
    {
        com.android.server.wm.WindowProcessControllerMap r0;
        android.util.SparseArray $r1;

        r0 := @this: com.android.server.wm.WindowProcessControllerMap;

        $r1 = r0.<com.android.server.wm.WindowProcessControllerMap: android.util.SparseArray mPidMap>;

        return $r1;
    }

    com.android.server.wm.WindowProcessController getProcess(int)
    {
        com.android.server.wm.WindowProcessControllerMap r0;
        int i0;
        android.util.SparseArray $r1;
        java.lang.Object $r2;
        com.android.server.wm.WindowProcessController $r3;

        r0 := @this: com.android.server.wm.WindowProcessControllerMap;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wm.WindowProcessControllerMap: android.util.SparseArray mPidMap>;

        $r2 = virtualinvoke $r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        $r3 = (com.android.server.wm.WindowProcessController) $r2;

        return $r3;
    }

    android.util.ArraySet getProcesses(int)
    {
        com.android.server.wm.WindowProcessControllerMap r0;
        int i0;
        java.util.Map $r1;
        java.lang.Integer $r2;
        java.lang.Object $r3;
        android.util.ArraySet $r4;

        r0 := @this: com.android.server.wm.WindowProcessControllerMap;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.server.wm.WindowProcessControllerMap: java.util.Map mUidMap>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (android.util.ArraySet) $r3;

        return $r4;
    }

    void put(int, com.android.server.wm.WindowProcessController)
    {
        com.android.server.wm.WindowProcessControllerMap r0;
        com.android.server.wm.WindowProcessController r1, r12;
        android.util.SparseArray $r2, $r4;
        java.lang.Object $r3, $r8;
        java.util.Map $r5, $r9;
        java.lang.Integer $r6, $r10;
        android.util.ArraySet $r7, r13;
        int i0, i1;

        r0 := @this: com.android.server.wm.WindowProcessControllerMap;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.server.wm.WindowProcessController;

        $r2 = r0.<com.android.server.wm.WindowProcessControllerMap: android.util.SparseArray mPidMap>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r12 = (com.android.server.wm.WindowProcessController) $r3;

        if r12 == null goto label1;

        specialinvoke r0.<com.android.server.wm.WindowProcessControllerMap: void removeProcessFromUidMap(com.android.server.wm.WindowProcessController)>(r12);

     label1:
        $r4 = r0.<com.android.server.wm.WindowProcessControllerMap: android.util.SparseArray mPidMap>;

        virtualinvoke $r4.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r1);

        i1 = r1.<com.android.server.wm.WindowProcessController: int mUid>;

        $r5 = r0.<com.android.server.wm.WindowProcessControllerMap: java.util.Map mUidMap>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r7 = new android.util.ArraySet;

        specialinvoke $r7.<android.util.ArraySet: void <init>()>();

        $r8 = interfaceinvoke $r5.<java.util.Map: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)>($r6, $r7);

        r13 = (android.util.ArraySet) $r8;

        virtualinvoke r13.<android.util.ArraySet: boolean add(java.lang.Object)>(r1);

        $r9 = r0.<com.android.server.wm.WindowProcessControllerMap: java.util.Map mUidMap>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r13);

        return;
    }

    void remove(int)
    {
        com.android.server.wm.WindowProcessControllerMap r0;
        int i0;
        com.android.server.wm.WindowProcessController r1;
        android.util.SparseArray $r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.android.server.wm.WindowProcessControllerMap;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.server.wm.WindowProcessControllerMap: android.util.SparseArray mPidMap>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r1 = (com.android.server.wm.WindowProcessController) $r3;

        if r1 == null goto label1;

        $r4 = r0.<com.android.server.wm.WindowProcessControllerMap: android.util.SparseArray mPidMap>;

        virtualinvoke $r4.<android.util.SparseArray: void remove(int)>(i0);

        specialinvoke r0.<com.android.server.wm.WindowProcessControllerMap: void removeProcessFromUidMap(com.android.server.wm.WindowProcessController)>(r1);

     label1:
        return;
    }
}
