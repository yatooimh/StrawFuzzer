final class com.android.server.wm.WindowState$DeadWindowEventReceiver extends android.view.InputEventReceiver
{
    final com.android.server.wm.WindowState this$0;

    void <init>(com.android.server.wm.WindowState, android.view.InputChannel)
    {
        com.android.server.wm.WindowState$DeadWindowEventReceiver r0;
        com.android.server.wm.WindowState r1;
        android.view.InputChannel r2;
        com.android.server.wm.WindowManagerService $r3;
        com.android.server.wm.WindowManagerService$H $r4;
        android.os.Looper $r5;

        r0 := @this: com.android.server.wm.WindowState$DeadWindowEventReceiver;

        r1 := @parameter0: com.android.server.wm.WindowState;

        r2 := @parameter1: android.view.InputChannel;

        r0.<com.android.server.wm.WindowState$DeadWindowEventReceiver: com.android.server.wm.WindowState this$0> = r1;

        $r3 = r1.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mWmService>;

        $r4 = $r3.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerService$H mH>;

        $r5 = virtualinvoke $r4.<com.android.server.wm.WindowManagerService$H: android.os.Looper getLooper()>();

        specialinvoke r0.<android.view.InputEventReceiver: void <init>(android.view.InputChannel,android.os.Looper)>(r2, $r5);

        return;
    }

    public void onInputEvent(android.view.InputEvent)
    {
        com.android.server.wm.WindowState$DeadWindowEventReceiver r0;
        android.view.InputEvent r1;

        r0 := @this: com.android.server.wm.WindowState$DeadWindowEventReceiver;

        r1 := @parameter0: android.view.InputEvent;

        virtualinvoke r0.<com.android.server.wm.WindowState$DeadWindowEventReceiver: void finishInputEvent(android.view.InputEvent,boolean)>(r1, 1);

        return;
    }
}
