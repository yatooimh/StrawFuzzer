class com.android.server.wm.WindowState$DeathRecipient extends java.lang.Object implements android.os.IBinder$DeathRecipient
{
    final com.android.server.wm.WindowState this$0;

    private void <init>(com.android.server.wm.WindowState)
    {
        com.android.server.wm.WindowState$DeathRecipient r0;
        com.android.server.wm.WindowState r1;

        r0 := @this: com.android.server.wm.WindowState$DeathRecipient;

        r1 := @parameter0: com.android.server.wm.WindowState;

        r0.<com.android.server.wm.WindowState$DeathRecipient: com.android.server.wm.WindowState this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(com.android.server.wm.WindowState, com.android.server.wm.WindowState$1)
    {
        com.android.server.wm.WindowState$DeathRecipient r0;
        com.android.server.wm.WindowState r1;
        com.android.server.wm.WindowState$1 r2;

        r0 := @this: com.android.server.wm.WindowState$DeathRecipient;

        r1 := @parameter0: com.android.server.wm.WindowState;

        r2 := @parameter1: com.android.server.wm.WindowState$1;

        specialinvoke r0.<com.android.server.wm.WindowState$DeathRecipient: void <init>(com.android.server.wm.WindowState)>(r1);

        return;
    }

    public void binderDied()
    {
        com.android.server.wm.WindowState$DeathRecipient r0;
        java.lang.StringBuilder r1;
        com.android.server.wm.WindowState $r2, $r4, $r5, $r6, $r13, $r17, $r18, $r22, $r23, r32, $r33;
        com.android.server.wm.WindowManagerService $r3, $r9, $r24;
        android.view.IWindow $r7;
        com.android.server.wm.Session $r8;
        java.lang.String $r12;
        boolean $z0, $z1;
        com.android.server.wm.ActivityRecord $r20, $r21, $r25;
        com.android.server.wm.TaskSnapshotController $r26;
        java.lang.Throwable $r27, $r30;
        com.android.server.wm.WindowManagerGlobalLock r31;

        r0 := @this: com.android.server.wm.WindowState$DeathRecipient;

     label01:
        $r2 = r0.<com.android.server.wm.WindowState$DeathRecipient: com.android.server.wm.WindowState this$0>;

        $r3 = $r2.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mWmService>;

        r31 = $r3.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowManagerGlobalLock mGlobalLock>;

        entermonitor r31;

     label02:
        staticinvoke <com.android.server.wm.WindowManagerService: void boostPriorityForLockedSection()>();

        $r4 = r0.<com.android.server.wm.WindowState$DeathRecipient: com.android.server.wm.WindowState this$0>;

        $r9 = $r4.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mWmService>;

        $r5 = r0.<com.android.server.wm.WindowState$DeathRecipient: com.android.server.wm.WindowState this$0>;

        $r8 = $r5.<com.android.server.wm.WindowState: com.android.server.wm.Session mSession>;

        $r6 = r0.<com.android.server.wm.WindowState$DeathRecipient: com.android.server.wm.WindowState this$0>;

        $r7 = $r6.<com.android.server.wm.WindowState: android.view.IWindow mClient>;

        r32 = virtualinvoke $r9.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowState windowForClientLocked(com.android.server.wm.Session,android.view.IWindow,boolean)>($r8, $r7, 0);

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WIN DEATH: ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r32);

        $r12 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("WindowManager", $r12);

     label03:
        if r32 == null goto label07;

     label04:
        $r18 = r0.<com.android.server.wm.WindowState$DeathRecipient: com.android.server.wm.WindowState this$0>;

        virtualinvoke $r18.<com.android.server.wm.WindowState: com.android.server.wm.DisplayContent getDisplayContent()>();

        $r20 = r32.<com.android.server.wm.WindowState: com.android.server.wm.ActivityRecord mActivityRecord>;

        if $r20 == null goto label05;

        $r21 = r32.<com.android.server.wm.WindowState: com.android.server.wm.ActivityRecord mActivityRecord>;

        $r22 = virtualinvoke $r21.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowState findMainWindow()>();

        if $r22 != r32 goto label05;

        $r23 = r0.<com.android.server.wm.WindowState$DeathRecipient: com.android.server.wm.WindowState this$0>;

        $r24 = $r23.<com.android.server.wm.WindowState: com.android.server.wm.WindowManagerService mWmService>;

        $r26 = $r24.<com.android.server.wm.WindowManagerService: com.android.server.wm.TaskSnapshotController mTaskSnapshotController>;

        $r25 = r32.<com.android.server.wm.WindowState: com.android.server.wm.ActivityRecord mActivityRecord>;

        virtualinvoke $r26.<com.android.server.wm.TaskSnapshotController: void onAppDied(com.android.server.wm.ActivityRecord)>($r25);

     label05:
        $r33 = r0.<com.android.server.wm.WindowState$DeathRecipient: com.android.server.wm.WindowState this$0>;

        $z1 = staticinvoke <com.android.server.wm.WindowState: boolean access$200(com.android.server.wm.WindowState)>($r33);

        staticinvoke <com.android.server.wm.WindowState: void access$300(com.android.server.wm.WindowState,boolean)>(r32, $z1);

     label06:
        goto label09;

     label07:
        $r13 = r0.<com.android.server.wm.WindowState$DeathRecipient: com.android.server.wm.WindowState this$0>;

        $z0 = $r13.<com.android.server.wm.WindowState: boolean mHasSurface>;

        if $z0 == 0 goto label09;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("WindowManager", "!!! LEAK !!! Window removed but surface still valid.");

        $r17 = r0.<com.android.server.wm.WindowState$DeathRecipient: com.android.server.wm.WindowState this$0>;

        virtualinvoke $r17.<com.android.server.wm.WindowState: void removeIfPossible()>();

     label08:
        goto label09;

     label09:
        exitmonitor r31;

     label10:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

     label11:
        goto label12;

     label12:
        goto label17;

     label13:
        $r30 := @caughtexception;

     label14:
        exitmonitor r31;

     label15:
        staticinvoke <com.android.server.wm.WindowManagerService: void resetPriorityAfterLockedSection()>();

        throw $r30;

     label16:
        $r27 := @caughtexception;

     label17:
        return;

        catch java.lang.IllegalArgumentException from label01 to label02 with label16;
        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label07 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.IllegalArgumentException from label10 to label11 with label16;
        catch java.lang.IllegalArgumentException from label12 to label12 with label16;
        catch java.lang.IllegalArgumentException from label12 to label12 with label16;
        catch java.lang.Throwable from label14 to label15 with label13;
        catch java.lang.IllegalArgumentException from label15 to label16 with label16;
    }
}
