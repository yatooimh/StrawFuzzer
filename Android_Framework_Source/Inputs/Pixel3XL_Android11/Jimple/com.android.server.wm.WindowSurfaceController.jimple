class com.android.server.wm.WindowSurfaceController extends java.lang.Object
{
    static final java.lang.String TAG;
    final com.android.server.wm.WindowStateAnimator mAnimator;
    android.view.SurfaceControl mBLASTSurfaceControl;
    boolean mChildrenDetached;
    private boolean mHiddenForCrop;
    private boolean mHiddenForOtherReasons;
    private float mLastDsdx;
    private float mLastDsdy;
    private float mLastDtdx;
    private float mLastDtdy;
    private final com.android.server.wm.WindowManagerService mService;
    private float mSurfaceAlpha;
    android.view.SurfaceControl mSurfaceControl;
    private android.graphics.Rect mSurfaceCrop;
    private int mSurfaceH;
    private int mSurfaceLayer;
    private boolean mSurfaceShown;
    private int mSurfaceW;
    private float mSurfaceX;
    private float mSurfaceY;
    private final android.view.SurfaceControl$Transaction mTmpTransaction;
    private final com.android.server.wm.Session mWindowSession;
    private final int mWindowType;
    private final java.lang.String title;

    void <init>(java.lang.String, int, int, int, int, com.android.server.wm.WindowStateAnimator, int, int)
    {
        com.android.server.wm.WindowSurfaceController r0;
        java.lang.String r1, $r25;
        int i0, i1, i2, i3, i4, $i5, $i6, i7;
        android.graphics.Rect $r2;
        com.android.server.wm.WindowManagerService $r3, $r5, $r18;
        com.android.server.wm.Session $r4;
        java.util.function.Supplier $r6;
        java.lang.Object $r7;
        android.view.SurfaceControl$Transaction $r8;
        android.view.SurfaceControl$Builder $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r20, $r26, $r27, $r28, $r29, r35, r36;
        android.view.SurfaceControl $r10, $r19, $r21, $r30;
        boolean $z0, z1;
        java.lang.StringBuilder $r22;
        android.view.WindowManager$LayoutParams $r32;
        com.android.server.wm.WindowStateAnimator r33;
        com.android.server.wm.WindowState r34;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        r1 := @parameter0: java.lang.String;

        i7 := @parameter1: int;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r33 := @parameter5: com.android.server.wm.WindowStateAnimator;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.server.wm.WindowSurfaceController: boolean mSurfaceShown> = 0;

        r0.<com.android.server.wm.WindowSurfaceController: float mSurfaceX> = 0.0F;

        r0.<com.android.server.wm.WindowSurfaceController: float mSurfaceY> = 0.0F;

        r0.<com.android.server.wm.WindowSurfaceController: int mSurfaceW> = 0;

        r0.<com.android.server.wm.WindowSurfaceController: int mSurfaceH> = 0;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, -1, -1);

        r0.<com.android.server.wm.WindowSurfaceController: android.graphics.Rect mSurfaceCrop> = $r2;

        r0.<com.android.server.wm.WindowSurfaceController: float mLastDsdx> = 1.0F;

        r0.<com.android.server.wm.WindowSurfaceController: float mLastDtdx> = 0.0F;

        r0.<com.android.server.wm.WindowSurfaceController: float mLastDsdy> = 0.0F;

        r0.<com.android.server.wm.WindowSurfaceController: float mLastDtdy> = 1.0F;

        r0.<com.android.server.wm.WindowSurfaceController: float mSurfaceAlpha> = 0.0F;

        r0.<com.android.server.wm.WindowSurfaceController: int mSurfaceLayer> = 0;

        r0.<com.android.server.wm.WindowSurfaceController: boolean mHiddenForCrop> = 0;

        r0.<com.android.server.wm.WindowSurfaceController: boolean mHiddenForOtherReasons> = 1;

        r0.<com.android.server.wm.WindowSurfaceController: com.android.server.wm.WindowStateAnimator mAnimator> = r33;

        r0.<com.android.server.wm.WindowSurfaceController: int mSurfaceW> = i7;

        r0.<com.android.server.wm.WindowSurfaceController: int mSurfaceH> = i0;

        r0.<com.android.server.wm.WindowSurfaceController: java.lang.String title> = r1;

        $r3 = r33.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowManagerService mService>;

        r0.<com.android.server.wm.WindowSurfaceController: com.android.server.wm.WindowManagerService mService> = $r3;

        r34 = r33.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        r0.<com.android.server.wm.WindowSurfaceController: int mWindowType> = i3;

        $r4 = r34.<com.android.server.wm.WindowState: com.android.server.wm.Session mSession>;

        r0.<com.android.server.wm.WindowSurfaceController: com.android.server.wm.Session mWindowSession> = $r4;

        $r5 = r0.<com.android.server.wm.WindowSurfaceController: com.android.server.wm.WindowManagerService mService>;

        $r6 = $r5.<com.android.server.wm.WindowManagerService: java.util.function.Supplier mTransactionFactory>;

        $r7 = interfaceinvoke $r6.<java.util.function.Supplier: java.lang.Object get()>();

        $r8 = (android.view.SurfaceControl$Transaction) $r7;

        r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl$Transaction mTmpTransaction> = $r8;

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(32L, "new SurfaceControl");

        $r9 = virtualinvoke r34.<com.android.server.wm.WindowState: android.view.SurfaceControl$Builder makeSurface()>();

        $r10 = virtualinvoke r34.<com.android.server.wm.WindowState: android.view.SurfaceControl getSurfaceControl()>();

        $r11 = virtualinvoke $r9.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setParent(android.view.SurfaceControl)>($r10);

        $r12 = virtualinvoke $r11.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setName(java.lang.String)>(r1);

        $r13 = virtualinvoke $r12.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setBufferSize(int,int)>(i7, i0);

        $r14 = virtualinvoke $r13.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setFormat(int)>(i1);

        $r15 = virtualinvoke $r14.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setFlags(int)>(i2);

        $r16 = virtualinvoke $r15.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setMetadata(int,int)>(2, i3);

        $r17 = virtualinvoke $r16.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setMetadata(int,int)>(1, i4);

        r35 = virtualinvoke $r17.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setCallsite(java.lang.String)>("WindowSurfaceController");

        $r18 = r0.<com.android.server.wm.WindowSurfaceController: com.android.server.wm.WindowManagerService mService>;

        $z0 = $r18.<com.android.server.wm.WindowManagerService: boolean mUseBLAST>;

        if $z0 == 0 goto label1;

        $r32 = virtualinvoke r34.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams getAttrs()>();

        $i5 = $r32.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i6 = $i5 & 33554432;

        if $i6 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        if z1 == 0 goto label3;

        virtualinvoke r35.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setContainerLayer()>();

     label3:
        $r19 = virtualinvoke r35.<android.view.SurfaceControl$Builder: android.view.SurfaceControl build()>();

        r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl> = $r19;

        if z1 == 0 goto label4;

        $r20 = virtualinvoke r34.<com.android.server.wm.WindowState: android.view.SurfaceControl$Builder makeSurface()>();

        $r21 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        r36 = virtualinvoke $r20.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setParent(android.view.SurfaceControl)>($r21);

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(BLAST)");

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = virtualinvoke r36.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setName(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setHidden(boolean)>(0);

        $r28 = virtualinvoke $r27.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setBLASTLayer()>();

        $r29 = virtualinvoke $r28.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setCallsite(java.lang.String)>("WindowSurfaceController");

        $r30 = virtualinvoke $r29.<android.view.SurfaceControl$Builder: android.view.SurfaceControl build()>();

        r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mBLASTSurfaceControl> = $r30;

     label4:
        staticinvoke <android.os.Trace: void traceEnd(long)>(32L);

        return;
    }

    private void hideSurface(android.view.SurfaceControl$Transaction)
    {
        com.android.server.wm.WindowSurfaceController r0;
        android.view.SurfaceControl $r1, $r2;
        java.lang.RuntimeException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r8;
        android.view.SurfaceControl$Transaction r9;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        r9 := @parameter0: android.view.SurfaceControl$Transaction;

        $r1 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        if $r1 != null goto label1;

        return;

     label1:
        virtualinvoke r0.<com.android.server.wm.WindowSurfaceController: void setShown(boolean)>(0);

     label2:
        $r2 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke r9.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction hide(android.view.SurfaceControl)>($r2);

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception hiding surface in ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", $r8);

     label5:
        return;

        catch java.lang.RuntimeException from label2 to label3 with label4;
    }

    private boolean showSurface()
    {
        com.android.server.wm.WindowSurfaceController r0;
        android.view.SurfaceControl $r3, $r7;
        java.lang.RuntimeException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r11;
        com.android.server.wm.WindowStateAnimator $r12;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

     label1:
        virtualinvoke r0.<com.android.server.wm.WindowSurfaceController: void setShown(boolean)>(1);

        $r3 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r3.<android.view.SurfaceControl: void show()>();

     label2:
        return 1;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failure showing surface ");

        $r7 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", $r11, $r4);

        $r12 = r0.<com.android.server.wm.WindowSurfaceController: com.android.server.wm.WindowStateAnimator mAnimator>;

        virtualinvoke $r12.<com.android.server.wm.WindowStateAnimator: void reclaimSomeSurfaceMemory(java.lang.String,boolean)>("show", 1);

        return 0;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    private boolean updateVisibility()
    {
        com.android.server.wm.WindowSurfaceController r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.view.SurfaceControl$Transaction $r1, $r2;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        $z0 = r0.<com.android.server.wm.WindowSurfaceController: boolean mHiddenForCrop>;

        if $z0 != 0 goto label3;

        $z2 = r0.<com.android.server.wm.WindowSurfaceController: boolean mHiddenForOtherReasons>;

        if $z2 == 0 goto label1;

        goto label3;

     label1:
        $z3 = r0.<com.android.server.wm.WindowSurfaceController: boolean mSurfaceShown>;

        if $z3 != 0 goto label2;

        $z4 = specialinvoke r0.<com.android.server.wm.WindowSurfaceController: boolean showSurface()>();

        return $z4;

     label2:
        return 1;

     label3:
        $z1 = r0.<com.android.server.wm.WindowSurfaceController: boolean mSurfaceShown>;

        if $z1 == 0 goto label4;

        $r1 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl$Transaction mTmpTransaction>;

        specialinvoke r0.<com.android.server.wm.WindowSurfaceController: void hideSurface(android.view.SurfaceControl$Transaction)>($r1);

        $r2 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl$Transaction mTmpTransaction>;

        staticinvoke <android.view.SurfaceControl: void mergeToGlobalTransaction(android.view.SurfaceControl$Transaction)>($r2);

     label4:
        return 0;
    }

    void clearCropInTransaction(boolean)
    {
        com.android.server.wm.WindowSurfaceController r0;
        boolean z0, $z1, $z2;
        android.graphics.Rect $r2, $r4, r15;
        android.view.SurfaceControl $r3;
        java.lang.String $r5, $r12, r14;
        java.lang.Object[] $r6;
        com.android.server.wm.ProtoLogGroup $r7;
        java.lang.RuntimeException $r8;
        java.lang.StringBuilder $r9;
        com.android.server.wm.WindowStateAnimator $r13;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        z0 := @parameter0: boolean;

        $z1 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_SHOW_TRANSACTIONS_enabled>;

        if $z1 == 0 goto label1;

        $r5 = r0.<com.android.server.wm.WindowSurfaceController: java.lang.String title>;

        r14 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        $r7 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_SHOW_TRANSACTIONS>;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r14;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void i(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r7, -29233992, 0, null, $r6);

     label1:
        r15 = new android.graphics.Rect;

        specialinvoke r15.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, -1, -1);

        $r2 = r0.<com.android.server.wm.WindowSurfaceController: android.graphics.Rect mSurfaceCrop>;

        $z2 = virtualinvoke $r2.<android.graphics.Rect: boolean equals(java.lang.Object)>(r15);

        if $z2 == 0 goto label3;

     label2:
        return;

     label3:
        $r3 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r3.<android.view.SurfaceControl: void setWindowCrop(android.graphics.Rect)>(r15);

        $r4 = r0.<com.android.server.wm.WindowSurfaceController: android.graphics.Rect mSurfaceCrop>;

        virtualinvoke $r4.<android.graphics.Rect: void set(android.graphics.Rect)>(r15);

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error setting clearing crop of ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", $r12, $r8);

        if z0 != 0 goto label6;

        $r13 = r0.<com.android.server.wm.WindowSurfaceController: com.android.server.wm.WindowStateAnimator mAnimator>;

        virtualinvoke $r13.<com.android.server.wm.WindowStateAnimator: void reclaimSomeSurfaceMemory(java.lang.String,boolean)>("crop", 1);

     label6:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label5;
        catch java.lang.RuntimeException from label3 to label4 with label5;
    }

    boolean clearWindowContentFrameStats()
    {
        com.android.server.wm.WindowSurfaceController r0;
        android.view.SurfaceControl r1;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        r1 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        if r1 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r1.<android.view.SurfaceControl: boolean clearContentFrameStats()>();

        return $z0;
    }

    void deferTransactionUntil(android.view.SurfaceControl, long)
    {
        com.android.server.wm.WindowSurfaceController r0;
        android.view.SurfaceControl r1, $r2;
        long l0;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        r1 := @parameter0: android.view.SurfaceControl;

        l0 := @parameter1: long;

        $r2 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r2.<android.view.SurfaceControl: void deferTransactionUntil(android.view.SurfaceControl,long)>(r1, l0);

        return;
    }

    void destroyNotInTransaction()
    {
        com.android.server.wm.WindowSurfaceController r0;
        boolean $z0;
        android.view.SurfaceControl $r1, $r2, r15, r19;
        android.view.SurfaceControl$Transaction $r3, $r4;
        java.lang.String $r5, $r11, r13, r14;
        java.lang.Object[] $r6;
        com.android.server.wm.ProtoLogGroup $r7;
        java.lang.RuntimeException $r8;
        java.lang.Throwable $r12;
        java.lang.StringBuilder r18;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        $z0 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_SHOW_SURFACE_ALLOC_enabled>;

        if $z0 == 0 goto label01;

        r13 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        $r5 = staticinvoke <android.os.Debug: java.lang.String getCallers(int)>(8);

        r14 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        $r7 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_SHOW_SURFACE_ALLOC>;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = r13;

        $r6[1] = r14;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void i(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r7, -861707633, 0, null, $r6);

     label01:
        $r1 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        if $r1 == null goto label02;

        $r3 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl$Transaction mTmpTransaction>;

        $r2 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        $r4 = virtualinvoke $r3.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction remove(android.view.SurfaceControl)>($r2);

        virtualinvoke $r4.<android.view.SurfaceControl$Transaction: void apply()>();

     label02:
        virtualinvoke r0.<com.android.server.wm.WindowSurfaceController: void setShown(boolean)>(0);

        r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl> = null;

        r15 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mBLASTSurfaceControl>;

        if r15 == null goto label08;

     label03:
        virtualinvoke r15.<android.view.SurfaceControl: void release()>();

        goto label08;

     label04:
        $r12 := @caughtexception;

        goto label09;

     label05:
        $r8 := @caughtexception;

     label06:
        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error destroying surface in: ");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r11 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", $r11, $r8);

     label07:
        virtualinvoke r0.<com.android.server.wm.WindowSurfaceController: void setShown(boolean)>(0);

        r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl> = null;

        r15 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mBLASTSurfaceControl>;

        if r15 == null goto label08;

        goto label03;

     label08:
        return;

     label09:
        virtualinvoke r0.<com.android.server.wm.WindowSurfaceController: void setShown(boolean)>(0);

        r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl> = null;

        r19 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mBLASTSurfaceControl>;

        if r19 == null goto label10;

        virtualinvoke r19.<android.view.SurfaceControl: void release()>();

     label10:
        throw $r12;

        catch java.lang.RuntimeException from label01 to label02 with label05;
        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label06 to label07 with label04;
    }

    void detachChildren()
    {
        com.android.server.wm.WindowSurfaceController r0;
        android.view.SurfaceControl r1;
        boolean $z0;
        java.lang.Object[] $r2;
        com.android.server.wm.ProtoLogGroup $r3;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        $z0 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_SHOW_TRANSACTIONS_enabled>;

        if $z0 == 0 goto label1;

        $r3 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_SHOW_TRANSACTIONS>;

        $r2 = (java.lang.Object[]) null;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void i(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r3, 123161180, 0, null, $r2);

     label1:
        r0.<com.android.server.wm.WindowSurfaceController: boolean mChildrenDetached> = 1;

        r1 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        if r1 == null goto label2;

        virtualinvoke r1.<android.view.SurfaceControl: void detachChildren()>();

     label2:
        return;
    }

    public void dump(java.io.PrintWriter, java.lang.String, boolean)
    {
        com.android.server.wm.WindowSurfaceController r0;
        java.io.PrintWriter r1;
        java.lang.String r2;
        boolean z0, $z1;
        int $i0, $i1, $i2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        android.view.SurfaceControl $r3;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("mSurface=");

        $r3 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r3);

     label1:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("Surface: shown=");

        $z1 = r0.<com.android.server.wm.WindowSurfaceController: boolean mSurfaceShown>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" layer=");

        $i0 = r0.<com.android.server.wm.WindowSurfaceController: int mSurfaceLayer>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" alpha=");

        $f0 = r0.<com.android.server.wm.WindowSurfaceController: float mSurfaceAlpha>;

        virtualinvoke r1.<java.io.PrintWriter: void print(float)>($f0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" rect=(");

        $f1 = r0.<com.android.server.wm.WindowSurfaceController: float mSurfaceX>;

        virtualinvoke r1.<java.io.PrintWriter: void print(float)>($f1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(",");

        $f2 = r0.<com.android.server.wm.WindowSurfaceController: float mSurfaceY>;

        virtualinvoke r1.<java.io.PrintWriter: void print(float)>($f2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(") ");

        $i1 = r0.<com.android.server.wm.WindowSurfaceController: int mSurfaceW>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i1);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" x ");

        $i2 = r0.<com.android.server.wm.WindowSurfaceController: int mSurfaceH>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" transform=(");

        $f3 = r0.<com.android.server.wm.WindowSurfaceController: float mLastDsdx>;

        virtualinvoke r1.<java.io.PrintWriter: void print(float)>($f3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", ");

        $f4 = r0.<com.android.server.wm.WindowSurfaceController: float mLastDtdx>;

        virtualinvoke r1.<java.io.PrintWriter: void print(float)>($f4);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", ");

        $f5 = r0.<com.android.server.wm.WindowSurfaceController: float mLastDsdy>;

        virtualinvoke r1.<java.io.PrintWriter: void print(float)>($f5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", ");

        $f6 = r0.<com.android.server.wm.WindowSurfaceController: float mLastDtdy>;

        virtualinvoke r1.<java.io.PrintWriter: void print(float)>($f6);

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.String)>(")");

        return;
    }

    void dumpDebug(android.util.proto.ProtoOutputStream, long)
    {
        com.android.server.wm.WindowSurfaceController r0;
        android.util.proto.ProtoOutputStream r1;
        boolean $z0;
        int $i0;
        long l1, l2;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l1 := @parameter1: long;

        l2 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(l1);

        $z0 = r0.<com.android.server.wm.WindowSurfaceController: boolean mSurfaceShown>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366145L, $z0);

        $i0 = r0.<com.android.server.wm.WindowSurfaceController: int mSurfaceLayer>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464258L, $i0);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l2);

        return;
    }

    void forceScaleableInTransaction(boolean)
    {
        com.android.server.wm.WindowSurfaceController r0;
        boolean z0;
        android.view.SurfaceControl $r1;
        byte b0;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        b0 = 1;

        goto label2;

     label1:
        b0 = -1;

     label2:
        $r1 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r1.<android.view.SurfaceControl: void setOverrideScalingMode(int)>(b0);

        return;
    }

    void getBLASTSurfaceControl(android.view.SurfaceControl)
    {
        com.android.server.wm.WindowSurfaceController r0;
        android.view.SurfaceControl r1, r2;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        r1 := @parameter0: android.view.SurfaceControl;

        r2 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mBLASTSurfaceControl>;

        if r2 == null goto label1;

        virtualinvoke r1.<android.view.SurfaceControl: void copyFrom(android.view.SurfaceControl,java.lang.String)>(r2, "WindowSurfaceController.getBLASTSurfaceControl");

     label1:
        return;
    }

    android.view.SurfaceControl getClientViewRootSurface()
    {
        com.android.server.wm.WindowSurfaceController r0;
        android.view.SurfaceControl r1, $r2;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        r1 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mBLASTSurfaceControl>;

        if r1 == null goto label1;

        return r1;

     label1:
        $r2 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        return $r2;
    }

    void getContainerRect(android.graphics.Rect)
    {
        com.android.server.wm.WindowSurfaceController r0;
        android.graphics.Rect r1;
        com.android.server.wm.WindowStateAnimator $r2;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<com.android.server.wm.WindowSurfaceController: com.android.server.wm.WindowStateAnimator mAnimator>;

        virtualinvoke $r2.<com.android.server.wm.WindowStateAnimator: void getContainerRect(android.graphics.Rect)>(r1);

        return;
    }

    int getHeight()
    {
        com.android.server.wm.WindowSurfaceController r0;
        int $i0;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        $i0 = r0.<com.android.server.wm.WindowSurfaceController: int mSurfaceH>;

        return $i0;
    }

    int getLayer()
    {
        com.android.server.wm.WindowSurfaceController r0;
        int $i0;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        $i0 = r0.<com.android.server.wm.WindowSurfaceController: int mSurfaceLayer>;

        return $i0;
    }

    boolean getShown()
    {
        com.android.server.wm.WindowSurfaceController r0;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        $z0 = r0.<com.android.server.wm.WindowSurfaceController: boolean mSurfaceShown>;

        return $z0;
    }

    void getSurfaceControl(android.view.SurfaceControl)
    {
        com.android.server.wm.WindowSurfaceController r0;
        android.view.SurfaceControl r1, $r2;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        r1 := @parameter0: android.view.SurfaceControl;

        $r2 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke r1.<android.view.SurfaceControl: void copyFrom(android.view.SurfaceControl,java.lang.String)>($r2, "WindowSurfaceController.getSurfaceControl");

        return;
    }

    int getWidth()
    {
        com.android.server.wm.WindowSurfaceController r0;
        int $i0;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        $i0 = r0.<com.android.server.wm.WindowSurfaceController: int mSurfaceW>;

        return $i0;
    }

    boolean getWindowContentFrameStats(android.view.WindowContentFrameStats)
    {
        com.android.server.wm.WindowSurfaceController r0;
        android.view.WindowContentFrameStats r1;
        android.view.SurfaceControl r2;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        r1 := @parameter0: android.view.WindowContentFrameStats;

        r2 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        if r2 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r2.<android.view.SurfaceControl: boolean getContentFrameStats(android.view.WindowContentFrameStats)>(r1);

        return $z0;
    }

    float getX()
    {
        com.android.server.wm.WindowSurfaceController r0;
        float $f0;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        $f0 = r0.<com.android.server.wm.WindowSurfaceController: float mSurfaceX>;

        return $f0;
    }

    float getY()
    {
        com.android.server.wm.WindowSurfaceController r0;
        float $f0;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        $f0 = r0.<com.android.server.wm.WindowSurfaceController: float mSurfaceY>;

        return $f0;
    }

    boolean hasSurface()
    {
        com.android.server.wm.WindowSurfaceController r0;
        android.view.SurfaceControl $r1;
        boolean z0;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        $r1 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    void hide(android.view.SurfaceControl$Transaction, java.lang.String)
    {
        com.android.server.wm.WindowSurfaceController r0;
        android.view.SurfaceControl$Transaction r1;
        java.lang.String r2, $r4, r7, r8;
        boolean $z0, $z1;
        com.android.server.wm.WindowStateAnimator $r3;
        java.lang.Object[] $r5;
        com.android.server.wm.ProtoLogGroup $r6;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        r7 := @parameter1: java.lang.String;

        $z0 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_SHOW_TRANSACTIONS_enabled>;

        if $z0 == 0 goto label1;

        r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r7);

        $r4 = r0.<com.android.server.wm.WindowSurfaceController: java.lang.String title>;

        r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        $r6 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_SHOW_TRANSACTIONS>;

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = r8;

        $r5[1] = r2;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void i(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r6, -1259022216, 0, null, $r5);

     label1:
        r0.<com.android.server.wm.WindowSurfaceController: boolean mHiddenForOtherReasons> = 1;

        $r3 = r0.<com.android.server.wm.WindowSurfaceController: com.android.server.wm.WindowStateAnimator mAnimator>;

        virtualinvoke $r3.<com.android.server.wm.WindowStateAnimator: void destroyPreservedSurfaceLocked()>();

        $z1 = r0.<com.android.server.wm.WindowSurfaceController: boolean mSurfaceShown>;

        if $z1 == 0 goto label2;

        specialinvoke r0.<com.android.server.wm.WindowSurfaceController: void hideSurface(android.view.SurfaceControl$Transaction)>(r1);

     label2:
        return;
    }

    boolean prepareToShowInTransaction(float, float, float, float, float, boolean)
    {
        com.android.server.wm.WindowSurfaceController r0;
        float f0, f1, f2, f3, f4;
        boolean z0;
        android.view.SurfaceControl $r2, r10;
        java.lang.RuntimeException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r6, $r8;
        com.android.server.wm.WindowStateAnimator $r9;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        z0 := @parameter5: boolean;

        r10 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        if r10 == null goto label5;

     label1:
        r0.<com.android.server.wm.WindowSurfaceController: float mSurfaceAlpha> = f0;

        virtualinvoke r10.<android.view.SurfaceControl: void setAlpha(float)>(f0);

        r0.<com.android.server.wm.WindowSurfaceController: float mLastDsdx> = f1;

        r0.<com.android.server.wm.WindowSurfaceController: float mLastDtdx> = f2;

        r0.<com.android.server.wm.WindowSurfaceController: float mLastDsdy> = f3;

        r0.<com.android.server.wm.WindowSurfaceController: float mLastDtdy> = f4;

        $r2 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r2.<android.view.SurfaceControl: void setMatrix(float,float,float,float)>(f1, f2, f3, f4);

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error updating surface in ");

        $r6 = r0.<com.android.server.wm.WindowSurfaceController: java.lang.String title>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", $r8, $r3);

        if z0 != 0 goto label4;

        $r9 = r0.<com.android.server.wm.WindowSurfaceController: com.android.server.wm.WindowStateAnimator mAnimator>;

        virtualinvoke $r9.<com.android.server.wm.WindowStateAnimator: void reclaimSomeSurfaceMemory(java.lang.String,boolean)>("update", 1);

     label4:
        return 0;

     label5:
        return 1;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    void reparentChildrenInTransaction(com.android.server.wm.WindowSurfaceController)
    {
        com.android.server.wm.WindowSurfaceController r0, r4;
        java.lang.String r1, r5;
        boolean $z0;
        java.lang.Object[] $r2;
        com.android.server.wm.ProtoLogGroup $r3;
        android.view.SurfaceControl r6, r7;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        r4 := @parameter0: com.android.server.wm.WindowSurfaceController;

        $z0 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_SHOW_TRANSACTIONS_enabled>;

        if $z0 == 0 goto label1;

        r5 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r4);

        $r3 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_SHOW_TRANSACTIONS>;

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = r5;

        $r2[1] = r1;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void i(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r3, -444624452, 0, null, $r2);

     label1:
        r6 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        if r6 == null goto label2;

        r7 = r4.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        if r7 == null goto label2;

        virtualinvoke r6.<android.view.SurfaceControl: void reparentChildren(android.view.SurfaceControl)>(r7);

     label2:
        return;
    }

    boolean setBufferSizeInTransaction(int, int, boolean)
    {
        com.android.server.wm.WindowSurfaceController r0;
        int i0, i1, $i4, $i5;
        boolean z0, $z1, z2;
        long l2, l3;
        android.view.SurfaceControl $r2;
        java.lang.String $r3, $r11, $r18, r20;
        java.lang.Object[] $r4;
        com.android.server.wm.ProtoLogGroup $r5;
        java.lang.Long $r6, $r7;
        java.lang.RuntimeException $r8;
        java.lang.StringBuilder $r9;
        com.android.server.wm.WindowStateAnimator $r19;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $i4 = r0.<com.android.server.wm.WindowSurfaceController: int mSurfaceW>;

        if $i4 != i0 goto label02;

        $i5 = r0.<com.android.server.wm.WindowSurfaceController: int mSurfaceH>;

        if $i5 == i1 goto label01;

        goto label02;

     label01:
        z2 = 0;

        goto label03;

     label02:
        z2 = 1;

     label03:
        if z2 == 0 goto label11;

        r0.<com.android.server.wm.WindowSurfaceController: int mSurfaceW> = i0;

        r0.<com.android.server.wm.WindowSurfaceController: int mSurfaceH> = i1;

     label04:
        $z1 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_SHOW_TRANSACTIONS_enabled>;

        if $z1 == 0 goto label07;

     label05:
        l2 = (long) i0;

        l3 = (long) i1;

     label06:
        $r3 = r0.<com.android.server.wm.WindowSurfaceController: java.lang.String title>;

        r20 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        $r5 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_SHOW_TRANSACTIONS>;

        $r4 = newarray (java.lang.Object)[3];

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        $r4[0] = $r6;

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3);

        $r4[1] = $r7;

        $r4[2] = r20;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void i(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r5, 1220075598, 5, null, $r4);

     label07:
        $r2 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r2.<android.view.SurfaceControl: void setBufferSize(int,int)>(i0, i1);

     label08:
        return 1;

     label09:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error resizing surface of ");

        $r11 = r0.<com.android.server.wm.WindowSurfaceController: java.lang.String title>;

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" size=(");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r18 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", $r18, $r8);

        if z0 != 0 goto label10;

        $r19 = r0.<com.android.server.wm.WindowSurfaceController: com.android.server.wm.WindowStateAnimator mAnimator>;

        virtualinvoke $r19.<com.android.server.wm.WindowStateAnimator: void reclaimSomeSurfaceMemory(java.lang.String,boolean)>("size", 1);

     label10:
        return 0;

     label11:
        return 0;

        catch java.lang.RuntimeException from label04 to label05 with label09;
        catch java.lang.RuntimeException from label06 to label07 with label09;
        catch java.lang.RuntimeException from label07 to label08 with label09;
    }

    void setColorSpaceAgnostic(boolean)
    {
        com.android.server.wm.WindowSurfaceController r0;
        boolean z0, $z1;
        android.view.SurfaceControl $r1, $r3;
        com.android.server.wm.WindowManagerService $r2, $r4, $r10;
        java.lang.String $r5, r11;
        java.lang.Object[] $r6;
        com.android.server.wm.ProtoLogGroup $r7;
        java.lang.Boolean $r8;
        java.lang.Throwable $r9;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        z0 := @parameter0: boolean;

        $z1 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_SHOW_TRANSACTIONS_enabled>;

        if $z1 == 0 goto label1;

        $r5 = r0.<com.android.server.wm.WindowSurfaceController: java.lang.String title>;

        r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        $r7 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_SHOW_TRANSACTIONS>;

        $r6 = newarray (java.lang.Object)[2];

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r6[0] = $r8;

        $r6[1] = r11;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void i(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r7, 585096182, 3, null, $r6);

     label1:
        $r1 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        if $r1 != null goto label2;

        return;

     label2:
        $r2 = r0.<com.android.server.wm.WindowSurfaceController: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r2.<com.android.server.wm.WindowManagerService: void openSurfaceTransaction()>();

     label3:
        $r3 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r3.<android.view.SurfaceControl: void setColorSpaceAgnostic(boolean)>(z0);

     label4:
        $r4 = r0.<com.android.server.wm.WindowSurfaceController: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r4.<com.android.server.wm.WindowManagerService: void closeSurfaceTransaction(java.lang.String)>("setColorSpaceAgnostic");

        return;

     label5:
        $r9 := @caughtexception;

        $r10 = r0.<com.android.server.wm.WindowSurfaceController: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r10.<com.android.server.wm.WindowManagerService: void closeSurfaceTransaction(java.lang.String)>("setColorSpaceAgnostic");

        throw $r9;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    void setCropInTransaction(android.graphics.Rect, boolean)
    {
        com.android.server.wm.WindowSurfaceController r0;
        android.graphics.Rect r1, $r3, $r5;
        boolean z0, $z1, $z3;
        int $i0, $i1;
        com.android.server.wm.WindowStateAnimator $r2, $r18;
        android.view.SurfaceControl $r4;
        java.lang.String $r6, $r7, $r15, $r17, r19, r20;
        java.lang.Object[] $r8;
        com.android.server.wm.ProtoLogGroup $r9;
        java.lang.RuntimeException $r10;
        java.lang.StringBuilder $r11;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        r1 := @parameter0: android.graphics.Rect;

        z0 := @parameter1: boolean;

        $z1 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_SHOW_TRANSACTIONS_enabled>;

        if $z1 == 0 goto label1;

        $r6 = virtualinvoke r1.<android.graphics.Rect: java.lang.String toShortString()>();

        r19 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6);

        $r7 = r0.<com.android.server.wm.WindowSurfaceController: java.lang.String title>;

        r20 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        $r9 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_SHOW_TRANSACTIONS>;

        $r8 = newarray (java.lang.Object)[2];

        $r8[0] = r19;

        $r8[1] = r20;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void i(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r9, -324085783, 0, null, $r8);

     label1:
        $i0 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        if $i0 <= 0 goto label4;

        $i1 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        if $i1 <= 0 goto label4;

        $r3 = r0.<com.android.server.wm.WindowSurfaceController: android.graphics.Rect mSurfaceCrop>;

        $z3 = virtualinvoke r1.<android.graphics.Rect: boolean equals(java.lang.Object)>($r3);

        if $z3 != 0 goto label2;

        $r4 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r4.<android.view.SurfaceControl: void setWindowCrop(android.graphics.Rect)>(r1);

        $r5 = r0.<com.android.server.wm.WindowSurfaceController: android.graphics.Rect mSurfaceCrop>;

        virtualinvoke $r5.<android.graphics.Rect: void set(android.graphics.Rect)>(r1);

     label2:
        r0.<com.android.server.wm.WindowSurfaceController: boolean mHiddenForCrop> = 0;

        specialinvoke r0.<com.android.server.wm.WindowSurfaceController: boolean updateVisibility()>();

     label3:
        goto label5;

     label4:
        r0.<com.android.server.wm.WindowSurfaceController: boolean mHiddenForCrop> = 1;

        $r2 = r0.<com.android.server.wm.WindowSurfaceController: com.android.server.wm.WindowStateAnimator mAnimator>;

        virtualinvoke $r2.<com.android.server.wm.WindowStateAnimator: void destroyPreservedSurfaceLocked()>();

        specialinvoke r0.<com.android.server.wm.WindowSurfaceController: boolean updateVisibility()>();

     label5:
        goto label7;

     label6:
        $r10 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error setting crop surface of ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" crop=");

        $r15 = virtualinvoke r1.<android.graphics.Rect: java.lang.String toShortString()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", $r17, $r10);

        if z0 != 0 goto label7;

        $r18 = r0.<com.android.server.wm.WindowSurfaceController: com.android.server.wm.WindowStateAnimator mAnimator>;

        virtualinvoke $r18.<com.android.server.wm.WindowStateAnimator: void reclaimSomeSurfaceMemory(java.lang.String,boolean)>("crop", 1);

     label7:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label6;
        catch java.lang.RuntimeException from label2 to label3 with label6;
        catch java.lang.RuntimeException from label4 to label5 with label6;
    }

    void setMatrix(android.view.SurfaceControl$Transaction, float, float, float, float, boolean)
    {
        com.android.server.wm.WindowSurfaceController r0;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7;
        boolean z0, z1, z2;
        double d0, d1, d2, d3;
        java.lang.String r1, $r5, $r15, $r26;
        byte $b0, $b1, $b2, $b3;
        android.view.SurfaceControl $r2, $r4;
        java.lang.Object[] $r6;
        com.android.server.wm.ProtoLogGroup $r7;
        java.lang.Double $r8, $r9, $r10, $r11;
        java.lang.RuntimeException $r12, $r28;
        java.lang.StringBuilder $r13;
        com.android.server.wm.WindowStateAnimator $r27;
        android.view.SurfaceControl$Transaction r29;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        r29 := @parameter0: android.view.SurfaceControl$Transaction;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        f3 := @parameter4: float;

        z0 := @parameter5: boolean;

        $f4 = r0.<com.android.server.wm.WindowSurfaceController: float mLastDsdx>;

        $b0 = $f4 cmpl f0;

        if $b0 != 0 goto label02;

        $f5 = r0.<com.android.server.wm.WindowSurfaceController: float mLastDtdx>;

        $b1 = $f5 cmpl f1;

        if $b1 != 0 goto label02;

        $f6 = r0.<com.android.server.wm.WindowSurfaceController: float mLastDtdy>;

        $b2 = $f6 cmpl f2;

        if $b2 != 0 goto label02;

        $f7 = r0.<com.android.server.wm.WindowSurfaceController: float mLastDsdy>;

        $b3 = $f7 cmpl f3;

        if $b3 == 0 goto label01;

        goto label02;

     label01:
        z2 = 0;

        goto label03;

     label02:
        z2 = 1;

     label03:
        if z2 != 0 goto label04;

        return;

     label04:
        r0.<com.android.server.wm.WindowSurfaceController: float mLastDsdx> = f0;

        r0.<com.android.server.wm.WindowSurfaceController: float mLastDtdx> = f1;

        r0.<com.android.server.wm.WindowSurfaceController: float mLastDtdy> = f2;

        r0.<com.android.server.wm.WindowSurfaceController: float mLastDsdy> = f3;

     label05:
        z1 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_SHOW_TRANSACTIONS_enabled>;

     label06:
        if z1 == 0 goto label10;

        d0 = (double) f0;

        d1 = (double) f1;

        d2 = (double) f2;

        d3 = (double) f3;

     label07:
        $r5 = r0.<com.android.server.wm.WindowSurfaceController: java.lang.String title>;

        r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        $r7 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_SHOW_TRANSACTIONS>;

        $r6 = newarray (java.lang.Object)[5];

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r6[0] = $r8;

        $r9 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r6[1] = $r9;

        $r10 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r6[2] = $r10;

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d3);

        $r6[3] = $r11;

        $r6[4] = r1;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void i(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r7, 309039362, 170, null, $r6);

     label08:
        goto label10;

     label09:
        $r28 := @caughtexception;

        goto label16;

     label10:
        if r29 != null goto label13;

     label11:
        $r4 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r4.<android.view.SurfaceControl: void setMatrix(float,float,float,float)>(f0, f1, f2, f3);

     label12:
        goto label14;

     label13:
        $r2 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke r29.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setMatrix(android.view.SurfaceControl,float,float,float,float)>($r2, f0, f1, f2, f3);

     label14:
        goto label17;

     label15:
        $r12 := @caughtexception;

     label16:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error setting matrix on surface surface");

        $r15 = r0.<com.android.server.wm.WindowSurfaceController: java.lang.String title>;

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" MATRIX [");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f1);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f2);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f3);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r26 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", $r26, null);

        if z0 != 0 goto label17;

        $r27 = r0.<com.android.server.wm.WindowSurfaceController: com.android.server.wm.WindowStateAnimator mAnimator>;

        virtualinvoke $r27.<com.android.server.wm.WindowStateAnimator: void reclaimSomeSurfaceMemory(java.lang.String,boolean)>("matrix", 1);

     label17:
        return;

        catch java.lang.RuntimeException from label05 to label06 with label15;
        catch java.lang.RuntimeException from label07 to label08 with label09;
        catch java.lang.RuntimeException from label11 to label12 with label09;
        catch java.lang.RuntimeException from label13 to label14 with label09;
    }

    void setMatrixInTransaction(float, float, float, float, boolean)
    {
        com.android.server.wm.WindowSurfaceController r0;
        float f0, f1, f2, f3;
        boolean z0;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        z0 := @parameter4: boolean;

        virtualinvoke r0.<com.android.server.wm.WindowSurfaceController: void setMatrix(android.view.SurfaceControl$Transaction,float,float,float,float,boolean)>(null, f0, f1, f2, f3, 0);

        return;
    }

    void setOpaque(boolean)
    {
        com.android.server.wm.WindowSurfaceController r0;
        boolean z0, $z1;
        android.view.SurfaceControl $r1, $r3;
        com.android.server.wm.WindowManagerService $r2, $r4, $r10;
        java.lang.String $r5, r11;
        java.lang.Object[] $r6;
        com.android.server.wm.ProtoLogGroup $r7;
        java.lang.Boolean $r8;
        java.lang.Throwable $r9;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        z0 := @parameter0: boolean;

        $z1 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_SHOW_TRANSACTIONS_enabled>;

        if $z1 == 0 goto label1;

        $r5 = r0.<com.android.server.wm.WindowSurfaceController: java.lang.String title>;

        r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        $r7 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_SHOW_TRANSACTIONS>;

        $r6 = newarray (java.lang.Object)[2];

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r6[0] = $r8;

        $r6[1] = r11;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void i(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r7, 558823034, 3, null, $r6);

     label1:
        $r1 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        if $r1 != null goto label2;

        return;

     label2:
        $r2 = r0.<com.android.server.wm.WindowSurfaceController: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r2.<com.android.server.wm.WindowManagerService: void openSurfaceTransaction()>();

     label3:
        $r3 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r3.<android.view.SurfaceControl: void setOpaque(boolean)>(z0);

     label4:
        $r4 = r0.<com.android.server.wm.WindowSurfaceController: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r4.<com.android.server.wm.WindowManagerService: void closeSurfaceTransaction(java.lang.String)>("setOpaqueLocked");

        return;

     label5:
        $r9 := @caughtexception;

        $r10 = r0.<com.android.server.wm.WindowSurfaceController: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r10.<com.android.server.wm.WindowManagerService: void closeSurfaceTransaction(java.lang.String)>("setOpaqueLocked");

        throw $r9;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    void setPosition(android.view.SurfaceControl$Transaction, float, float, boolean)
    {
        com.android.server.wm.WindowSurfaceController r0;
        float f0, f1, $f2, $f3;
        boolean z0, $z1, z2;
        double d0, d1;
        byte $b0, $b1;
        android.view.SurfaceControl $r1, $r3;
        java.lang.String $r4, $r18, r21;
        java.lang.Object[] $r5;
        com.android.server.wm.ProtoLogGroup $r6;
        java.lang.Double $r7, $r8;
        java.lang.RuntimeException $r9;
        java.lang.StringBuilder $r10;
        com.android.server.wm.WindowStateAnimator $r19;
        android.view.SurfaceControl$Transaction r20;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        r20 := @parameter0: android.view.SurfaceControl$Transaction;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        z0 := @parameter3: boolean;

        $f2 = r0.<com.android.server.wm.WindowSurfaceController: float mSurfaceX>;

        $b0 = $f2 cmpl f0;

        if $b0 != 0 goto label02;

        $f3 = r0.<com.android.server.wm.WindowSurfaceController: float mSurfaceY>;

        $b1 = $f3 cmpl f1;

        if $b1 == 0 goto label01;

        goto label02;

     label01:
        z2 = 0;

        goto label03;

     label02:
        z2 = 1;

     label03:
        if z2 == 0 goto label13;

        r0.<com.android.server.wm.WindowSurfaceController: float mSurfaceX> = f0;

        r0.<com.android.server.wm.WindowSurfaceController: float mSurfaceY> = f1;

     label04:
        $z1 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_SHOW_TRANSACTIONS_enabled>;

        if $z1 == 0 goto label07;

     label05:
        d0 = (double) f0;

        d1 = (double) f1;

     label06:
        $r4 = r0.<com.android.server.wm.WindowSurfaceController: java.lang.String title>;

        r21 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        $r6 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_SHOW_TRANSACTIONS>;

        $r5 = newarray (java.lang.Object)[3];

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r5[0] = $r7;

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r5[1] = $r8;

        $r5[2] = r21;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void i(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r6, 633654009, 10, null, $r5);

     label07:
        if r20 != null goto label10;

     label08:
        $r3 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r3.<android.view.SurfaceControl: void setPosition(float,float)>(f0, f1);

     label09:
        goto label11;

     label10:
        $r1 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke r20.<android.view.SurfaceControl$Transaction: android.view.SurfaceControl$Transaction setPosition(android.view.SurfaceControl,float,float)>($r1, f0, f1);

     label11:
        goto label13;

     label12:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error positioning surface of ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pos=(");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f1);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r18 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", $r18, $r9);

        if z0 != 0 goto label13;

        $r19 = r0.<com.android.server.wm.WindowSurfaceController: com.android.server.wm.WindowStateAnimator mAnimator>;

        virtualinvoke $r19.<com.android.server.wm.WindowStateAnimator: void reclaimSomeSurfaceMemory(java.lang.String,boolean)>("position", 1);

     label13:
        return;

        catch java.lang.RuntimeException from label04 to label05 with label12;
        catch java.lang.RuntimeException from label06 to label07 with label12;
        catch java.lang.RuntimeException from label08 to label09 with label12;
        catch java.lang.RuntimeException from label10 to label11 with label12;
    }

    void setPositionInTransaction(float, float, boolean)
    {
        com.android.server.wm.WindowSurfaceController r0;
        float f0, f1;
        boolean z0;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<com.android.server.wm.WindowSurfaceController: void setPosition(android.view.SurfaceControl$Transaction,float,float,boolean)>(null, f0, f1, z0);

        return;
    }

    void setSecure(boolean)
    {
        com.android.server.wm.WindowSurfaceController r0;
        boolean z0, $z1;
        android.view.SurfaceControl $r1, $r3;
        com.android.server.wm.WindowManagerService $r2, $r4, $r10;
        java.lang.String $r5, r11;
        java.lang.Object[] $r6;
        com.android.server.wm.ProtoLogGroup $r7;
        java.lang.Boolean $r8;
        java.lang.Throwable $r9;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        z0 := @parameter0: boolean;

        $z1 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_SHOW_TRANSACTIONS_enabled>;

        if $z1 == 0 goto label1;

        $r5 = r0.<com.android.server.wm.WindowSurfaceController: java.lang.String title>;

        r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        $r7 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_SHOW_TRANSACTIONS>;

        $r6 = newarray (java.lang.Object)[2];

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r6[0] = $r8;

        $r6[1] = r11;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void i(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r7, -1176488860, 3, null, $r6);

     label1:
        $r1 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        if $r1 != null goto label2;

        return;

     label2:
        $r2 = r0.<com.android.server.wm.WindowSurfaceController: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r2.<com.android.server.wm.WindowManagerService: void openSurfaceTransaction()>();

     label3:
        $r3 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r3.<android.view.SurfaceControl: void setSecure(boolean)>(z0);

     label4:
        $r4 = r0.<com.android.server.wm.WindowSurfaceController: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r4.<com.android.server.wm.WindowManagerService: void closeSurfaceTransaction(java.lang.String)>("setSecure");

        return;

     label5:
        $r9 := @caughtexception;

        $r10 = r0.<com.android.server.wm.WindowSurfaceController: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r10.<com.android.server.wm.WindowManagerService: void closeSurfaceTransaction(java.lang.String)>("setSecure");

        throw $r9;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    void setShown(boolean)
    {
        com.android.server.wm.WindowSurfaceController r0;
        boolean z0, $z1;
        com.android.server.wm.Session r1;
        com.android.server.wm.WindowStateAnimator $r2, $r5;
        com.android.server.wm.WindowState $r3, $r6;
        com.android.server.wm.WindowManagerService $r4;
        int $i0;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        z0 := @parameter0: boolean;

        r0.<com.android.server.wm.WindowSurfaceController: boolean mSurfaceShown> = z0;

        $r4 = r0.<com.android.server.wm.WindowSurfaceController: com.android.server.wm.WindowManagerService mService>;

        $r2 = r0.<com.android.server.wm.WindowSurfaceController: com.android.server.wm.WindowStateAnimator mAnimator>;

        $r3 = $r2.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        virtualinvoke $r4.<com.android.server.wm.WindowManagerService: void updateNonSystemOverlayWindowsVisibilityIfNeeded(com.android.server.wm.WindowState,boolean)>($r3, z0);

        $r5 = r0.<com.android.server.wm.WindowSurfaceController: com.android.server.wm.WindowStateAnimator mAnimator>;

        $r6 = $r5.<com.android.server.wm.WindowStateAnimator: com.android.server.wm.WindowState mWin>;

        virtualinvoke $r6.<com.android.server.wm.WindowState: void onSurfaceShownChanged(boolean)>(z0);

        r1 = r0.<com.android.server.wm.WindowSurfaceController: com.android.server.wm.Session mWindowSession>;

        if r1 == null goto label1;

        $z1 = r0.<com.android.server.wm.WindowSurfaceController: boolean mSurfaceShown>;

        $i0 = r0.<com.android.server.wm.WindowSurfaceController: int mWindowType>;

        virtualinvoke r1.<com.android.server.wm.Session: void onWindowSurfaceVisibilityChanged(com.android.server.wm.WindowSurfaceController,boolean,int)>(r0, $z1, $i0);

     label1:
        return;
    }

    void setTransparentRegionHint(android.graphics.Region)
    {
        com.android.server.wm.WindowSurfaceController r0;
        android.view.SurfaceControl $r1, $r3;
        com.android.server.wm.WindowManagerService $r2, $r4, $r6;
        java.lang.Throwable $r5;
        android.graphics.Region r7;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        r7 := @parameter0: android.graphics.Region;

        $r1 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        if $r1 != null goto label1;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String)>("WindowManager", "setTransparentRegionHint: null mSurface after mHasSurface true");

        return;

     label1:
        $r2 = r0.<com.android.server.wm.WindowSurfaceController: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r2.<com.android.server.wm.WindowManagerService: void openSurfaceTransaction()>();

     label2:
        $r3 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        virtualinvoke $r3.<android.view.SurfaceControl: void setTransparentRegionHint(android.graphics.Region)>(r7);

     label3:
        $r4 = r0.<com.android.server.wm.WindowSurfaceController: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r4.<com.android.server.wm.WindowManagerService: void closeSurfaceTransaction(java.lang.String)>("setTransparentRegion");

        return;

     label4:
        $r5 := @caughtexception;

        $r6 = r0.<com.android.server.wm.WindowSurfaceController: com.android.server.wm.WindowManagerService mService>;

        virtualinvoke $r6.<com.android.server.wm.WindowManagerService: void closeSurfaceTransaction(java.lang.String)>("setTransparentRegion");

        throw $r5;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    boolean showRobustlyInTransaction()
    {
        com.android.server.wm.WindowSurfaceController r0;
        java.lang.String r1, $r2;
        boolean $z0, $z1;
        java.lang.Object[] $r3;
        com.android.server.wm.ProtoLogGroup $r4;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        $z0 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_SHOW_TRANSACTIONS_enabled>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.wm.WindowSurfaceController: java.lang.String title>;

        r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        $r4 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_SHOW_TRANSACTIONS>;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r1;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void i(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r4, -1089874824, 0, null, $r3);

     label1:
        r0.<com.android.server.wm.WindowSurfaceController: boolean mHiddenForOtherReasons> = 0;

        $z1 = specialinvoke r0.<com.android.server.wm.WindowSurfaceController: boolean updateVisibility()>();

        return $z1;
    }

    public java.lang.String toString()
    {
        com.android.server.wm.WindowSurfaceController r0;
        android.view.SurfaceControl $r1;
        java.lang.String $r2;

        r0 := @this: com.android.server.wm.WindowSurfaceController;

        $r1 = r0.<com.android.server.wm.WindowSurfaceController: android.view.SurfaceControl mSurfaceControl>;

        $r2 = virtualinvoke $r1.<android.view.SurfaceControl: java.lang.String toString()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.WindowSurfaceController: java.lang.String TAG> = "WindowManager";

        return;
    }
}
