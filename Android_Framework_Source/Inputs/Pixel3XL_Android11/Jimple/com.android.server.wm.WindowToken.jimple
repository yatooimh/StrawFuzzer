class com.android.server.wm.WindowToken extends com.android.server.wm.WindowContainer
{
    private static final java.lang.String TAG;
    boolean hasVisible;
    private boolean mBinderDied;
    private com.android.server.wm.WindowToken$DeathRecipient mDeathRecipient;
    private com.android.server.wm.WindowToken$FixedRotationTransformState mFixedRotationTransformState;
    final boolean mFromClientToken;
    private android.content.res.Configuration mLastReportedConfig;
    private int mLastReportedDisplay;
    final boolean mOwnerCanManageAppTokens;
    private final int mOwnerUid;
    boolean mPersistOnEmpty;
    final boolean mRoundedCornerOverlay;
    private final java.util.Comparator mWindowComparator;
    boolean paused;
    java.lang.String stringName;
    final android.os.IBinder token;
    boolean waitingToShow;
    final int windowType;

    void <init>(com.android.server.wm.WindowManagerService, android.os.IBinder, int, boolean, com.android.server.wm.DisplayContent, boolean)
    {
        com.android.server.wm.WindowToken r0;
        com.android.server.wm.WindowManagerService r1;
        android.os.IBinder r2;
        int i0;
        boolean z0, z1;
        com.android.server.wm.DisplayContent r3;

        r0 := @this: com.android.server.wm.WindowToken;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        r2 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        r3 := @parameter4: com.android.server.wm.DisplayContent;

        z1 := @parameter5: boolean;

        specialinvoke r0.<com.android.server.wm.WindowToken: void <init>(com.android.server.wm.WindowManagerService,android.os.IBinder,int,boolean,com.android.server.wm.DisplayContent,boolean,boolean)>(r1, r2, i0, z0, r3, z1, 0);

        return;
    }

    void <init>(com.android.server.wm.WindowManagerService, android.os.IBinder, int, boolean, com.android.server.wm.DisplayContent, boolean, int, boolean, boolean)
    {
        com.android.server.wm.WindowToken r0;
        int i0, i1, $i2, $i3;
        boolean z0, z1, z2, z3, $z4;
        com.android.server.wm.DisplayContent r1;
        com.android.server.wm._$$Lambda$WindowToken$tFLHn4S6WuSXW1gp1kvT_sp7WC0 $r2;
        android.os.RemoteException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r9;
        com.android.server.wm.WindowManagerService r10;
        android.os.IBinder r11;
        com.android.server.wm.WindowToken$DeathRecipient r12;

        r0 := @this: com.android.server.wm.WindowToken;

        r10 := @parameter0: com.android.server.wm.WindowManagerService;

        r11 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        r1 := @parameter4: com.android.server.wm.DisplayContent;

        z1 := @parameter5: boolean;

        i1 := @parameter6: int;

        z2 := @parameter7: boolean;

        z3 := @parameter8: boolean;

        specialinvoke r0.<com.android.server.wm.WindowContainer: void <init>(com.android.server.wm.WindowManagerService)>(r10);

        r0.<com.android.server.wm.WindowToken: boolean paused> = 0;

        r0.<com.android.server.wm.WindowToken: int mLastReportedDisplay> = -1;

        r0.<com.android.server.wm.WindowToken: boolean mBinderDied> = 0;

        $r2 = new com.android.server.wm._$$Lambda$WindowToken$tFLHn4S6WuSXW1gp1kvT_sp7WC0;

        specialinvoke $r2.<com.android.server.wm._$$Lambda$WindowToken$tFLHn4S6WuSXW1gp1kvT_sp7WC0: void <init>(com.android.server.wm.WindowToken)>(r0);

        r0.<com.android.server.wm.WindowToken: java.util.Comparator mWindowComparator> = $r2;

        r0.<com.android.server.wm.WindowToken: android.os.IBinder token> = r11;

        r0.<com.android.server.wm.WindowToken: int windowType> = i0;

        r0.<com.android.server.wm.WindowToken: boolean mPersistOnEmpty> = z0;

        r0.<com.android.server.wm.WindowToken: boolean mOwnerCanManageAppTokens> = z1;

        r0.<com.android.server.wm.WindowToken: int mOwnerUid> = i1;

        r0.<com.android.server.wm.WindowToken: boolean mRoundedCornerOverlay> = z2;

        r0.<com.android.server.wm.WindowToken: boolean mFromClientToken> = z3;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.server.wm.DisplayContent: void addWindowToken(android.os.IBinder,com.android.server.wm.WindowToken)>(r11, r0);

     label1:
        $z4 = specialinvoke r0.<com.android.server.wm.WindowToken: boolean shouldReportToClient()>();

        if $z4 == 0 goto label5;

     label2:
        r12 = new com.android.server.wm.WindowToken$DeathRecipient;

        specialinvoke r12.<com.android.server.wm.WindowToken$DeathRecipient: void <init>(com.android.server.wm.WindowToken,com.android.server.wm.WindowToken$1)>(r0, null);

        r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowToken$DeathRecipient mDeathRecipient> = r12;

        virtualinvoke r12.<com.android.server.wm.WindowToken$DeathRecipient: void linkToDeath()>();

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to add window token with type ");

        $i2 = r0.<com.android.server.wm.WindowToken: int windowType>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on display ");

        $i3 = virtualinvoke r1.<com.android.server.wm.DisplayContent: int getDisplayId()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", $r9, $r3);

        r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowToken$DeathRecipient mDeathRecipient> = null;

        return;

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    void <init>(com.android.server.wm.WindowManagerService, android.os.IBinder, int, boolean, com.android.server.wm.DisplayContent, boolean, boolean)
    {
        com.android.server.wm.WindowToken r0;
        com.android.server.wm.WindowManagerService r1;
        android.os.IBinder r2;
        int i0;
        boolean z0, z1, z2;
        com.android.server.wm.DisplayContent r3;

        r0 := @this: com.android.server.wm.WindowToken;

        r1 := @parameter0: com.android.server.wm.WindowManagerService;

        r2 := @parameter1: android.os.IBinder;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        r3 := @parameter4: com.android.server.wm.DisplayContent;

        z1 := @parameter5: boolean;

        z2 := @parameter6: boolean;

        specialinvoke r0.<com.android.server.wm.WindowToken: void <init>(com.android.server.wm.WindowManagerService,android.os.IBinder,int,boolean,com.android.server.wm.DisplayContent,boolean,int,boolean,boolean)>(r1, r2, i0, z0, r3, z1, -1, z2, 0);

        return;
    }

    static boolean access$002(com.android.server.wm.WindowToken, boolean)
    {
        com.android.server.wm.WindowToken r0;
        boolean z0;

        r0 := @parameter0: com.android.server.wm.WindowToken;

        z0 := @parameter1: boolean;

        r0.<com.android.server.wm.WindowToken: boolean mBinderDied> = z0;

        return z0;
    }

    private void cancelFixedRotationTransform()
    {
        com.android.server.wm.WindowToken r0;
        com.android.server.wm.WindowContainer r1;
        int i0;
        android.app.WindowConfiguration $r2;
        android.content.res.Configuration $r3;

        r0 := @this: com.android.server.wm.WindowToken;

        r1 = virtualinvoke r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowContainer getParent()>();

        if r1 != null goto label1;

        return;

     label1:
        specialinvoke r0.<com.android.server.wm.WindowToken: void notifyFixedRotationTransform(boolean)>(0);

        $r2 = virtualinvoke r0.<com.android.server.wm.WindowToken: android.app.WindowConfiguration getWindowConfiguration()>();

        i0 = virtualinvoke $r2.<android.app.WindowConfiguration: int getRotation()>();

        $r3 = virtualinvoke r1.<com.android.server.wm.WindowContainer: android.content.res.Configuration getConfiguration()>();

        virtualinvoke r0.<com.android.server.wm.WindowToken: void onConfigurationChanged(android.content.res.Configuration)>($r3);

        virtualinvoke r0.<com.android.server.wm.WindowToken: void onCancelFixedRotationTransform(int)>(i0);

        return;
    }

    private void cleanUpFixedRotationTransformState()
    {
        com.android.server.wm.WindowToken r0;

        r0 := @this: com.android.server.wm.WindowToken;

        r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowToken$FixedRotationTransformState mFixedRotationTransformState> = null;

        specialinvoke r0.<com.android.server.wm.WindowToken: void notifyFixedRotationTransform(boolean)>(0);

        return;
    }

    private void notifyFixedRotationTransform(boolean)
    {
        com.android.server.wm.WindowToken r0;
        boolean z0, $z1, $z2;
        com.android.server.wm.WindowList $r1, $r2;
        int $i0, $i1, $i2, i4;
        java.lang.Object $r3;
        android.view.WindowManager$LayoutParams $r4;
        com.android.server.wm.WindowManagerService $r5, $r9;
        com.android.server.wm.ActivityTaskManagerService $r6, $r10;
        com.android.server.wm.Session $r7;
        com.android.server.wm.WindowProcessControllerMap $r8;
        com.android.server.wm.ClientLifecycleManager $r11;
        android.app.IApplicationThread $r12;
        android.os.IBinder $r13;
        android.app.servertransaction.FixedRotationAdjustmentsItem $r14;
        java.util.ArrayList $r15, r22, r26;
        android.os.RemoteException $r16;
        java.lang.StringBuilder $r17;
        java.lang.String $r20;
        android.view.DisplayAdjustments$FixedRotationAdjustments r21, r25, r28;
        com.android.server.wm.WindowState r23;
        com.android.server.wm.ActivityRecord r24;
        com.android.server.wm.WindowProcessController r27;

        r0 := @this: com.android.server.wm.WindowToken;

        z0 := @parameter0: boolean;

        r21 = null;

        r22 = null;

        $r1 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r1.<com.android.server.wm.WindowList: int size()>();

        i4 = $i0 - 1;

     label01:
        if i4 < 0 goto label14;

        $r2 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowList mChildren>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i4);

        r23 = (com.android.server.wm.WindowState) $r3;

        $r4 = r23.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i1 = $r4.<android.view.WindowManager$LayoutParams: int type>;

        if $i1 != 3 goto label03;

        r24 = virtualinvoke r0.<com.android.server.wm.WindowToken: com.android.server.wm.ActivityRecord asActivityRecord()>();

        if r24 != null goto label02;

        r25 = r21;

        r26 = r22;

        goto label13;

     label02:
        r27 = r24.<com.android.server.wm.ActivityRecord: com.android.server.wm.WindowProcessController app>;

        goto label04;

     label03:
        $r5 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowManagerService mWmService>;

        $r6 = $r5.<com.android.server.wm.WindowManagerService: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        $r8 = $r6.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.WindowProcessControllerMap mProcessMap>;

        $r7 = r23.<com.android.server.wm.WindowState: com.android.server.wm.Session mSession>;

        $i2 = $r7.<com.android.server.wm.Session: int mPid>;

        r27 = virtualinvoke $r8.<com.android.server.wm.WindowProcessControllerMap: com.android.server.wm.WindowProcessController getProcess(int)>($i2);

     label04:
        r25 = r21;

        r26 = r22;

        if r27 == null goto label13;

        $z1 = virtualinvoke r27.<com.android.server.wm.WindowProcessController: boolean hasThread()>();

        if $z1 != 0 goto label05;

        r25 = r21;

        r26 = r22;

        goto label13;

     label05:
        if r22 != null goto label08;

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>(int)>(2);

        r26 = $r15;

        if z0 == 0 goto label06;

        r28 = virtualinvoke r0.<com.android.server.wm.WindowToken: android.view.DisplayAdjustments$FixedRotationAdjustments createFixedRotationAdjustmentsIfNeeded()>();

        goto label07;

     label06:
        r28 = null;

     label07:
        r25 = r28;

        goto label09;

     label08:
        r25 = r21;

        r26 = r22;

        $z2 = virtualinvoke r22.<java.util.ArrayList: boolean contains(java.lang.Object)>(r27);

        if $z2 == 0 goto label09;

        r25 = r21;

        r26 = r22;

        goto label13;

     label09:
        virtualinvoke r26.<java.util.ArrayList: boolean add(java.lang.Object)>(r27);

     label10:
        $r9 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowManagerService mWmService>;

        $r10 = $r9.<com.android.server.wm.WindowManagerService: com.android.server.wm.ActivityTaskManagerService mAtmService>;

        $r11 = virtualinvoke $r10.<com.android.server.wm.ActivityTaskManagerService: com.android.server.wm.ClientLifecycleManager getLifecycleManager()>();

        $r12 = virtualinvoke r27.<com.android.server.wm.WindowProcessController: android.app.IApplicationThread getThread()>();

        $r13 = r0.<com.android.server.wm.WindowToken: android.os.IBinder token>;

        $r14 = staticinvoke <android.app.servertransaction.FixedRotationAdjustmentsItem: android.app.servertransaction.FixedRotationAdjustmentsItem obtain(android.os.IBinder,android.view.DisplayAdjustments$FixedRotationAdjustments)>($r13, r25);

        virtualinvoke $r11.<com.android.server.wm.ClientLifecycleManager: void scheduleTransaction(android.app.IApplicationThread,android.app.servertransaction.ClientTransactionItem)>($r12, $r14);

     label11:
        goto label13;

     label12:
        $r16 := @caughtexception;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to schedule DisplayAdjustmentsItem to ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r27);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("WindowManager", $r20, $r16);

     label13:
        i4 = i4 + -1;

        r21 = r25;

        r22 = r26;

        goto label01;

     label14:
        return;

        catch android.os.RemoteException from label10 to label11 with label12;
    }

    private void reportWindowTokenRemovedToClient()
    {
        com.android.server.wm.WindowToken r0;
        boolean $z0, $z1;
        com.android.server.wm.WindowToken$DeathRecipient $r1;
        android.os.IBinder $r2;
        android.os.RemoteException $r3;
        java.lang.Object[] $r4;
        com.android.server.wm.ProtoLogGroup $r5;
        android.app.IWindowToken r6;

        r0 := @this: com.android.server.wm.WindowToken;

        $z0 = specialinvoke r0.<com.android.server.wm.WindowToken: boolean shouldReportToClient()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowToken$DeathRecipient mDeathRecipient>;

        virtualinvoke $r1.<com.android.server.wm.WindowToken$DeathRecipient: void unlinkToDeath()>();

        $r2 = r0.<com.android.server.wm.WindowToken: android.os.IBinder token>;

        r6 = staticinvoke <android.app.IWindowToken$Stub: android.app.IWindowToken asInterface(android.os.IBinder)>($r2);

     label2:
        interfaceinvoke r6.<android.app.IWindowToken: void onWindowTokenRemoved()>();

     label3:
        goto label5;

     label4:
        $r3 := @caughtexception;

        $z1 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_ERROR_enabled>;

        if $z1 == 0 goto label5;

        $r5 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_ERROR>;

        $r4 = (java.lang.Object[]) null;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void w(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r5, 838570988, 0, "Could not report token removal to the window token client.", $r4);

     label5:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private boolean shouldReportToClient()
    {
        com.android.server.wm.WindowToken r0;
        com.android.server.wm.ActivityRecord $r1;
        boolean $z0, $z1, z2;

        r0 := @this: com.android.server.wm.WindowToken;

        $r1 = virtualinvoke r0.<com.android.server.wm.WindowToken: com.android.server.wm.ActivityRecord asActivityRecord()>();

        if $r1 != null goto label1;

        $z0 = r0.<com.android.server.wm.WindowToken: boolean mFromClientToken>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.server.wm.WindowToken: boolean mBinderDied>;

        if $z1 != 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    void addWindow(com.android.server.wm.WindowState)
    {
        com.android.server.wm.WindowToken r0;
        com.android.server.wm.WindowState r1;
        boolean $z0, $z1, $z2, $z3;
        android.view.SurfaceControl $r2;
        com.android.server.wm.WindowList $r3;
        java.util.Comparator $r4;
        com.android.server.wm.WindowManagerService $r5;
        java.lang.Object[] $r6, $r9;
        com.android.server.wm.ProtoLogGroup $r7, $r10;
        java.lang.String $r8, r11, r12, r13, r14;

        r0 := @this: com.android.server.wm.WindowToken;

        r1 := @parameter0: com.android.server.wm.WindowState;

        $z0 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_FOCUS_enabled>;

        if $z0 == 0 goto label1;

        r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        $r8 = staticinvoke <android.os.Debug: java.lang.String getCallers(int)>(5);

        r12 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r8);

        $r10 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_FOCUS>;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = r11;

        $r9[1] = r12;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void d(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r10, 1219600119, 0, null, $r9);

     label1:
        $z1 = virtualinvoke r1.<com.android.server.wm.WindowState: boolean isChildWindow()>();

        if $z1 == 0 goto label2;

        return;

     label2:
        $r2 = r0.<com.android.server.wm.WindowToken: android.view.SurfaceControl mSurfaceControl>;

        if $r2 != null goto label3;

        virtualinvoke r0.<com.android.server.wm.WindowToken: void createSurfaceControl(boolean)>(1);

     label3:
        $r3 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowList mChildren>;

        $z2 = virtualinvoke $r3.<com.android.server.wm.WindowList: boolean contains(java.lang.Object)>(r1);

        if $z2 != 0 goto label5;

        $z3 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_ADD_REMOVE_enabled>;

        if $z3 == 0 goto label4;

        r13 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        r14 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        $r7 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_ADD_REMOVE>;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = r13;

        $r6[1] = r14;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void v(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r7, 241961619, 0, null, $r6);

     label4:
        $r4 = r0.<com.android.server.wm.WindowToken: java.util.Comparator mWindowComparator>;

        virtualinvoke r0.<com.android.server.wm.WindowToken: void addChild(com.android.server.wm.WindowContainer,java.util.Comparator)>(r1, $r4);

        $r5 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowManagerService mWmService>;

        $r5.<com.android.server.wm.WindowManagerService: boolean mWindowsChanged> = 1;

     label5:
        return;
    }

    void adjustWindowParams(com.android.server.wm.WindowState, android.view.WindowManager$LayoutParams)
    {
        com.android.server.wm.WindowToken r0;
        com.android.server.wm.WindowState r1;
        android.view.WindowManager$LayoutParams r2;

        r0 := @this: com.android.server.wm.WindowToken;

        r1 := @parameter0: com.android.server.wm.WindowState;

        r2 := @parameter1: android.view.WindowManager$LayoutParams;

        return;
    }

    void applyFixedRotationTransform(android.view.DisplayInfo, com.android.server.wm.DisplayFrames, android.content.res.Configuration)
    {
        com.android.server.wm.WindowToken r0;
        com.android.server.wm.DisplayFrames r1;
        android.content.res.Configuration r2, $r5, $r15;
        com.android.server.wm.WindowToken$FixedRotationTransformState $r3, $r4, $r10, $r11;
        com.android.server.wm.DisplayContent $r6, $r8;
        int $i0;
        java.util.ArrayList $r7;
        com.android.server.wm.DisplayPolicy $r9;
        android.util.SparseArray $r12;
        android.view.InsetsState $r13;
        com.android.server.wm.WindowContainer $r14;
        android.view.DisplayInfo r16;

        r0 := @this: com.android.server.wm.WindowToken;

        r16 := @parameter0: android.view.DisplayInfo;

        r1 := @parameter1: com.android.server.wm.DisplayFrames;

        r2 := @parameter2: android.content.res.Configuration;

        $r3 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowToken$FixedRotationTransformState mFixedRotationTransformState>;

        if $r3 == null goto label1;

        return;

     label1:
        $r4 = new com.android.server.wm.WindowToken$FixedRotationTransformState;

        $r5 = new android.content.res.Configuration;

        specialinvoke $r5.<android.content.res.Configuration: void <init>(android.content.res.Configuration)>(r2);

        $r6 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.DisplayContent mDisplayContent>;

        $i0 = virtualinvoke $r6.<com.android.server.wm.DisplayContent: int getRotation()>();

        specialinvoke $r4.<com.android.server.wm.WindowToken$FixedRotationTransformState: void <init>(android.view.DisplayInfo,com.android.server.wm.DisplayFrames,android.content.res.Configuration,int)>(r16, r1, $r5, $i0);

        r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowToken$FixedRotationTransformState mFixedRotationTransformState> = $r4;

        $r7 = $r4.<com.android.server.wm.WindowToken$FixedRotationTransformState: java.util.ArrayList mAssociatedTokens>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

        $r8 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.DisplayContent mDisplayContent>;

        $r9 = virtualinvoke $r8.<com.android.server.wm.DisplayContent: com.android.server.wm.DisplayPolicy getDisplayPolicy()>();

        $r10 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowToken$FixedRotationTransformState mFixedRotationTransformState>;

        $r13 = $r10.<com.android.server.wm.WindowToken$FixedRotationTransformState: android.view.InsetsState mInsetsState>;

        $r11 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowToken$FixedRotationTransformState mFixedRotationTransformState>;

        $r12 = $r11.<com.android.server.wm.WindowToken$FixedRotationTransformState: android.util.SparseArray mBarContentFrames>;

        virtualinvoke $r9.<com.android.server.wm.DisplayPolicy: void simulateLayoutDisplay(com.android.server.wm.DisplayFrames,android.view.InsetsState,android.util.SparseArray)>(r1, $r13, $r12);

        $r14 = virtualinvoke r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowContainer getParent()>();

        $r15 = virtualinvoke $r14.<com.android.server.wm.WindowContainer: android.content.res.Configuration getConfiguration()>();

        virtualinvoke r0.<com.android.server.wm.WindowToken: void onConfigurationChanged(android.content.res.Configuration)>($r15);

        specialinvoke r0.<com.android.server.wm.WindowToken: void notifyFixedRotationTransform(boolean)>(1);

        return;
    }

    void assignLayer(android.view.SurfaceControl$Transaction, int)
    {
        com.android.server.wm.WindowToken r0;
        android.view.SurfaceControl$Transaction r1;
        int i0, $i1;
        boolean $z0;
        com.android.server.wm.DisplayContent $r2;
        com.android.server.wm.TaskDisplayArea $r3;
        android.view.SurfaceControl $r4;

        r0 := @this: com.android.server.wm.WindowToken;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        i0 := @parameter1: int;

        $i1 = r0.<com.android.server.wm.WindowToken: int windowType>;

        if $i1 != 2034 goto label1;

        $r2 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.DisplayContent mDisplayContent>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.DisplayContent: com.android.server.wm.TaskDisplayArea getDefaultTaskDisplayArea()>();

        $r4 = virtualinvoke $r3.<com.android.server.wm.TaskDisplayArea: android.view.SurfaceControl getSplitScreenDividerAnchor()>();

        specialinvoke r0.<com.android.server.wm.WindowContainer: void assignRelativeLayer(android.view.SurfaceControl$Transaction,android.view.SurfaceControl,int)>(r1, $r4, 1);

        goto label3;

     label1:
        $z0 = r0.<com.android.server.wm.WindowToken: boolean mRoundedCornerOverlay>;

        if $z0 == 0 goto label2;

        specialinvoke r0.<com.android.server.wm.WindowContainer: void assignLayer(android.view.SurfaceControl$Transaction,int)>(r1, 1073741826);

        goto label3;

     label2:
        specialinvoke r0.<com.android.server.wm.WindowContainer: void assignLayer(android.view.SurfaceControl$Transaction,int)>(r1, i0);

     label3:
        return;
    }

    boolean canLayerAboveSystemBars()
    {
        com.android.server.wm.WindowToken r0;
        int i0, i1, $i2;
        com.android.server.wm.WindowManagerService $r1, $r3;
        boolean $z0, $z1, $z2, z3;
        com.android.server.policy.WindowManagerPolicy $r2, $r4;

        r0 := @this: com.android.server.wm.WindowToken;

        $r1 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowManagerService mWmService>;

        $r2 = $r1.<com.android.server.wm.WindowManagerService: com.android.server.policy.WindowManagerPolicy mPolicy>;

        $i2 = r0.<com.android.server.wm.WindowToken: int windowType>;

        $z0 = r0.<com.android.server.wm.WindowToken: boolean mOwnerCanManageAppTokens>;

        i0 = interfaceinvoke $r2.<com.android.server.policy.WindowManagerPolicy: int getWindowLayerFromTypeLw(int,boolean)>($i2, $z0);

        $r3 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowManagerService mWmService>;

        $r4 = $r3.<com.android.server.wm.WindowManagerService: com.android.server.policy.WindowManagerPolicy mPolicy>;

        $z1 = r0.<com.android.server.wm.WindowToken: boolean mOwnerCanManageAppTokens>;

        i1 = interfaceinvoke $r4.<com.android.server.policy.WindowManagerPolicy: int getWindowLayerFromTypeLw(int,boolean)>(2019, $z1);

        $z2 = r0.<com.android.server.wm.WindowToken: boolean mOwnerCanManageAppTokens>;

        if $z2 == 0 goto label1;

        if i0 <= i1 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        return z3;
    }

    android.view.DisplayAdjustments$FixedRotationAdjustments createFixedRotationAdjustmentsIfNeeded()
    {
        com.android.server.wm.WindowToken r0;
        boolean $z0;
        android.view.DisplayAdjustments$FixedRotationAdjustments $r1;
        com.android.server.wm.WindowToken$FixedRotationTransformState $r2, $r4;
        android.view.DisplayInfo $r3, $r5;
        android.view.DisplayCutout $r6;
        int $i0;

        r0 := @this: com.android.server.wm.WindowToken;

        $z0 = virtualinvoke r0.<com.android.server.wm.WindowToken: boolean isFixedRotationTransforming()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = new android.view.DisplayAdjustments$FixedRotationAdjustments;

        $r2 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowToken$FixedRotationTransformState mFixedRotationTransformState>;

        $r3 = $r2.<com.android.server.wm.WindowToken$FixedRotationTransformState: android.view.DisplayInfo mDisplayInfo>;

        $i0 = $r3.<android.view.DisplayInfo: int rotation>;

        $r4 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowToken$FixedRotationTransformState mFixedRotationTransformState>;

        $r5 = $r4.<com.android.server.wm.WindowToken$FixedRotationTransformState: android.view.DisplayInfo mDisplayInfo>;

        $r6 = $r5.<android.view.DisplayInfo: android.view.DisplayCutout displayCutout>;

        specialinvoke $r1.<android.view.DisplayAdjustments$FixedRotationAdjustments: void <init>(int,android.view.DisplayCutout)>($i0, $r6);

        return $r1;
    }

    void createSurfaceControl(boolean)
    {
        com.android.server.wm.WindowToken r0;
        boolean z0, $z1;

        r0 := @this: com.android.server.wm.WindowToken;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.server.wm.WindowToken: boolean mFromClientToken>;

        if $z1 == 0 goto label1;

        if z0 == 0 goto label2;

     label1:
        specialinvoke r0.<com.android.server.wm.WindowContainer: void createSurfaceControl(boolean)>(z0);

     label2:
        return;
    }

    void dump(java.io.PrintWriter, java.lang.String, boolean)
    {
        com.android.server.wm.WindowToken r0;
        java.io.PrintWriter r1;
        java.lang.String r2;
        boolean z0, $z1, $z2, $z3;
        com.android.server.wm.WindowList $r3;
        int $i0;
        com.android.server.wm.WindowToken$FixedRotationTransformState $r4;
        android.content.res.Configuration $r5;

        r0 := @this: com.android.server.wm.WindowToken;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.android.server.wm.WindowContainer: void dump(java.io.PrintWriter,java.lang.String,boolean)>(r1, r2, z0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("windows=");

        $r3 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowList mChildren>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r3);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("windowType=");

        $i0 = r0.<com.android.server.wm.WindowToken: int windowType>;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>($i0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" hasVisible=");

        $z1 = r0.<com.android.server.wm.WindowToken: boolean hasVisible>;

        virtualinvoke r1.<java.io.PrintWriter: void print(boolean)>($z1);

        $z2 = r0.<com.android.server.wm.WindowToken: boolean waitingToShow>;

        if $z2 == 0 goto label1;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" waitingToShow=true");

     label1:
        virtualinvoke r1.<java.io.PrintWriter: void println()>();

        $z3 = virtualinvoke r0.<com.android.server.wm.WindowToken: boolean hasFixedRotationTransform()>();

        if $z3 == 0 goto label2;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("fixedRotationConfig=");

        $r4 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowToken$FixedRotationTransformState mFixedRotationTransformState>;

        $r5 = $r4.<com.android.server.wm.WindowToken$FixedRotationTransformState: android.content.res.Configuration mRotatedOverrideConfiguration>;

        virtualinvoke r1.<java.io.PrintWriter: void println(java.lang.Object)>($r5);

     label2:
        return;
    }

    public void dumpDebug(android.util.proto.ProtoOutputStream, long, int)
    {
        com.android.server.wm.WindowToken r0;
        android.util.proto.ProtoOutputStream r1;
        int i0, $i1;
        boolean $z0, $z1, $z2;
        long l2, l3;

        r0 := @this: com.android.server.wm.WindowToken;

        r1 := @parameter0: android.util.proto.ProtoOutputStream;

        l2 := @parameter1: long;

        i0 := @parameter2: int;

        if i0 != 2 goto label1;

        $z2 = virtualinvoke r0.<com.android.server.wm.WindowToken: boolean isVisible()>();

        if $z2 != 0 goto label1;

        return;

     label1:
        l3 = virtualinvoke r1.<android.util.proto.ProtoOutputStream: long start(long)>(l2);

        specialinvoke r0.<com.android.server.wm.WindowContainer: void dumpDebug(android.util.proto.ProtoOutputStream,long,int)>(r1, 1146756268033L, i0);

        $i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,int)>(1120986464258L, $i1);

        $z0 = r0.<com.android.server.wm.WindowToken: boolean waitingToShow>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366149L, $z0);

        $z1 = r0.<com.android.server.wm.WindowToken: boolean paused>;

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void write(long,boolean)>(1133871366150L, $z1);

        virtualinvoke r1.<android.util.proto.ProtoOutputStream: void end(long)>(l3);

        return;
    }

    void finishFixedRotationTransform()
    {
        com.android.server.wm.WindowToken r0;

        r0 := @this: com.android.server.wm.WindowToken;

        virtualinvoke r0.<com.android.server.wm.WindowToken: void finishFixedRotationTransform(java.lang.Runnable)>(null);

        return;
    }

    void finishFixedRotationTransform(java.lang.Runnable)
    {
        com.android.server.wm.WindowToken r0, $r7, $r10;
        java.lang.Runnable r1;
        com.android.server.wm.WindowToken$FixedRotationTransformState r2;
        java.util.ArrayList $r3, $r4, $r5, $r8;
        int $i0, $i1, i2, i3;
        java.lang.Object $r6, $r9;

        r0 := @this: com.android.server.wm.WindowToken;

        r1 := @parameter0: java.lang.Runnable;

        r2 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowToken$FixedRotationTransformState mFixedRotationTransformState>;

        if r2 != null goto label1;

        return;

     label1:
        virtualinvoke r2.<com.android.server.wm.WindowToken$FixedRotationTransformState: void resetTransform()>();

        r2.<com.android.server.wm.WindowToken$FixedRotationTransformState: boolean mIsTransforming> = 0;

        if r1 == null goto label2;

        interfaceinvoke r1.<java.lang.Runnable: void run()>();

        goto label4;

     label2:
        $r3 = r2.<com.android.server.wm.WindowToken$FixedRotationTransformState: java.util.ArrayList mAssociatedTokens>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i2 = $i0 - 1;

     label3:
        if i2 < 0 goto label4;

        $r8 = r2.<com.android.server.wm.WindowToken$FixedRotationTransformState: java.util.ArrayList mAssociatedTokens>;

        $r9 = virtualinvoke $r8.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r10 = (com.android.server.wm.WindowToken) $r9;

        specialinvoke $r10.<com.android.server.wm.WindowToken: void cancelFixedRotationTransform()>();

        i2 = i2 + -1;

        goto label3;

     label4:
        $r4 = r2.<com.android.server.wm.WindowToken$FixedRotationTransformState: java.util.ArrayList mAssociatedTokens>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        i3 = $i1 - 1;

     label5:
        if i3 < 0 goto label6;

        $r5 = r2.<com.android.server.wm.WindowToken$FixedRotationTransformState: java.util.ArrayList mAssociatedTokens>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r7 = (com.android.server.wm.WindowToken) $r6;

        specialinvoke $r7.<com.android.server.wm.WindowToken: void cleanUpFixedRotationTransformState()>();

        i3 = i3 + -1;

        goto label5;

     label6:
        return;
    }

    android.graphics.Rect getFixedRotationBarContentFrame(int)
    {
        com.android.server.wm.WindowToken r0;
        int i0;
        boolean $z0;
        com.android.server.wm.WindowToken$FixedRotationTransformState $r1;
        android.util.SparseArray $r2;
        java.lang.Object $r3;
        android.graphics.Rect r4;

        r0 := @this: com.android.server.wm.WindowToken;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<com.android.server.wm.WindowToken: boolean isFixedRotationTransforming()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowToken$FixedRotationTransformState mFixedRotationTransformState>;

        $r2 = $r1.<com.android.server.wm.WindowToken$FixedRotationTransformState: android.util.SparseArray mBarContentFrames>;

        $r3 = virtualinvoke $r2.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r4 = (android.graphics.Rect) $r3;

        goto label2;

     label1:
        r4 = null;

     label2:
        return r4;
    }

    android.graphics.Rect getFixedRotationTransformDisplayBounds()
    {
        com.android.server.wm.WindowToken r0;
        boolean $z0;
        com.android.server.wm.WindowToken$FixedRotationTransformState $r1;
        android.content.res.Configuration $r2;
        android.app.WindowConfiguration $r3;
        android.graphics.Rect r4;

        r0 := @this: com.android.server.wm.WindowToken;

        $z0 = virtualinvoke r0.<com.android.server.wm.WindowToken: boolean isFixedRotationTransforming()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowToken$FixedRotationTransformState mFixedRotationTransformState>;

        $r2 = $r1.<com.android.server.wm.WindowToken$FixedRotationTransformState: android.content.res.Configuration mRotatedOverrideConfiguration>;

        $r3 = $r2.<android.content.res.Configuration: android.app.WindowConfiguration windowConfiguration>;

        r4 = virtualinvoke $r3.<android.app.WindowConfiguration: android.graphics.Rect getBounds()>();

        goto label2;

     label1:
        r4 = null;

     label2:
        return r4;
    }

    com.android.server.wm.DisplayFrames getFixedRotationTransformDisplayFrames()
    {
        com.android.server.wm.WindowToken r0;
        boolean $z0;
        com.android.server.wm.WindowToken$FixedRotationTransformState $r1;
        com.android.server.wm.DisplayFrames r2;

        r0 := @this: com.android.server.wm.WindowToken;

        $z0 = virtualinvoke r0.<com.android.server.wm.WindowToken: boolean isFixedRotationTransforming()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowToken$FixedRotationTransformState mFixedRotationTransformState>;

        r2 = $r1.<com.android.server.wm.WindowToken$FixedRotationTransformState: com.android.server.wm.DisplayFrames mDisplayFrames>;

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    android.view.DisplayInfo getFixedRotationTransformDisplayInfo()
    {
        com.android.server.wm.WindowToken r0;
        boolean $z0;
        com.android.server.wm.WindowToken$FixedRotationTransformState $r1;
        android.view.DisplayInfo r2;

        r0 := @this: com.android.server.wm.WindowToken;

        $z0 = virtualinvoke r0.<com.android.server.wm.WindowToken: boolean isFixedRotationTransforming()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowToken$FixedRotationTransformState mFixedRotationTransformState>;

        r2 = $r1.<com.android.server.wm.WindowToken$FixedRotationTransformState: android.view.DisplayInfo mDisplayInfo>;

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    android.view.InsetsState getFixedRotationTransformInsetsState()
    {
        com.android.server.wm.WindowToken r0;
        boolean $z0;
        com.android.server.wm.WindowToken$FixedRotationTransformState $r1;
        android.view.InsetsState r2;

        r0 := @this: com.android.server.wm.WindowToken;

        $z0 = virtualinvoke r0.<com.android.server.wm.WindowToken: boolean isFixedRotationTransforming()>();

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowToken$FixedRotationTransformState mFixedRotationTransformState>;

        r2 = $r1.<com.android.server.wm.WindowToken$FixedRotationTransformState: android.view.InsetsState mInsetsState>;

        goto label2;

     label1:
        r2 = null;

     label2:
        return r2;
    }

    java.lang.String getName()
    {
        com.android.server.wm.WindowToken r0;
        java.lang.String $r1;

        r0 := @this: com.android.server.wm.WindowToken;

        $r1 = virtualinvoke r0.<com.android.server.wm.WindowToken: java.lang.String toString()>();

        return $r1;
    }

    int getOwnerUid()
    {
        com.android.server.wm.WindowToken r0;
        int $i0;

        r0 := @this: com.android.server.wm.WindowToken;

        $i0 = r0.<com.android.server.wm.WindowToken: int mOwnerUid>;

        return $i0;
    }

    long getProtoFieldId()
    {
        com.android.server.wm.WindowToken r0;

        r0 := @this: com.android.server.wm.WindowToken;

        return 1146756268039L;
    }

    com.android.server.wm.WindowState getReplacingWindow()
    {
        com.android.server.wm.WindowToken r0;
        com.android.server.wm.WindowState r1, $r5;
        com.android.server.wm.WindowList $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;

        r0 := @this: com.android.server.wm.WindowToken;

        $r2 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r2.<com.android.server.wm.WindowList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r3 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowList mChildren>;

        $r4 = virtualinvoke $r3.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        $r5 = (com.android.server.wm.WindowState) $r4;

        r1 = virtualinvoke $r5.<com.android.server.wm.WindowState: com.android.server.wm.WindowState getReplacingWindow()>();

        if r1 == null goto label2;

        return r1;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return null;
    }

    float getSizeCompatScale()
    {
        com.android.server.wm.WindowToken r0;
        com.android.server.wm.DisplayContent $r1;
        float $f0;

        r0 := @this: com.android.server.wm.WindowToken;

        $r1 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.DisplayContent mDisplayContent>;

        $f0 = $r1.<com.android.server.wm.DisplayContent: float mCompatibleScreenScale>;

        return $f0;
    }

    int getWindowLayerFromType()
    {
        com.android.server.wm.WindowToken r0;
        com.android.server.wm.WindowManagerService $r1;
        boolean $z0;
        int $i0, $i1;
        com.android.server.policy.WindowManagerPolicy $r2;

        r0 := @this: com.android.server.wm.WindowToken;

        $r1 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowManagerService mWmService>;

        $r2 = $r1.<com.android.server.wm.WindowManagerService: com.android.server.policy.WindowManagerPolicy mPolicy>;

        $i0 = r0.<com.android.server.wm.WindowToken: int windowType>;

        $z0 = r0.<com.android.server.wm.WindowToken: boolean mOwnerCanManageAppTokens>;

        $i1 = interfaceinvoke $r2.<com.android.server.policy.WindowManagerPolicy: int getWindowLayerFromTypeLw(int,boolean)>($i0, $z0);

        return $i1;
    }

    boolean hasAnimatingFixedRotationTransition()
    {
        com.android.server.wm.WindowToken r0, $r5;
        java.util.ArrayList $r1, $r3;
        int $i0, i1;
        com.android.server.wm.WindowToken$FixedRotationTransformState $r2, r6;
        java.lang.Object $r4;
        boolean $z0;
        com.android.server.wm.ActivityRecord r7;

        r0 := @this: com.android.server.wm.WindowToken;

        r6 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowToken$FixedRotationTransformState mFixedRotationTransformState>;

        if r6 != null goto label1;

        return 0;

     label1:
        $r1 = r6.<com.android.server.wm.WindowToken$FixedRotationTransformState: java.util.ArrayList mAssociatedTokens>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = $i0 - 1;

     label2:
        if i1 < 0 goto label4;

        $r2 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowToken$FixedRotationTransformState mFixedRotationTransformState>;

        $r3 = $r2.<com.android.server.wm.WindowToken$FixedRotationTransformState: java.util.ArrayList mAssociatedTokens>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r5 = (com.android.server.wm.WindowToken) $r4;

        r7 = virtualinvoke $r5.<com.android.server.wm.WindowToken: com.android.server.wm.ActivityRecord asActivityRecord()>();

        if r7 == null goto label3;

        $z0 = virtualinvoke r7.<com.android.server.wm.ActivityRecord: boolean isAnimating(int)>(3);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + -1;

        goto label2;

     label4:
        return 0;
    }

    boolean hasFixedRotationTransform()
    {
        com.android.server.wm.WindowToken r0;
        com.android.server.wm.WindowToken$FixedRotationTransformState $r1;
        boolean z0;

        r0 := @this: com.android.server.wm.WindowToken;

        $r1 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowToken$FixedRotationTransformState mFixedRotationTransformState>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    boolean hasFixedRotationTransform(com.android.server.wm.WindowToken)
    {
        com.android.server.wm.WindowToken r0, r1;
        com.android.server.wm.WindowToken$FixedRotationTransformState r2, $r3;
        boolean z0;

        r0 := @this: com.android.server.wm.WindowToken;

        r1 := @parameter0: com.android.server.wm.WindowToken;

        r2 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowToken$FixedRotationTransformState mFixedRotationTransformState>;

        z0 = 0;

        if r2 == null goto label4;

        if r1 != null goto label1;

        goto label4;

     label1:
        if r0 == r1 goto label2;

        $r3 = r1.<com.android.server.wm.WindowToken: com.android.server.wm.WindowToken$FixedRotationTransformState mFixedRotationTransformState>;

        if r2 != $r3 goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;

     label4:
        return 0;
    }

    boolean isEmpty()
    {
        com.android.server.wm.WindowToken r0;
        com.android.server.wm.WindowList $r1;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowToken;

        $r1 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowList mChildren>;

        $z0 = virtualinvoke $r1.<com.android.server.wm.WindowList: boolean isEmpty()>();

        return $z0;
    }

    boolean isFinishingFixedRotationTransform()
    {
        com.android.server.wm.WindowToken r0;
        com.android.server.wm.WindowToken$FixedRotationTransformState r1;
        boolean $z0, z1;

        r0 := @this: com.android.server.wm.WindowToken;

        r1 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowToken$FixedRotationTransformState mFixedRotationTransformState>;

        if r1 == null goto label1;

        $z0 = r1.<com.android.server.wm.WindowToken$FixedRotationTransformState: boolean mIsTransforming>;

        if $z0 != 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    protected boolean isFirstChildWindowGreaterThanSecond(com.android.server.wm.WindowState, com.android.server.wm.WindowState)
    {
        com.android.server.wm.WindowToken r0;
        com.android.server.wm.WindowState r1, r2;
        int $i0, $i1;
        boolean z0;

        r0 := @this: com.android.server.wm.WindowToken;

        r1 := @parameter0: com.android.server.wm.WindowState;

        r2 := @parameter1: com.android.server.wm.WindowState;

        $i1 = r1.<com.android.server.wm.WindowState: int mBaseLayer>;

        $i0 = r2.<com.android.server.wm.WindowState: int mBaseLayer>;

        if $i1 < $i0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    boolean isFixedRotationTransforming()
    {
        com.android.server.wm.WindowToken r0;
        com.android.server.wm.WindowToken$FixedRotationTransformState r1;
        boolean $z0, z1;

        r0 := @this: com.android.server.wm.WindowToken;

        r1 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowToken$FixedRotationTransformState mFixedRotationTransformState>;

        if r1 == null goto label1;

        $z0 = r1.<com.android.server.wm.WindowToken$FixedRotationTransformState: boolean mIsTransforming>;

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public int lambda$new$0$WindowToken(com.android.server.wm.WindowState, com.android.server.wm.WindowState)
    {
        com.android.server.wm.WindowToken r0, $r1, $r9;
        java.lang.StringBuilder $r2, $r10;
        java.lang.IllegalArgumentException $r7, $r15;
        java.lang.String $r8, $r16;
        boolean $z0;
        com.android.server.wm.WindowState r17, r18;
        byte b0;

        r0 := @this: com.android.server.wm.WindowToken;

        r17 := @parameter0: com.android.server.wm.WindowState;

        r18 := @parameter1: com.android.server.wm.WindowState;

        $r1 = r17.<com.android.server.wm.WindowState: com.android.server.wm.WindowToken mToken>;

        if $r1 != r0 goto label4;

        $r9 = r18.<com.android.server.wm.WindowState: com.android.server.wm.WindowToken mToken>;

        if $r9 != r0 goto label3;

        $z0 = virtualinvoke r0.<com.android.server.wm.WindowToken: boolean isFirstChildWindowGreaterThanSecond(com.android.server.wm.WindowState,com.android.server.wm.WindowState)>(r17, r18);

        if $z0 == 0 goto label1;

        b0 = 1;

        goto label2;

     label1:
        b0 = -1;

     label2:
        return b0;

     label3:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("existingWindow=");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r18);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a child of token=");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label4:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("newWindow=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a child of token=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    void linkFixedRotationTransform(com.android.server.wm.WindowToken)
    {
        com.android.server.wm.WindowToken r0, r5;
        com.android.server.wm.WindowToken$FixedRotationTransformState $r1, r6;
        java.util.ArrayList $r2;
        com.android.server.wm.WindowContainer $r3;
        android.content.res.Configuration $r4;

        r0 := @this: com.android.server.wm.WindowToken;

        r5 := @parameter0: com.android.server.wm.WindowToken;

        $r1 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowToken$FixedRotationTransformState mFixedRotationTransformState>;

        if $r1 == null goto label1;

        return;

     label1:
        r6 = r5.<com.android.server.wm.WindowToken: com.android.server.wm.WindowToken$FixedRotationTransformState mFixedRotationTransformState>;

        if r6 != null goto label2;

        return;

     label2:
        r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowToken$FixedRotationTransformState mFixedRotationTransformState> = r6;

        $r2 = r6.<com.android.server.wm.WindowToken$FixedRotationTransformState: java.util.ArrayList mAssociatedTokens>;

        virtualinvoke $r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

        $r3 = virtualinvoke r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowContainer getParent()>();

        $r4 = virtualinvoke $r3.<com.android.server.wm.WindowContainer: android.content.res.Configuration getConfiguration()>();

        virtualinvoke r0.<com.android.server.wm.WindowToken: void onConfigurationChanged(android.content.res.Configuration)>($r4);

        specialinvoke r0.<com.android.server.wm.WindowToken: void notifyFixedRotationTransform(boolean)>(1);

        return;
    }

    android.view.SurfaceControl$Builder makeSurface()
    {
        com.android.server.wm.WindowToken r0;
        android.view.SurfaceControl$Builder r1;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowToken;

        r1 = specialinvoke r0.<com.android.server.wm.WindowContainer: android.view.SurfaceControl$Builder makeSurface()>();

        $z0 = r0.<com.android.server.wm.WindowToken: boolean mRoundedCornerOverlay>;

        if $z0 == 0 goto label1;

        virtualinvoke r1.<android.view.SurfaceControl$Builder: android.view.SurfaceControl$Builder setParent(android.view.SurfaceControl)>(null);

     label1:
        return r1;
    }

    void onCancelFixedRotationTransform(int)
    {
        com.android.server.wm.WindowToken r0;
        int i0;

        r0 := @this: com.android.server.wm.WindowToken;

        i0 := @parameter0: int;

        return;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        com.android.server.wm.WindowToken r0;
        android.content.res.Configuration r1;

        r0 := @this: com.android.server.wm.WindowToken;

        r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<com.android.server.wm.WindowContainer: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        virtualinvoke r0.<com.android.server.wm.WindowToken: void reportConfigToWindowTokenClient()>();

        return;
    }

    void onDisplayChanged(com.android.server.wm.DisplayContent)
    {
        com.android.server.wm.WindowToken r0;
        com.android.server.wm.DisplayContent r1;

        r0 := @this: com.android.server.wm.WindowToken;

        r1 := @parameter0: com.android.server.wm.DisplayContent;

        virtualinvoke r1.<com.android.server.wm.DisplayContent: void reParentWindowToken(com.android.server.wm.WindowToken)>(r0);

        specialinvoke r0.<com.android.server.wm.WindowContainer: void onDisplayChanged(com.android.server.wm.DisplayContent)>(r1);

        virtualinvoke r0.<com.android.server.wm.WindowToken: void reportConfigToWindowTokenClient()>();

        return;
    }

    void removeAllWindowsIfPossible()
    {
        com.android.server.wm.WindowToken r0;
        com.android.server.wm.WindowState r1;
        java.lang.String r2;
        com.android.server.wm.WindowList $r3, $r4;
        int $i0, i1;
        java.lang.Object $r5;
        boolean $z0;
        java.lang.Object[] $r6;
        com.android.server.wm.ProtoLogGroup $r7;

        r0 := @this: com.android.server.wm.WindowToken;

        $r3 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r3.<com.android.server.wm.WindowList: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r4 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowList mChildren>;

        $r5 = virtualinvoke $r4.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        r1 = (com.android.server.wm.WindowState) $r5;

        $z0 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_DEBUG_WINDOW_MOVEMENT_enabled>;

        if $z0 == 0 goto label2;

        r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        $r7 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_DEBUG_WINDOW_MOVEMENT>;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r2;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void w(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r7, 913494177, 0, null, $r6);

     label2:
        virtualinvoke r1.<com.android.server.wm.WindowState: void removeIfPossible()>();

        i1 = i1 + -1;

        goto label1;

     label3:
        return;
    }

    void removeImmediately()
    {
        com.android.server.wm.WindowToken r0;
        com.android.server.wm.DisplayContent $r1, $r3;
        android.os.IBinder $r2;

        r0 := @this: com.android.server.wm.WindowToken;

        $r1 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.DisplayContent mDisplayContent>;

        if $r1 == null goto label1;

        $r3 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.DisplayContent mDisplayContent>;

        $r2 = r0.<com.android.server.wm.WindowToken: android.os.IBinder token>;

        virtualinvoke $r3.<com.android.server.wm.DisplayContent: com.android.server.wm.WindowToken removeWindowToken(android.os.IBinder)>($r2);

     label1:
        specialinvoke r0.<com.android.server.wm.WindowContainer: void removeImmediately()>();

        specialinvoke r0.<com.android.server.wm.WindowToken: void reportWindowTokenRemovedToClient()>();

        return;
    }

    void reportConfigToWindowTokenClient()
    {
        com.android.server.wm.WindowToken r0;
        android.content.res.Configuration r1, $r2, $r4, $r5, $r7;
        int i0, $i1, $i2;
        boolean $z0, $z1;
        com.android.server.wm.DisplayContent $r3;
        android.os.IBinder $r6;
        android.os.RemoteException $r8;
        java.lang.Object[] $r9;
        com.android.server.wm.ProtoLogGroup $r10;
        android.app.IWindowToken r11;

        r0 := @this: com.android.server.wm.WindowToken;

        $z0 = specialinvoke r0.<com.android.server.wm.WindowToken: boolean shouldReportToClient()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.server.wm.WindowToken: android.content.res.Configuration mLastReportedConfig>;

        if $r2 != null goto label2;

        $r7 = new android.content.res.Configuration;

        specialinvoke $r7.<android.content.res.Configuration: void <init>()>();

        r0.<com.android.server.wm.WindowToken: android.content.res.Configuration mLastReportedConfig> = $r7;

     label2:
        r1 = virtualinvoke r0.<com.android.server.wm.WindowToken: android.content.res.Configuration getConfiguration()>();

        $r3 = virtualinvoke r0.<com.android.server.wm.WindowToken: com.android.server.wm.DisplayContent getDisplayContent()>();

        i0 = virtualinvoke $r3.<com.android.server.wm.DisplayContent: int getDisplayId()>();

        $r4 = r0.<com.android.server.wm.WindowToken: android.content.res.Configuration mLastReportedConfig>;

        $i1 = virtualinvoke r1.<android.content.res.Configuration: int diff(android.content.res.Configuration)>($r4);

        if $i1 != 0 goto label3;

        $i2 = r0.<com.android.server.wm.WindowToken: int mLastReportedDisplay>;

        if i0 != $i2 goto label3;

        return;

     label3:
        $r5 = r0.<com.android.server.wm.WindowToken: android.content.res.Configuration mLastReportedConfig>;

        virtualinvoke $r5.<android.content.res.Configuration: void setTo(android.content.res.Configuration)>(r1);

        r0.<com.android.server.wm.WindowToken: int mLastReportedDisplay> = i0;

        $r6 = r0.<com.android.server.wm.WindowToken: android.os.IBinder token>;

        r11 = staticinvoke <android.app.IWindowToken$Stub: android.app.IWindowToken asInterface(android.os.IBinder)>($r6);

     label4:
        interfaceinvoke r11.<android.app.IWindowToken: void onConfigurationChanged(android.content.res.Configuration,int)>(r1, i0);

     label5:
        goto label7;

     label6:
        $r8 := @caughtexception;

        $z1 = <com.android.server.protolog.ProtoLog$Cache: boolean WM_ERROR_enabled>;

        if $z1 == 0 goto label7;

        $r10 = <com.android.server.wm.ProtoLogGroup: com.android.server.wm.ProtoLogGroup WM_ERROR>;

        $r9 = (java.lang.Object[]) null;

        staticinvoke <com.android.server.protolog.ProtoLogImpl: void w(com.android.server.protolog.common.IProtoLogGroup,int,int,java.lang.String,java.lang.Object[])>($r10, -639305784, 0, "Could not report config changes to the window token client.", $r9);

     label7:
        return;

        catch android.os.RemoteException from label4 to label5 with label6;
    }

    void resetSurfacePositionForAnimationLeash(android.view.SurfaceControl$Transaction)
    {
        com.android.server.wm.WindowToken r0;
        android.view.SurfaceControl$Transaction r1;
        boolean $z0;

        r0 := @this: com.android.server.wm.WindowToken;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        $z0 = virtualinvoke r0.<com.android.server.wm.WindowToken: boolean isFixedRotationTransforming()>();

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.server.wm.WindowContainer: void resetSurfacePositionForAnimationLeash(android.view.SurfaceControl$Transaction)>(r1);

     label1:
        return;
    }

    void resolveOverrideConfiguration(android.content.res.Configuration)
    {
        com.android.server.wm.WindowToken r0;
        android.content.res.Configuration r1, $r2, $r4;
        boolean $z0;
        com.android.server.wm.WindowToken$FixedRotationTransformState $r3;

        r0 := @this: com.android.server.wm.WindowToken;

        r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<com.android.server.wm.WindowContainer: void resolveOverrideConfiguration(android.content.res.Configuration)>(r1);

        $z0 = virtualinvoke r0.<com.android.server.wm.WindowToken: boolean isFixedRotationTransforming()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.android.server.wm.WindowToken: android.content.res.Configuration getResolvedOverrideConfiguration()>();

        $r3 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowToken$FixedRotationTransformState mFixedRotationTransformState>;

        $r4 = $r3.<com.android.server.wm.WindowToken$FixedRotationTransformState: android.content.res.Configuration mRotatedOverrideConfiguration>;

        virtualinvoke $r2.<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>($r4);

     label1:
        return;
    }

    void setExiting()
    {
        com.android.server.wm.WindowToken r0;
        int i0, i1;
        boolean z0, $z1, $z2, $z5, z6;
        com.android.server.wm.ActivityRecord r1;
        com.android.server.wm.WindowList $r2, $r8;
        com.android.server.wm.DisplayContent $r3;
        java.util.ArrayList $r4;
        com.android.server.wm.WindowManagerService $r5, $r7;
        com.android.server.wm.WindowSurfacePlacer $r6;
        java.lang.Object $r9;
        com.android.server.wm.WindowState $r10;

        r0 := @this: com.android.server.wm.WindowToken;

        $z1 = virtualinvoke r0.<com.android.server.wm.WindowToken: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        specialinvoke r0.<com.android.server.wm.WindowContainer: void removeImmediately()>();

        return;

     label1:
        r0.<com.android.server.wm.WindowToken: boolean mPersistOnEmpty> = 0;

        $z2 = virtualinvoke r0.<com.android.server.wm.WindowToken: boolean isVisible()>();

        if $z2 != 0 goto label2;

        return;

     label2:
        $r2 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowList mChildren>;

        i0 = virtualinvoke $r2.<com.android.server.wm.WindowList: int size()>();

        z6 = 0;

        z0 = virtualinvoke r0.<com.android.server.wm.WindowToken: boolean isAnimating(int)>(7);

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        $r8 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowList mChildren>;

        $r9 = virtualinvoke $r8.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i1);

        $r10 = (com.android.server.wm.WindowState) $r9;

        $z5 = virtualinvoke $r10.<com.android.server.wm.WindowState: boolean onSetAppExiting()>();

        z6 = z6 | $z5;

        i1 = i1 + 1;

        goto label3;

     label4:
        r1 = virtualinvoke r0.<com.android.server.wm.WindowToken: com.android.server.wm.ActivityRecord asActivityRecord()>();

        if r1 == null goto label5;

        virtualinvoke r1.<com.android.server.wm.ActivityRecord: void setVisible(boolean)>(0);

     label5:
        if z6 == 0 goto label6;

        $r5 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowManagerService mWmService>;

        $r6 = $r5.<com.android.server.wm.WindowManagerService: com.android.server.wm.WindowSurfacePlacer mWindowPlacerLocked>;

        virtualinvoke $r6.<com.android.server.wm.WindowSurfacePlacer: void performSurfacePlacement()>();

        $r7 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowManagerService mWmService>;

        virtualinvoke $r7.<com.android.server.wm.WindowManagerService: boolean updateFocusedWindowLocked(int,boolean)>(0, 0);

     label6:
        if z0 == 0 goto label7;

        $r3 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.DisplayContent mDisplayContent>;

        $r4 = $r3.<com.android.server.wm.DisplayContent: java.util.ArrayList mExitingTokens>;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

     label7:
        return;
    }

    public java.lang.String toString()
    {
        com.android.server.wm.WindowToken r0;
        java.lang.String $r2, $r3, $r6, $r12;
        java.lang.StringBuilder $r4;
        int $i0;
        android.os.IBinder $r9;

        r0 := @this: com.android.server.wm.WindowToken;

        $r2 = r0.<com.android.server.wm.WindowToken: java.lang.String stringName>;

        if $r2 != null goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WindowToken{");

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r9 = r0.<com.android.server.wm.WindowToken: android.os.IBinder token>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r12 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.server.wm.WindowToken: java.lang.String stringName> = $r12;

     label1:
        $r3 = r0.<com.android.server.wm.WindowToken: java.lang.String stringName>;

        return $r3;
    }

    void updateSurfacePosition(android.view.SurfaceControl$Transaction)
    {
        com.android.server.wm.WindowToken r0;
        android.view.SurfaceControl$Transaction r1;
        boolean $z0;
        com.android.server.wm.WindowToken$FixedRotationTransformState $r2;

        r0 := @this: com.android.server.wm.WindowToken;

        r1 := @parameter0: android.view.SurfaceControl$Transaction;

        specialinvoke r0.<com.android.server.wm.WindowContainer: void updateSurfacePosition(android.view.SurfaceControl$Transaction)>(r1);

        $z0 = virtualinvoke r0.<com.android.server.wm.WindowToken: boolean isFixedRotationTransforming()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowToken$FixedRotationTransformState mFixedRotationTransformState>;

        virtualinvoke $r2.<com.android.server.wm.WindowToken$FixedRotationTransformState: void transform(com.android.server.wm.WindowContainer)>(r0);

     label1:
        return;
    }

    boolean windowsCanBeWallpaperTarget()
    {
        com.android.server.wm.WindowToken r0;
        com.android.server.wm.WindowList $r1, $r2;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r3;
        com.android.server.wm.WindowState $r4;
        android.view.WindowManager$LayoutParams $r5;

        r0 := @this: com.android.server.wm.WindowToken;

        $r1 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowList mChildren>;

        $i0 = virtualinvoke $r1.<com.android.server.wm.WindowList: int size()>();

        i3 = $i0 - 1;

     label1:
        if i3 < 0 goto label3;

        $r2 = r0.<com.android.server.wm.WindowToken: com.android.server.wm.WindowList mChildren>;

        $r3 = virtualinvoke $r2.<com.android.server.wm.WindowList: java.lang.Object get(int)>(i3);

        $r4 = (com.android.server.wm.WindowState) $r3;

        $r5 = $r4.<com.android.server.wm.WindowState: android.view.WindowManager$LayoutParams mAttrs>;

        $i1 = $r5.<android.view.WindowManager$LayoutParams: int flags>;

        $i2 = $i1 & 1048576;

        if $i2 == 0 goto label2;

        return 1;

     label2:
        i3 = i3 + -1;

        goto label1;

     label3:
        return 0;
    }

    public static void <clinit>()
    {
        <com.android.server.wm.WindowToken: java.lang.String TAG> = "WindowManager";

        return;
    }
}
