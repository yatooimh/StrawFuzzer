public class com.android.service.ims.RcsSettingUtils extends java.lang.Object
{
    private static final int DEFAULT_AVAILABILITY_CACHE_EXPIRATION_SEC;
    private static final int DEFAULT_CAPABILITY_POLL_LIST_SUB_EXPIRATION_SEC;
    private static final int DEFAULT_NUM_ENTRIES_IN_RCL;
    private static final int DEFAULT_PUBLISH_THROTTLE_MS;
    private static final int TIMEOUT_GET_CONFIGURATION_MS;
    private static com.android.ims.internal.Logger logger;

    static void <clinit>()
    {
        com.android.ims.internal.Logger $r0;

        <com.android.service.ims.RcsSettingUtils: int TIMEOUT_GET_CONFIGURATION_MS> = 5000;

        <com.android.service.ims.RcsSettingUtils: int DEFAULT_PUBLISH_THROTTLE_MS> = 60000;

        <com.android.service.ims.RcsSettingUtils: int DEFAULT_NUM_ENTRIES_IN_RCL> = 100;

        <com.android.service.ims.RcsSettingUtils: int DEFAULT_CAPABILITY_POLL_LIST_SUB_EXPIRATION_SEC> = 30;

        <com.android.service.ims.RcsSettingUtils: int DEFAULT_AVAILABILITY_CACHE_EXPIRATION_SEC> = 30;

        $r0 = staticinvoke <com.android.ims.internal.Logger: com.android.ims.internal.Logger getLogger(java.lang.String)>("RcsSettingUtils");

        <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger> = $r0;

        return;
    }

    public void <init>()
    {
        com.android.service.ims.RcsSettingUtils r0;

        r0 := @this: com.android.service.ims.RcsSettingUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int getAvailabilityCacheExpiration(int)
    {
        android.telephony.ims.ProvisioningManager $r1;
        java.lang.StringBuilder $r2, $r7;
        java.lang.String $r5, $r9, $r11;
        java.lang.Exception $r6;
        int i1, i2;
        com.android.ims.internal.Logger r12, r14;

        i1 := @parameter0: int;

     label1:
        $r1 = staticinvoke <android.telephony.ims.ProvisioningManager: android.telephony.ims.ProvisioningManager createForSubscriptionId(int)>(i1);

        i2 = virtualinvoke $r1.<android.telephony.ims.ProvisioningManager: int getProvisioningIntValue(int)>(19);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r12 = <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAvailabilityCacheExpiration: exception=");

        $r9 = virtualinvoke $r6.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r12.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r11);

        i2 = 30;

     label4:
        r14 = <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAvailabilityCacheExpiration=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r14.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r5);

        return i2;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static int getCapabPollListSubExp(int)
    {
        android.telephony.ims.ProvisioningManager $r1;
        java.lang.StringBuilder $r2, $r7;
        java.lang.String $r5, $r9, $r11;
        java.lang.Exception $r6;
        int i1, i2;
        com.android.ims.internal.Logger r13, r14;

        i1 := @parameter0: int;

     label1:
        $r1 = staticinvoke <android.telephony.ims.ProvisioningManager: android.telephony.ims.ProvisioningManager createForSubscriptionId(int)>(i1);

        i2 = virtualinvoke $r1.<android.telephony.ims.ProvisioningManager: int getProvisioningIntValue(int)>(23);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r13 = <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getCapabPollListSubExp: exception=");

        $r9 = virtualinvoke $r6.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r13.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r11);

        i2 = 30;

     label4:
        r14 = <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getCapabPollListSubExp=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r14.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r5);

        return i2;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static boolean getCapabilityDiscoveryEnabled(int)
    {
        com.android.ims.internal.Logger r0, r14;
        android.telephony.ims.ProvisioningManager $r1;
        java.lang.StringBuilder $r2, $r7;
        java.lang.String $r5, $r9, $r11;
        java.lang.Exception $r6;
        int i0, i1;
        boolean z0;

        i0 := @parameter0: int;

        z0 = 0;

     label1:
        $r1 = staticinvoke <android.telephony.ims.ProvisioningManager: android.telephony.ims.ProvisioningManager createForSubscriptionId(int)>(i0);

        i1 = virtualinvoke $r1.<android.telephony.ims.ProvisioningManager: int getProvisioningIntValue(int)>(17);

     label2:
        z0 = 1;

        if i1 != 1 goto label3;

        goto label4;

     label3:
        z0 = 0;

     label4:
        goto label6;

     label5:
        $r6 := @caughtexception;

        r0 = <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("capabilityDiscoveryEnabled: exception=");

        $r9 = virtualinvoke $r6.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r11);

     label6:
        r14 = <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("capabilityDiscoveryEnabled=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r14.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r5);

        return z0;

        catch java.lang.Exception from label1 to label2 with label5;
    }

    public static int getDefaultSubscriptionId(android.content.Context)
    {
        android.telephony.SubscriptionInfo r0;
        java.lang.Object $r1, $r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.content.Context r3;
        android.telephony.SubscriptionManager r4;
        java.util.List r5;
        int i0, i1, i2;
        java.util.Iterator r6;

        r3 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r3.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/telephony/SubscriptionManager;");

        r4 = (android.telephony.SubscriptionManager) $r1;

        if r4 != null goto label1;

        return -1;

     label1:
        r5 = virtualinvoke r4.<android.telephony.SubscriptionManager: java.util.List getActiveSubscriptionInfoList()>();

        if r5 == null goto label7;

        $z0 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        goto label7;

     label2:
        i0 = staticinvoke <android.telephony.SubscriptionManager: int getDefaultVoiceSubscriptionId()>();

        i1 = i0;

        $z1 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubscriptionId(int)>(i0);

        if $z1 != 0 goto label3;

        i1 = staticinvoke <android.telephony.SubscriptionManager: int getDefaultDataSubscriptionId()>();

     label3:
        i2 = i1;

        $z2 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubscriptionId(int)>(i1);

        if $z2 != 0 goto label6;

        r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label4:
        i2 = i1;

        $z3 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label6;

        $r2 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r0 = (android.telephony.SubscriptionInfo) $r2;

        $z4 = virtualinvoke r0.<android.telephony.SubscriptionInfo: boolean isOpportunistic()>();

        if $z4 != 0 goto label5;

        i2 = virtualinvoke r0.<android.telephony.SubscriptionInfo: int getSubscriptionId()>();

        goto label6;

     label5:
        goto label4;

     label6:
        return i2;

     label7:
        return -1;
    }

    public static int getMaxNumbersInRCL(int)
    {
        android.telephony.ims.ProvisioningManager $r1;
        java.lang.StringBuilder $r2, $r7;
        java.lang.String $r5, $r9, $r11;
        java.lang.Exception $r6;
        int i1, i2;
        com.android.ims.internal.Logger r13, r14;

        i1 := @parameter0: int;

     label1:
        $r1 = staticinvoke <android.telephony.ims.ProvisioningManager: android.telephony.ims.ProvisioningManager createForSubscriptionId(int)>(i1);

        i2 = virtualinvoke $r1.<android.telephony.ims.ProvisioningManager: int getProvisioningIntValue(int)>(22);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r13 = <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getMaxNumbersInRCL: exception=");

        $r9 = virtualinvoke $r6.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r13.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r11);

        i2 = 100;

     label4:
        r14 = <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getMaxNumbersInRCL=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r14.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r5);

        return i2;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static int getPublishThrottle(int)
    {
        android.telephony.ims.ProvisioningManager $r1;
        java.lang.StringBuilder $r2, $r7;
        java.lang.String $r5, $r9, $r11;
        java.lang.Exception $r6;
        int i1, i2;
        com.android.ims.internal.Logger r12, r14;

        i1 := @parameter0: int;

     label1:
        $r1 = staticinvoke <android.telephony.ims.ProvisioningManager: android.telephony.ims.ProvisioningManager createForSubscriptionId(int)>(i1);

        i2 = virtualinvoke $r1.<android.telephony.ims.ProvisioningManager: int getProvisioningIntValue(int)>(21);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r12 = <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("publishThrottle: exception=");

        $r9 = virtualinvoke $r6.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r12.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r11);

        i2 = 60000;

     label4:
        r14 = <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("publishThrottle=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r14.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r5);

        return i2;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static int getSIPT1Timer(int)
    {
        android.telephony.ims.ProvisioningManager $r1;
        java.lang.StringBuilder $r2, $r7;
        java.lang.String $r5, $r9, $r11;
        java.lang.Exception $r6;
        int i1, i2;
        com.android.ims.internal.Logger r13, r14;

        i1 := @parameter0: int;

     label1:
        $r1 = staticinvoke <android.telephony.ims.ProvisioningManager: android.telephony.ims.ProvisioningManager createForSubscriptionId(int)>(i1);

        i2 = virtualinvoke $r1.<android.telephony.ims.ProvisioningManager: int getProvisioningIntValue(int)>(7);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r13 = <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getSIPT1Timer: exception=");

        $r9 = virtualinvoke $r6.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r13.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r11);

        i2 = 0;

     label4:
        r14 = <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getSIPT1Timer=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r14.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r5);

        return i2;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static boolean hasUserEnabledContactDiscovery(android.content.Context, int)
    {
        int i0;
        boolean z0;
        com.android.ims.internal.Logger r1, $r6;
        java.lang.Object $r2;
        android.telephony.ims.ImsManager $r3;
        android.telephony.ims.ImsRcsManager $r4;
        android.telephony.ims.RcsUceAdapter $r5;
        java.lang.Exception $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r10, $r12;
        android.content.Context r13;

        r13 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        if i0 != -1 goto label1;

        $r6 = <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger>;

        virtualinvoke $r6.<com.android.ims.internal.Logger: void debug(java.lang.String)>("hasUserEnabledContactDiscovery: no valid subscriptions!");

        return 0;

     label1:
        $r2 = virtualinvoke r13.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/telephony/ims/ImsManager;");

        $r3 = (android.telephony.ims.ImsManager) $r2;

        $r4 = virtualinvoke $r3.<android.telephony.ims.ImsManager: android.telephony.ims.ImsRcsManager getImsRcsManager(int)>(i0);

        $r5 = virtualinvoke $r4.<android.telephony.ims.ImsRcsManager: android.telephony.ims.RcsUceAdapter getUceAdapter()>();

        z0 = virtualinvoke $r5.<android.telephony.ims.RcsUceAdapter: boolean isUceSettingEnabled()>();

     label2:
        return z0;

     label3:
        $r7 := @caughtexception;

        r1 = <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hasUserEnabledContactDiscovery: Exception = ");

        $r10 = virtualinvoke $r7.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.ims.internal.Logger: void warn(java.lang.String)>($r12);

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static boolean isAdvancedCallingEnabledByUser(int)
    {
        int i0;
        boolean z0;
        com.android.ims.internal.Logger r1;
        android.telephony.ims.ImsMmTelManager $r3;
        java.lang.Exception $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r7, $r9;

        i0 := @parameter0: int;

     label1:
        $r3 = staticinvoke <android.telephony.ims.ImsMmTelManager: android.telephony.ims.ImsMmTelManager createForSubscriptionId(int)>(i0);

        z0 = virtualinvoke $r3.<android.telephony.ims.ImsMmTelManager: boolean isAdvancedCallingSettingEnabled()>();

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        r1 = <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isAdvancedCallingEnabledByUser exception = ");

        $r7 = virtualinvoke $r4.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.ims.internal.Logger: void warn(java.lang.String)>($r9);

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static boolean isEabProvisioned(android.content.Context, int)
    {
        java.lang.Object $r1;
        java.lang.StringBuilder $r2, $r8;
        java.lang.String $r5, $r10, $r12;
        boolean $z1, z2;
        com.android.ims.internal.Logger $r6, r18, r19;
        java.lang.Exception $r7;
        android.content.Context r13;
        int i0, i1;
        android.telephony.CarrierConfigManager r14;
        android.os.PersistableBundle r15;
        android.telephony.ims.ProvisioningManager $r16;

        r13 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        z2 = 0;

        if i0 != -1 goto label1;

        $r6 = <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger>;

        virtualinvoke $r6.<com.android.ims.internal.Logger: void debug(java.lang.String)>("isEabProvisioned: no valid subscriptions!");

        return 0;

     label1:
        $r1 = virtualinvoke r13.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("carrier_config");

        r14 = (android.telephony.CarrierConfigManager) $r1;

        if r14 == null goto label2;

        r15 = virtualinvoke r14.<android.telephony.CarrierConfigManager: android.os.PersistableBundle getConfigForSubId(int)>(i0);

        if r15 == null goto label2;

        $z1 = virtualinvoke r15.<android.os.PersistableBundle: boolean getBoolean(java.lang.String)>("carrier_volte_provisioned_bool");

        if $z1 != 0 goto label2;

        return 1;

     label2:
        $r16 = staticinvoke <android.telephony.ims.ProvisioningManager: android.telephony.ims.ProvisioningManager createForSubscriptionId(int)>(i0);

        i1 = virtualinvoke $r16.<android.telephony.ims.ProvisioningManager: int getProvisioningIntValue(int)>(25);

     label3:
        z2 = 0;

        if i1 != 1 goto label4;

        z2 = 1;

     label4:
        goto label6;

     label5:
        $r7 := @caughtexception;

        r18 = <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isEabProvisioned: exception=");

        $r10 = virtualinvoke $r7.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r18.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r12);

     label6:
        r19 = <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isEabProvisioned=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z2);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r19.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r5);

        return z2;

        catch java.lang.Exception from label2 to label3 with label5;
    }

    public static boolean isLvcProvisioned(int)
    {
        int i0;
        boolean z0;
        android.telephony.ims.ProvisioningManager $r1;
        java.lang.String $r4, $r8, $r10;
        java.lang.Exception $r5;
        java.lang.StringBuilder $r6, r12;
        com.android.ims.internal.Logger r11, r14;

        i0 := @parameter0: int;

     label1:
        $r1 = staticinvoke <android.telephony.ims.ProvisioningManager: android.telephony.ims.ProvisioningManager createForSubscriptionId(int)>(i0);

        z0 = virtualinvoke $r1.<android.telephony.ims.ProvisioningManager: boolean getProvisioningStatusForCapability(int,int)>(2, 0);

        r11 = <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger>;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isLvcProvisioned=");

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r4 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r11.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r4);

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        r14 = <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isLvcProvisioned, exception = ");

        $r8 = virtualinvoke $r5.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r14.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r10);

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static boolean isVoLteProvisioned(int)
    {
        int i0;
        boolean z0;
        com.android.ims.internal.Logger r0, r11;
        android.telephony.ims.ProvisioningManager $r1;
        java.lang.String $r4, $r8, $r10;
        java.lang.Exception $r5;
        java.lang.StringBuilder $r6, r12;

        i0 := @parameter0: int;

     label1:
        $r1 = staticinvoke <android.telephony.ims.ProvisioningManager: android.telephony.ims.ProvisioningManager createForSubscriptionId(int)>(i0);

        z0 = virtualinvoke $r1.<android.telephony.ims.ProvisioningManager: boolean getProvisioningStatusForCapability(int,int)>(1, 0);

        r11 = <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger>;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isVoLteProvisioned=");

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r4 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r11.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r4);

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        r0 = <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isVoLteProvisioned, exception = ");

        $r8 = virtualinvoke $r5.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r10);

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static boolean isVoLteSupported(int)
    {
        int i0;
        boolean z0, z1;
        android.telephony.ims.ImsMmTelManager r0;
        java.util.concurrent.TimeUnit $r3;
        java.lang.Object $r4;
        java.lang.Throwable $r5;
        java.lang.String $r8, $r10, $r14, $r16;
        android.telephony.ims.ImsException $r11;
        com.android.service.ims.'-$$Lambda$_14QHG018Z6p13d3hzJuGTWnNeo' r18;
        java.lang.Boolean r20;
        com.android.ims.internal.Logger r22, r25;
        java.util.concurrent.LinkedBlockingQueue r27;
        com.android.service.ims._$$Lambda$0G1hS33rIuMRzNQ9gpg_essM1mM r28;
        java.lang.StringBuilder r29, r30;
        java.util.concurrent.Executor r31;
        java.lang.InterruptedException r32;

        i0 := @parameter0: int;

        z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubscriptionId(int)>(i0);

        z1 = 0;

        if z0 != 0 goto label1;

        return 0;

     label1:
        r27 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke r27.<java.util.concurrent.LinkedBlockingQueue: void <init>(int)>(1);

     label2:
        r0 = staticinvoke <android.telephony.ims.ImsMmTelManager: android.telephony.ims.ImsMmTelManager createForSubscriptionId(int)>(i0);

        r18 = <com.android.service.ims._$$Lambda$_14QHG018Z6p13d3hzJuGTWnNeo: com.android.service.ims.'-$$Lambda$_14QHG018Z6p13d3hzJuGTWnNeo' INSTANCE>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r27);

        r28 = new com.android.service.ims._$$Lambda$0G1hS33rIuMRzNQ9gpg_essM1mM;

        specialinvoke r28.<com.android.service.ims._$$Lambda$0G1hS33rIuMRzNQ9gpg_essM1mM: void <init>(java.util.concurrent.LinkedBlockingQueue)>(r27);

        r31 = (java.util.concurrent.Executor) r18;

        virtualinvoke r0.<android.telephony.ims.ImsMmTelManager: void isSupported(int,int,java.util.concurrent.Executor,java.util.function.Consumer)>(1, 1, r31, r28);

     label3:
        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $r4 = virtualinvoke r27.<java.util.concurrent.LinkedBlockingQueue: java.lang.Object poll(long,java.util.concurrent.TimeUnit)>(5000L, $r3);

        r20 = (java.lang.Boolean) $r4;

     label4:
        if r20 == null goto label6;

     label5:
        z1 = virtualinvoke r20.<java.lang.Boolean: boolean booleanValue()>();

     label6:
        return z1;

     label7:
        $r5 := @caughtexception;

        r22 = <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger>;

        r29 = new java.lang.StringBuilder;

        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isVoLteSupported, InterruptedException=");

        r32 = (java.lang.InterruptedException) $r5;

        $r8 = virtualinvoke r32.<java.lang.InterruptedException: java.lang.String getMessage()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r22.<com.android.ims.internal.Logger: void warn(java.lang.String)>($r10);

        return 0;

     label8:
        $r11 := @caughtexception;

        r25 = <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger>;

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isVoLteSupported: ImsException = ");

        $r14 = virtualinvoke $r11.<android.telephony.ims.ImsException: java.lang.String getMessage()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r25.<com.android.ims.internal.Logger: void warn(java.lang.String)>($r16);

        return 0;

        catch android.telephony.ims.ImsException from label2 to label3 with label8;
        catch java.lang.InterruptedException from label3 to label4 with label7;
        catch java.lang.InterruptedException from label5 to label6 with label7;
    }

    public static boolean isVoWiFiSupported(int)
    {
        int i0;
        boolean z0, z1;
        android.telephony.ims.ImsMmTelManager r0;
        java.util.concurrent.TimeUnit $r3;
        java.lang.Object $r4;
        android.telephony.ims.ImsException $r5;
        java.lang.String $r8, $r10, $r14, $r16;
        java.lang.Throwable $r11;
        com.android.service.ims.'-$$Lambda$_14QHG018Z6p13d3hzJuGTWnNeo' r18;
        java.lang.Boolean r20;
        com.android.ims.internal.Logger r22, r25;
        java.util.concurrent.LinkedBlockingQueue r27;
        com.android.service.ims._$$Lambda$0G1hS33rIuMRzNQ9gpg_essM1mM r28;
        java.lang.StringBuilder r29, r30;
        java.util.concurrent.Executor r31;
        java.lang.InterruptedException r32;

        i0 := @parameter0: int;

        z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubscriptionId(int)>(i0);

        z1 = 0;

        if z0 != 0 goto label1;

        return 0;

     label1:
        r27 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke r27.<java.util.concurrent.LinkedBlockingQueue: void <init>(int)>(1);

     label2:
        r0 = staticinvoke <android.telephony.ims.ImsMmTelManager: android.telephony.ims.ImsMmTelManager createForSubscriptionId(int)>(i0);

        r18 = <com.android.service.ims._$$Lambda$_14QHG018Z6p13d3hzJuGTWnNeo: com.android.service.ims.'-$$Lambda$_14QHG018Z6p13d3hzJuGTWnNeo' INSTANCE>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r27);

        r28 = new com.android.service.ims._$$Lambda$0G1hS33rIuMRzNQ9gpg_essM1mM;

        specialinvoke r28.<com.android.service.ims._$$Lambda$0G1hS33rIuMRzNQ9gpg_essM1mM: void <init>(java.util.concurrent.LinkedBlockingQueue)>(r27);

        r31 = (java.util.concurrent.Executor) r18;

        virtualinvoke r0.<android.telephony.ims.ImsMmTelManager: void isSupported(int,int,java.util.concurrent.Executor,java.util.function.Consumer)>(1, 2, r31, r28);

     label3:
        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $r4 = virtualinvoke r27.<java.util.concurrent.LinkedBlockingQueue: java.lang.Object poll(long,java.util.concurrent.TimeUnit)>(5000L, $r3);

        r20 = (java.lang.Boolean) $r4;

     label4:
        if r20 == null goto label6;

     label5:
        z1 = virtualinvoke r20.<java.lang.Boolean: boolean booleanValue()>();

     label6:
        return z1;

     label7:
        $r11 := @caughtexception;

        r22 = <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger>;

        r29 = new java.lang.StringBuilder;

        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isVoWiFiSupported, InterruptedException=");

        r32 = (java.lang.InterruptedException) $r11;

        $r14 = virtualinvoke r32.<java.lang.InterruptedException: java.lang.String getMessage()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r22.<com.android.ims.internal.Logger: void warn(java.lang.String)>($r16);

        return 0;

     label8:
        $r5 := @caughtexception;

        r25 = <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger>;

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isVoWiFiSupported: ImsException = ");

        $r8 = virtualinvoke $r5.<android.telephony.ims.ImsException: java.lang.String getMessage()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r25.<com.android.ims.internal.Logger: void warn(java.lang.String)>($r10);

        return 0;

        catch android.telephony.ims.ImsException from label2 to label3 with label8;
        catch java.lang.InterruptedException from label3 to label4 with label7;
        catch java.lang.InterruptedException from label5 to label6 with label7;
    }

    public static boolean isVowifiProvisioned(int)
    {
        int i0;
        boolean z0;
        android.telephony.ims.ProvisioningManager $r1;
        java.lang.String $r4, $r8, $r10;
        java.lang.Exception $r5;
        java.lang.StringBuilder $r6, r12;
        com.android.ims.internal.Logger r11, r14;

        i0 := @parameter0: int;

     label1:
        $r1 = staticinvoke <android.telephony.ims.ProvisioningManager: android.telephony.ims.ProvisioningManager createForSubscriptionId(int)>(i0);

        z0 = virtualinvoke $r1.<android.telephony.ims.ProvisioningManager: boolean getProvisioningStatusForCapability(int,int)>(1, 1);

        r11 = <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger>;

        r12 = new java.lang.StringBuilder;

        specialinvoke r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isVowifiProvisioned=");

        virtualinvoke r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r4 = virtualinvoke r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r11.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r4);

     label2:
        return z0;

     label3:
        $r5 := @caughtexception;

        r14 = <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isVowifiProvisioned, exception = ");

        $r8 = virtualinvoke $r5.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r14.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r10);

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static boolean isVtEnabledByUser(int)
    {
        int i0;
        boolean z0;
        com.android.ims.internal.Logger r1;
        android.telephony.ims.ImsMmTelManager $r3;
        java.lang.Exception $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r7, $r9;

        i0 := @parameter0: int;

     label1:
        $r3 = staticinvoke <android.telephony.ims.ImsMmTelManager: android.telephony.ims.ImsMmTelManager createForSubscriptionId(int)>(i0);

        z0 = virtualinvoke $r3.<android.telephony.ims.ImsMmTelManager: boolean isVtSettingEnabled()>();

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        r1 = <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isVtEnabledByUser exception = ");

        $r7 = virtualinvoke $r4.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.ims.internal.Logger: void warn(java.lang.String)>($r9);

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static boolean isVtSupported(int)
    {
        int i0;
        boolean z0, z1;
        android.telephony.ims.ImsMmTelManager r0;
        java.util.concurrent.TimeUnit $r3;
        java.lang.Object $r4;
        java.lang.Throwable $r5;
        java.lang.String $r8, $r10, $r14, $r16;
        android.telephony.ims.ImsException $r11;
        com.android.service.ims.'-$$Lambda$_14QHG018Z6p13d3hzJuGTWnNeo' r18;
        java.lang.Boolean r20;
        com.android.ims.internal.Logger r22, r25;
        java.util.concurrent.LinkedBlockingQueue r27;
        com.android.service.ims._$$Lambda$0G1hS33rIuMRzNQ9gpg_essM1mM r28;
        java.lang.StringBuilder r29, r30;
        java.util.concurrent.Executor r31;
        java.lang.InterruptedException r32;

        i0 := @parameter0: int;

        z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubscriptionId(int)>(i0);

        z1 = 0;

        if z0 != 0 goto label1;

        return 0;

     label1:
        r27 = new java.util.concurrent.LinkedBlockingQueue;

        specialinvoke r27.<java.util.concurrent.LinkedBlockingQueue: void <init>(int)>(1);

     label2:
        r0 = staticinvoke <android.telephony.ims.ImsMmTelManager: android.telephony.ims.ImsMmTelManager createForSubscriptionId(int)>(i0);

        r18 = <com.android.service.ims._$$Lambda$_14QHG018Z6p13d3hzJuGTWnNeo: com.android.service.ims.'-$$Lambda$_14QHG018Z6p13d3hzJuGTWnNeo' INSTANCE>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r27);

        r28 = new com.android.service.ims._$$Lambda$0G1hS33rIuMRzNQ9gpg_essM1mM;

        specialinvoke r28.<com.android.service.ims._$$Lambda$0G1hS33rIuMRzNQ9gpg_essM1mM: void <init>(java.util.concurrent.LinkedBlockingQueue)>(r27);

        r31 = (java.util.concurrent.Executor) r18;

        virtualinvoke r0.<android.telephony.ims.ImsMmTelManager: void isSupported(int,int,java.util.concurrent.Executor,java.util.function.Consumer)>(2, 1, r31, r28);

     label3:
        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $r4 = virtualinvoke r27.<java.util.concurrent.LinkedBlockingQueue: java.lang.Object poll(long,java.util.concurrent.TimeUnit)>(5000L, $r3);

        r20 = (java.lang.Boolean) $r4;

     label4:
        if r20 == null goto label6;

     label5:
        z1 = virtualinvoke r20.<java.lang.Boolean: boolean booleanValue()>();

     label6:
        return z1;

     label7:
        $r5 := @caughtexception;

        r22 = <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger>;

        r29 = new java.lang.StringBuilder;

        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isVtSupported, InterruptedException=");

        r32 = (java.lang.InterruptedException) $r5;

        $r8 = virtualinvoke r32.<java.lang.InterruptedException: java.lang.String getMessage()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r22.<com.android.ims.internal.Logger: void warn(java.lang.String)>($r10);

        return 0;

     label8:
        $r11 := @caughtexception;

        r25 = <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger>;

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isVoWiFiSupported: ImsException = ");

        $r14 = virtualinvoke $r11.<android.telephony.ims.ImsException: java.lang.String getMessage()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r25.<com.android.ims.internal.Logger: void warn(java.lang.String)>($r16);

        return 0;

        catch android.telephony.ims.ImsException from label2 to label3 with label8;
        catch java.lang.InterruptedException from label3 to label4 with label7;
        catch java.lang.InterruptedException from label5 to label6 with label7;
    }

    public static boolean isWfcEnabledByUser(int)
    {
        int i0;
        boolean z0;
        com.android.ims.internal.Logger r1;
        android.telephony.ims.ImsMmTelManager $r3;
        java.lang.Exception $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r7, $r9;

        i0 := @parameter0: int;

     label1:
        $r3 = staticinvoke <android.telephony.ims.ImsMmTelManager: android.telephony.ims.ImsMmTelManager createForSubscriptionId(int)>(i0);

        z0 = virtualinvoke $r3.<android.telephony.ims.ImsMmTelManager: boolean isVoWiFiSettingEnabled()>();

     label2:
        return z0;

     label3:
        $r4 := @caughtexception;

        r1 = <com.android.service.ims.RcsSettingUtils: com.android.ims.internal.Logger logger>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isWfcEnabledByUser exception = ");

        $r7 = virtualinvoke $r4.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.ims.internal.Logger: void warn(java.lang.String)>($r9);

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
