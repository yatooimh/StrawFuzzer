public class com.android.service.ims.TaskManager extends java.lang.Object
{
    private static final int TASK_MANAGER_ON_TERMINATED;
    private static final int TASK_MANAGER_ON_TIMEOUT;
    public static final int TASK_TYPE_GET_AVAILABILITY;
    public static final int TASK_TYPE_GET_CAPABILITY;
    public static final int TASK_TYPE_PUBLISH;
    private static com.android.service.ims.TaskManager$MessageHandler sMsgHandler;
    private static com.android.service.ims.TaskManager sTaskManager;
    private com.android.ims.internal.Logger logger;
    private final java.lang.Object mSyncObj;
    private int mTaskId;
    private java.util.Map mTaskMap;

    static void <clinit>()
    {
        <com.android.service.ims.TaskManager: int TASK_TYPE_PUBLISH> = 3;

        <com.android.service.ims.TaskManager: int TASK_TYPE_GET_CAPABILITY> = 1;

        <com.android.service.ims.TaskManager: int TASK_TYPE_GET_AVAILABILITY> = 2;

        <com.android.service.ims.TaskManager: int TASK_MANAGER_ON_TIMEOUT> = 2;

        <com.android.service.ims.TaskManager: int TASK_MANAGER_ON_TERMINATED> = 1;

        <com.android.service.ims.TaskManager: com.android.service.ims.TaskManager sTaskManager> = null;

        return;
    }

    public void <init>()
    {
        com.android.service.ims.TaskManager r0;
        java.lang.Class $r2;
        java.lang.String $r3;
        com.android.ims.internal.Logger $r4, $r6;
        java.lang.Object $r5;
        java.util.HashMap $r7;
        android.os.HandlerThread $r8;
        com.android.service.ims.TaskManager$MessageHandler $r9;
        android.os.Looper $r10;

        r0 := @this: com.android.service.ims.TaskManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = staticinvoke <com.android.ims.internal.Logger: com.android.ims.internal.Logger getLogger(java.lang.String)>($r3);

        r0.<com.android.service.ims.TaskManager: com.android.ims.internal.Logger logger> = $r4;

        r0.<com.android.service.ims.TaskManager: int mTaskId> = 0;

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<com.android.service.ims.TaskManager: java.lang.Object mSyncObj> = $r5;

        $r6 = r0.<com.android.service.ims.TaskManager: com.android.ims.internal.Logger logger>;

        virtualinvoke $r6.<com.android.ims.internal.Logger: void debug(java.lang.String)>("TaskManager created.");

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<com.android.service.ims.TaskManager: java.util.Map mTaskMap> = $r7;

        $r8 = new android.os.HandlerThread;

        specialinvoke $r8.<android.os.HandlerThread: void <init>(java.lang.String,int)>("MessageHandler", 10);

        virtualinvoke $r8.<android.os.HandlerThread: void start()>();

        $r9 = new com.android.service.ims.TaskManager$MessageHandler;

        $r10 = virtualinvoke $r8.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r9.<com.android.service.ims.TaskManager$MessageHandler: void <init>(com.android.service.ims.TaskManager,android.os.Looper)>(r0, $r10);

        <com.android.service.ims.TaskManager: com.android.service.ims.TaskManager$MessageHandler sMsgHandler> = $r9;

        return;
    }

    static com.android.ims.internal.Logger access$000(com.android.service.ims.TaskManager)
    {
        com.android.service.ims.TaskManager r0;
        com.android.ims.internal.Logger $r1;

        r0 := @parameter0: com.android.service.ims.TaskManager;

        $r1 = r0.<com.android.service.ims.TaskManager: com.android.ims.internal.Logger logger>;

        return $r1;
    }

    public static com.android.service.ims.TaskManager getDefault()
    {
        com.android.service.ims.TaskManager $r0, r2, r3;
        java.lang.Throwable $r1;

        entermonitor class "Lcom/android/service/ims/TaskManager;";

     label1:
        $r0 = <com.android.service.ims.TaskManager: com.android.service.ims.TaskManager sTaskManager>;

        if $r0 != null goto label2;

        r2 = new com.android.service.ims.TaskManager;

        specialinvoke r2.<com.android.service.ims.TaskManager: void <init>()>();

        <com.android.service.ims.TaskManager: com.android.service.ims.TaskManager sTaskManager> = r2;

     label2:
        r3 = <com.android.service.ims.TaskManager: com.android.service.ims.TaskManager sTaskManager>;

     label3:
        exitmonitor class "Lcom/android/service/ims/TaskManager;";

        return r3;

     label4:
        $r1 := @caughtexception;

        exitmonitor class "Lcom/android/service/ims/TaskManager;";

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    private void putTaskInternal(int, com.android.service.ims.Task)
    {
        com.android.service.ims.TaskManager r0;
        int i0;
        com.android.service.ims.Task r1, r13;
        com.android.ims.internal.Logger r2;
        java.lang.StringBuilder r3;
        java.util.Map $r4;
        java.lang.String $r5, $r11;
        java.lang.Object $r6;
        java.lang.Throwable $r12;

        r0 := @this: com.android.service.ims.TaskManager;

        i0 := @parameter0: int;

        r13 := @parameter1: com.android.service.ims.Task;

        entermonitor r0;

     label1:
        $r4 = r0.<com.android.service.ims.TaskManager: java.util.Map mTaskMap>;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r13);

        r1 = (com.android.service.ims.Task) $r6;

        r2 = r0.<com.android.service.ims.TaskManager: com.android.ims.internal.Logger logger>;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Added Task: ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r13);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Original same key task:");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r11);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r12 := @caughtexception;

        exitmonitor r0;

        throw $r12;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public int addAvailabilityTask(java.lang.String, com.android.service.ims.presence.ContactCapabilityResponse)
    {
        com.android.service.ims.TaskManager r0, $r4;
        com.android.service.ims.presence.ContactCapabilityResponse r1;
        int i0;
        java.lang.Object r2;
        com.android.service.ims.presence.PresenceAvailabilityTask r3;
        java.lang.String[] $r5;
        java.lang.Throwable $r6;
        java.lang.String r7;

        r0 := @this: com.android.service.ims.TaskManager;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: com.android.service.ims.presence.ContactCapabilityResponse;

        $r4 = staticinvoke <com.android.service.ims.TaskManager: com.android.service.ims.TaskManager getDefault()>();

        i0 = virtualinvoke $r4.<com.android.service.ims.TaskManager: int generateTaskId()>();

        r2 = r0.<com.android.service.ims.TaskManager: java.lang.Object mSyncObj>;

        entermonitor r2;

     label1:
        r3 = new com.android.service.ims.presence.PresenceAvailabilityTask;

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = r7;

        specialinvoke r3.<com.android.service.ims.presence.PresenceAvailabilityTask: void <init>(int,int,com.android.service.ims.presence.ContactCapabilityResponse,java.lang.String[])>(i0, 2, r1, $r5);

        specialinvoke r0.<com.android.service.ims.TaskManager: void putTaskInternal(int,com.android.service.ims.Task)>(i0, r3);

        exitmonitor r2;

     label2:
        return i0;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r2;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int addCapabilityTask(android.content.Context, java.lang.String[], com.android.service.ims.presence.ContactCapabilityResponse, long)
    {
        com.android.service.ims.TaskManager r0, $r5;
        java.lang.String[] r1;
        com.android.service.ims.presence.ContactCapabilityResponse r2;
        long l0;
        int i1;
        java.lang.Object r3;
        com.android.service.ims.presence.PresenceCapabilityTask r4;
        java.lang.Throwable $r6;
        android.content.Context r7;

        r0 := @this: com.android.service.ims.TaskManager;

        r7 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: com.android.service.ims.presence.ContactCapabilityResponse;

        l0 := @parameter3: long;

        $r5 = staticinvoke <com.android.service.ims.TaskManager: com.android.service.ims.TaskManager getDefault()>();

        i1 = virtualinvoke $r5.<com.android.service.ims.TaskManager: int generateTaskId()>();

        r3 = r0.<com.android.service.ims.TaskManager: java.lang.Object mSyncObj>;

        entermonitor r3;

     label1:
        r4 = new com.android.service.ims.presence.PresenceCapabilityTask;

        specialinvoke r4.<com.android.service.ims.presence.PresenceCapabilityTask: void <init>(android.content.Context,int,int,com.android.service.ims.presence.ContactCapabilityResponse,java.lang.String[],long)>(r7, i1, 1, r2, r1, l0);

        specialinvoke r0.<com.android.service.ims.TaskManager: void putTaskInternal(int,com.android.service.ims.Task)>(i1, r4);

        exitmonitor r3;

     label2:
        return i1;

     label3:
        $r6 := @caughtexception;

     label4:
        exitmonitor r3;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public int addPublishTask(java.lang.String)
    {
        com.android.service.ims.TaskManager r0, $r3;
        int i0;
        java.lang.Object r1;
        com.android.service.ims.presence.PresenceTask r2;
        java.lang.String[] $r4;
        java.lang.Throwable $r5;
        java.lang.String r6;

        r0 := @this: com.android.service.ims.TaskManager;

        r6 := @parameter0: java.lang.String;

        $r3 = staticinvoke <com.android.service.ims.TaskManager: com.android.service.ims.TaskManager getDefault()>();

        i0 = virtualinvoke $r3.<com.android.service.ims.TaskManager: int generateTaskId()>();

        r1 = r0.<com.android.service.ims.TaskManager: java.lang.Object mSyncObj>;

        entermonitor r1;

     label1:
        r2 = new com.android.service.ims.presence.PresenceTask;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = r6;

        specialinvoke r2.<com.android.service.ims.presence.PresenceTask: void <init>(int,int,com.android.service.ims.presence.ContactCapabilityResponse,java.lang.String[])>(i0, 3, null, $r4);

        specialinvoke r0.<com.android.service.ims.TaskManager: void putTaskInternal(int,com.android.service.ims.Task)>(i0, r2);

        exitmonitor r1;

     label2:
        return i0;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void clearTimeoutAvailabilityTask(long)
    {
        com.android.service.ims.TaskManager r0;
        long l0, l1, l2, l3, $l6, $l8;
        java.lang.Object r1, $r6, $r7, $r9;
        java.util.Map$Entry r2;
        com.android.ims.internal.Logger $r3, r28, r31, r33;
        java.util.Map $r4;
        java.util.Set $r5;
        boolean $z0, $z1;
        java.lang.String $r10, $r14, $r21, $r24;
        byte $b4, $b5, $b7, $b9;
        java.lang.Throwable $r25;
        java.util.Iterator r26;
        com.android.service.ims.Task r27;
        java.lang.StringBuilder r29, r32, r34;
        com.android.service.ims.presence.PresenceAvailabilityTask r30;

        r0 := @this: com.android.service.ims.TaskManager;

        l0 := @parameter0: long;

        $r3 = r0.<com.android.service.ims.TaskManager: com.android.ims.internal.Logger logger>;

        virtualinvoke $r3.<com.android.ims.internal.Logger: void debug(java.lang.String)>("clearTimeoutAvailabilityTask");

        r1 = r0.<com.android.service.ims.TaskManager: java.lang.Object mSyncObj>;

        entermonitor r1;

     label01:
        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r4 = r0.<com.android.service.ims.TaskManager: java.util.Map mTaskMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        r26 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r6 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        r27 = (com.android.service.ims.Task) $r7;

        r28 = r0.<com.android.service.ims.TaskManager: com.android.ims.internal.Logger logger>;

        r29 = new java.lang.StringBuilder;

        specialinvoke r29.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Currently existing Availability task, key: ");

        $r9 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10 = (java.lang.String) $r9;

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Task: ");

        virtualinvoke r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r27);

        $r14 = virtualinvoke r29.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r28.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r14);

     label03:
        if r27 == null goto label08;

     label04:
        $z1 = r27 instanceof com.android.service.ims.presence.PresenceAvailabilityTask;

        if $z1 == 0 goto label08;

        r30 = (com.android.service.ims.presence.PresenceAvailabilityTask) r27;

        l2 = virtualinvoke r30.<com.android.service.ims.presence.PresenceAvailabilityTask: long getNotifyTimestamp()>();

        l3 = virtualinvoke r30.<com.android.service.ims.presence.PresenceAvailabilityTask: long getCreateTimestamp()>();

        r31 = r0.<com.android.service.ims.TaskManager: com.android.ims.internal.Logger logger>;

        r32 = new java.lang.StringBuilder;

        specialinvoke r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("createTimestamp=");

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l3);

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" notifyTimestamp=");

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" currentTime=");

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r21 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r31.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r21);

     label05:
        $b4 = l2 cmp 0L;

        if $b4 == 0 goto label06;

        $l8 = l2 + l0;

        $b9 = $l8 cmp l1;

        if $b9 < 0 goto label07;

     label06:
        $b5 = l2 cmp 0L;

        if $b5 != 0 goto label08;

        $l6 = l3 + l0;

        $b7 = $l6 cmp l1;

        if $b7 >= 0 goto label08;

     label07:
        r33 = r0.<com.android.service.ims.TaskManager: com.android.ims.internal.Logger logger>;

        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remove expired availability task:");

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r30);

        $r24 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r33.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r24);

        interfaceinvoke r26.<java.util.Iterator: void remove()>();

     label08:
        goto label02;

     label09:
        exitmonitor r1;

     label10:
        return;

     label11:
        $r25 := @caughtexception;

     label12:
        exitmonitor r1;

     label13:
        throw $r25;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public int generateTaskId()
    {
        com.android.service.ims.TaskManager r0;
        int i0, $i1;
        java.lang.Throwable $r2;

        r0 := @this: com.android.service.ims.TaskManager;

        entermonitor r0;

     label1:
        i0 = r0.<com.android.service.ims.TaskManager: int mTaskId>;

        $i1 = i0 + 1;

        r0.<com.android.service.ims.TaskManager: int mTaskId> = $i1;

     label2:
        exitmonitor r0;

        return i0;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public com.android.service.ims.presence.PresenceAvailabilityTask getAvailabilityTaskByContact(java.lang.String)
    {
        com.android.service.ims.TaskManager r0;
        java.lang.Object r1, $r3, $r5;
        java.util.Map $r2, $r4;
        boolean $z0, $z1, $z2;
        java.lang.String[] $r6;
        java.lang.String $r7, r10, r13;
        com.android.ims.internal.Logger $r8;
        java.lang.Throwable $r9;
        java.util.Set r11;
        java.util.Iterator r12;
        com.android.service.ims.Task r14;
        com.android.service.ims.presence.PresenceAvailabilityTask r15;

        r0 := @this: com.android.service.ims.TaskManager;

        r10 := @parameter0: java.lang.String;

        r1 = r0.<com.android.service.ims.TaskManager: java.lang.Object mSyncObj>;

        entermonitor r1;

     label01:
        $r2 = r0.<com.android.service.ims.TaskManager: java.util.Map mTaskMap>;

        r11 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

     label02:
        if r11 != null goto label05;

     label03:
        $r8 = r0.<com.android.service.ims.TaskManager: com.android.ims.internal.Logger logger>;

        virtualinvoke $r8.<com.android.ims.internal.Logger: void debug(java.lang.String)>("getTaskByContact keys=null");

        exitmonitor r1;

     label04:
        return null;

     label05:
        r12 = interfaceinvoke r11.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z2 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label11;

        $r3 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.lang.String) $r3;

        $r4 = r0.<com.android.service.ims.TaskManager: java.util.Map mTaskMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r13);

        r14 = (com.android.service.ims.Task) $r5;

     label07:
        if r14 != null goto label08;

        goto label06;

     label08:
        $z0 = r14 instanceof com.android.service.ims.presence.PresenceAvailabilityTask;

        if $z0 == 0 goto label10;

        r15 = (com.android.service.ims.presence.PresenceAvailabilityTask) r14;

        $r6 = r15.<com.android.service.ims.presence.PresenceAvailabilityTask: java.lang.String[] mContacts>;

        $r7 = $r6[0];

        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean compare(java.lang.String,java.lang.String)>(r10, $r7);

        if $z1 == 0 goto label10;

        exitmonitor r1;

     label09:
        return r15;

     label10:
        goto label06;

     label11:
        exitmonitor r1;

     label12:
        return null;

     label13:
        $r9 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public com.android.service.ims.Task getTask(int)
    {
        com.android.service.ims.TaskManager r0;
        int i0;
        java.lang.Object r1, $r4;
        java.util.Map $r2;
        java.lang.String $r3;
        java.lang.Throwable $r5;
        com.android.service.ims.Task r6;

        r0 := @this: com.android.service.ims.TaskManager;

        i0 := @parameter0: int;

        r1 = r0.<com.android.service.ims.TaskManager: java.lang.Object mSyncObj>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.service.ims.TaskManager: java.util.Map mTaskMap>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r6 = (com.android.service.ims.Task) $r4;

        exitmonitor r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public com.android.service.ims.Task getTaskByRequestId(int)
    {
        com.android.service.ims.TaskManager r0;
        int i0, $i1;
        java.lang.StringBuilder r1, $r3;
        java.util.Map $r2, $r9, $r15, $r19;
        boolean $z0;
        java.lang.String $r7, $r18, r26;
        java.lang.Object $r8, $r10, $r16, $r20, r23;
        com.android.service.ims.Task $r11, r28;
        com.android.ims.internal.Logger $r21, r27, r29;
        java.lang.Throwable $r22;
        java.util.Set r24;
        java.util.Iterator r25;

        r0 := @this: com.android.service.ims.TaskManager;

        i0 := @parameter0: int;

        r23 = r0.<com.android.service.ims.TaskManager: java.lang.Object mSyncObj>;

        entermonitor r23;

     label01:
        $r2 = r0.<com.android.service.ims.TaskManager: java.util.Map mTaskMap>;

        r24 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

     label02:
        if r24 != null goto label05;

     label03:
        $r21 = r0.<com.android.service.ims.TaskManager: com.android.ims.internal.Logger logger>;

        virtualinvoke $r21.<com.android.ims.internal.Logger: void debug(java.lang.String)>("getTaskByRequestId keys=null");

        exitmonitor r23;

     label04:
        return null;

     label05:
        r25 = interfaceinvoke r24.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r8 = interfaceinvoke r25.<java.util.Iterator: java.lang.Object next()>();

        r26 = (java.lang.String) $r8;

        $r9 = r0.<com.android.service.ims.TaskManager: java.util.Map mTaskMap>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r26);

        $r11 = (com.android.service.ims.Task) $r10;

        $i1 = $r11.<com.android.service.ims.Task: int mSipRequestId>;

        if $i1 != i0 goto label08;

        r27 = r0.<com.android.service.ims.TaskManager: com.android.ims.internal.Logger logger>;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getTaskByRequestId, sipRequestId=");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" task=");

        $r15 = r0.<com.android.service.ims.TaskManager: java.util.Map mTaskMap>;

        $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r26);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r27.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r18);

        $r19 = r0.<com.android.service.ims.TaskManager: java.util.Map mTaskMap>;

        $r20 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>(r26);

        r28 = (com.android.service.ims.Task) $r20;

        exitmonitor r23;

     label07:
        return r28;

     label08:
        goto label06;

     label09:
        exitmonitor r23;

     label10:
        r29 = r0.<com.android.service.ims.TaskManager: com.android.ims.internal.Logger logger>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getTaskByRequestId, sipRequestId=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" task=null");

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r29.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r7);

        return null;

     label11:
        $r22 := @caughtexception;

     label12:
        exitmonitor r23;

     label13:
        throw $r22;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label06 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
        catch java.lang.Throwable from label12 to label13 with label11;
    }

    public com.android.service.ims.Task getTaskForSingleContactQuery(java.lang.String)
    {
        com.android.service.ims.TaskManager r0;
        java.lang.Object r1, $r4, $r6;
        com.android.service.ims.presence.PresenceTask r2;
        java.util.Map $r3, $r5;
        boolean $z0, $z1, $z2;
        java.lang.String[] $r7, $r8;
        int $i0;
        java.lang.String $r9, r12, r15;
        com.android.ims.internal.Logger $r10;
        java.lang.Throwable $r11;
        java.util.Set r13;
        java.util.Iterator r14;
        com.android.service.ims.Task r16;

        r0 := @this: com.android.service.ims.TaskManager;

        r12 := @parameter0: java.lang.String;

        r1 = r0.<com.android.service.ims.TaskManager: java.lang.Object mSyncObj>;

        entermonitor r1;

     label01:
        $r3 = r0.<com.android.service.ims.TaskManager: java.util.Map mTaskMap>;

        r13 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>();

     label02:
        if r13 != null goto label05;

     label03:
        $r10 = r0.<com.android.service.ims.TaskManager: com.android.ims.internal.Logger logger>;

        virtualinvoke $r10.<com.android.ims.internal.Logger: void debug(java.lang.String)>("getTaskByContact keys=null");

        exitmonitor r1;

     label04:
        return null;

     label05:
        r14 = interfaceinvoke r13.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z2 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label11;

        $r4 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r15 = (java.lang.String) $r4;

        $r5 = r0.<com.android.service.ims.TaskManager: java.util.Map mTaskMap>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r15);

        r16 = (com.android.service.ims.Task) $r6;

     label07:
        if r16 != null goto label08;

        goto label06;

     label08:
        $z0 = r16 instanceof com.android.service.ims.presence.PresenceTask;

        if $z0 == 0 goto label10;

        r2 = (com.android.service.ims.presence.PresenceTask) r16;

        $r7 = r2.<com.android.service.ims.presence.PresenceTask: java.lang.String[] mContacts>;

        $i0 = lengthof $r7;

        if $i0 != 1 goto label10;

        $r8 = r2.<com.android.service.ims.presence.PresenceTask: java.lang.String[] mContacts>;

        $r9 = $r8[0];

        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean compare(java.lang.String,java.lang.String)>(r12, $r9);

        if $z1 == 0 goto label10;

        exitmonitor r1;

     label09:
        return r16;

     label10:
        goto label06;

     label11:
        exitmonitor r1;

     label12:
        return null;

     label13:
        $r11 := @caughtexception;

     label14:
        exitmonitor r1;

     label15:
        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public void onTerminated(int, java.lang.String)
    {
        com.android.service.ims.TaskManager r0;
        int i0;
        com.android.service.ims.Task r1;
        java.lang.StringBuilder $r2, $r11;
        java.lang.String $r7, $r14, r16;
        boolean $z0;
        com.android.service.ims.presence.PresenceCapabilityTask $r8;
        com.android.service.ims.TaskManager$MessageHandler $r9, $r10;
        java.lang.Throwable $r15;
        com.android.ims.internal.Logger r17, r19;
        java.lang.Object r21;
        com.android.service.ims.TaskManager$MessageData r22;
        android.os.Message r23;

        r0 := @this: com.android.service.ims.TaskManager;

        i0 := @parameter0: int;

        r16 := @parameter1: java.lang.String;

        r17 = r0.<com.android.service.ims.TaskManager: com.android.ims.internal.Logger logger>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onTerminated requestId=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reason=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r17.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r7);

        r1 = virtualinvoke r0.<com.android.service.ims.TaskManager: com.android.service.ims.Task getTaskByRequestId(int)>(i0);

        if r1 != null goto label1;

        r19 = r0.<com.android.service.ims.TaskManager: com.android.ims.internal.Logger logger>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onTerminated Can\'t find request ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r19.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r14);

        return;

     label1:
        r21 = r0.<com.android.service.ims.TaskManager: java.lang.Object mSyncObj>;

        entermonitor r21;

     label2:
        $z0 = r1 instanceof com.android.service.ims.presence.PresenceCapabilityTask;

        if $z0 == 0 goto label3;

        r22 = new com.android.service.ims.TaskManager$MessageData;

        specialinvoke r22.<com.android.service.ims.TaskManager$MessageData: void <init>(com.android.service.ims.TaskManager)>(r0);

        $r8 = (com.android.service.ims.presence.PresenceCapabilityTask) r1;

        r22.<com.android.service.ims.TaskManager$MessageData: com.android.service.ims.presence.PresenceCapabilityTask mTask> = $r8;

        r22.<com.android.service.ims.TaskManager$MessageData: java.lang.String mReason> = r16;

        $r9 = <com.android.service.ims.TaskManager: com.android.service.ims.TaskManager$MessageHandler sMsgHandler>;

        r23 = virtualinvoke $r9.<com.android.service.ims.TaskManager$MessageHandler: android.os.Message obtainMessage(int,java.lang.Object)>(1, r22);

        $r10 = <com.android.service.ims.TaskManager: com.android.service.ims.TaskManager$MessageHandler sMsgHandler>;

        virtualinvoke $r10.<com.android.service.ims.TaskManager$MessageHandler: boolean sendMessage(android.os.Message)>(r23);

     label3:
        exitmonitor r21;

     label4:
        return;

     label5:
        $r15 := @caughtexception;

     label6:
        exitmonitor r21;

     label7:
        throw $r15;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public void onTerminated(java.lang.String)
    {
        com.android.service.ims.TaskManager r0;
        java.lang.Object r1, $r4, $r6;
        com.android.service.ims.TaskManager$MessageData r2;
        java.util.Map $r3, $r5;
        boolean $z0, $z1, $z2, $z4;
        java.lang.String[] $r7, $r8, $r10;
        java.lang.String $r9, $r11, r17, r20;
        com.android.service.ims.TaskManager$MessageHandler $r12, $r13;
        com.android.ims.internal.Logger $r14, $r15;
        java.lang.Throwable $r16;
        java.util.Set r18;
        java.util.Iterator r19;
        com.android.service.ims.Task r21;
        com.android.service.ims.presence.PresenceCapabilityTask r22;
        android.os.Message r23;

        r0 := @this: com.android.service.ims.TaskManager;

        r17 := @parameter0: java.lang.String;

        if r17 != null goto label01;

        return;

     label01:
        r1 = r0.<com.android.service.ims.TaskManager: java.lang.Object mSyncObj>;

        entermonitor r1;

     label02:
        $r3 = r0.<com.android.service.ims.TaskManager: java.util.Map mTaskMap>;

        r18 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>();

     label03:
        if r18 != null goto label06;

     label04:
        $r15 = r0.<com.android.service.ims.TaskManager: com.android.ims.internal.Logger logger>;

        virtualinvoke $r15.<com.android.ims.internal.Logger: void debug(java.lang.String)>("onTerminated keys is null");

        exitmonitor r1;

     label05:
        return;

     label06:
        r19 = interfaceinvoke r18.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z4 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label13;

        $r4 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.lang.String) $r4;

        $r5 = r0.<com.android.service.ims.TaskManager: java.util.Map mTaskMap>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r20);

        r21 = (com.android.service.ims.Task) $r6;

     label08:
        if r21 != null goto label09;

        goto label07;

     label09:
        $z0 = r21 instanceof com.android.service.ims.presence.PresenceCapabilityTask;

        if $z0 == 0 goto label12;

        r22 = (com.android.service.ims.presence.PresenceCapabilityTask) r21;

        $r7 = r22.<com.android.service.ims.presence.PresenceCapabilityTask: java.lang.String[] mContacts>;

        if $r7 == null goto label12;

        $r8 = r22.<com.android.service.ims.presence.PresenceCapabilityTask: java.lang.String[] mContacts>;

        $r9 = $r8[0];

        if $r9 == null goto label12;

        $r10 = r22.<com.android.service.ims.presence.PresenceCapabilityTask: java.lang.String[] mContacts>;

        $r11 = $r10[0];

        $z1 = staticinvoke <android.telephony.PhoneNumberUtils: boolean compare(java.lang.String,java.lang.String)>(r17, $r11);

        if $z1 == 0 goto label12;

        $z2 = virtualinvoke r22.<com.android.service.ims.presence.PresenceCapabilityTask: boolean isWaitingForNotify()>();

        if $z2 != 0 goto label11;

        $r14 = r0.<com.android.service.ims.TaskManager: com.android.ims.internal.Logger logger>;

        virtualinvoke $r14.<com.android.ims.internal.Logger: void debug(java.lang.String)>("onTerminated the tesk is not waiting for NOTIFY yet");

     label10:
        goto label07;

     label11:
        r2 = new com.android.service.ims.TaskManager$MessageData;

        specialinvoke r2.<com.android.service.ims.TaskManager$MessageData: void <init>(com.android.service.ims.TaskManager)>(r0);

        r2.<com.android.service.ims.TaskManager$MessageData: com.android.service.ims.presence.PresenceCapabilityTask mTask> = r22;

        r2.<com.android.service.ims.TaskManager$MessageData: java.lang.String mReason> = null;

        $r12 = <com.android.service.ims.TaskManager: com.android.service.ims.TaskManager$MessageHandler sMsgHandler>;

        r23 = virtualinvoke $r12.<com.android.service.ims.TaskManager$MessageHandler: android.os.Message obtainMessage(int,java.lang.Object)>(1, r2);

        $r13 = <com.android.service.ims.TaskManager: com.android.service.ims.TaskManager$MessageHandler sMsgHandler>;

        virtualinvoke $r13.<com.android.service.ims.TaskManager$MessageHandler: boolean sendMessage(android.os.Message)>(r23);

     label12:
        goto label07;

     label13:
        exitmonitor r1;

     label14:
        return;

     label15:
        $r16 := @caughtexception;

     label16:
        exitmonitor r1;

     label17:
        throw $r16;

        catch java.lang.Throwable from label02 to label03 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label09 to label10 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
    }

    public void onTimeout(int)
    {
        com.android.service.ims.TaskManager r0;
        int i0;
        java.lang.StringBuilder $r1, r20;
        java.lang.String $r4, $r7;
        boolean $z0;
        com.android.service.ims.presence.PresenceCapabilityTask $r8;
        com.android.service.ims.TaskManager$MessageHandler $r9, $r10;
        com.android.ims.internal.Logger $r11, r13, r19;
        java.lang.Throwable $r12;
        com.android.service.ims.Task r15;
        java.lang.Object r16;
        com.android.service.ims.TaskManager$MessageData r17;
        android.os.Message r18;

        r0 := @this: com.android.service.ims.TaskManager;

        i0 := @parameter0: int;

        r13 = r0.<com.android.service.ims.TaskManager: com.android.ims.internal.Logger logger>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onTimeout taskId=");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r13.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r4);

        r15 = virtualinvoke r0.<com.android.service.ims.TaskManager: com.android.service.ims.Task getTask(int)>(i0);

        if r15 != null goto label1;

        $r11 = r0.<com.android.service.ims.TaskManager: com.android.ims.internal.Logger logger>;

        virtualinvoke $r11.<com.android.ims.internal.Logger: void debug(java.lang.String)>("onTimeout task = null");

        return;

     label1:
        r16 = r0.<com.android.service.ims.TaskManager: java.lang.Object mSyncObj>;

        entermonitor r16;

     label2:
        $z0 = r15 instanceof com.android.service.ims.presence.PresenceCapabilityTask;

        if $z0 == 0 goto label4;

        r17 = new com.android.service.ims.TaskManager$MessageData;

        specialinvoke r17.<com.android.service.ims.TaskManager$MessageData: void <init>(com.android.service.ims.TaskManager)>(r0);

        $r8 = (com.android.service.ims.presence.PresenceCapabilityTask) r15;

        r17.<com.android.service.ims.TaskManager$MessageData: com.android.service.ims.presence.PresenceCapabilityTask mTask> = $r8;

        r17.<com.android.service.ims.TaskManager$MessageData: java.lang.String mReason> = null;

        $r9 = <com.android.service.ims.TaskManager: com.android.service.ims.TaskManager$MessageHandler sMsgHandler>;

        r18 = virtualinvoke $r9.<com.android.service.ims.TaskManager$MessageHandler: android.os.Message obtainMessage(int,java.lang.Object)>(2, r17);

        $r10 = <com.android.service.ims.TaskManager: com.android.service.ims.TaskManager$MessageHandler sMsgHandler>;

        virtualinvoke $r10.<com.android.service.ims.TaskManager$MessageHandler: boolean sendMessage(android.os.Message)>(r18);

     label3:
        goto label5;

     label4:
        r19 = r0.<com.android.service.ims.TaskManager: com.android.ims.internal.Logger logger>;

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not PresenceCapabilityTask, taskId=");

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r19.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r7);

     label5:
        exitmonitor r16;

     label6:
        return;

     label7:
        $r12 := @caughtexception;

     label8:
        exitmonitor r16;

     label9:
        throw $r12;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    public void putTask(int, com.android.service.ims.Task)
    {
        com.android.service.ims.TaskManager r0;
        int i0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        com.android.service.ims.Task r3;

        r0 := @this: com.android.service.ims.TaskManager;

        i0 := @parameter0: int;

        r3 := @parameter1: com.android.service.ims.Task;

        r1 = r0.<com.android.service.ims.TaskManager: java.lang.Object mSyncObj>;

        entermonitor r1;

     label1:
        specialinvoke r0.<com.android.service.ims.TaskManager: void putTaskInternal(int,com.android.service.ims.Task)>(i0, r3);

        exitmonitor r1;

     label2:
        return;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void removeTask(int)
    {
        com.android.service.ims.TaskManager r0;
        int i0;
        java.lang.Object r1, $r6;
        com.android.ims.internal.Logger r2;
        java.lang.StringBuilder r3;
        java.util.Map $r4;
        java.lang.String $r5, $r9;
        boolean $z0;
        com.android.service.ims.presence.PresenceCapabilityTask $r10;
        java.lang.Throwable $r11;
        com.android.service.ims.Task r12;

        r0 := @this: com.android.service.ims.TaskManager;

        i0 := @parameter0: int;

        r1 = r0.<com.android.service.ims.TaskManager: java.lang.Object mSyncObj>;

        entermonitor r1;

     label1:
        $r4 = r0.<com.android.service.ims.TaskManager: java.util.Map mTaskMap>;

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r5);

        r12 = (com.android.service.ims.Task) $r6;

        $z0 = r12 instanceof com.android.service.ims.presence.PresenceCapabilityTask;

        if $z0 == 0 goto label2;

        $r10 = (com.android.service.ims.presence.PresenceCapabilityTask) r12;

        virtualinvoke $r10.<com.android.service.ims.presence.PresenceCapabilityTask: void cancelTimer()>();

     label2:
        r2 = r0.<com.android.service.ims.TaskManager: com.android.ims.internal.Logger logger>;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Removed Task: ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        $r9 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r9);

        exitmonitor r1;

     label3:
        return;

     label4:
        $r11 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }
}
