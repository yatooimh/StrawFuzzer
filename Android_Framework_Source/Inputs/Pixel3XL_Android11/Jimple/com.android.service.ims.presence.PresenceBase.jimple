public class com.android.service.ims.presence.PresenceBase extends java.lang.Object
{
    public static final int PUBLISH_STATE_200_OK;
    public static final int PUBLISH_STATE_NOT_PUBLISHED;
    public static final int PUBLISH_STATE_OTHER_ERROR;
    public static final int PUBLISH_STATE_RCS_PROVISION_ERROR;
    public static final int PUBLISH_STATE_REQUEST_TIMEOUT;
    public static final int PUBLISH_STATE_VOLTE_PROVISION_ERROR;
    private static com.android.ims.internal.Logger logger;
    protected android.content.Context mContext;

    static void <clinit>()
    {
        com.android.ims.internal.Logger $r0;

        <com.android.service.ims.presence.PresenceBase: int PUBLISH_STATE_VOLTE_PROVISION_ERROR> = 2;

        <com.android.service.ims.presence.PresenceBase: int PUBLISH_STATE_REQUEST_TIMEOUT> = 4;

        <com.android.service.ims.presence.PresenceBase: int PUBLISH_STATE_RCS_PROVISION_ERROR> = 3;

        <com.android.service.ims.presence.PresenceBase: int PUBLISH_STATE_OTHER_ERROR> = 5;

        <com.android.service.ims.presence.PresenceBase: int PUBLISH_STATE_NOT_PUBLISHED> = 1;

        <com.android.service.ims.presence.PresenceBase: int PUBLISH_STATE_200_OK> = 0;

        $r0 = staticinvoke <com.android.ims.internal.Logger: com.android.ims.internal.Logger getLogger(java.lang.String)>("PresenceBase");

        <com.android.service.ims.presence.PresenceBase: com.android.ims.internal.Logger logger> = $r0;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.android.service.ims.presence.PresenceBase r0;
        android.content.Context r1;

        r0 := @this: com.android.service.ims.presence.PresenceBase;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.service.ims.presence.PresenceBase: android.content.Context mContext> = r1;

        return;
    }

    protected void handleCallback(com.android.service.ims.Task, int, boolean)
    {
        com.android.service.ims.presence.PresenceBase r0;
        com.android.service.ims.Task r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean z0, $z1, $z2, $z3;
        com.android.ims.internal.Logger r2, $r4, $r33, r36, r38, r40, r42, r44;
        com.android.service.ims.presence.ContactCapabilityResponse $r3, $r31, $r32;
        com.android.service.ims.presence.PresenceCapabilityTask $r5;
        java.lang.StringBuilder $r8, $r12, $r17, $r21, $r26, $r45;
        java.lang.String $r11, $r15, $r20, $r24, $r29, $r47;
        com.android.service.ims.TaskManager $r16, $r25, $r30, $r48;
        com.android.service.ims.presence.PresencePublishTask r34;

        r0 := @this: com.android.service.ims.presence.PresenceBase;

        r1 := @parameter0: com.android.service.ims.Task;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if r1 != null goto label01;

        $r33 = <com.android.service.ims.presence.PresenceBase: com.android.ims.internal.Logger logger>;

        virtualinvoke $r33.<com.android.ims.internal.Logger: void debug(java.lang.String)>("task == null");

        return;

     label01:
        $r3 = r1.<com.android.service.ims.Task: com.android.service.ims.presence.ContactCapabilityResponse mListener>;

        if $r3 == null goto label03;

        if i0 < 0 goto label02;

        if z0 != 0 goto label03;

        $r32 = r1.<com.android.service.ims.Task: com.android.service.ims.presence.ContactCapabilityResponse mListener>;

        $i8 = r1.<com.android.service.ims.Task: int mTaskId>;

        interfaceinvoke $r32.<com.android.service.ims.presence.ContactCapabilityResponse: void onSuccess(int)>($i8);

        goto label03;

     label02:
        $r31 = r1.<com.android.service.ims.Task: com.android.service.ims.presence.ContactCapabilityResponse mListener>;

        $i7 = r1.<com.android.service.ims.Task: int mTaskId>;

        interfaceinvoke $r31.<com.android.service.ims.presence.ContactCapabilityResponse: void onError(int,int)>($i7, i0);

     label03:
        if i0 == 0 goto label08;

        $z3 = r1 instanceof com.android.service.ims.presence.PresencePublishTask;

        if $z3 == 0 goto label07;

        r34 = (com.android.service.ims.presence.PresencePublishTask) r1;

        r2 = <com.android.service.ims.presence.PresenceBase: com.android.ims.internal.Logger logger>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleCallback for publishTask=");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r34);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r20);

        if i0 != 2 goto label05;

        $i3 = virtualinvoke r34.<com.android.service.ims.presence.PresencePublishTask: int getRetryCount()>();

        if $i3 < 3 goto label04;

        r36 = <com.android.service.ims.presence.PresenceBase: com.android.ims.internal.Logger logger>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleCallback remove task=");

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r36.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r29);

        $r30 = staticinvoke <com.android.service.ims.TaskManager: com.android.service.ims.TaskManager getDefault()>();

        $i6 = r1.<com.android.service.ims.Task: int mTaskId>;

        virtualinvoke $r30.<com.android.service.ims.TaskManager: void removeTask(int)>($i6);

        goto label06;

     label04:
        $i4 = virtualinvoke r34.<com.android.service.ims.presence.PresencePublishTask: int getRetryCount()>();

        $i5 = $i4 + 1;

        virtualinvoke r34.<com.android.service.ims.presence.PresencePublishTask: void setRetryCount(int)>($i5);

        goto label06;

     label05:
        r38 = <com.android.service.ims.presence.PresenceBase: com.android.ims.internal.Logger logger>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleCallback remove task=");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r38.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r24);

        $r25 = staticinvoke <com.android.service.ims.TaskManager: com.android.service.ims.TaskManager getDefault()>();

        $i2 = r1.<com.android.service.ims.Task: int mTaskId>;

        virtualinvoke $r25.<com.android.service.ims.TaskManager: void removeTask(int)>($i2);

     label06:
        goto label12;

     label07:
        r40 = <com.android.service.ims.presence.PresenceBase: com.android.ims.internal.Logger logger>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleCallback remove task=");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r40.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r15);

        $r16 = staticinvoke <com.android.service.ims.TaskManager: com.android.service.ims.TaskManager getDefault()>();

        $i1 = r1.<com.android.service.ims.Task: int mTaskId>;

        virtualinvoke $r16.<com.android.service.ims.TaskManager: void removeTask(int)>($i1);

        goto label12;

     label08:
        if z0 != 0 goto label11;

        if z0 != 0 goto label09;

        $z2 = r1 instanceof com.android.service.ims.presence.PresenceCapabilityTask;

        if $z2 == 0 goto label09;

        goto label11;

     label09:
        if z0 != 0 goto label10;

        $z1 = r1 instanceof com.android.service.ims.presence.PresenceAvailabilityTask;

        if $z1 == 0 goto label10;

        if i0 != 0 goto label10;

        r42 = <com.android.service.ims.presence.PresenceBase: com.android.ims.internal.Logger logger>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleCallback PresenceAvailabilityTask cache for 60s task=");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r42.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r11);

        return;

     label10:
        r44 = <com.android.service.ims.presence.PresenceBase: com.android.ims.internal.Logger logger>;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleCallback remove task=");

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r44.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r47);

        $r48 = staticinvoke <com.android.service.ims.TaskManager: com.android.service.ims.TaskManager getDefault()>();

        $i9 = r1.<com.android.service.ims.Task: int mTaskId>;

        virtualinvoke $r48.<com.android.service.ims.TaskManager: void removeTask(int)>($i9);

        goto label12;

     label11:
        $r4 = <com.android.service.ims.presence.PresenceBase: com.android.ims.internal.Logger logger>;

        virtualinvoke $r4.<com.android.ims.internal.Logger: void debug(java.lang.String)>("handleCallback remove task later");

        if z0 != 0 goto label12;

        $r5 = (com.android.service.ims.presence.PresenceCapabilityTask) r1;

        virtualinvoke $r5.<com.android.service.ims.presence.PresenceCapabilityTask: void setWaitingForNotify(boolean)>(1);

     label12:
        return;
    }

    protected boolean isInConfigList(int, java.lang.String, java.lang.String[])
    {
        com.android.service.ims.presence.PresenceBase r0;
        java.lang.String r1, $r6, $r12, $r13, $r14, r17, r19, r20;
        int i0, $i1, $i2, i3, i4;
        java.lang.StringBuilder $r3, $r7;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String[] r15;
        com.android.ims.internal.Logger r18;

        r0 := @this: com.android.service.ims.presence.PresenceBase;

        i3 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r15 := @parameter2: java.lang.String[];

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r17 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        r18 = <com.android.service.ims.presence.PresenceBase: com.android.ims.internal.Logger logger>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("errorArray length=");

        $i1 = lengthof r15;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" errorArray=");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r15);

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r18.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r12);

        i0 = lengthof r15;

        i4 = 0;

     label1:
        if i4 >= i0 goto label7;

        r19 = r15[i4];

        if r19 == null goto label6;

        $z0 = virtualinvoke r19.<java.lang.String: boolean startsWith(java.lang.String)>(r17);

        if $z0 == 0 goto label6;

        $i2 = virtualinvoke r17.<java.lang.String: int length()>();

        r20 = virtualinvoke r19.<java.lang.String: java.lang.String substring(int)>($i2);

        if r20 == null goto label5;

        $z1 = virtualinvoke r20.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        goto label5;

     label2:
        if r1 == null goto label4;

        $z2 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z2 == 0 goto label3;

        goto label4;

     label3:
        $r13 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r14 = virtualinvoke r20.<java.lang.String: java.lang.String toLowerCase()>();

        $z3 = virtualinvoke $r13.<java.lang.String: boolean contains(java.lang.CharSequence)>($r14);

        return $z3;

     label4:
        return 0;

     label5:
        return 1;

     label6:
        i4 = i4 + 1;

        goto label1;

     label7:
        return 0;
    }

    protected void notifyDm()
    {
        com.android.service.ims.presence.PresenceBase r0;
        com.android.ims.internal.Logger $r2;
        android.content.Intent $r3;
        android.content.Context $r5;

        r0 := @this: com.android.service.ims.presence.PresenceBase;

        $r2 = <com.android.service.ims.presence.PresenceBase: com.android.ims.internal.Logger logger>;

        virtualinvoke $r2.<com.android.ims.internal.Logger: void debug(java.lang.String)>("notifyDm");

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("com.android.internal.intent.action.ACTION_FORBIDDEN_NO_SERVICE_AUTHORIZATION");

        virtualinvoke $r3.<android.content.Intent: android.content.Intent addFlags(int)>(536870912);

        $r5 = r0.<com.android.service.ims.presence.PresenceBase: android.content.Context mContext>;

        virtualinvoke $r5.<android.content.Context: void sendBroadcast(android.content.Intent)>($r3);

        return;
    }

    public void onCommandStatusUpdated(int, int, int)
    {
        com.android.service.ims.presence.PresenceBase r0;
        int i0, i1, i2, $i3;
        com.android.service.ims.Task r1;
        com.android.service.ims.TaskManager $r2, $r3;

        r0 := @this: com.android.service.ims.presence.PresenceBase;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r2 = staticinvoke <com.android.service.ims.TaskManager: com.android.service.ims.TaskManager getDefault()>();

        r1 = virtualinvoke $r2.<com.android.service.ims.TaskManager: com.android.service.ims.Task getTask(int)>(i0);

        if r1 == null goto label1;

        r1.<com.android.service.ims.Task: int mSipRequestId> = i1;

        r1.<com.android.service.ims.Task: int mCmdStatus> = i2;

        $r3 = staticinvoke <com.android.service.ims.TaskManager: com.android.service.ims.TaskManager getDefault()>();

        $i3 = r1.<com.android.service.ims.Task: int mTaskId>;

        virtualinvoke $r3.<com.android.service.ims.TaskManager: void putTask(int,com.android.service.ims.Task)>($i3, r1);

     label1:
        virtualinvoke r0.<com.android.service.ims.presence.PresenceBase: void handleCallback(com.android.service.ims.Task,int,boolean)>(r1, i2, 1);

        return;
    }
}
