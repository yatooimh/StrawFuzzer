public class com.android.service.ims.presence.PresenceCapabilityTask extends com.android.service.ims.presence.PresenceTask
{
    public static final java.lang.String ACTION_TASK_TIMEOUT_ALARM;
    static android.app.AlarmManager sAlarmManager;
    private com.android.ims.internal.Logger logger;
    android.app.PendingIntent mAlarmIntent;
    private android.content.Context mContext;
    private long mCreatedTimeStamp;
    public int mResultCode;
    private long mTimeout;
    boolean mTimerStarted;
    public boolean mWaitingForNotify;

    static void <clinit>()
    {
        <com.android.service.ims.presence.PresenceCapabilityTask: java.lang.String ACTION_TASK_TIMEOUT_ALARM> = "com.android.service.ims.presence.task.timeout";

        <com.android.service.ims.presence.PresenceCapabilityTask: android.app.AlarmManager sAlarmManager> = null;

        return;
    }

    public void <init>(android.content.Context, int, int, com.android.service.ims.presence.ContactCapabilityResponse, java.lang.String[], long)
    {
        com.android.service.ims.presence.PresenceCapabilityTask r0;
        android.content.Context r1;
        int i0, i1;
        com.android.service.ims.presence.ContactCapabilityResponse r2;
        java.lang.String[] r3;
        long l2, $l3;
        java.lang.Class $r4;
        java.lang.String $r5;
        com.android.ims.internal.Logger $r6;
        byte $b4;

        r0 := @this: com.android.service.ims.presence.PresenceCapabilityTask;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: com.android.service.ims.presence.ContactCapabilityResponse;

        r3 := @parameter4: java.lang.String[];

        l2 := @parameter5: long;

        specialinvoke r0.<com.android.service.ims.presence.PresenceTask: void <init>(int,int,com.android.service.ims.presence.ContactCapabilityResponse,java.lang.String[])>(i0, i1, r2, r3);

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $r6 = staticinvoke <com.android.ims.internal.Logger: com.android.ims.internal.Logger getLogger(java.lang.String)>($r5);

        r0.<com.android.service.ims.presence.PresenceCapabilityTask: com.android.ims.internal.Logger logger> = $r6;

        r0.<com.android.service.ims.presence.PresenceCapabilityTask: android.content.Context mContext> = null;

        r0.<com.android.service.ims.presence.PresenceCapabilityTask: android.app.PendingIntent mAlarmIntent> = null;

        r0.<com.android.service.ims.presence.PresenceCapabilityTask: boolean mTimerStarted> = 0;

        r0.<com.android.service.ims.presence.PresenceCapabilityTask: android.content.Context mContext> = r1;

        r0.<com.android.service.ims.presence.PresenceCapabilityTask: boolean mWaitingForNotify> = 0;

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.service.ims.presence.PresenceCapabilityTask: long mCreatedTimeStamp> = $l3;

        r0.<com.android.service.ims.presence.PresenceCapabilityTask: long mTimeout> = l2;

        $b4 = l2 cmp 0L;

        if $b4 > 0 goto label1;

        r0.<com.android.service.ims.presence.PresenceCapabilityTask: long mTimeout> = 36000L;

     label1:
        if r2 == null goto label2;

        specialinvoke r0.<com.android.service.ims.presence.PresenceCapabilityTask: void startTimer()>();

     label2:
        return;
    }

    private void startTimer()
    {
        com.android.service.ims.presence.PresenceCapabilityTask r0;
        android.app.PendingIntent r1;
        long l0, $l2, $l3, $l5;
        android.content.Context $r3, $r5, $r9, $r22;
        android.content.Intent $r4;
        java.lang.String $r6, $r20;
        int $i1, $i4;
        android.app.AlarmManager $r10, $r21, $r24;
        java.lang.StringBuilder $r11;
        java.lang.Object $r23;
        com.android.ims.internal.Logger $r25, r27;

        r0 := @this: com.android.service.ims.presence.PresenceCapabilityTask;

        $r3 = r0.<com.android.service.ims.presence.PresenceCapabilityTask: android.content.Context mContext>;

        if $r3 != null goto label1;

        $r25 = r0.<com.android.service.ims.presence.PresenceCapabilityTask: com.android.ims.internal.Logger logger>;

        virtualinvoke $r25.<com.android.ims.internal.Logger: void error(java.lang.String)>("startTimer mContext is null");

        return;

     label1:
        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("com.android.service.ims.presence.task.timeout");

        $r5 = r0.<com.android.service.ims.presence.PresenceCapabilityTask: android.content.Context mContext>;

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke $r4.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r6);

        $i1 = r0.<com.android.service.ims.presence.PresenceCapabilityTask: int mTaskId>;

        virtualinvoke $r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("taskId", $i1);

        $r9 = r0.<com.android.service.ims.presence.PresenceCapabilityTask: android.content.Context mContext>;

        r1 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r9, 0, $r4, 1073741824);

        $r10 = <com.android.service.ims.presence.PresenceCapabilityTask: android.app.AlarmManager sAlarmManager>;

        if $r10 != null goto label2;

        $r22 = r0.<com.android.service.ims.presence.PresenceCapabilityTask: android.content.Context mContext>;

        $r23 = virtualinvoke $r22.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r24 = (android.app.AlarmManager) $r23;

        <com.android.service.ims.presence.PresenceCapabilityTask: android.app.AlarmManager sAlarmManager> = $r24;

     label2:
        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l3 = r0.<com.android.service.ims.presence.PresenceCapabilityTask: long mTimeout>;

        l0 = $l2 + $l3;

        r27 = r0.<com.android.service.ims.presence.PresenceCapabilityTask: com.android.ims.internal.Logger logger>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startTimer taskId=");

        $i4 = r0.<com.android.service.ims.presence.PresenceCapabilityTask: int mTaskId>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mTimeout=");

        $l5 = r0.<com.android.service.ims.presence.PresenceCapabilityTask: long mTimeout>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" triggerAt=");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mAlarmIntent=");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r20 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r27.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r20);

        $r21 = <com.android.service.ims.presence.PresenceCapabilityTask: android.app.AlarmManager sAlarmManager>;

        virtualinvoke $r21.<android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)>(2, l0, r1);

        r0.<com.android.service.ims.presence.PresenceCapabilityTask: boolean mTimerStarted> = 1;

        return;
    }

    public void cancelTimer()
    {
        com.android.service.ims.presence.PresenceCapabilityTask r0;
        boolean $z0;
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.String $r4;
        com.android.ims.internal.Logger r5;
        android.app.PendingIntent r7;
        android.app.AlarmManager r8;

        r0 := @this: com.android.service.ims.presence.PresenceCapabilityTask;

        $z0 = r0.<com.android.service.ims.presence.PresenceCapabilityTask: boolean mTimerStarted>;

        if $z0 == 0 goto label2;

        r5 = r0.<com.android.service.ims.presence.PresenceCapabilityTask: com.android.ims.internal.Logger logger>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cancelTimer, taskId=");

        $i0 = r0.<com.android.service.ims.presence.PresenceCapabilityTask: int mTaskId>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r4);

        r7 = r0.<com.android.service.ims.presence.PresenceCapabilityTask: android.app.PendingIntent mAlarmIntent>;

        if r7 == null goto label1;

        r8 = <com.android.service.ims.presence.PresenceCapabilityTask: android.app.AlarmManager sAlarmManager>;

        if r8 == null goto label1;

        virtualinvoke r8.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>(r7);

     label1:
        r0.<com.android.service.ims.presence.PresenceCapabilityTask: boolean mTimerStarted> = 0;

     label2:
        return;
    }

    public boolean isWaitingForNotify()
    {
        com.android.service.ims.presence.PresenceCapabilityTask r0;
        boolean $z0;

        r0 := @this: com.android.service.ims.presence.PresenceCapabilityTask;

        $z0 = r0.<com.android.service.ims.presence.PresenceCapabilityTask: boolean mWaitingForNotify>;

        return $z0;
    }

    public void onTerminated(java.lang.String)
    {
        com.android.service.ims.presence.PresenceCapabilityTask r0;
        boolean $z0;
        com.android.service.ims.presence.ContactCapabilityResponse $r2, $r4;
        com.android.service.ims.TaskManager $r3;
        int $i0, $i1;
        java.lang.StringBuilder $r5;
        java.lang.String $r8, r9;
        com.android.ims.internal.Logger r10;

        r0 := @this: com.android.service.ims.presence.PresenceCapabilityTask;

        r9 := @parameter0: java.lang.String;

        $z0 = r0.<com.android.service.ims.presence.PresenceCapabilityTask: boolean mWaitingForNotify>;

        if $z0 != 0 goto label1;

        r10 = r0.<com.android.service.ims.presence.PresenceCapabilityTask: com.android.ims.internal.Logger logger>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onTerminated mWaitingForNotify is false. task=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r10.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r8);

        return;

     label1:
        virtualinvoke r0.<com.android.service.ims.presence.PresenceCapabilityTask: void cancelTimer()>();

        $r2 = r0.<com.android.service.ims.presence.PresenceCapabilityTask: com.android.service.ims.presence.ContactCapabilityResponse mListener>;

        if $r2 == null goto label2;

        $r4 = r0.<com.android.service.ims.presence.PresenceCapabilityTask: com.android.service.ims.presence.ContactCapabilityResponse mListener>;

        $i1 = r0.<com.android.service.ims.presence.PresenceCapabilityTask: int mTaskId>;

        interfaceinvoke $r4.<com.android.service.ims.presence.ContactCapabilityResponse: void onFinish(int)>($i1);

     label2:
        $r3 = staticinvoke <com.android.service.ims.TaskManager: com.android.service.ims.TaskManager getDefault()>();

        $i0 = r0.<com.android.service.ims.presence.PresenceCapabilityTask: int mTaskId>;

        virtualinvoke $r3.<com.android.service.ims.TaskManager: void removeTask(int)>($i0);

        return;
    }

    public void onTimeout()
    {
        com.android.service.ims.presence.PresenceCapabilityTask r0;
        com.android.ims.internal.Logger r1;
        java.lang.StringBuilder $r3;
        int $i0, $i1, $i2;
        java.lang.String $r6;
        com.android.service.ims.presence.ContactCapabilityResponse $r7, $r9;
        com.android.service.ims.TaskManager $r8;

        r0 := @this: com.android.service.ims.presence.PresenceCapabilityTask;

        r1 = r0.<com.android.service.ims.presence.PresenceCapabilityTask: com.android.ims.internal.Logger logger>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onTimeout, taskId=");

        $i0 = r0.<com.android.service.ims.presence.PresenceCapabilityTask: int mTaskId>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r6);

        $r7 = r0.<com.android.service.ims.presence.PresenceCapabilityTask: com.android.service.ims.presence.ContactCapabilityResponse mListener>;

        if $r7 == null goto label1;

        $r9 = r0.<com.android.service.ims.presence.PresenceCapabilityTask: com.android.service.ims.presence.ContactCapabilityResponse mListener>;

        $i2 = r0.<com.android.service.ims.presence.PresenceCapabilityTask: int mTaskId>;

        interfaceinvoke $r9.<com.android.service.ims.presence.ContactCapabilityResponse: void onTimeout(int)>($i2);

     label1:
        $r8 = staticinvoke <com.android.service.ims.TaskManager: com.android.service.ims.TaskManager getDefault()>();

        $i1 = r0.<com.android.service.ims.presence.PresenceCapabilityTask: int mTaskId>;

        virtualinvoke $r8.<com.android.service.ims.TaskManager: void removeTask(int)>($i1);

        return;
    }

    public void setWaitingForNotify(boolean)
    {
        com.android.service.ims.presence.PresenceCapabilityTask r0;
        boolean z0;

        r0 := @this: com.android.service.ims.presence.PresenceCapabilityTask;

        z0 := @parameter0: boolean;

        r0.<com.android.service.ims.presence.PresenceCapabilityTask: boolean mWaitingForNotify> = z0;

        return;
    }

    public java.lang.String toString()
    {
        com.android.service.ims.presence.PresenceCapabilityTask r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r9;
        long $l0, $l1;

        r0 := @this: com.android.service.ims.presence.PresenceCapabilityTask;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = specialinvoke r0.<com.android.service.ims.presence.PresenceTask: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCreatedTimeStamp=");

        $l0 = r0.<com.android.service.ims.presence.PresenceCapabilityTask: long mCreatedTimeStamp>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mTimeout=");

        $l1 = r0.<com.android.service.ims.presence.PresenceCapabilityTask: long mTimeout>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }
}
