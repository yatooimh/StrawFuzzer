public class com.android.service.ims.presence.PresencePublication extends com.android.service.ims.presence.PresenceBase
{
    public static final java.lang.String ACTION_RETRY_PUBLISH_ALARM;
    private static final java.lang.String DOMAIN_SEPARATOR;
    private static final int MESSAGE_DEFAULT_SUBSCRIPTION_CHANGED;
    private static final int MESSAGE_RCS_PUBLISH_REQUEST;
    private static final java.lang.String SIP_SCHEME;
    private static final java.lang.String TEL_SCHEME;
    private static final int TIMEOUT_CHECK_SUBSCRIPTION_READY_MS;
    public static final int UCE_PRES_PUBLISH_TRIGGER_ETAG_EXPIRED;
    public static final int UCE_PRES_PUBLISH_TRIGGER_MOVE_TO_2G;
    public static final int UCE_PRES_PUBLISH_TRIGGER_MOVE_TO_3G;
    public static final int UCE_PRES_PUBLISH_TRIGGER_MOVE_TO_EHRPD;
    public static final int UCE_PRES_PUBLISH_TRIGGER_MOVE_TO_HSPAPLUS;
    public static final int UCE_PRES_PUBLISH_TRIGGER_MOVE_TO_IWLAN;
    public static final int UCE_PRES_PUBLISH_TRIGGER_MOVE_TO_LTE_VOPS_DISABLED;
    public static final int UCE_PRES_PUBLISH_TRIGGER_MOVE_TO_LTE_VOPS_ENABLED;
    public static final int UCE_PRES_PUBLISH_TRIGGER_MOVE_TO_WLAN;
    public static final int UCE_PRES_PUBLISH_TRIGGER_UNKNOWN;
    private static com.android.service.ims.presence.PresencePublication sPresencePublication;
    private com.android.ims.internal.Logger logger;
    private android.app.AlarmManager mAlarmManager;
    private int mAssociatedSubscription;
    boolean mCancelRetry;
    private final java.lang.String[] mConfigRcsProvisionErrorOnPublishResponse;
    private final java.lang.String[] mConfigVolteProvisionErrorOnPublishResponse;
    private boolean mDataEnabled;
    private boolean mDonotRetryUntilPowerCycle;
    private boolean mGotTriggerFromStack;
    private boolean mHasCachedTrigger;
    private boolean mImsRegistered;
    boolean mIsViWifiAvailable;
    boolean mIsVoWifiAvailable;
    boolean mIsVolteAvailable;
    boolean mIsVtAvailable;
    boolean mMovedToIWLAN;
    boolean mMovedToLTE;
    private android.os.Handler mMsgHandler;
    volatile com.android.service.ims.presence.PresencePublication$PublishRequest mPendingRequest;
    boolean mPendingRetry;
    private int mPreferredTtyMode;
    private com.android.service.ims.presence.PresencePublisher mPresencePublisher;
    volatile com.android.service.ims.presence.PresencePublication$PublishRequest mPublishedRequest;
    volatile com.android.service.ims.presence.PresencePublication$PublishRequest mPublishingRequest;
    private android.app.PendingIntent mRetryAlarmIntent;
    private boolean mSimLoaded;
    private com.android.service.ims.presence.PresenceSubscriber mSubscriber;
    private final java.lang.Object mSyncObj;
    boolean mVoPSEnabled;
    private boolean mVtEnabled;

    static void <clinit>()
    {
        <com.android.service.ims.presence.PresencePublication: int UCE_PRES_PUBLISH_TRIGGER_UNKNOWN> = 9;

        <com.android.service.ims.presence.PresencePublication: int UCE_PRES_PUBLISH_TRIGGER_MOVE_TO_WLAN> = 7;

        <com.android.service.ims.presence.PresencePublication: int UCE_PRES_PUBLISH_TRIGGER_MOVE_TO_LTE_VOPS_ENABLED> = 2;

        <com.android.service.ims.presence.PresencePublication: int UCE_PRES_PUBLISH_TRIGGER_MOVE_TO_LTE_VOPS_DISABLED> = 1;

        <com.android.service.ims.presence.PresencePublication: int UCE_PRES_PUBLISH_TRIGGER_MOVE_TO_IWLAN> = 8;

        <com.android.service.ims.presence.PresencePublication: int UCE_PRES_PUBLISH_TRIGGER_MOVE_TO_HSPAPLUS> = 4;

        <com.android.service.ims.presence.PresencePublication: int UCE_PRES_PUBLISH_TRIGGER_MOVE_TO_EHRPD> = 3;

        <com.android.service.ims.presence.PresencePublication: int UCE_PRES_PUBLISH_TRIGGER_MOVE_TO_3G> = 5;

        <com.android.service.ims.presence.PresencePublication: int UCE_PRES_PUBLISH_TRIGGER_MOVE_TO_2G> = 6;

        <com.android.service.ims.presence.PresencePublication: int UCE_PRES_PUBLISH_TRIGGER_ETAG_EXPIRED> = 0;

        <com.android.service.ims.presence.PresencePublication: int TIMEOUT_CHECK_SUBSCRIPTION_READY_MS> = 5000;

        <com.android.service.ims.presence.PresencePublication: java.lang.String TEL_SCHEME> = "tel";

        <com.android.service.ims.presence.PresencePublication: java.lang.String SIP_SCHEME> = "sip";

        <com.android.service.ims.presence.PresencePublication: int MESSAGE_RCS_PUBLISH_REQUEST> = 1;

        <com.android.service.ims.presence.PresencePublication: int MESSAGE_DEFAULT_SUBSCRIPTION_CHANGED> = 2;

        <com.android.service.ims.presence.PresencePublication: java.lang.String DOMAIN_SEPARATOR> = "@";

        <com.android.service.ims.presence.PresencePublication: java.lang.String ACTION_RETRY_PUBLISH_ALARM> = "com.android.service.ims.presence.retry.publish";

        <com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublication sPresencePublication> = null;

        return;
    }

    public void <init>(com.android.service.ims.presence.PresencePublisher, android.content.Context, java.lang.String[], java.lang.String[])
    {
        com.android.service.ims.presence.PresencePublication r0;
        java.lang.String[] r1, r25;
        java.lang.Class $r2;
        java.lang.String $r3, $r14, $r21, r29;
        com.android.ims.internal.Logger $r4, $r8, r27, r30;
        java.lang.Object $r5, $r16, r26;
        com.android.service.ims.presence.PresencePublication$1 $r6;
        android.os.Looper $r7;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1, z2;
        android.content.Context $r9, $r15, r24;
        android.content.ContentResolver $r10;
        java.lang.StringBuilder $r11, $r18;
        android.telecom.TelecomManager $r17;
        java.lang.Throwable $r22;
        com.android.service.ims.presence.PresencePublisher r23;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        r23 := @parameter0: com.android.service.ims.presence.PresencePublisher;

        r24 := @parameter1: android.content.Context;

        r25 := @parameter2: java.lang.String[];

        r1 := @parameter3: java.lang.String[];

        specialinvoke r0.<com.android.service.ims.presence.PresenceBase: void <init>(android.content.Context)>(r24);

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = staticinvoke <com.android.ims.internal.Logger: com.android.ims.internal.Logger getLogger(java.lang.String)>($r3);

        r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger> = $r4;

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<com.android.service.ims.presence.PresencePublication: java.lang.Object mSyncObj> = $r5;

        z2 = 0;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mMovedToIWLAN> = 0;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mMovedToLTE> = 0;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mVoPSEnabled> = 0;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mIsVolteAvailable> = 0;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mIsVtAvailable> = 0;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mIsVoWifiAvailable> = 0;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mIsViWifiAvailable> = 0;

        r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublication$PublishRequest mPendingRequest> = null;

        r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublication$PublishRequest mPublishingRequest> = null;

        r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublication$PublishRequest mPublishedRequest> = null;

        $r6 = new com.android.service.ims.presence.PresencePublication$1;

        $r7 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r6.<com.android.service.ims.presence.PresencePublication$1: void <init>(com.android.service.ims.presence.PresencePublication,android.os.Looper)>(r0, $r7);

        r0.<com.android.service.ims.presence.PresencePublication: android.os.Handler mMsgHandler> = $r6;

        r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresenceSubscriber mSubscriber> = null;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mHasCachedTrigger> = 0;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mGotTriggerFromStack> = 0;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mDonotRetryUntilPowerCycle> = 0;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mSimLoaded> = 0;

        r0.<com.android.service.ims.presence.PresencePublication: int mPreferredTtyMode> = 0;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mImsRegistered> = 0;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mVtEnabled> = 0;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mDataEnabled> = 0;

        r0.<com.android.service.ims.presence.PresencePublication: int mAssociatedSubscription> = -1;

        r0.<com.android.service.ims.presence.PresencePublication: android.app.PendingIntent mRetryAlarmIntent> = null;

        r0.<com.android.service.ims.presence.PresencePublication: android.app.AlarmManager mAlarmManager> = null;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mCancelRetry> = 1;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mPendingRetry> = 0;

        $r8 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r8.<com.android.ims.internal.Logger: void debug(java.lang.String)>("PresencePublication constrcuct");

        r26 = r0.<com.android.service.ims.presence.PresencePublication: java.lang.Object mSyncObj>;

        entermonitor r26;

     label1:
        r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublisher mPresencePublisher> = r23;

        exitmonitor r26;

     label2:
        r0.<com.android.service.ims.presence.PresencePublication: java.lang.String[] mConfigVolteProvisionErrorOnPublishResponse> = r25;

        r0.<com.android.service.ims.presence.PresencePublication: java.lang.String[] mConfigRcsProvisionErrorOnPublishResponse> = r1;

        $i0 = r0.<com.android.service.ims.presence.PresencePublication: int mAssociatedSubscription>;

        $z0 = staticinvoke <com.android.service.ims.RcsSettingUtils: boolean isVtEnabledByUser(int)>($i0);

        r0.<com.android.service.ims.presence.PresencePublication: boolean mVtEnabled> = $z0;

        $r9 = r0.<com.android.service.ims.presence.PresencePublication: android.content.Context mContext>;

        $r10 = virtualinvoke $r9.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i1 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r10, "mobile_data", 1);

        if $i1 != 1 goto label3;

        z2 = 1;

     label3:
        r0.<com.android.service.ims.presence.PresencePublication: boolean mDataEnabled> = z2;

        r27 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The current mobile data is: ");

        $z1 = r0.<com.android.service.ims.presence.PresencePublication: boolean mDataEnabled>;

        if $z1 == 0 goto label4;

        r29 = "enabled";

        goto label5;

     label4:
        r29 = "disabled";

     label5:
        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r27.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r14);

        $r15 = r0.<com.android.service.ims.presence.PresencePublication: android.content.Context mContext>;

        $r16 = virtualinvoke $r15.<android.content.Context: java.lang.Object getSystemService(java.lang.Class)>(class "Landroid/telecom/TelecomManager;");

        $r17 = (android.telecom.TelecomManager) $r16;

        $i2 = virtualinvoke $r17.<android.telecom.TelecomManager: int getCurrentTtyMode()>();

        r0.<com.android.service.ims.presence.PresencePublication: int mPreferredTtyMode> = $i2;

        r30 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The current TTY mode is: ");

        $i3 = r0.<com.android.service.ims.presence.PresencePublication: int mPreferredTtyMode>;

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r30.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r21);

        <com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublication sPresencePublication> = r0;

        return;

     label6:
        $r22 := @caughtexception;

     label7:
        exitmonitor r26;

     label8:
        throw $r22;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    static com.android.ims.internal.Logger access$000(com.android.service.ims.presence.PresencePublication)
    {
        com.android.service.ims.presence.PresencePublication r0;
        com.android.ims.internal.Logger $r1;

        r0 := @parameter0: com.android.service.ims.presence.PresencePublication;

        $r1 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        return $r1;
    }

    static java.lang.Object access$100(com.android.service.ims.presence.PresencePublication)
    {
        com.android.service.ims.presence.PresencePublication r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.service.ims.presence.PresencePublication;

        $r1 = r0.<com.android.service.ims.presence.PresencePublication: java.lang.Object mSyncObj>;

        return $r1;
    }

    static void access$200(com.android.service.ims.presence.PresencePublication, com.android.service.ims.presence.PresencePublication$PublishRequest)
    {
        com.android.service.ims.presence.PresencePublication r0;
        com.android.service.ims.presence.PresencePublication$PublishRequest r1;

        r0 := @parameter0: com.android.service.ims.presence.PresencePublication;

        r1 := @parameter1: com.android.service.ims.presence.PresencePublication$PublishRequest;

        specialinvoke r0.<com.android.service.ims.presence.PresencePublication: void doPublish(com.android.service.ims.presence.PresencePublication$PublishRequest)>(r1);

        return;
    }

    static void access$300(com.android.service.ims.presence.PresencePublication)
    {
        com.android.service.ims.presence.PresencePublication r0;

        r0 := @parameter0: com.android.service.ims.presence.PresencePublication;

        specialinvoke r0.<com.android.service.ims.presence.PresencePublication: void requestPublishIfSubscriptionReady()>();

        return;
    }

    static boolean access$400(com.android.service.ims.presence.PresencePublication, boolean, boolean)
    {
        com.android.service.ims.presence.PresencePublication r0;
        boolean z0, z1, $z2;

        r0 := @parameter0: com.android.service.ims.presence.PresencePublication;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $z2 = specialinvoke r0.<com.android.service.ims.presence.PresencePublication: boolean isIPVoiceSupported(boolean,boolean)>(z0, z1);

        return $z2;
    }

    static boolean access$500(com.android.service.ims.presence.PresencePublication, boolean, boolean)
    {
        com.android.service.ims.presence.PresencePublication r0;
        boolean z0, z1, $z2;

        r0 := @parameter0: com.android.service.ims.presence.PresencePublication;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $z2 = specialinvoke r0.<com.android.service.ims.presence.PresencePublication: boolean isIPVideoSupported(boolean,boolean)>(z0, z1);

        return $z2;
    }

    private void doPublish(com.android.service.ims.presence.PresencePublication$PublishRequest)
    {
        com.android.service.ims.presence.PresencePublication r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, $z11;
        int i0, i1, $i2, $i3, $i5, $i6, $i7, $i14, $i15;
        com.android.ims.internal.Logger r1, $r32, $r33, $r38, $r50, $r51, $r52, r60, r62, r69;
        java.lang.StringBuilder $r2, $r13, $r23, $r40;
        java.lang.String $r5, $r20, $r22, $r28, $r45, r67;
        android.content.Context $r6;
        java.lang.Object $r7, r57, r59, r66;
        android.telephony.TelephonyManager $r8, $r9;
        android.telephony.ims.RcsContactUceCapability$Builder $r10;
        com.android.service.ims.presence.PresencePublication$PublishRequest $r11, $r34, $r35, $r36, $r37, $r39, $r46, $r47, r56;
        long $l4, $l10, $l11, $l12, $l13, l16, l17, l19, l20;
        com.android.service.ims.TaskManager $r12, $r29;
        android.telephony.ims.RcsContactUceCapability $r21;
        byte $b8, $b9, $b18;
        android.app.PendingIntent $r48;
        android.app.AlarmManager $r49;
        java.lang.Throwable $r53, $r54, $r55;
        com.android.service.ims.presence.PresencePublisher r58;
        android.net.Uri r64;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        r56 := @parameter0: com.android.service.ims.presence.PresencePublication$PublishRequest;

        if r56 != null goto label01;

        $r52 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r52.<com.android.ims.internal.Logger: void error(java.lang.String)>("publishRequest == null");

        return;

     label01:
        r57 = r0.<com.android.service.ims.presence.PresencePublication: java.lang.Object mSyncObj>;

        entermonitor r57;

     label02:
        r58 = r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublisher mPresencePublisher>;

        exitmonitor r57;

     label03:
        if r58 != null goto label04;

        $r51 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r51.<com.android.ims.internal.Logger: void error(java.lang.String)>("mPresencePublisher == null");

        return;

     label04:
        $z1 = r0.<com.android.service.ims.presence.PresencePublication: boolean mImsRegistered>;

        if $z1 != 0 goto label05;

        $r50 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r50.<com.android.ims.internal.Logger: void error(java.lang.String)>("IMS wasn\'t registered");

        return;

     label05:
        z0 = r0.<com.android.service.ims.presence.PresencePublication: boolean mPendingRetry>;

        z10 = 0;

        if z0 == 0 goto label06;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mPendingRetry> = 0;

        $r49 = r0.<com.android.service.ims.presence.PresencePublication: android.app.AlarmManager mAlarmManager>;

        $r48 = r0.<com.android.service.ims.presence.PresencePublication: android.app.PendingIntent mRetryAlarmIntent>;

        virtualinvoke $r49.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r48);

     label06:
        r59 = r0.<com.android.service.ims.presence.PresencePublication: java.lang.Object mSyncObj>;

        entermonitor r59;

     label07:
        virtualinvoke r56.<com.android.service.ims.presence.PresencePublication$PublishRequest: void refreshPublishContent()>();

        exitmonitor r59;

     label08:
        r60 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("publishRequest=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r56);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r60.<com.android.ims.internal.Logger: void print(java.lang.String)>($r5);

        $z2 = virtualinvoke r56.<com.android.service.ims.presence.PresencePublication$PublishRequest: boolean getForceToNetwork()>();

        if $z2 != 0 goto label10;

        $z7 = specialinvoke r0.<com.android.service.ims.presence.PresencePublication: boolean isPublishedOrPublishing()>();

        if $z7 == 0 goto label10;

        $r39 = r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublication$PublishRequest mPublishingRequest>;

        $z8 = virtualinvoke r56.<com.android.service.ims.presence.PresencePublication$PublishRequest: boolean hasSamePublishContent(com.android.service.ims.presence.PresencePublication$PublishRequest)>($r39);

        if $z8 != 0 goto label09;

        $r46 = r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublication$PublishRequest mPublishingRequest>;

        if $r46 != null goto label10;

        $r47 = r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublication$PublishRequest mPublishedRequest>;

        $z9 = virtualinvoke r56.<com.android.service.ims.presence.PresencePublication$PublishRequest: boolean hasSamePublishContent(com.android.service.ims.presence.PresencePublication$PublishRequest)>($r47);

        if $z9 == 0 goto label10;

     label09:
        $i14 = virtualinvoke r0.<com.android.service.ims.presence.PresencePublication: int getPublishState()>();

        if $i14 == 1 goto label10;

        r62 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Don\'t need publish since the capability didn\'t change publishRequest ");

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r56);

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" getPublishState()=");

        $i15 = virtualinvoke r0.<com.android.service.ims.presence.PresencePublication: int getPublishState()>();

        virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r45 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r62.<com.android.ims.internal.Logger: void print(java.lang.String)>($r45);

        return;

     label10:
        $z11 = specialinvoke r0.<com.android.service.ims.presence.PresencePublication: boolean isPublishedOrPublishing()>();

        if $z11 == 0 goto label18;

        $z6 = r0.<com.android.service.ims.presence.PresencePublication: boolean mPendingRetry>;

        if $z6 == 0 goto label11;

        $r38 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r38.<com.android.ims.internal.Logger: void print(java.lang.String)>("Pending a retry");

        return;

     label11:
        $i6 = r0.<com.android.service.ims.presence.PresencePublication: int mAssociatedSubscription>;

        $i7 = staticinvoke <com.android.service.ims.RcsSettingUtils: int getPublishThrottle(int)>($i6);

        l16 = (long) $i7;

        l17 = l16;

        $r34 = r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublication$PublishRequest mPublishingRequest>;

        if $r34 == null goto label12;

        $l12 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r37 = r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublication$PublishRequest mPublishingRequest>;

        $l13 = virtualinvoke $r37.<com.android.service.ims.presence.PresencePublication$PublishRequest: long getTimestamp()>();

        l17 = $l12 - $l13;

        goto label13;

     label12:
        $r35 = r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublication$PublishRequest mPublishedRequest>;

        if $r35 == null goto label13;

        $l10 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r36 = r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublication$PublishRequest mPublishedRequest>;

        $l11 = virtualinvoke $r36.<com.android.service.ims.presence.PresencePublication$PublishRequest: long getTimestamp()>();

        l17 = $l10 - $l11;

     label13:
        $b18 = l17 cmp 0L;

        if $b18 < 0 goto label14;

        goto label15;

     label14:
        l17 = l16;

     label15:
        l19 = l16 - l17;

        l20 = 120000L;

        $b8 = l19 cmp 120000L;

        if $b8 <= 0 goto label16;

        goto label17;

     label16:
        l20 = l19;

     label17:
        $b9 = l20 cmp 0L;

        if $b9 <= 0 goto label18;

        specialinvoke r0.<com.android.service.ims.presence.PresencePublication: void scheduleRetryPublish(long)>(l20);

        return;

     label18:
        $i2 = r0.<com.android.service.ims.presence.PresencePublication: int mAssociatedSubscription>;

        $z3 = staticinvoke <com.android.service.ims.RcsSettingUtils: boolean isAdvancedCallingEnabledByUser(int)>($i2);

        if $z3 != 0 goto label19;

        $i5 = virtualinvoke r0.<com.android.service.ims.presence.PresencePublication: int getPublishState()>();

        if $i5 == 1 goto label19;

        specialinvoke r0.<com.android.service.ims.presence.PresencePublication: void reset()>();

        return;

     label19:
        $r6 = r0.<com.android.service.ims.presence.PresencePublication: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r8 = (android.telephony.TelephonyManager) $r7;

        $i3 = r0.<com.android.service.ims.presence.PresencePublication: int mAssociatedSubscription>;

        $r9 = virtualinvoke $r8.<android.telephony.TelephonyManager: android.telephony.TelephonyManager createForSubscriptionId(int)>($i3);

        if $r9 != null goto label20;

        $r33 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r33.<com.android.ims.internal.Logger: void error(java.lang.String)>("TelephonyManager not available.");

        return;

     label20:
        r64 = specialinvoke r0.<com.android.service.ims.presence.PresencePublication: android.net.Uri getUriForPublication()>();

        if r64 != null goto label21;

        $r32 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r32.<com.android.ims.internal.Logger: void error(java.lang.String)>("doPublish, myUri is null");

        return;

     label21:
        $r10 = new android.telephony.ims.RcsContactUceCapability$Builder;

        specialinvoke $r10.<android.telephony.ims.RcsContactUceCapability$Builder: void <init>(android.net.Uri)>(r64);

        $z4 = virtualinvoke r56.<com.android.service.ims.presence.PresencePublication$PublishRequest: boolean getVolteCapable()>();

        if $z4 == 0 goto label22;

        virtualinvoke $r10.<android.telephony.ims.RcsContactUceCapability$Builder: android.telephony.ims.RcsContactUceCapability$Builder add(long)>(8192L);

     label22:
        $z5 = virtualinvoke r56.<com.android.service.ims.presence.PresencePublication$PublishRequest: boolean getVtCapable()>();

        if $z5 == 0 goto label23;

        virtualinvoke $r10.<android.telephony.ims.RcsContactUceCapability$Builder: android.telephony.ims.RcsContactUceCapability$Builder add(long)>(16384L);

     label23:
        r66 = r0.<com.android.service.ims.presence.PresencePublication: java.lang.Object mSyncObj>;

        entermonitor r66;

     label24:
        r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublication$PublishRequest mPublishingRequest> = r56;

        $r11 = r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublication$PublishRequest mPublishingRequest>;

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke $r11.<com.android.service.ims.presence.PresencePublication$PublishRequest: void setTimestamp(long)>($l4);

        exitmonitor r66;

     label25:
        r67 = specialinvoke r0.<com.android.service.ims.presence.PresencePublication: java.lang.String getNumberFromUri(android.net.Uri)>(r64);

        $r12 = staticinvoke <com.android.service.ims.TaskManager: com.android.service.ims.TaskManager getDefault()>();

        i0 = virtualinvoke $r12.<com.android.service.ims.TaskManager: int addPublishTask(java.lang.String)>(r67);

        r1 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("doPublish, uri=");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r64);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", myNumber=");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r67);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", taskId=");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r20 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.ims.internal.Logger: void print(java.lang.String)>($r20);

        $r21 = virtualinvoke $r10.<android.telephony.ims.RcsContactUceCapability$Builder: android.telephony.ims.RcsContactUceCapability build()>();

        $r22 = virtualinvoke r64.<android.net.Uri: java.lang.String toString()>();

        i1 = interfaceinvoke r58.<com.android.service.ims.presence.PresencePublisher: int requestPublication(android.telephony.ims.RcsContactUceCapability,java.lang.String,int)>($r21, $r22, i0);

        if i1 == 0 goto label26;

        r69 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("doPublish, task=");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed with code=");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r69.<com.android.ims.internal.Logger: void print(java.lang.String)>($r28);

        $r29 = staticinvoke <com.android.service.ims.TaskManager: com.android.service.ims.TaskManager getDefault()>();

        virtualinvoke $r29.<com.android.service.ims.TaskManager: void removeTask(int)>(i0);

     label26:
        if i1 != -3 goto label27;

        z10 = 1;

     label27:
        r0.<com.android.service.ims.presence.PresencePublication: boolean mHasCachedTrigger> = z10;

        return;

     label28:
        $r53 := @caughtexception;

     label29:
        exitmonitor r66;

     label30:
        throw $r53;

     label31:
        $r54 := @caughtexception;

     label32:
        exitmonitor r59;

     label33:
        throw $r54;

     label34:
        $r55 := @caughtexception;

     label35:
        exitmonitor r57;

     label36:
        throw $r55;

        catch java.lang.Throwable from label02 to label03 with label34;
        catch java.lang.Throwable from label07 to label08 with label31;
        catch java.lang.Throwable from label24 to label25 with label28;
        catch java.lang.Throwable from label29 to label30 with label28;
        catch java.lang.Throwable from label32 to label33 with label31;
        catch java.lang.Throwable from label35 to label36 with label34;
    }

    private java.lang.String getNumberFromUri(android.net.Uri)
    {
        com.android.service.ims.presence.PresencePublication r0;
        android.net.Uri r1;
        com.android.ims.internal.Logger r2;
        java.lang.String $r3, $r4, $r8;
        int $i0;
        java.lang.StringBuilder $r5;
        java.lang.String[] r9;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        r1 := @parameter0: android.net.Uri;

        if r1 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r1.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

        r9 = virtualinvoke $r3.<java.lang.String: java.lang.String[] split(java.lang.String)>("[@;:]");

        $i0 = lengthof r9;

        if $i0 != 0 goto label2;

        r2 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getNumberFromUri: invalid uri=");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<com.android.ims.internal.Logger: void error(java.lang.String)>($r8);

        return null;

     label2:
        $r4 = r9[0];

        return $r4;
    }

    public static com.android.service.ims.presence.PresencePublication getPresencePublication()
    {
        com.android.service.ims.presence.PresencePublication $r0;

        $r0 = <com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublication sPresencePublication>;

        return $r0;
    }

    private android.net.Uri getUriForPublication()
    {
        com.android.service.ims.presence.PresencePublication r0;
        android.telephony.TelephonyManager r1, r25;
        java.lang.String r2, $r7, $r9, $r12, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r23, r34, r35;
        android.content.Context $r4;
        java.lang.Object $r5;
        int $i0, $i1, i2;
        java.lang.StringBuilder $r6, $r11, $r14, $r22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.android.ims.internal.ContactNumberUtils $r8;
        android.net.Uri $r10, $r13, r28, r31;
        com.android.ims.internal.Logger $r24, r26, r30, r32;
        java.lang.String[] r29;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        $r4 = r0.<com.android.service.ims.presence.PresencePublication: android.content.Context mContext>;

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r25 = (android.telephony.TelephonyManager) $r5;

        if r25 != null goto label1;

        $r24 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r24.<com.android.ims.internal.Logger: void error(java.lang.String)>("getUriForPublication, teleMgr = null");

        return null;

     label1:
        $i0 = r0.<com.android.service.ims.presence.PresencePublication: int mAssociatedSubscription>;

        r1 = virtualinvoke r25.<android.telephony.TelephonyManager: android.telephony.TelephonyManager createForSubscriptionId(int)>($i0);

        r2 = virtualinvoke r1.<android.telephony.TelephonyManager: java.lang.String getIsimDomain()>();

        r26 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("myDomain=");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r26.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r7);

        r28 = null;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 != 0 goto label4;

        r29 = virtualinvoke r1.<android.telephony.TelephonyManager: java.lang.String[] getIsimImpu()>();

        r28 = null;

        if r29 == null goto label4;

        i2 = 0;

     label2:
        r28 = null;

        $i1 = lengthof r29;

        if i2 >= $i1 goto label4;

        r30 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("impu[");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");

        $r15 = r29[i2];

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r30.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r16);

        $r17 = r29[i2];

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r17);

        if $z3 != 0 goto label3;

        $r18 = r29[i2];

        r31 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r18);

        r28 = null;

        $r19 = "sip";

        $r20 = virtualinvoke r31.<android.net.Uri: java.lang.String getScheme()>();

        $z4 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z4 == 0 goto label4;

        r28 = null;

        $r21 = virtualinvoke r31.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

        $z5 = virtualinvoke $r21.<java.lang.String: boolean endsWith(java.lang.String)>(r2);

        if $z5 == 0 goto label4;

        r28 = r31;

        r32 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("impu[");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] -> uri:");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r31);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r32.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r23);

        goto label4;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        if r28 != null goto label5;

        r34 = null;

        goto label6;

     label5:
        r34 = virtualinvoke r28.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

     label6:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r34);

        if $z1 != 0 goto label7;

        return r28;

     label7:
        $r8 = staticinvoke <com.android.ims.internal.ContactNumberUtils: com.android.ims.internal.ContactNumberUtils getDefault()>();

        $r9 = virtualinvoke r1.<android.telephony.TelephonyManager: java.lang.String getLine1Number()>();

        r35 = virtualinvoke $r8.<com.android.ims.internal.ContactNumberUtils: java.lang.String format(java.lang.String)>($r9);

        if r35 != null goto label8;

        return null;

     label8:
        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z2 != 0 goto label9;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r35);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = staticinvoke <android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>("sip", $r12, null);

        return $r13;

     label9:
        $r10 = staticinvoke <android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>("tel", r35, null);

        return $r10;
    }

    private boolean isIPVideoSupported(boolean, boolean)
    {
        com.android.service.ims.presence.PresencePublication r0;
        boolean z0, z1, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, z13, z14;
        com.android.ims.internal.Logger r1, $r3, $r4, $r5, $r6, $r7, $r8, $r11;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.StringBuilder $r12;
        java.lang.String $r13;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        z13 := @parameter0: boolean;

        z0 := @parameter1: boolean;

        $i0 = r0.<com.android.service.ims.presence.PresencePublication: int mAssociatedSubscription>;

        z1 = staticinvoke <com.android.service.ims.RcsSettingUtils: boolean isVoLteSupported(int)>($i0);

        if z1 == 0 goto label13;

        $i1 = r0.<com.android.service.ims.presence.PresencePublication: int mAssociatedSubscription>;

        $z3 = staticinvoke <com.android.service.ims.RcsSettingUtils: boolean isVtSupported(int)>($i1);

        if $z3 != 0 goto label01;

        goto label13;

     label01:
        $i2 = r0.<com.android.service.ims.presence.PresencePublication: int mAssociatedSubscription>;

        $z4 = staticinvoke <com.android.service.ims.RcsSettingUtils: boolean isVoLteProvisioned(int)>($i2);

        if $z4 == 0 goto label12;

        $i3 = r0.<com.android.service.ims.presence.PresencePublication: int mAssociatedSubscription>;

        $z5 = staticinvoke <com.android.service.ims.RcsSettingUtils: boolean isLvcProvisioned(int)>($i3);

        if $z5 != 0 goto label02;

        goto label12;

     label02:
        $i4 = r0.<com.android.service.ims.presence.PresencePublication: int mAssociatedSubscription>;

        $z6 = staticinvoke <com.android.service.ims.RcsSettingUtils: boolean isAdvancedCallingEnabledByUser(int)>($i4);

        if $z6 == 0 goto label11;

        $z7 = r0.<com.android.service.ims.presence.PresencePublication: boolean mVtEnabled>;

        if $z7 != 0 goto label03;

        goto label11;

     label03:
        $z8 = virtualinvoke r0.<com.android.service.ims.presence.PresencePublication: boolean isTtyOn()>();

        if $z8 == 0 goto label04;

        $r11 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r11.<com.android.ims.internal.Logger: void print(java.lang.String)>("isTtyOn=true, videoSupported=false");

        return 0;

     label04:
        $z9 = specialinvoke r0.<com.android.service.ims.presence.PresencePublication: boolean isOnIWLAN()>();

        if $z9 == 0 goto label07;

        if z13 != 0 goto label05;

        z14 = 0;

        if z0 == 0 goto label06;

     label05:
        z14 = 1;

     label06:
        r1 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("on IWLAN, videoSupported=");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z14);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.ims.internal.Logger: void print(java.lang.String)>($r13);

        return z14;

     label07:
        $z10 = virtualinvoke r0.<com.android.service.ims.presence.PresencePublication: boolean isDataEnabled()>();

        if $z10 != 0 goto label08;

        $r8 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r8.<com.android.ims.internal.Logger: void print(java.lang.String)>("isDataEnabled()=false, videoSupported=false");

        return 0;

     label08:
        $z11 = specialinvoke r0.<com.android.service.ims.presence.PresencePublication: boolean isOnLTE()>();

        if $z11 != 0 goto label09;

        $r7 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r7.<com.android.ims.internal.Logger: void print(java.lang.String)>("isOnLTE=false, videoSupported=false");

        return 0;

     label09:
        $z12 = r0.<com.android.service.ims.presence.PresencePublication: boolean mVoPSEnabled>;

        if $z12 != 0 goto label10;

        $r6 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r6.<com.android.ims.internal.Logger: void print(java.lang.String)>("mVoPSEnabled=false, videoSupported=false");

        return 0;

     label10:
        return 1;

     label11:
        $r5 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r5.<com.android.ims.internal.Logger: void print(java.lang.String)>("User disabled volte or vt, videoSupported=false");

        return 0;

     label12:
        $r4 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r4.<com.android.ims.internal.Logger: void print(java.lang.String)>("Not provisioned. videoSupported=false");

        return 0;

     label13:
        $r3 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r3.<com.android.ims.internal.Logger: void print(java.lang.String)>("Disabled by platform, videoSupported=false");

        return 0;
    }

    private boolean isIPVoiceSupported(boolean, boolean)
    {
        com.android.service.ims.presence.PresencePublication r0;
        boolean z0, z1, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11, z12;
        com.android.ims.internal.Logger r1, $r3, $r4, $r5, $r8, $r9, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.StringBuilder $r11;
        java.lang.String $r12;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        z11 := @parameter0: boolean;

        z0 := @parameter1: boolean;

        $i0 = r0.<com.android.service.ims.presence.PresencePublication: int mAssociatedSubscription>;

        z1 = staticinvoke <com.android.service.ims.RcsSettingUtils: boolean isVoLteSupported(int)>($i0);

        if z1 != 0 goto label1;

        $i5 = r0.<com.android.service.ims.presence.PresencePublication: int mAssociatedSubscription>;

        $z10 = staticinvoke <com.android.service.ims.RcsSettingUtils: boolean isVoWiFiSupported(int)>($i5);

        if $z10 != 0 goto label1;

        $r10 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r10.<com.android.ims.internal.Logger: void print(java.lang.String)>("Disabled by platform, voiceSupported=false");

        return 0;

     label1:
        $i1 = r0.<com.android.service.ims.presence.PresencePublication: int mAssociatedSubscription>;

        $z3 = staticinvoke <com.android.service.ims.RcsSettingUtils: boolean isVoLteProvisioned(int)>($i1);

        if $z3 != 0 goto label2;

        $i4 = r0.<com.android.service.ims.presence.PresencePublication: int mAssociatedSubscription>;

        $z9 = staticinvoke <com.android.service.ims.RcsSettingUtils: boolean isVowifiProvisioned(int)>($i4);

        if $z9 != 0 goto label2;

        $r9 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r9.<com.android.ims.internal.Logger: void print(java.lang.String)>("Wasn\'t provisioned, voiceSupported=false");

        return 0;

     label2:
        $i2 = r0.<com.android.service.ims.presence.PresencePublication: int mAssociatedSubscription>;

        $z4 = staticinvoke <com.android.service.ims.RcsSettingUtils: boolean isAdvancedCallingEnabledByUser(int)>($i2);

        if $z4 != 0 goto label3;

        $i3 = r0.<com.android.service.ims.presence.PresencePublication: int mAssociatedSubscription>;

        $z8 = staticinvoke <com.android.service.ims.RcsSettingUtils: boolean isWfcEnabledByUser(int)>($i3);

        if $z8 != 0 goto label3;

        $r8 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r8.<com.android.ims.internal.Logger: void print(java.lang.String)>("User didn\'t enable volte or wfc, voiceSupported=false");

        return 0;

     label3:
        $z5 = specialinvoke r0.<com.android.service.ims.presence.PresencePublication: boolean isOnIWLAN()>();

        if $z5 == 0 goto label6;

        if z11 != 0 goto label4;

        z12 = 0;

        if z0 == 0 goto label5;

     label4:
        z12 = 1;

     label5:
        r1 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("on IWLAN, voiceSupported=");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z12);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.ims.internal.Logger: void print(java.lang.String)>($r12);

        return z12;

     label6:
        $z6 = specialinvoke r0.<com.android.service.ims.presence.PresencePublication: boolean isOnLTE()>();

        if $z6 != 0 goto label7;

        $r5 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r5.<com.android.ims.internal.Logger: void print(java.lang.String)>("isOnLTE=false, voiceSupported=false");

        return 0;

     label7:
        $z7 = r0.<com.android.service.ims.presence.PresencePublication: boolean mVoPSEnabled>;

        if $z7 != 0 goto label8;

        $r4 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r4.<com.android.ims.internal.Logger: void print(java.lang.String)>("mVoPSEnabled=false, voiceSupported=false");

        return 0;

     label8:
        $r3 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r3.<com.android.ims.internal.Logger: void print(java.lang.String)>("voiceSupported=true");

        return 1;
    }

    private boolean isOnIWLAN()
    {
        com.android.service.ims.presence.PresencePublication r0;
        int i0;
        com.android.ims.internal.Logger r1;
        android.content.Context $r3;
        java.lang.Object $r4;
        android.telephony.TelephonyManager $r5;
        java.lang.StringBuilder $r6;
        boolean $z0, $z1, z2;
        java.lang.String $r11;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        $r3 = r0.<com.android.service.ims.presence.PresencePublication: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r5 = (android.telephony.TelephonyManager) $r4;

        i0 = virtualinvoke $r5.<android.telephony.TelephonyManager: int getDataNetworkType()>();

        r1 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mMovedToIWLAN=");

        $z0 = r0.<com.android.service.ims.presence.PresencePublication: boolean mMovedToIWLAN>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" networkType=");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r11);

        $z1 = r0.<com.android.service.ims.presence.PresencePublication: boolean mMovedToIWLAN>;

        if $z1 == 0 goto label1;

        if i0 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    private boolean isOnLTE()
    {
        com.android.service.ims.presence.PresencePublication r0;
        int i0;
        com.android.ims.internal.Logger r1;
        android.content.Context $r3;
        java.lang.Object $r4;
        android.telephony.TelephonyManager $r5;
        java.lang.StringBuilder $r6;
        boolean $z0, $z1, z2;
        java.lang.String $r11;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        $r3 = r0.<com.android.service.ims.presence.PresencePublication: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        $r5 = (android.telephony.TelephonyManager) $r4;

        i0 = virtualinvoke $r5.<android.telephony.TelephonyManager: int getDataNetworkType()>();

        r1 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mMovedToLTE=");

        $z0 = r0.<com.android.service.ims.presence.PresencePublication: boolean mMovedToLTE>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" networkType=");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r11);

        $z1 = r0.<com.android.service.ims.presence.PresencePublication: boolean mMovedToLTE>;

        if $z1 == 0 goto label1;

        if i0 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    private boolean isPublishedOrPublishing()
    {
        com.android.service.ims.presence.PresencePublication r0;
        long l0, $l3, $l4, $l5;
        com.android.service.ims.presence.PresencePublication$PublishRequest r1, $r2;
        int $i1, $i2, $i7;
        byte $b6;
        boolean z1, z2;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        $i1 = r0.<com.android.service.ims.presence.PresencePublication: int mAssociatedSubscription>;

        $i2 = staticinvoke <com.android.service.ims.RcsSettingUtils: int getPublishThrottle(int)>($i1);

        l0 = (long) $i2;

        r1 = r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublication$PublishRequest mPublishingRequest>;

        if r1 == null goto label1;

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r2 = r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublication$PublishRequest mPublishingRequest>;

        $l4 = virtualinvoke $r2.<com.android.service.ims.presence.PresencePublication$PublishRequest: long getTimestamp()>();

        $l5 = $l3 - $l4;

        $b6 = $l5 cmp l0;

        if $b6 > 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        z2 = 1;

        $i7 = virtualinvoke r0.<com.android.service.ims.presence.PresencePublication: int getPublishState()>();

        if $i7 == 0 goto label4;

        if z1 == 0 goto label3;

        z2 = 1;

        goto label4;

     label3:
        z2 = 0;

     label4:
        return z2;
    }

    private boolean isSimLoaded()
    {
        com.android.service.ims.presence.PresencePublication r0;
        java.lang.String[] r1;
        java.lang.String r2, $r5;
        android.content.Context $r3;
        java.lang.Object $r4;
        int $i0, $i1;
        boolean $z1, $z2, z3;
        android.telephony.TelephonyManager r6, r7;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        $r3 = r0.<com.android.service.ims.presence.PresencePublication: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r6 = (android.telephony.TelephonyManager) $r4;

        if r6 != null goto label1;

        return 0;

     label1:
        $i0 = r0.<com.android.service.ims.presence.PresencePublication: int mAssociatedSubscription>;

        r7 = virtualinvoke r6.<android.telephony.TelephonyManager: android.telephony.TelephonyManager createForSubscriptionId(int)>($i0);

        r1 = virtualinvoke r7.<android.telephony.TelephonyManager: java.lang.String[] getIsimImpu()>();

        r2 = virtualinvoke r7.<android.telephony.TelephonyManager: java.lang.String getIsimDomain()>();

        $r5 = virtualinvoke r7.<android.telephony.TelephonyManager: java.lang.String getLine1Number()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        if $z1 == 0 goto label2;

        z3 = 0;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z2 != 0 goto label3;

        z3 = 0;

        if r1 == null goto label3;

        z3 = 0;

        $i1 = lengthof r1;

        if $i1 == 0 goto label3;

     label2:
        z3 = 1;

     label3:
        return z3;
    }

    private static boolean isTtyEnabled(int)
    {
        int i0;
        boolean z0;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void onFeatureCapabilityChangedInternal(int, android.telephony.ims.feature.MmTelFeature$MmTelCapabilities)
    {
        com.android.service.ims.presence.PresencePublication r0;
        int i0, $i1;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, z13, z14, z15, z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23;
        java.lang.StringBuilder r1;
        android.content.Context $r18;
        android.content.ContentResolver $r19;
        com.android.ims.internal.Logger $r20, r23;
        java.lang.Throwable $r21;
        android.telephony.ims.feature.MmTelFeature$MmTelCapabilities r22;
        java.lang.String $r24;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        i0 := @parameter0: int;

        r22 := @parameter1: android.telephony.ims.feature.MmTelFeature$MmTelCapabilities;

        entermonitor r0;

     label01:
        z0 = r0.<com.android.service.ims.presence.PresencePublication: boolean mIsVolteAvailable>;

        z1 = r0.<com.android.service.ims.presence.PresencePublication: boolean mIsVtAvailable>;

        z2 = r0.<com.android.service.ims.presence.PresencePublication: boolean mIsVoWifiAvailable>;

        z3 = r0.<com.android.service.ims.presence.PresencePublication: boolean mIsViWifiAvailable>;

     label02:
        if i0 != 1 goto label05;

     label03:
        $z12 = virtualinvoke r22.<android.telephony.ims.feature.MmTelFeature$MmTelCapabilities: boolean isCapable(int)>(1);

        if $z12 == 0 goto label05;

     label04:
        z13 = 1;

        goto label06;

     label05:
        z13 = 0;

     label06:
        r0.<com.android.service.ims.presence.PresencePublication: boolean mIsVolteAvailable> = z13;

     label07:
        if i0 != 2 goto label10;

     label08:
        $z11 = virtualinvoke r22.<android.telephony.ims.feature.MmTelFeature$MmTelCapabilities: boolean isCapable(int)>(1);

        if $z11 == 0 goto label10;

     label09:
        z14 = 1;

        goto label11;

     label10:
        z14 = 0;

     label11:
        r0.<com.android.service.ims.presence.PresencePublication: boolean mIsVoWifiAvailable> = z14;

     label12:
        if i0 != 1 goto label15;

     label13:
        $z10 = virtualinvoke r22.<android.telephony.ims.feature.MmTelFeature$MmTelCapabilities: boolean isCapable(int)>(2);

        if $z10 == 0 goto label15;

     label14:
        z15 = 1;

        goto label16;

     label15:
        z15 = 0;

     label16:
        r0.<com.android.service.ims.presence.PresencePublication: boolean mIsVtAvailable> = z15;

     label17:
        if i0 != 2 goto label20;

     label18:
        $z9 = virtualinvoke r22.<android.telephony.ims.feature.MmTelFeature$MmTelCapabilities: boolean isCapable(int)>(2);

        if $z9 == 0 goto label20;

     label19:
        z16 = 1;

        goto label21;

     label20:
        z16 = 0;

     label21:
        r0.<com.android.service.ims.presence.PresencePublication: boolean mIsViWifiAvailable> = z16;

        r23 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mIsVolteAvailable=");

        $z17 = r0.<com.android.service.ims.presence.PresencePublication: boolean mIsVolteAvailable>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z17);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mIsVoWifiAvailable=");

        $z18 = r0.<com.android.service.ims.presence.PresencePublication: boolean mIsVoWifiAvailable>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z18);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mIsVtAvailable=");

        $z19 = r0.<com.android.service.ims.presence.PresencePublication: boolean mIsVtAvailable>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z19);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mIsViWifiAvailable=");

        $z20 = r0.<com.android.service.ims.presence.PresencePublication: boolean mIsViWifiAvailable>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z20);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" oldIsVolteAvailable=");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" oldIsVoWifiAvailable=");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" oldIsVtAvailable=");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" oldIsViWifiAvailable=");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z3);

        $r24 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r23.<com.android.ims.internal.Logger: void print(java.lang.String)>($r24);

        $z21 = r0.<com.android.service.ims.presence.PresencePublication: boolean mIsVolteAvailable>;

        if z0 != $z21 goto label22;

        $z6 = r0.<com.android.service.ims.presence.PresencePublication: boolean mIsVtAvailable>;

        if z1 != $z6 goto label22;

        $z7 = r0.<com.android.service.ims.presence.PresencePublication: boolean mIsVoWifiAvailable>;

        if z2 != $z7 goto label22;

        $z8 = r0.<com.android.service.ims.presence.PresencePublication: boolean mIsViWifiAvailable>;

        if z3 == $z8 goto label27;

     label22:
        $z22 = r0.<com.android.service.ims.presence.PresencePublication: boolean mGotTriggerFromStack>;

        if $z22 == 0 goto label26;

        $r18 = r0.<com.android.service.ims.presence.PresencePublication: android.content.Context mContext>;

        $r19 = virtualinvoke $r18.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $i1 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r19, "airplane_mode_on", 0);

        if $i1 == 0 goto label24;

        $z4 = r0.<com.android.service.ims.presence.PresencePublication: boolean mIsVoWifiAvailable>;

        if $z4 != 0 goto label24;

        $z5 = r0.<com.android.service.ims.presence.PresencePublication: boolean mIsViWifiAvailable>;

        if $z5 != 0 goto label24;

        $r20 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r20.<com.android.ims.internal.Logger: void print(java.lang.String)>("Airplane mode was on and no vowifi and viwifi. Don\'t need publish. Stack will unpublish");

     label23:
        exitmonitor r0;

        return;

     label24:
        $z23 = specialinvoke r0.<com.android.service.ims.presence.PresencePublication: boolean isOnIWLAN()>();

        if $z23 == 0 goto label27;

        specialinvoke r0.<com.android.service.ims.presence.PresencePublication: void requestLocalPublish(int)>(5);

     label25:
        goto label27;

     label26:
        r0.<com.android.service.ims.presence.PresencePublication: boolean mHasCachedTrigger> = 1;

     label27:
        exitmonitor r0;

        return;

     label28:
        $r21 := @caughtexception;

        exitmonitor r0;

        throw $r21;

        catch java.lang.Throwable from label01 to label02 with label28;
        catch java.lang.Throwable from label03 to label04 with label28;
        catch java.lang.Throwable from label06 to label07 with label28;
        catch java.lang.Throwable from label08 to label09 with label28;
        catch java.lang.Throwable from label11 to label12 with label28;
        catch java.lang.Throwable from label13 to label14 with label28;
        catch java.lang.Throwable from label16 to label17 with label28;
        catch java.lang.Throwable from label18 to label19 with label28;
        catch java.lang.Throwable from label21 to label22 with label28;
        catch java.lang.Throwable from label22 to label23 with label28;
        catch java.lang.Throwable from label24 to label25 with label28;
        catch java.lang.Throwable from label26 to label27 with label28;
    }

    private void requestLocalPublish(int)
    {
        com.android.service.ims.presence.PresencePublication r0;
        int i0, $i1;
        com.android.ims.internal.Logger $r1, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        boolean $z0, $z1, $z2, z3, $z4;
        android.content.Context $r2;
        com.android.service.ims.presence.PresencePublication$PublishRequest $r3;
        long $l2;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        i0 := @parameter0: int;

        z3 = 1;

        tableswitch(i0)
        {
            case 0: goto label08;
            case 1: goto label07;
            case 2: goto label06;
            case 3: goto label05;
            case 4: goto label04;
            case 5: goto label03;
            case 6: goto label02;
            default: goto label01;
        };

     label01:
        $r14 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r14.<com.android.ims.internal.Logger: void print(java.lang.String)>("Unknown publish trigger from AP");

        goto label09;

     label02:
        $r1 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r1.<com.android.ims.internal.Logger: void print(java.lang.String)>("PRES_PUBLISH_TRIGGER_DEFAULT_SUB_CHANGED");

        z3 = 1;

        goto label09;

     label03:
        z3 = 0;

        $r8 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r8.<com.android.ims.internal.Logger: void print(java.lang.String)>("PRES_PUBLISH_TRIGGER_FEATURE_AVAILABILITY_CHANGED");

        goto label09;

     label04:
        $r9 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r9.<com.android.ims.internal.Logger: void print(java.lang.String)>("PRES_PUBLISH_TRIGGER_RETRY");

        goto label09;

     label05:
        $r10 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r10.<com.android.ims.internal.Logger: void print(java.lang.String)>("PRES_PUBLISH_TRIGGER_TTY_ENABLE_STATUS");

        z3 = 1;

        goto label09;

     label06:
        $r11 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r11.<com.android.ims.internal.Logger: void print(java.lang.String)>("PRES_PUBLISH_TRIGGER_CACHED_TRIGGER");

        goto label09;

     label07:
        $r12 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r12.<com.android.ims.internal.Logger: void print(java.lang.String)>("PRES_PUBLISH_TRIGGER_VTCALL_CHANGED");

        z3 = 1;

        goto label09;

     label08:
        $r13 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r13.<com.android.ims.internal.Logger: void print(java.lang.String)>("PRES_PUBLISH_TRIGGER_DATA_CHANGED");

        z3 = 0;

     label09:
        $z4 = r0.<com.android.service.ims.presence.PresencePublication: boolean mGotTriggerFromStack>;

        if $z4 != 0 goto label10;

        $r7 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r7.<com.android.ims.internal.Logger: void print(java.lang.String)>("Didn\'t get trigger from stack yet, discard framework trigger.");

        return;

     label10:
        $z0 = r0.<com.android.service.ims.presence.PresencePublication: boolean mDonotRetryUntilPowerCycle>;

        if $z0 == 0 goto label11;

        $r6 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r6.<com.android.ims.internal.Logger: void print(java.lang.String)>("Don\'t publish until next power cycle");

        return;

     label11:
        $z1 = r0.<com.android.service.ims.presence.PresencePublication: boolean mSimLoaded>;

        if $z1 != 0 goto label12;

        $r5 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r5.<com.android.ims.internal.Logger: void print(java.lang.String)>("invokePublish cache the trigger since the SIM is not ready");

        r0.<com.android.service.ims.presence.PresencePublication: boolean mHasCachedTrigger> = 1;

        return;

     label12:
        $r2 = r0.<com.android.service.ims.presence.PresencePublication: android.content.Context mContext>;

        $i1 = r0.<com.android.service.ims.presence.PresencePublication: int mAssociatedSubscription>;

        $z2 = staticinvoke <com.android.service.ims.RcsSettingUtils: boolean isEabProvisioned(android.content.Context,int)>($r2, $i1);

        if $z2 != 0 goto label13;

        $r4 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r4.<com.android.ims.internal.Logger: void print(java.lang.String)>("invokePublish cache the trigger, not provision yet");

        r0.<com.android.service.ims.presence.PresencePublication: boolean mHasCachedTrigger> = 1;

        return;

     label13:
        $r3 = new com.android.service.ims.presence.PresencePublication$PublishRequest;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r3.<com.android.service.ims.presence.PresencePublication$PublishRequest: void <init>(com.android.service.ims.presence.PresencePublication,boolean,long)>(r0, z3, $l2);

        specialinvoke r0.<com.android.service.ims.presence.PresencePublication: void requestPublication(com.android.service.ims.presence.PresencePublication$PublishRequest)>($r3);

        return;
    }

    private void requestPublication(com.android.service.ims.presence.PresencePublication$PublishRequest)
    {
        com.android.service.ims.presence.PresencePublication r0;
        long l0, $l1, $l2, $l4;
        java.lang.Object r1;
        com.android.service.ims.presence.PresencePublication$PublishRequest $r2, $r3, $r6, $r8, $r9, r12, $r13;
        android.os.Handler $r4, $r5;
        byte $b3;
        com.android.ims.internal.Logger $r7, $r10;
        boolean $z1, $z2;
        java.lang.Throwable $r11;
        android.os.Message r14;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        r12 := @parameter0: com.android.service.ims.presence.PresencePublication$PublishRequest;

        if r12 != null goto label1;

        $r10 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r10.<com.android.ims.internal.Logger: void error(java.lang.String)>("Invalid parameter publishRequest == null");

        return;

     label1:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r1 = r0.<com.android.service.ims.presence.PresencePublication: java.lang.Object mSyncObj>;

        entermonitor r1;

     label2:
        $r2 = r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublication$PublishRequest mPendingRequest>;

        if $r2 == null goto label5;

        $r6 = r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublication$PublishRequest mPendingRequest>;

        $l1 = virtualinvoke $r6.<com.android.service.ims.presence.PresencePublication$PublishRequest: long getTimestamp()>();

        $l2 = l0 - $l1;

        $b3 = $l2 cmp 2000L;

        if $b3 > 0 goto label5;

        $r7 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r7.<com.android.ims.internal.Logger: void print(java.lang.String)>("A publish is pending, update the pending request and discard this one");

        $z1 = virtualinvoke r12.<com.android.service.ims.presence.PresencePublication$PublishRequest: boolean getForceToNetwork()>();

        if $z1 == 0 goto label3;

        $r8 = r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublication$PublishRequest mPendingRequest>;

        $z2 = virtualinvoke $r8.<com.android.service.ims.presence.PresencePublication$PublishRequest: boolean getForceToNetwork()>();

        if $z2 != 0 goto label3;

        $r9 = r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublication$PublishRequest mPendingRequest>;

        virtualinvoke $r9.<com.android.service.ims.presence.PresencePublication$PublishRequest: void setForceToNetwork(boolean)>(1);

     label3:
        $r13 = r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublication$PublishRequest mPendingRequest>;

        $l4 = virtualinvoke r12.<com.android.service.ims.presence.PresencePublication$PublishRequest: long getTimestamp()>();

        virtualinvoke $r13.<com.android.service.ims.presence.PresencePublication$PublishRequest: void setTimestamp(long)>($l4);

        exitmonitor r1;

     label4:
        return;

     label5:
        r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublication$PublishRequest mPendingRequest> = r12;

        exitmonitor r1;

     label6:
        $r4 = r0.<com.android.service.ims.presence.PresencePublication: android.os.Handler mMsgHandler>;

        $r3 = r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublication$PublishRequest mPendingRequest>;

        r14 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(1, $r3);

        $r5 = r0.<com.android.service.ims.presence.PresencePublication: android.os.Handler mMsgHandler>;

        virtualinvoke $r5.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r14, 2000L);

        return;

     label7:
        $r11 := @caughtexception;

     label8:
        exitmonitor r1;

     label9:
        throw $r11;

        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private void requestPublishIfSubscriptionReady()
    {
        com.android.service.ims.presence.PresencePublication r0;
        android.os.Handler r1, $r2;
        int $i0;
        boolean $z0, $z1;
        android.os.Message $r3;
        com.android.ims.internal.Logger $r4, $r5;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        $i0 = r0.<com.android.service.ims.presence.PresencePublication: int mAssociatedSubscription>;

        $z0 = staticinvoke <android.telephony.SubscriptionManager: boolean isValidSubscriptionId(int)>($i0);

        if $z0 != 0 goto label1;

        $r5 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r5.<com.android.ims.internal.Logger: void print(java.lang.String)>("subscription changed to invalid, setting to not published");

        specialinvoke r0.<com.android.service.ims.presence.PresencePublication: void reset()>();

        r0.<com.android.service.ims.presence.PresencePublication: boolean mSimLoaded> = 0;

        virtualinvoke r0.<com.android.service.ims.presence.PresencePublication: void setPublishState(int)>(1);

        return;

     label1:
        $z1 = specialinvoke r0.<com.android.service.ims.presence.PresencePublication: boolean isSimLoaded()>();

        if $z1 == 0 goto label2;

        $r4 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r4.<com.android.ims.internal.Logger: void print(java.lang.String)>("subscription ready, requesting publish");

        r0.<com.android.service.ims.presence.PresencePublication: boolean mSimLoaded> = 1;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mDonotRetryUntilPowerCycle> = 0;

        specialinvoke r0.<com.android.service.ims.presence.PresencePublication: void requestLocalPublish(int)>(6);

        goto label3;

     label2:
        $r2 = r0.<com.android.service.ims.presence.PresencePublication: android.os.Handler mMsgHandler>;

        virtualinvoke $r2.<android.os.Handler: void removeMessages(int)>(2);

        r1 = r0.<com.android.service.ims.presence.PresencePublication: android.os.Handler mMsgHandler>;

        $r3 = virtualinvoke r1.<android.os.Handler: android.os.Message obtainMessage(int)>(2);

        virtualinvoke r1.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r3, 5000L);

     label3:
        return;
    }

    private void reset()
    {
        com.android.service.ims.presence.PresencePublication r0;
        java.lang.Object r1;
        java.lang.Throwable $r3;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mIsVolteAvailable> = 0;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mIsVtAvailable> = 0;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mIsVoWifiAvailable> = 0;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mIsViWifiAvailable> = 0;

        r1 = r0.<com.android.service.ims.presence.PresencePublication: java.lang.Object mSyncObj>;

        entermonitor r1;

     label1:
        r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublication$PublishRequest mPendingRequest> = null;

        r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublication$PublishRequest mPublishingRequest> = null;

        r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublication$PublishRequest mPublishedRequest> = null;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void scheduleRetryPublish(long)
    {
        com.android.service.ims.presence.PresencePublication r0;
        long l0, $l1, $l2;
        java.lang.StringBuilder $r2;
        boolean $z0, $z1, $z2;
        java.lang.String $r9, $r12;
        android.content.Intent $r10;
        android.content.Context $r11, $r14, $r19;
        android.app.PendingIntent $r15, $r18;
        android.app.AlarmManager $r16, $r17, $r21;
        java.lang.Object $r20;
        com.android.ims.internal.Logger $r22, r23;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        l0 := @parameter0: long;

        r23 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("timeSpan=");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mPendingRetry=");

        $z0 = r0.<com.android.service.ims.presence.PresencePublication: boolean mPendingRetry>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCancelRetry=");

        $z1 = r0.<com.android.service.ims.presence.PresencePublication: boolean mCancelRetry>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r23.<com.android.ims.internal.Logger: void print(java.lang.String)>($r9);

        $z2 = r0.<com.android.service.ims.presence.PresencePublication: boolean mPendingRetry>;

        if $z2 == 0 goto label1;

        $r22 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r22.<com.android.ims.internal.Logger: void debug(java.lang.String)>("There was a retry already");

        return;

     label1:
        r0.<com.android.service.ims.presence.PresencePublication: boolean mPendingRetry> = 1;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mCancelRetry> = 0;

        $r10 = new android.content.Intent;

        specialinvoke $r10.<android.content.Intent: void <init>(java.lang.String)>("com.android.service.ims.presence.retry.publish");

        $r11 = r0.<com.android.service.ims.presence.PresencePublication: android.content.Context mContext>;

        $r12 = virtualinvoke $r11.<android.content.Context: java.lang.String getPackageName()>();

        virtualinvoke $r10.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>($r12);

        $r14 = r0.<com.android.service.ims.presence.PresencePublication: android.content.Context mContext>;

        $r15 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r14, 0, $r10, 134217728);

        r0.<com.android.service.ims.presence.PresencePublication: android.app.PendingIntent mRetryAlarmIntent> = $r15;

        $r16 = r0.<com.android.service.ims.presence.PresencePublication: android.app.AlarmManager mAlarmManager>;

        if $r16 != null goto label2;

        $r19 = r0.<com.android.service.ims.presence.PresencePublication: android.content.Context mContext>;

        $r20 = virtualinvoke $r19.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r21 = (android.app.AlarmManager) $r20;

        r0.<com.android.service.ims.presence.PresencePublication: android.app.AlarmManager mAlarmManager> = $r21;

     label2:
        $r17 = r0.<com.android.service.ims.presence.PresencePublication: android.app.AlarmManager mAlarmManager>;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l2 = $l1 + l0;

        $r18 = r0.<com.android.service.ims.presence.PresencePublication: android.app.PendingIntent mRetryAlarmIntent>;

        virtualinvoke $r17.<android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)>(2, $l2, $r18);

        return;
    }

    public int getPublishState()
    {
        com.android.service.ims.presence.PresencePublication r0;
        java.lang.Object r1;
        int $i0;
        java.lang.Throwable $r2;
        com.android.service.ims.presence.PresencePublisher r3;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        r1 = r0.<com.android.service.ims.presence.PresencePublication: java.lang.Object mSyncObj>;

        entermonitor r1;

     label1:
        r3 = r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublisher mPresencePublisher>;

        exitmonitor r1;

     label2:
        if r3 == null goto label3;

        $i0 = interfaceinvoke r3.<com.android.service.ims.presence.PresencePublisher: int getPublisherState()>();

        return $i0;

     label3:
        return 1;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void handleAssociatedSubscriptionChanged(int)
    {
        com.android.service.ims.presence.PresencePublication r0;
        int i0, $i1;
        android.os.Handler r1, $r2;
        android.os.Message $r3;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.service.ims.presence.PresencePublication: int mAssociatedSubscription>;

        if $i1 != i0 goto label1;

        return;

     label1:
        specialinvoke r0.<com.android.service.ims.presence.PresencePublication: void reset()>();

        r0.<com.android.service.ims.presence.PresencePublication: int mAssociatedSubscription> = i0;

        $r2 = r0.<com.android.service.ims.presence.PresencePublication: android.os.Handler mMsgHandler>;

        virtualinvoke $r2.<android.os.Handler: void removeMessages(int)>(2);

        r1 = r0.<com.android.service.ims.presence.PresencePublication: android.os.Handler mMsgHandler>;

        $r3 = virtualinvoke r1.<android.os.Handler: android.os.Message obtainMessage(int)>(2);

        virtualinvoke r1.<android.os.Handler: boolean sendMessage(android.os.Message)>($r3);

        return;
    }

    public void handleProvisioningChanged()
    {
        com.android.service.ims.presence.PresencePublication r0;
        int $i0;
        android.content.Context $r1;
        boolean $z0, $z1;
        com.android.ims.internal.Logger $r2;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        $r1 = r0.<com.android.service.ims.presence.PresencePublication: android.content.Context mContext>;

        $i0 = r0.<com.android.service.ims.presence.PresencePublication: int mAssociatedSubscription>;

        $z0 = staticinvoke <com.android.service.ims.RcsSettingUtils: boolean isEabProvisioned(android.content.Context,int)>($r1, $i0);

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r2.<com.android.ims.internal.Logger: void debug(java.lang.String)>("provisioned, set mDonotRetryUntilPowerCycle to false");

        r0.<com.android.service.ims.presence.PresencePublication: boolean mDonotRetryUntilPowerCycle> = 0;

        $z1 = r0.<com.android.service.ims.presence.PresencePublication: boolean mHasCachedTrigger>;

        if $z1 == 0 goto label1;

        specialinvoke r0.<com.android.service.ims.presence.PresencePublication: void requestLocalPublish(int)>(2);

     label1:
        return;
    }

    public boolean isDataEnabled()
    {
        com.android.service.ims.presence.PresencePublication r0;
        android.content.ContentResolver r1;
        android.content.Context $r2;
        int $i0;
        boolean z0;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        $r2 = r0.<com.android.service.ims.presence.PresencePublication: android.content.Context mContext>;

        r1 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        z0 = 1;

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>(r1, "mobile_data", 1);

        if $i0 != 1 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isTtyOn()
    {
        com.android.service.ims.presence.PresencePublication r0;
        com.android.ims.internal.Logger r1;
        java.lang.StringBuilder $r3;
        int $i0, $i1;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        r1 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isTtyOn settingsTtyMode=");

        $i0 = r0.<com.android.service.ims.presence.PresencePublication: int mPreferredTtyMode>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r6);

        $i1 = r0.<com.android.service.ims.presence.PresencePublication: int mPreferredTtyMode>;

        $z0 = staticinvoke <com.android.service.ims.presence.PresencePublication: boolean isTtyEnabled(int)>($i1);

        return $z0;
    }

    public void lambda$onFeatureCapabilityChanged$0$PresencePublication(int, android.telephony.ims.feature.MmTelFeature$MmTelCapabilities)
    {
        com.android.service.ims.presence.PresencePublication r0;
        int i0;
        android.telephony.ims.feature.MmTelFeature$MmTelCapabilities r1;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        i0 := @parameter0: int;

        r1 := @parameter1: android.telephony.ims.feature.MmTelFeature$MmTelCapabilities;

        specialinvoke r0.<com.android.service.ims.presence.PresencePublication: void onFeatureCapabilityChangedInternal(int,android.telephony.ims.feature.MmTelFeature$MmTelCapabilities)>(i0, r1);

        return;
    }

    public void onAirplaneModeChanged(boolean)
    {
        com.android.service.ims.presence.PresencePublication r0;
        boolean z0;
        com.android.ims.internal.Logger $r1;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r1 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r1.<com.android.ims.internal.Logger: void print(java.lang.String)>("Airplane mode, set to PUBLISH_STATE_NOT_PUBLISHED");

        specialinvoke r0.<com.android.service.ims.presence.PresencePublication: void reset()>();

        virtualinvoke r0.<com.android.service.ims.presence.PresencePublication: void setPublishState(int)>(1);

     label1:
        return;
    }

    public void onCommandStatusUpdated(int, int, int)
    {
        com.android.service.ims.presence.PresencePublication r0;
        int i0, i1, i2;
        com.android.ims.internal.Logger r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r6;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onCommandStatusUpdated: resultCode= ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.ims.internal.Logger: void info(java.lang.String)>($r6);

        specialinvoke r0.<com.android.service.ims.presence.PresenceBase: void onCommandStatusUpdated(int,int,int)>(i0, i1, i2);

        return;
    }

    public void onFeatureCapabilityChanged(int, android.telephony.ims.feature.MmTelFeature$MmTelCapabilities)
    {
        com.android.service.ims.presence.PresencePublication r0;
        int i0;
        android.telephony.ims.feature.MmTelFeature$MmTelCapabilities r1;
        com.android.ims.internal.Logger r2;
        java.lang.StringBuilder $r4;
        java.lang.String $r9;
        java.lang.Thread $r10;
        com.android.service.ims.presence._$$Lambda$PresencePublication$TOMIyjt7rrAKxwFWDjxMvCEwQiM $r11;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        i0 := @parameter0: int;

        r1 := @parameter1: android.telephony.ims.feature.MmTelFeature$MmTelCapabilities;

        r2 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onFeatureCapabilityChanged networkType=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", capabilities=");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r9);

        $r10 = new java.lang.Thread;

        $r11 = new com.android.service.ims.presence._$$Lambda$PresencePublication$TOMIyjt7rrAKxwFWDjxMvCEwQiM;

        specialinvoke $r11.<com.android.service.ims.presence._$$Lambda$PresencePublication$TOMIyjt7rrAKxwFWDjxMvCEwQiM: void <init>(com.android.service.ims.presence.PresencePublication,int,android.telephony.ims.feature.MmTelFeature$MmTelCapabilities)>(r0, i0, r1);

        specialinvoke $r10.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>($r11, "onFeatureCapabilityChangedInternal thread");

        virtualinvoke $r10.<java.lang.Thread: void start()>();

        return;
    }

    public void onImsConnected()
    {
        com.android.service.ims.presence.PresencePublication r0;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mImsRegistered> = 1;

        return;
    }

    public void onImsDisconnected()
    {
        com.android.service.ims.presence.PresencePublication r0;
        com.android.ims.internal.Logger $r1;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        $r1 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r1.<com.android.ims.internal.Logger: void debug(java.lang.String)>("reset PUBLISH status for IMS had been disconnected");

        r0.<com.android.service.ims.presence.PresencePublication: boolean mImsRegistered> = 0;

        specialinvoke r0.<com.android.service.ims.presence.PresencePublication: void reset()>();

        return;
    }

    public void onMobileDataChanged(boolean)
    {
        com.android.service.ims.presence.PresencePublication r0;
        boolean z0, $z1, $z2;
        com.android.ims.internal.Logger r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r8;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onMobileDataChanged, mDataEnabled=");

        $z1 = r0.<com.android.service.ims.presence.PresencePublication: boolean mDataEnabled>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" value=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.ims.internal.Logger: void print(java.lang.String)>($r8);

        $z2 = r0.<com.android.service.ims.presence.PresencePublication: boolean mDataEnabled>;

        if $z2 == z0 goto label1;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mDataEnabled> = z0;

        specialinvoke r0.<com.android.service.ims.presence.PresencePublication: void requestLocalPublish(int)>(0);

     label1:
        return;
    }

    public void onSipResponse(int, int, java.lang.String)
    {
        com.android.service.ims.presence.PresencePublication r0;
        int i0, i1, $i2;
        java.lang.StringBuilder $r1, $r11, $r15, $r21, $r27;
        java.lang.String $r6, $r14, $r18, $r26, $r32, r34;
        com.android.service.ims.presence.PresencePublication$PublishRequest $r7;
        java.lang.String[] $r8, $r9;
        boolean $z0, $z1;
        com.android.ims.internal.Logger $r10, $r19, $r20, r35, r38, r40, r42, r44;
        java.lang.Throwable $r33;
        java.lang.Object r37;
        com.android.service.ims.presence.PresenceSubscriber r46;
        com.android.service.ims.TaskManager $r47;
        com.android.service.ims.Task r48;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r34 := @parameter2: java.lang.String;

        r35 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Publish response code = ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Publish response reason phrase = ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r35.<com.android.ims.internal.Logger: void print(java.lang.String)>($r6);

        r37 = r0.<com.android.service.ims.presence.PresencePublication: java.lang.Object mSyncObj>;

        entermonitor r37;

     label01:
        $r7 = r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublication$PublishRequest mPublishingRequest>;

        r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublication$PublishRequest mPublishedRequest> = $r7;

        r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublication$PublishRequest mPublishingRequest> = null;

        exitmonitor r37;

     label02:
        $r8 = r0.<com.android.service.ims.presence.PresencePublication: java.lang.String[] mConfigVolteProvisionErrorOnPublishResponse>;

        $z0 = virtualinvoke r0.<com.android.service.ims.presence.PresencePublication: boolean isInConfigList(int,java.lang.String,java.lang.String[])>(i1, r34, $r8);

        if $z0 == 0 goto label03;

        r38 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("volte provision error. sipCode=");

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" phrase=");

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);

        $r32 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r38.<com.android.ims.internal.Logger: void print(java.lang.String)>($r32);

        virtualinvoke r0.<com.android.service.ims.presence.PresencePublication: void setPublishState(int)>(2);

        r0.<com.android.service.ims.presence.PresencePublication: boolean mDonotRetryUntilPowerCycle> = 1;

        virtualinvoke r0.<com.android.service.ims.presence.PresencePublication: void notifyDm()>();

        return;

     label03:
        $r9 = r0.<com.android.service.ims.presence.PresencePublication: java.lang.String[] mConfigRcsProvisionErrorOnPublishResponse>;

        $z1 = virtualinvoke r0.<com.android.service.ims.presence.PresencePublication: boolean isInConfigList(int,java.lang.String,java.lang.String[])>(i1, r34, $r9);

        if $z1 == 0 goto label04;

        r40 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rcs provision error.sipCode=");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" phrase=");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34);

        $r26 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r40.<com.android.ims.internal.Logger: void print(java.lang.String)>($r26);

        virtualinvoke r0.<com.android.service.ims.presence.PresencePublication: void setPublishState(int)>(3);

        r0.<com.android.service.ims.presence.PresencePublication: boolean mDonotRetryUntilPowerCycle> = 1;

        return;

     label04:
        if i1 == 200 goto label10;

        if i1 == 408 goto label09;

        if i1 == 999 goto label08;

        if i1 < 100 goto label06;

        if i1 <= 699 goto label05;

        goto label06;

     label05:
        $r19 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r19.<com.android.ims.internal.Logger: void debug(java.lang.String)>("Generic Failure");

        virtualinvoke r0.<com.android.service.ims.presence.PresencePublication: void setPublishState(int)>(5);

        if i1 < 400 goto label11;

        if i1 > 699 goto label11;

        $r20 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r20.<com.android.ims.internal.Logger: void debug(java.lang.String)>("No Retry in OEM");

        goto label11;

     label06:
        r42 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignore internal response code, sipCode=");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r42.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r14);

        if i1 != 888 goto label07;

        specialinvoke r0.<com.android.service.ims.presence.PresencePublication: void scheduleRetryPublish(long)>(120000L);

        goto label11;

     label07:
        r44 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignore internal response code, sipCode=");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r44.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r18);

        goto label11;

     label08:
        $r10 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r10.<com.android.ims.internal.Logger: void debug(java.lang.String)>("Publish ignored - No capability change");

        goto label11;

     label09:
        virtualinvoke r0.<com.android.service.ims.presence.PresencePublication: void setPublishState(int)>(4);

        goto label11;

     label10:
        virtualinvoke r0.<com.android.service.ims.presence.PresencePublication: void setPublishState(int)>(0);

        r46 = r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresenceSubscriber mSubscriber>;

        if r46 == null goto label11;

        virtualinvoke r46.<com.android.service.ims.presence.PresenceSubscriber: void retryToGetAvailability()>();

     label11:
        $r47 = staticinvoke <com.android.service.ims.TaskManager: com.android.service.ims.TaskManager getDefault()>();

        r48 = virtualinvoke $r47.<com.android.service.ims.TaskManager: com.android.service.ims.Task getTaskByRequestId(int)>(i0);

        if r48 == null goto label12;

        r48.<com.android.service.ims.Task: int mSipResponseCode> = i1;

        r48.<com.android.service.ims.Task: java.lang.String mSipReasonPhrase> = r34;

     label12:
        $i2 = virtualinvoke r0.<com.android.service.ims.presence.PresencePublication: int getPublishState()>();

        virtualinvoke r0.<com.android.service.ims.presence.PresencePublication: void handleCallback(com.android.service.ims.Task,int,boolean)>(r48, $i2, 0);

        return;

     label13:
        $r33 := @caughtexception;

     label14:
        exitmonitor r37;

     label15:
        throw $r33;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label14 to label15 with label13;
    }

    public void onStackAvailable()
    {
        com.android.service.ims.presence.PresencePublication r0;
        boolean $z0;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        $z0 = r0.<com.android.service.ims.presence.PresencePublication: boolean mHasCachedTrigger>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.service.ims.presence.PresencePublication: void requestLocalPublish(int)>(2);

     label1:
        return;
    }

    public void onStackPublishRequested(int)
    {
        com.android.service.ims.presence.PresencePublication r0;
        int i0, $i1;
        com.android.ims.internal.Logger $r1, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        boolean $z0, $z1, $z2;
        android.content.Context $r2;
        com.android.service.ims.presence.PresencePublication$PublishRequest $r3;
        long $l2;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        i0 := @parameter0: int;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mGotTriggerFromStack> = 1;

        tableswitch(i0)
        {
            case 0: goto label09;
            case 1: goto label08;
            case 2: goto label07;
            case 3: goto label06;
            case 4: goto label05;
            case 5: goto label04;
            case 6: goto label03;
            case 7: goto label01;
            case 8: goto label02;
            default: goto label01;
        };

     label01:
        $r14 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r14.<com.android.ims.internal.Logger: void print(java.lang.String)>("Unknow Publish Trigger Type");

        goto label10;

     label02:
        $r1 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r1.<com.android.ims.internal.Logger: void print(java.lang.String)>("QRCS_PRES_PUBLISH_TRIGGER_MOVE_TO_IWLAN");

        r0.<com.android.service.ims.presence.PresencePublication: boolean mMovedToLTE> = 0;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mVoPSEnabled> = 0;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mMovedToIWLAN> = 1;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mImsRegistered> = 1;

        goto label10;

     label03:
        $r7 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r7.<com.android.ims.internal.Logger: void print(java.lang.String)>("PUBLISH_TRIGGER_MOVE_TO_2G");

        r0.<com.android.service.ims.presence.PresencePublication: boolean mMovedToLTE> = 0;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mVoPSEnabled> = 0;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mMovedToIWLAN> = 0;

        goto label10;

     label04:
        $r8 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r8.<com.android.ims.internal.Logger: void print(java.lang.String)>("PUBLISH_TRIGGER_MOVE_TO_3G");

        r0.<com.android.service.ims.presence.PresencePublication: boolean mMovedToLTE> = 0;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mVoPSEnabled> = 0;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mMovedToIWLAN> = 0;

        goto label10;

     label05:
        $r9 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r9.<com.android.ims.internal.Logger: void print(java.lang.String)>("PUBLISH_TRIGGER_MOVE_TO_HSPAPLUS");

        r0.<com.android.service.ims.presence.PresencePublication: boolean mMovedToLTE> = 0;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mVoPSEnabled> = 0;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mMovedToIWLAN> = 0;

        goto label10;

     label06:
        $r10 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r10.<com.android.ims.internal.Logger: void print(java.lang.String)>("PUBLISH_TRIGGER_MOVE_TO_EHRPD");

        r0.<com.android.service.ims.presence.PresencePublication: boolean mMovedToLTE> = 0;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mVoPSEnabled> = 0;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mMovedToIWLAN> = 0;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mImsRegistered> = 1;

        goto label10;

     label07:
        $r11 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r11.<com.android.ims.internal.Logger: void print(java.lang.String)>("PUBLISH_TRIGGER_MOVE_TO_LTE_VOPS_ENABLED");

        r0.<com.android.service.ims.presence.PresencePublication: boolean mMovedToLTE> = 1;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mVoPSEnabled> = 1;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mMovedToIWLAN> = 0;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mImsRegistered> = 1;

        goto label10;

     label08:
        $r12 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r12.<com.android.ims.internal.Logger: void print(java.lang.String)>("PUBLISH_TRIGGER_MOVE_TO_LTE_VOPS_DISABLED");

        r0.<com.android.service.ims.presence.PresencePublication: boolean mMovedToLTE> = 1;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mVoPSEnabled> = 0;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mMovedToIWLAN> = 0;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mImsRegistered> = 1;

        goto label10;

     label09:
        $r13 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r13.<com.android.ims.internal.Logger: void print(java.lang.String)>("PUBLISH_TRIGGER_ETAG_EXPIRED");

     label10:
        $z2 = r0.<com.android.service.ims.presence.PresencePublication: boolean mDonotRetryUntilPowerCycle>;

        if $z2 == 0 goto label11;

        $r6 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r6.<com.android.ims.internal.Logger: void print(java.lang.String)>("Don\'t publish until next power cycle");

        return;

     label11:
        $z0 = r0.<com.android.service.ims.presence.PresencePublication: boolean mSimLoaded>;

        if $z0 != 0 goto label12;

        $r5 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r5.<com.android.ims.internal.Logger: void print(java.lang.String)>("invokePublish cache the trigger since the SIM is not ready");

        r0.<com.android.service.ims.presence.PresencePublication: boolean mHasCachedTrigger> = 1;

        return;

     label12:
        $r2 = r0.<com.android.service.ims.presence.PresencePublication: android.content.Context mContext>;

        $i1 = r0.<com.android.service.ims.presence.PresencePublication: int mAssociatedSubscription>;

        $z1 = staticinvoke <com.android.service.ims.RcsSettingUtils: boolean isEabProvisioned(android.content.Context,int)>($r2, $i1);

        if $z1 != 0 goto label13;

        $r4 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r4.<com.android.ims.internal.Logger: void print(java.lang.String)>("invokePublish cache the trigger, not provision yet");

        r0.<com.android.service.ims.presence.PresencePublication: boolean mHasCachedTrigger> = 1;

        return;

     label13:
        $r3 = new com.android.service.ims.presence.PresencePublication$PublishRequest;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r3.<com.android.service.ims.presence.PresencePublication$PublishRequest: void <init>(com.android.service.ims.presence.PresencePublication,boolean,long)>(r0, 1, $l2);

        specialinvoke r0.<com.android.service.ims.presence.PresencePublication: void requestPublication(com.android.service.ims.presence.PresencePublication$PublishRequest)>($r3);

        return;
    }

    public void onTtyPreferredModeChanged(int)
    {
        com.android.service.ims.presence.PresencePublication r0;
        int i0, $i1, $i2;
        boolean z0, z1;
        java.lang.StringBuilder $r1, $r7;
        java.lang.String $r6, $r12;
        com.android.ims.internal.Logger r13, r15;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        i0 := @parameter0: int;

        r13 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tty mode changed from ");

        $i1 = r0.<com.android.service.ims.presence.PresencePublication: int mPreferredTtyMode>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r13.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r6);

        $i2 = r0.<com.android.service.ims.presence.PresencePublication: int mPreferredTtyMode>;

        z0 = staticinvoke <com.android.service.ims.presence.PresencePublication: boolean isTtyEnabled(int)>($i2);

        z1 = staticinvoke <com.android.service.ims.presence.PresencePublication: boolean isTtyEnabled(int)>(i0);

        r0.<com.android.service.ims.presence.PresencePublication: int mPreferredTtyMode> = i0;

        if z0 == z1 goto label1;

        r15 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ttyEnabled status changed from ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r15.<com.android.ims.internal.Logger: void print(java.lang.String)>($r12);

        specialinvoke r0.<com.android.service.ims.presence.PresencePublication: void requestLocalPublish(int)>(3);

     label1:
        return;
    }

    public void onVtEnabled(boolean)
    {
        com.android.service.ims.presence.PresencePublication r0;
        boolean z0, $z1, $z2;
        com.android.ims.internal.Logger r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r8;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        z0 := @parameter0: boolean;

        r1 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onVtEnabled mVtEnabled=");

        $z1 = r0.<com.android.service.ims.presence.PresencePublication: boolean mVtEnabled>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" enabled=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.ims.internal.Logger: void debug(java.lang.String)>($r8);

        $z2 = r0.<com.android.service.ims.presence.PresencePublication: boolean mVtEnabled>;

        if $z2 == z0 goto label1;

        r0.<com.android.service.ims.presence.PresencePublication: boolean mVtEnabled> = z0;

        specialinvoke r0.<com.android.service.ims.presence.PresencePublication: void requestLocalPublish(int)>(1);

     label1:
        return;
    }

    public void removePresencePublisher()
    {
        com.android.service.ims.presence.PresencePublication r0;
        java.lang.Object r1;
        com.android.ims.internal.Logger $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        r1 = r0.<com.android.service.ims.presence.PresencePublication: java.lang.Object mSyncObj>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r3.<com.android.ims.internal.Logger: void debug(java.lang.String)>("Remove PresencePublisher");

        r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublisher mPresencePublisher> = null;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void retryPublish()
    {
        com.android.service.ims.presence.PresencePublication r0;
        com.android.ims.internal.Logger r1;
        java.lang.StringBuilder $r3;
        boolean $z0, $z1;
        java.lang.String $r6;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        r1 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mCancelRetry=");

        $z0 = r0.<com.android.service.ims.presence.PresencePublication: boolean mCancelRetry>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<com.android.ims.internal.Logger: void print(java.lang.String)>($r6);

        r0.<com.android.service.ims.presence.PresencePublication: boolean mPendingRetry> = 0;

        $z1 = r0.<com.android.service.ims.presence.PresencePublication: boolean mCancelRetry>;

        if $z1 == 0 goto label1;

        return;

     label1:
        specialinvoke r0.<com.android.service.ims.presence.PresencePublication: void requestLocalPublish(int)>(4);

        return;
    }

    public void setPublishState(int)
    {
        com.android.service.ims.presence.PresencePublication r0;
        int i0;
        java.lang.Object r1;
        java.lang.Throwable $r2;
        com.android.service.ims.presence.PresencePublisher r3;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        i0 := @parameter0: int;

        r1 = r0.<com.android.service.ims.presence.PresencePublication: java.lang.Object mSyncObj>;

        entermonitor r1;

     label1:
        r3 = r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublisher mPresencePublisher>;

        exitmonitor r1;

     label2:
        if r3 == null goto label3;

        interfaceinvoke r3.<com.android.service.ims.presence.PresencePublisher: void updatePublisherState(int)>(i0);

     label3:
        return;

     label4:
        $r2 := @caughtexception;

     label5:
        exitmonitor r1;

     label6:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void setSubscriber(com.android.service.ims.presence.PresenceSubscriber)
    {
        com.android.service.ims.presence.PresencePublication r0;
        com.android.service.ims.presence.PresenceSubscriber r1;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        r1 := @parameter0: com.android.service.ims.presence.PresenceSubscriber;

        r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresenceSubscriber mSubscriber> = r1;

        return;
    }

    public void updatePresencePublisher(com.android.service.ims.presence.PresencePublisher)
    {
        com.android.service.ims.presence.PresencePublication r0;
        java.lang.Object r1;
        com.android.ims.internal.Logger $r2;
        java.lang.Throwable $r3;
        com.android.service.ims.presence.PresencePublisher r4;

        r0 := @this: com.android.service.ims.presence.PresencePublication;

        r4 := @parameter0: com.android.service.ims.presence.PresencePublisher;

        r1 = r0.<com.android.service.ims.presence.PresencePublication: java.lang.Object mSyncObj>;

        entermonitor r1;

     label1:
        $r2 = r0.<com.android.service.ims.presence.PresencePublication: com.android.ims.internal.Logger logger>;

        virtualinvoke $r2.<com.android.ims.internal.Logger: void debug(java.lang.String)>("Update PresencePublisher");

        r0.<com.android.service.ims.presence.PresencePublication: com.android.service.ims.presence.PresencePublisher mPresencePublisher> = r4;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }
}
