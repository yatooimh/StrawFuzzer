public class com.android.timezone.distro.DistroVersion extends java.lang.Object
{
    public static final int DISTRO_VERSION_FILE_LENGTH;
    private static final java.util.regex.Pattern DISTRO_VERSION_PATTERN;
    private static final java.util.regex.Pattern FORMAT_VERSION_PATTERN;
    private static final int FORMAT_VERSION_STRING_LENGTH;
    private static final int REVISION_LENGTH;
    private static final java.util.regex.Pattern REVISION_PATTERN;
    private static final int RULES_VERSION_LENGTH;
    private static final java.util.regex.Pattern RULES_VERSION_PATTERN;
    private static final java.lang.String SAMPLE_FORMAT_VERSION_STRING;
    public final int formatMajorVersion;
    public final int formatMinorVersion;
    public final int revision;
    public final java.lang.String rulesVersion;

    static void <clinit>()
    {
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.util.regex.Pattern $r0, $r1, $r2, $r4, $r8, $r12, $r17;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r9, $r13, $r16, r18;

        <com.android.timezone.distro.DistroVersion: int RULES_VERSION_LENGTH> = 5;

        <com.android.timezone.distro.DistroVersion: int REVISION_LENGTH> = 3;

        r18 = staticinvoke <com.android.timezone.distro.DistroVersion: java.lang.String toFormatVersionString(int,int)>(1, 1);

        <com.android.timezone.distro.DistroVersion: java.lang.String SAMPLE_FORMAT_VERSION_STRING> = r18;

        $i0 = virtualinvoke r18.<java.lang.String: int length()>();

        <com.android.timezone.distro.DistroVersion: int FORMAT_VERSION_STRING_LENGTH> = $i0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\d{3})\\.(\\d{3})");

        <com.android.timezone.distro.DistroVersion: java.util.regex.Pattern FORMAT_VERSION_PATTERN> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\d{4}\\w)");

        <com.android.timezone.distro.DistroVersion: java.util.regex.Pattern RULES_VERSION_PATTERN> = $r1;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\d{3})");

        <com.android.timezone.distro.DistroVersion: java.util.regex.Pattern REVISION_PATTERN> = $r2;

        $i1 = <com.android.timezone.distro.DistroVersion: int FORMAT_VERSION_STRING_LENGTH>;

        $i2 = $i1 + 1;

        $i3 = $i2 + 5;

        $i4 = $i3 + 1;

        $i5 = $i4 + 3;

        <com.android.timezone.distro.DistroVersion: int DISTRO_VERSION_FILE_LENGTH> = $i5;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = <com.android.timezone.distro.DistroVersion: java.util.regex.Pattern FORMAT_VERSION_PATTERN>;

        $r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.lang.String pattern()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\|");

        $r8 = <com.android.timezone.distro.DistroVersion: java.util.regex.Pattern RULES_VERSION_PATTERN>;

        $r9 = virtualinvoke $r8.<java.util.regex.Pattern: java.lang.String pattern()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\|");

        $r12 = <com.android.timezone.distro.DistroVersion: java.util.regex.Pattern REVISION_PATTERN>;

        $r13 = virtualinvoke $r12.<java.util.regex.Pattern: java.lang.String pattern()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".*");

        $r16 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r16);

        <com.android.timezone.distro.DistroVersion: java.util.regex.Pattern DISTRO_VERSION_PATTERN> = $r17;

        return;
    }

    public void <init>(int, int, java.lang.String, int) throws com.android.timezone.distro.DistroException
    {
        com.android.timezone.distro.DistroVersion r0;
        int i0, i1, i2, $i3, $i4, $i5;
        java.lang.String r1, $r9;
        java.util.regex.Pattern $r3;
        java.util.regex.Matcher $r4;
        boolean $z0;
        java.lang.StringBuilder $r5;
        com.android.timezone.distro.DistroException $r8;

        r0 := @this: com.android.timezone.distro.DistroVersion;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i3 = staticinvoke <com.android.timezone.distro.DistroVersion: int validate3DigitVersion(int)>(i0);

        r0.<com.android.timezone.distro.DistroVersion: int formatMajorVersion> = $i3;

        $i4 = staticinvoke <com.android.timezone.distro.DistroVersion: int validate3DigitVersion(int)>(i1);

        r0.<com.android.timezone.distro.DistroVersion: int formatMinorVersion> = $i4;

        $r3 = <com.android.timezone.distro.DistroVersion: java.util.regex.Pattern RULES_VERSION_PATTERN>;

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z0 = virtualinvoke $r4.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label1;

        r0.<com.android.timezone.distro.DistroVersion: java.lang.String rulesVersion> = r1;

        $i5 = staticinvoke <com.android.timezone.distro.DistroVersion: int validate3DigitVersion(int)>(i2);

        r0.<com.android.timezone.distro.DistroVersion: int revision> = $i5;

        return;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid rulesVersion: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = new com.android.timezone.distro.DistroException;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<com.android.timezone.distro.DistroException: void <init>(java.lang.String)>($r9);

        throw $r8;
    }

    private static int from3DigitVersionString(java.lang.String) throws com.android.timezone.distro.DistroException
    {
        int i0, $i1, $i2;
        com.android.timezone.distro.DistroException $r0, $r2;
        java.lang.Throwable $r1;
        java.lang.String r3;

        r3 := @parameter0: java.lang.String;

        $i1 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i1 != 3 goto label4;

     label1:
        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

        i0 = staticinvoke <com.android.timezone.distro.DistroVersion: int validate3DigitVersion(int)>($i2);

     label2:
        return i0;

     label3:
        $r1 := @caughtexception;

        $r2 = new com.android.timezone.distro.DistroException;

        specialinvoke $r2.<com.android.timezone.distro.DistroException: void <init>(java.lang.String,java.lang.Throwable)>("versionString must be a zero padded, 3 digit, positive decimal integer", $r1);

        throw $r2;

     label4:
        $r0 = new com.android.timezone.distro.DistroException;

        specialinvoke $r0.<com.android.timezone.distro.DistroException: void <init>(java.lang.String)>("versionString must be a zero padded, 3 digit, positive decimal integer");

        throw $r0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static com.android.timezone.distro.DistroVersion fromBytes(byte[]) throws com.android.timezone.distro.DistroException
    {
        java.lang.String r0, $r1, $r7, $r15, r19, r20, r21;
        java.nio.charset.Charset $r2;
        java.util.regex.Pattern $r3;
        boolean $z0;
        com.android.timezone.distro.DistroVersion $r8;
        int $i0, $i1, $i2;
        java.lang.IndexOutOfBoundsException $r9;
        java.lang.StringBuilder $r10, r23;
        com.android.timezone.distro.DistroException $r14, r22;
        byte[] r16;
        java.util.regex.Matcher r18;

        r16 := @parameter0: byte[];

        $r1 = new java.lang.String;

        $r2 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset US_ASCII>;

        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(r16, $r2);

     label1:
        $r3 = <com.android.timezone.distro.DistroVersion: java.util.regex.Pattern DISTRO_VERSION_PATTERN>;

        r18 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z0 = virtualinvoke r18.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label2;

        r19 = virtualinvoke r18.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        r0 = virtualinvoke r18.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        r20 = virtualinvoke r18.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        r21 = virtualinvoke r18.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        $r8 = new com.android.timezone.distro.DistroVersion;

        $i0 = staticinvoke <com.android.timezone.distro.DistroVersion: int from3DigitVersionString(java.lang.String)>(r19);

        $i1 = staticinvoke <com.android.timezone.distro.DistroVersion: int from3DigitVersionString(java.lang.String)>(r0);

        $i2 = staticinvoke <com.android.timezone.distro.DistroVersion: int from3DigitVersionString(java.lang.String)>(r21);

        specialinvoke $r8.<com.android.timezone.distro.DistroVersion: void <init>(int,int,java.lang.String,int)>($i0, $i1, r20, $i2);

        return $r8;

     label2:
        r22 = new com.android.timezone.distro.DistroException;

        r23 = new java.lang.StringBuilder;

        specialinvoke r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid distro version string: \"");

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r7 = virtualinvoke r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r22.<com.android.timezone.distro.DistroException: void <init>(java.lang.String)>($r7);

        throw r22;

     label3:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Distro version string too short: \"");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r14 = new com.android.timezone.distro.DistroException;

        $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<com.android.timezone.distro.DistroException: void <init>(java.lang.String)>($r15);

        throw $r14;

        catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
        catch java.lang.IndexOutOfBoundsException from label2 to label3 with label3;
    }

    private static java.lang.String to3DigitVersionString(int)
    {
        int i0, $i1;
        java.lang.Object[] $r0;
        java.util.Locale $r1;
        java.lang.Integer $r2;
        com.android.timezone.distro.DistroException $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.String r5;

        i0 := @parameter0: int;

     label1:
        $r1 = <java.util.Locale: java.util.Locale ROOT>;

        $r0 = newarray (java.lang.Object)[1];

        $i1 = staticinvoke <com.android.timezone.distro.DistroVersion: int validate3DigitVersion(int)>(i0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r0[0] = $r2;

        r5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r1, "%03d", $r0);

     label2:
        return r5;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch com.android.timezone.distro.DistroException from label1 to label2 with label3;
    }

    public static byte[] toBytes(int, int, java.lang.String, int)
    {
        int i0, i1, i2;
        java.lang.String r0, $r3, $r8, $r10;
        java.lang.StringBuilder $r2;
        java.nio.charset.Charset $r11;
        byte[] $r12;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 := @parameter2: java.lang.String;

        i2 := @parameter3: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = staticinvoke <com.android.timezone.distro.DistroVersion: java.lang.String toFormatVersionString(int,int)>(i0, i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

        $r8 = staticinvoke <com.android.timezone.distro.DistroVersion: java.lang.String to3DigitVersionString(int)>(i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset US_ASCII>;

        $r12 = virtualinvoke $r10.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r11);

        return $r12;
    }

    private static java.lang.String toFormatVersionString(int, int)
    {
        int i0, i1;
        java.lang.StringBuilder $r1;
        java.lang.String $r2, $r5, $r7;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = staticinvoke <com.android.timezone.distro.DistroVersion: java.lang.String to3DigitVersionString(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r5 = staticinvoke <com.android.timezone.distro.DistroVersion: java.lang.String to3DigitVersionString(int)>(i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private static int validate3DigitVersion(int) throws com.android.timezone.distro.DistroException
    {
        int i0;
        java.lang.StringBuilder $r1;
        com.android.timezone.distro.DistroException $r4;
        java.lang.String $r5;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 > 999 goto label1;

        return i0;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected 0 <= value <= 999, was ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new com.android.timezone.distro.DistroException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<com.android.timezone.distro.DistroException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public boolean equals(java.lang.Object)
    {
        com.android.timezone.distro.DistroVersion r0, r6;
        java.lang.Class $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r3, $r4;
        boolean $z0;
        java.lang.Object r5;

        r0 := @this: com.android.timezone.distro.DistroVersion;

        r5 := @parameter0: java.lang.Object;

        if r0 != r5 goto label1;

        return 1;

     label1:
        if r5 == null goto label6;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == $r2 goto label2;

        goto label6;

     label2:
        r6 = (com.android.timezone.distro.DistroVersion) r5;

        $i1 = r0.<com.android.timezone.distro.DistroVersion: int formatMajorVersion>;

        $i0 = r6.<com.android.timezone.distro.DistroVersion: int formatMajorVersion>;

        if $i1 == $i0 goto label3;

        return 0;

     label3:
        $i3 = r0.<com.android.timezone.distro.DistroVersion: int formatMinorVersion>;

        $i2 = r6.<com.android.timezone.distro.DistroVersion: int formatMinorVersion>;

        if $i3 == $i2 goto label4;

        return 0;

     label4:
        $i5 = r0.<com.android.timezone.distro.DistroVersion: int revision>;

        $i4 = r6.<com.android.timezone.distro.DistroVersion: int revision>;

        if $i5 == $i4 goto label5;

        return 0;

     label5:
        $r4 = r0.<com.android.timezone.distro.DistroVersion: java.lang.String rulesVersion>;

        $r3 = r6.<com.android.timezone.distro.DistroVersion: java.lang.String rulesVersion>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z0;

     label6:
        return 0;
    }

    public int hashCode()
    {
        com.android.timezone.distro.DistroVersion r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String $r1;

        r0 := @this: com.android.timezone.distro.DistroVersion;

        $i0 = r0.<com.android.timezone.distro.DistroVersion: int formatMajorVersion>;

        $i2 = $i0 * 31;

        $i1 = r0.<com.android.timezone.distro.DistroVersion: int formatMinorVersion>;

        $i3 = $i2 + $i1;

        $i4 = $i3 * 31;

        $r1 = r0.<com.android.timezone.distro.DistroVersion: java.lang.String rulesVersion>;

        $i5 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i6 = $i4 + $i5;

        $i8 = $i6 * 31;

        $i7 = r0.<com.android.timezone.distro.DistroVersion: int revision>;

        $i9 = $i8 + $i7;

        return $i9;
    }

    public byte[] toBytes()
    {
        com.android.timezone.distro.DistroVersion r0;
        int $i0, $i1, $i2;
        java.lang.String $r1;
        byte[] $r2;

        r0 := @this: com.android.timezone.distro.DistroVersion;

        $i2 = r0.<com.android.timezone.distro.DistroVersion: int formatMajorVersion>;

        $i1 = r0.<com.android.timezone.distro.DistroVersion: int formatMinorVersion>;

        $r1 = r0.<com.android.timezone.distro.DistroVersion: java.lang.String rulesVersion>;

        $i0 = r0.<com.android.timezone.distro.DistroVersion: int revision>;

        $r2 = staticinvoke <com.android.timezone.distro.DistroVersion: byte[] toBytes(int,int,java.lang.String,int)>($i2, $i1, $r1, $i0);

        return $r2;
    }

    public java.lang.String toString()
    {
        com.android.timezone.distro.DistroVersion r0;
        java.lang.StringBuilder $r2;
        int $i0, $i1, $i2;
        java.lang.String $r8, $r14;

        r0 := @this: com.android.timezone.distro.DistroVersion;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DistroVersion{formatMajorVersion=");

        $i0 = r0.<com.android.timezone.distro.DistroVersion: int formatMajorVersion>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", formatMinorVersion=");

        $i1 = r0.<com.android.timezone.distro.DistroVersion: int formatMinorVersion>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", rulesVersion=\'");

        $r8 = r0.<com.android.timezone.distro.DistroVersion: java.lang.String rulesVersion>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", revision=");

        $i2 = r0.<com.android.timezone.distro.DistroVersion: int revision>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r14 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }
}
