public final class com.android.timezone.distro.FileUtils extends java.lang.Object
{

    private void <init>()
    {
        com.android.timezone.distro.FileUtils r0;

        r0 := @this: com.android.timezone.distro.FileUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void createEmptyFile(java.io.File) throws java.io.IOException
    {
        java.io.File r0;
        java.io.FileOutputStream $r1;

        r0 := @parameter0: java.io.File;

        $r1 = new java.io.FileOutputStream;

        specialinvoke $r1.<java.io.FileOutputStream: void <init>(java.io.File,boolean)>(r0, 0);

        virtualinvoke $r1.<java.io.FileOutputStream: void close()>();

        return;
    }

    public static java.io.File createSubFile(java.io.File, java.lang.String) throws java.io.IOException
    {
        java.io.File r0, r2, $r4;
        java.lang.String r1, $r5, $r6, $r14;
        boolean $z0;
        java.lang.StringBuilder $r7;
        java.io.IOException $r13;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.lang.String;

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, r1);

        r2 = virtualinvoke $r4.<java.io.File: java.io.File getCanonicalFile()>();

        $r5 = virtualinvoke r2.<java.io.File: java.lang.String getPath()>();

        $r6 = virtualinvoke r0.<java.io.File: java.lang.String getCanonicalPath()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>($r6);

        if $z0 == 0 goto label1;

        return r2;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must exist beneath ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Canonicalized subpath: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r13 = new java.io.IOException;

        $r14 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.io.IOException: void <init>(java.lang.String)>($r14);

        throw $r13;
    }

    public static void deleteRecursive(java.io.File) throws java.io.IOException
    {
        java.io.File[] r0;
        int i0, $i1, i2;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r1;
        java.lang.String $r3, $r6;
        java.io.IOException $r5;
        java.io.File r7, r8;
        java.lang.String[] r9;

        r7 := @parameter0: java.io.File;

        $z0 = virtualinvoke r7.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label6;

        r0 = virtualinvoke r7.<java.io.File: java.io.File[] listFiles()>();

        i0 = lengthof r0;

        i2 = 0;

     label1:
        if i2 >= i0 goto label4;

        r8 = r0[i2];

        $z1 = virtualinvoke r8.<java.io.File: boolean isDirectory()>();

        if $z1 == 0 goto label2;

        $z2 = staticinvoke <com.android.timezone.distro.FileUtils: boolean isSymlink(java.io.File)>(r8);

        if $z2 != 0 goto label2;

        staticinvoke <com.android.timezone.distro.FileUtils: void deleteRecursive(java.io.File)>(r8);

        goto label3;

     label2:
        staticinvoke <com.android.timezone.distro.FileUtils: void doDelete(java.io.File)>(r8);

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        r9 = virtualinvoke r7.<java.io.File: java.lang.String[] list()>();

        $i1 = lengthof r9;

        if $i1 != 0 goto label5;

        goto label6;

     label5:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to delete files: ");

        $r3 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r9);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = new java.io.IOException;

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label6:
        staticinvoke <com.android.timezone.distro.FileUtils: void doDelete(java.io.File)>(r7);

        return;
    }

    public static void doDelete(java.io.File) throws java.io.IOException
    {
        java.io.File r0;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.io.IOException $r5;
        java.lang.String $r6;

        r0 := @parameter0: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean delete()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to delete: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = new java.io.IOException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public static void ensureDirectoriesExist(java.io.File, boolean) throws java.io.IOException
    {
        boolean z0, $z1, $z2, $z3, $z4;
        java.util.LinkedList $r0;
        java.lang.Object $r1;
        java.lang.StringBuilder $r2, $r7;
        java.io.IOException $r5, $r10;
        java.lang.String $r6, $r11;
        java.io.File r12, r14, r16;
        java.util.Iterator r15;

        r12 := @parameter0: java.io.File;

        z0 := @parameter1: boolean;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        r14 = r12;

     label1:
        virtualinvoke $r0.<java.util.LinkedList: void addFirst(java.lang.Object)>(r14);

        r14 = virtualinvoke r14.<java.io.File: java.io.File getParentFile()>();

        if r14 != null goto label8;

        r15 = virtualinvoke $r0.<java.util.LinkedList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r1 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        r16 = (java.io.File) $r1;

        $z2 = virtualinvoke r16.<java.io.File: boolean exists()>();

        if $z2 != 0 goto label4;

        $z4 = virtualinvoke r16.<java.io.File: boolean mkdir()>();

        if $z4 == 0 goto label3;

        if z0 == 0 goto label5;

        staticinvoke <com.android.timezone.distro.FileUtils: void makeDirectoryWorldAccessible(java.io.File)>(r16);

        goto label5;

     label3:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create directory: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        $r10 = new java.io.IOException;

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label4:
        $z3 = virtualinvoke r16.<java.io.File: boolean isDirectory()>();

        if $z3 == 0 goto label6;

     label5:
        goto label2;

     label6:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exists but is not a directory");

        $r5 = new java.io.IOException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label7:
        return;

     label8:
        goto label1;
    }

    public static void ensureFileDoesNotExist(java.io.File) throws java.io.IOException
    {
        java.io.File r0;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2;
        java.io.IOException $r5;
        java.lang.String $r6;

        r0 := @parameter0: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<java.io.File: boolean isFile()>();

        if $z1 == 0 goto label1;

        staticinvoke <com.android.timezone.distro.FileUtils: void doDelete(java.io.File)>(r0);

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a file");

        $r5 = new java.io.IOException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label2:
        return;
    }

    public static transient boolean filesExist(java.io.File, java.lang.String[])
    {
        java.io.File r0, $r2;
        java.lang.String[] r1;
        int i0, i1;
        java.lang.String $r3;
        boolean $z0;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.lang.String[];

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r2 = new java.io.File;

        $r3 = r1[i1];

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, $r3);

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static boolean isSymlink(java.io.File) throws java.io.IOException
    {
        java.io.File r0, $r1, $r2, $r3;
        java.lang.String $r4, r5, r6;
        boolean $z0, $z1;

        r0 := @parameter0: java.io.File;

        r5 = virtualinvoke r0.<java.io.File: java.lang.String getName()>();

        $r1 = new java.io.File;

        $r2 = virtualinvoke r0.<java.io.File: java.io.File getParentFile()>();

        $r3 = virtualinvoke $r2.<java.io.File: java.io.File getCanonicalFile()>();

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, r5);

        r6 = virtualinvoke $r1.<java.io.File: java.lang.String getPath()>();

        $r4 = virtualinvoke r0.<java.io.File: java.lang.String getCanonicalPath()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        $z1 = $z0 ^ 1;

        return $z1;
    }

    public static void makeDirectoryWorldAccessible(java.io.File) throws java.io.IOException
    {
        java.io.File r0;
        boolean $z0, $z1;
        java.lang.StringBuilder $r1, $r6;
        java.io.IOException $r4, $r10;
        java.lang.String $r5, $r11;

        r0 := @parameter0: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label2;

        staticinvoke <com.android.timezone.distro.FileUtils: void makeWorldReadable(java.io.File)>(r0);

        $z1 = virtualinvoke r0.<java.io.File: boolean setExecutable(boolean,boolean)>(1, 0);

        if $z1 == 0 goto label1;

        return;

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to make ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" world-executable");

        $r10 = new java.io.IOException;

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must be a directory");

        $r4 = new java.io.IOException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public static void makeWorldReadable(java.io.File) throws java.io.IOException
    {
        java.io.File r0;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.io.IOException $r6;
        java.lang.String $r7;

        r0 := @parameter0: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean setReadable(boolean,boolean)>(1, 0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to make ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" world-readable");

        $r6 = new java.io.IOException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r6;
    }

    public static byte[] readBytes(java.io.File, int) throws java.io.IOException
    {
        byte[] r0, r11;
        java.lang.StringBuilder $r1;
        java.lang.IllegalArgumentException $r4;
        java.lang.String $r5;
        java.io.FileInputStream $r6;
        java.lang.Throwable $r7, $r8;
        java.io.File r9;
        int i0, i1;

        r9 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        if i0 <= 0 goto label8;

        $r6 = new java.io.FileInputStream;

        specialinvoke $r6.<java.io.FileInputStream: void <init>(java.io.File)>(r9);

     label1:
        r0 = newarray (byte)[i0];

        i1 = virtualinvoke $r6.<java.io.FileInputStream: int read(byte[],int,int)>(r0, 0, i0);

        r11 = newarray (byte)[i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r11, 0, i1);

     label2:
        virtualinvoke $r6.<java.io.FileInputStream: void close()>();

        return r11;

     label3:
        $r7 := @caughtexception;

     label4:
        virtualinvoke $r6.<java.io.FileInputStream: void close()>();

     label5:
        goto label7;

     label6:
        $r8 := @caughtexception;

        virtualinvoke $r7.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r8);

     label7:
        throw $r7;

     label8:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("maxBytes ==");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public static void rename(java.io.File, java.io.File) throws java.io.IOException
    {
        java.io.File r0, r1;
        boolean $z0;
        java.lang.StringBuilder $r3;
        java.io.IOException $r8;
        java.lang.String $r9;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: java.io.File;

        staticinvoke <com.android.timezone.distro.FileUtils: void ensureFileDoesNotExist(java.io.File)>(r1);

        $z0 = virtualinvoke r0.<java.io.File: boolean renameTo(java.io.File)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to rename ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = new java.io.IOException;

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r9);

        throw $r8;
    }
}
