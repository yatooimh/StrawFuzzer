public final class com.android.timezone.distro.TimeZoneDistro extends java.lang.Object
{
    private static final int BUFFER_SIZE;
    public static final java.lang.String DISTRO_VERSION_FILE_NAME;
    public static final java.lang.String FILE_NAME;
    public static final java.lang.String ICU_DATA_FILE_NAME;
    private static final long MAX_GET_ENTRY_CONTENTS_SIZE;
    public static final java.lang.String TELEPHONYLOOKUP_FILE_NAME;
    public static final java.lang.String TZDATA_FILE_NAME;
    public static final java.lang.String TZLOOKUP_FILE_NAME;
    private final java.io.InputStream inputStream;

    public void <init>(java.io.InputStream)
    {
        com.android.timezone.distro.TimeZoneDistro r0;
        java.io.InputStream r1;

        r0 := @this: com.android.timezone.distro.TimeZoneDistro;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.timezone.distro.TimeZoneDistro: java.io.InputStream inputStream> = r1;

        return;
    }

    public void <init>(byte[])
    {
        com.android.timezone.distro.TimeZoneDistro r0;
        byte[] r1;
        java.io.ByteArrayInputStream $r2;

        r0 := @this: com.android.timezone.distro.TimeZoneDistro;

        r1 := @parameter0: byte[];

        $r2 = new java.io.ByteArrayInputStream;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1);

        specialinvoke r0.<com.android.timezone.distro.TimeZoneDistro: void <init>(java.io.InputStream)>($r2);

        return;
    }

    static void extractZipSafely(java.io.InputStream, java.io.File, boolean) throws java.io.IOException
    {
        boolean z0, $z1, $z2;
        byte[] r0;
        int i0;
        java.util.zip.ZipInputStream $r1;
        java.lang.String $r2;
        java.io.File $r3, $r5, r11, r14;
        java.io.FileDescriptor $r4;
        java.lang.Throwable $r6, $r7, $r8, $r9;
        java.io.InputStream r10;
        java.util.zip.ZipEntry r13;
        java.io.FileOutputStream r15;

        r10 := @parameter0: java.io.InputStream;

        r11 := @parameter1: java.io.File;

        z0 := @parameter2: boolean;

        staticinvoke <com.android.timezone.distro.FileUtils: void ensureDirectoriesExist(java.io.File,boolean)>(r11, z0);

        $r1 = new java.util.zip.ZipInputStream;

        specialinvoke $r1.<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>(r10);

     label01:
        r0 = newarray (byte)[8192];

     label02:
        r13 = virtualinvoke $r1.<java.util.zip.ZipInputStream: java.util.zip.ZipEntry getNextEntry()>();

     label03:
        if r13 == null goto label24;

     label04:
        $r2 = virtualinvoke r13.<java.util.zip.ZipEntry: java.lang.String getName()>();

        r14 = staticinvoke <com.android.timezone.distro.FileUtils: java.io.File createSubFile(java.io.File,java.lang.String)>(r11, $r2);

        $z1 = virtualinvoke r13.<java.util.zip.ZipEntry: boolean isDirectory()>();

        if $z1 == 0 goto label06;

        staticinvoke <com.android.timezone.distro.FileUtils: void ensureDirectoriesExist(java.io.File,boolean)>(r14, z0);

     label05:
        goto label17;

     label06:
        $r3 = virtualinvoke r14.<java.io.File: java.io.File getParentFile()>();

        $z2 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z2 != 0 goto label08;

     label07:
        $r5 = virtualinvoke r14.<java.io.File: java.io.File getParentFile()>();

        staticinvoke <com.android.timezone.distro.FileUtils: void ensureDirectoriesExist(java.io.File,boolean)>($r5, z0);

     label08:
        r15 = new java.io.FileOutputStream;

        specialinvoke r15.<java.io.FileOutputStream: void <init>(java.io.File)>(r14);

     label09:
        i0 = virtualinvoke $r1.<java.util.zip.ZipInputStream: int read(byte[])>(r0);

     label10:
        if i0 == -1 goto label13;

     label11:
        virtualinvoke r15.<java.io.FileOutputStream: void write(byte[],int,int)>(r0, 0, i0);

     label12:
        goto label09;

     label13:
        $r4 = virtualinvoke r15.<java.io.FileOutputStream: java.io.FileDescriptor getFD()>();

        virtualinvoke $r4.<java.io.FileDescriptor: void sync()>();

     label14:
        virtualinvoke r15.<java.io.FileOutputStream: void close()>();

     label15:
        if z0 == 0 goto label17;

     label16:
        staticinvoke <com.android.timezone.distro.FileUtils: void makeWorldReadable(java.io.File)>(r14);

     label17:
        goto label02;

     label18:
        $r7 := @caughtexception;

     label19:
        virtualinvoke r15.<java.io.FileOutputStream: void close()>();

     label20:
        goto label23;

     label21:
        $r9 := @caughtexception;

     label22:
        virtualinvoke $r7.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r9);

     label23:
        throw $r7;

     label24:
        virtualinvoke $r1.<java.util.zip.ZipInputStream: void close()>();

        return;

     label25:
        $r6 := @caughtexception;

     label26:
        virtualinvoke $r1.<java.util.zip.ZipInputStream: void close()>();

     label27:
        goto label29;

     label28:
        $r8 := @caughtexception;

        virtualinvoke $r6.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r8);

     label29:
        throw $r6;

        catch java.lang.Throwable from label01 to label02 with label25;
        catch java.lang.Throwable from label02 to label03 with label25;
        catch java.lang.Throwable from label04 to label05 with label25;
        catch java.lang.Throwable from label06 to label07 with label25;
        catch java.lang.Throwable from label07 to label08 with label25;
        catch java.lang.Throwable from label08 to label09 with label25;
        catch java.lang.Throwable from label09 to label10 with label18;
        catch java.lang.Throwable from label11 to label12 with label18;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.lang.Throwable from label14 to label15 with label25;
        catch java.lang.Throwable from label16 to label17 with label25;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label25;
        catch java.lang.Throwable from label23 to label24 with label25;
        catch java.lang.Throwable from label26 to label27 with label28;
    }

    private static byte[] getEntryContents(java.io.InputStream, java.lang.String) throws java.io.IOException
    {
        java.util.zip.ZipEntry r0;
        int i0;
        java.io.IOException r1;
        java.util.zip.ZipInputStream $r2;
        java.lang.String $r3, $r8, r14;
        boolean $z0;
        long $l1, $l3;
        byte $b2;
        java.lang.Throwable $r9, $r10, $r11, $r12;
        java.io.InputStream r13;
        byte[] r16, r18;
        java.io.ByteArrayOutputStream r17;
        java.lang.StringBuilder r21;

        r13 := @parameter0: java.io.InputStream;

        r14 := @parameter1: java.lang.String;

        $r2 = new java.util.zip.ZipInputStream;

        specialinvoke $r2.<java.util.zip.ZipInputStream: void <init>(java.io.InputStream)>(r13);

     label01:
        r0 = virtualinvoke $r2.<java.util.zip.ZipInputStream: java.util.zip.ZipEntry getNextEntry()>();

     label02:
        if r0 == null goto label20;

     label03:
        $r3 = virtualinvoke r0.<java.util.zip.ZipEntry: java.lang.String getName()>();

        $z0 = virtualinvoke r14.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label05;

     label04:
        goto label01;

     label05:
        $l1 = virtualinvoke r0.<java.util.zip.ZipEntry: long getSize()>();

        $b2 = $l1 cmp 131072L;

        if $b2 > 0 goto label19;

        r16 = newarray (byte)[8192];

        r17 = new java.io.ByteArrayOutputStream;

        specialinvoke r17.<java.io.ByteArrayOutputStream: void <init>()>();

     label06:
        i0 = virtualinvoke $r2.<java.util.zip.ZipInputStream: int read(byte[])>(r16);

     label07:
        if i0 == -1 goto label10;

     label08:
        virtualinvoke r17.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r16, 0, i0);

     label09:
        goto label06;

     label10:
        r18 = virtualinvoke r17.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label11:
        virtualinvoke r17.<java.io.ByteArrayOutputStream: void close()>();

     label12:
        virtualinvoke $r2.<java.util.zip.ZipInputStream: void close()>();

        return r18;

     label13:
        $r11 := @caughtexception;

     label14:
        virtualinvoke r17.<java.io.ByteArrayOutputStream: void close()>();

     label15:
        goto label18;

     label16:
        $r9 := @caughtexception;

     label17:
        virtualinvoke $r11.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r9);

     label18:
        throw $r11;

     label19:
        r1 = new java.io.IOException;

        r21 = new java.lang.StringBuilder;

        specialinvoke r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Entry ");

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" too large: ");

        $l3 = virtualinvoke r0.<java.util.zip.ZipEntry: long getSize()>();

        virtualinvoke r21.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r8 = virtualinvoke r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r1.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw r1;

     label20:
        virtualinvoke $r2.<java.util.zip.ZipInputStream: void close()>();

        return null;

     label21:
        $r10 := @caughtexception;

     label22:
        virtualinvoke $r2.<java.util.zip.ZipInputStream: void close()>();

     label23:
        goto label25;

     label24:
        $r12 := @caughtexception;

        virtualinvoke $r10.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r12);

     label25:
        throw $r10;

        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.lang.Throwable from label03 to label04 with label21;
        catch java.lang.Throwable from label05 to label06 with label21;
        catch java.lang.Throwable from label06 to label07 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label11 to label12 with label21;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label17 to label18 with label21;
        catch java.lang.Throwable from label18 to label19 with label21;
        catch java.lang.Throwable from label19 to label20 with label21;
        catch java.lang.Throwable from label22 to label23 with label24;
    }

    public void extractTo(java.io.File) throws java.io.IOException
    {
        com.android.timezone.distro.TimeZoneDistro r0;
        java.io.File r1;
        java.io.InputStream $r2;

        r0 := @this: com.android.timezone.distro.TimeZoneDistro;

        r1 := @parameter0: java.io.File;

        $r2 = r0.<com.android.timezone.distro.TimeZoneDistro: java.io.InputStream inputStream>;

        staticinvoke <com.android.timezone.distro.TimeZoneDistro: void extractZipSafely(java.io.InputStream,java.io.File,boolean)>($r2, r1, 1);

        return;
    }

    public com.android.timezone.distro.DistroVersion getDistroVersion() throws com.android.timezone.distro.DistroException, java.io.IOException
    {
        com.android.timezone.distro.TimeZoneDistro r0;
        byte[] r1;
        java.io.InputStream $r2;
        com.android.timezone.distro.DistroException $r3;
        com.android.timezone.distro.DistroVersion $r4;

        r0 := @this: com.android.timezone.distro.TimeZoneDistro;

        $r2 = r0.<com.android.timezone.distro.TimeZoneDistro: java.io.InputStream inputStream>;

        r1 = staticinvoke <com.android.timezone.distro.TimeZoneDistro: byte[] getEntryContents(java.io.InputStream,java.lang.String)>($r2, "distro_version");

        if r1 == null goto label1;

        $r4 = staticinvoke <com.android.timezone.distro.DistroVersion: com.android.timezone.distro.DistroVersion fromBytes(byte[])>(r1);

        return $r4;

     label1:
        $r3 = new com.android.timezone.distro.DistroException;

        specialinvoke $r3.<com.android.timezone.distro.DistroException: void <init>(java.lang.String)>("Distro version file entry not found");

        throw $r3;
    }

    public static void <clinit>()
    {
        <com.android.timezone.distro.TimeZoneDistro: java.lang.String TZLOOKUP_FILE_NAME> = "tzlookup.xml";

        <com.android.timezone.distro.TimeZoneDistro: java.lang.String TZDATA_FILE_NAME> = "tzdata";

        <com.android.timezone.distro.TimeZoneDistro: java.lang.String TELEPHONYLOOKUP_FILE_NAME> = "telephonylookup.xml";

        <com.android.timezone.distro.TimeZoneDistro: long MAX_GET_ENTRY_CONTENTS_SIZE> = 131072L;

        <com.android.timezone.distro.TimeZoneDistro: java.lang.String ICU_DATA_FILE_NAME> = "icu/icu_tzdata.dat";

        <com.android.timezone.distro.TimeZoneDistro: java.lang.String FILE_NAME> = "distro.zip";

        <com.android.timezone.distro.TimeZoneDistro: java.lang.String DISTRO_VERSION_FILE_NAME> = "distro_version";

        <com.android.timezone.distro.TimeZoneDistro: int BUFFER_SIZE> = 8192;

        return;
    }
}
