public class com.android.timezone.distro.installer.TimeZoneDistroInstaller extends java.lang.Object
{
    private static final java.lang.String CURRENT_TZ_DATA_DIR_NAME;
    public static final int INSTALL_FAIL_BAD_DISTRO_FORMAT_VERSION;
    public static final int INSTALL_FAIL_BAD_DISTRO_STRUCTURE;
    public static final int INSTALL_FAIL_RULES_TOO_OLD;
    public static final int INSTALL_FAIL_VALIDATION_ERROR;
    public static final int INSTALL_SUCCESS;
    private static final java.lang.String OLD_TZ_DATA_DIR_NAME;
    private static final java.lang.String STAGED_TZ_DATA_DIR_NAME;
    public static final int UNINSTALL_FAIL;
    public static final int UNINSTALL_NOTHING_INSTALLED;
    public static final int UNINSTALL_SUCCESS;
    public static final java.lang.String UNINSTALL_TOMBSTONE_FILE_NAME;
    private static final java.lang.String WORKING_DIR_NAME;
    private final java.io.File baseVersionFile;
    private final java.io.File currentTzDataDir;
    private final java.lang.String logTag;
    private final java.io.File oldStagedDataDir;
    private final java.io.File stagedTzDataDir;
    private final java.io.File workingDir;

    public void <init>(java.lang.String, java.io.File, java.io.File)
    {
        com.android.timezone.distro.installer.TimeZoneDistroInstaller r0;
        java.lang.String r1;
        java.io.File r2, r3, $r4, $r5, $r6, $r7;

        r0 := @this: com.android.timezone.distro.installer.TimeZoneDistroInstaller;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.File;

        r3 := @parameter2: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag> = r1;

        r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File baseVersionFile> = r2;

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, "old");

        r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File oldStagedDataDir> = $r4;

        $r5 = new java.io.File;

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, "staged");

        r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File stagedTzDataDir> = $r5;

        $r6 = new java.io.File;

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, "current");

        r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File currentTzDataDir> = $r6;

        $r7 = new java.io.File;

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>(r3, "working");

        r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir> = $r7;

        return;
    }

    private boolean checkDistroDataFilesExist(java.io.File) throws java.io.IOException
    {
        com.android.timezone.distro.installer.TimeZoneDistroInstaller r0;
        java.io.File r1;
        java.lang.String $r2;
        java.lang.String[] $r3;
        boolean $z0;

        r0 := @this: com.android.timezone.distro.installer.TimeZoneDistroInstaller;

        r1 := @parameter0: java.io.File;

        $r2 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>($r2, "Verifying distro contents");

        $r3 = newarray (java.lang.String)[2];

        $r3[0] = "tzdata";

        $r3[1] = "icu/icu_tzdata.dat";

        $z0 = staticinvoke <com.android.timezone.distro.FileUtils: boolean filesExist(java.io.File,java.lang.String[])>(r1, $r3);

        return $z0;
    }

    private boolean checkDistroRulesNewerThanBase(java.io.File, com.android.timezone.distro.DistroVersion) throws java.io.IOException
    {
        com.android.timezone.distro.installer.TimeZoneDistroInstaller r0;
        java.lang.String $r1, $r8, $r14, r17, r18, r19, r21;
        libcore.timezone.TzDataSetVersion $r2;
        int $i1;
        java.lang.StringBuilder $r3, $r9;
        java.io.File r15;
        com.android.timezone.distro.DistroVersion r16;
        boolean z0;

        r0 := @this: com.android.timezone.distro.installer.TimeZoneDistroInstaller;

        r15 := @parameter0: java.io.File;

        r16 := @parameter1: com.android.timezone.distro.DistroVersion;

        $r1 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>($r1, "Reading base time zone rules version");

        $r2 = specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: libcore.timezone.TzDataSetVersion readBaseVersion(java.io.File)>(r15);

        r17 = virtualinvoke $r2.<libcore.timezone.TzDataSetVersion: java.lang.String getRulesVersion()>();

        r18 = r16.<com.android.timezone.distro.DistroVersion: java.lang.String rulesVersion>;

        $i1 = virtualinvoke r18.<java.lang.String: int compareTo(java.lang.String)>(r17);

        if $i1 < 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        if z0 != 0 goto label3;

        r19 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed rules version check: distroRulesVersion=");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", baseRulesVersion=");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r14 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r19, $r14);

        goto label4;

     label3:
        r21 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Passed rules version check: distroRulesVersion=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", baseRulesVersion=");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r21, $r8);

     label4:
        return z0;
    }

    private void deleteBestEffort(java.io.File)
    {
        com.android.timezone.distro.installer.TimeZoneDistroInstaller r0;
        java.io.File r1;
        boolean $z0;
        java.lang.StringBuilder $r3, $r8;
        java.lang.String $r6, $r11, r12, r14;
        java.lang.Throwable $r7;

        r0 := @this: com.android.timezone.distro.installer.TimeZoneDistroInstaller;

        r1 := @parameter0: java.io.File;

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label4;

        r12 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r12, $r6);

     label1:
        staticinvoke <com.android.timezone.distro.FileUtils: void deleteRecursive(java.io.File)>(r1);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r14 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to delete ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>(r14, $r11, $r7);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private libcore.timezone.TzDataSetVersion readBaseVersion(java.io.File) throws java.io.IOException
    {
        com.android.timezone.distro.installer.TimeZoneDistroInstaller r0;
        java.io.File r1;
        boolean $z0;
        java.lang.StringBuilder $r2, $r6, $r12;
        java.lang.String $r5, $r10, $r16, r20;
        java.io.FileNotFoundException $r9;
        java.lang.Throwable $r11;
        java.io.IOException $r15;
        libcore.timezone.TzDataSetVersion r17;

        r0 := @this: com.android.timezone.distro.installer.TimeZoneDistroInstaller;

        r1 := @parameter0: java.io.File;

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label4;

     label1:
        r17 = staticinvoke <libcore.timezone.TzDataSetVersion: libcore.timezone.TzDataSetVersion readFromFile(java.io.File)>(r1);

     label2:
        return r17;

     label3:
        $r11 := @caughtexception;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to read: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = new java.io.IOException;

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r16, $r11);

        throw $r15;

     label4:
        r20 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("version file cannot be found in ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r20, $r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("base version file does not exist: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = new java.io.FileNotFoundException;

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r10);

        throw $r9;

        catch libcore.timezone.TzDataSetVersion$TzDataSetException from label1 to label2 with label3;
    }

    private com.android.timezone.distro.DistroVersion readDistroVersion(java.io.File) throws com.android.timezone.distro.DistroException, java.io.IOException
    {
        com.android.timezone.distro.installer.TimeZoneDistroInstaller r0;
        java.lang.StringBuilder $r2, $r7;
        java.lang.String $r5, $r11, r15;
        java.io.File $r6, r14;
        boolean $z0;
        com.android.timezone.distro.DistroException $r10;
        int $i1;
        byte[] $r12;
        com.android.timezone.distro.DistroVersion $r13;

        r0 := @this: com.android.timezone.distro.installer.TimeZoneDistroInstaller;

        r14 := @parameter0: java.io.File;

        r15 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading distro format version: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r14);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>(r15, $r5);

        $r6 = new java.io.File;

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>(r14, "distro_version");

        $z0 = virtualinvoke $r6.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $i1 = <com.android.timezone.distro.DistroVersion: int DISTRO_VERSION_FILE_LENGTH>;

        $r12 = staticinvoke <com.android.timezone.distro.FileUtils: byte[] readBytes(java.io.File,int)>($r6, $i1);

        $r13 = staticinvoke <com.android.timezone.distro.DistroVersion: com.android.timezone.distro.DistroVersion fromBytes(byte[])>($r12);

        return $r13;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No distro version file found: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r10 = new com.android.timezone.distro.DistroException;

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<com.android.timezone.distro.DistroException: void <init>(java.lang.String)>($r11);

        throw $r10;
    }

    private void unpackDistro(com.android.timezone.distro.TimeZoneDistro, java.io.File) throws java.io.IOException
    {
        com.android.timezone.distro.installer.TimeZoneDistroInstaller r0;
        com.android.timezone.distro.TimeZoneDistro r1;
        java.io.File r2;
        java.lang.String r3, $r8;
        java.lang.StringBuilder $r5;

        r0 := @this: com.android.timezone.distro.installer.TimeZoneDistroInstaller;

        r1 := @parameter0: com.android.timezone.distro.TimeZoneDistro;

        r2 := @parameter1: java.io.File;

        r3 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unpacking update content to: ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r3, $r8);

        virtualinvoke r1.<com.android.timezone.distro.TimeZoneDistro: void extractTo(java.io.File)>(r2);

        return;
    }

    java.io.File getCurrentTzDataDir()
    {
        com.android.timezone.distro.installer.TimeZoneDistroInstaller r0;
        java.io.File $r1;

        r0 := @this: com.android.timezone.distro.installer.TimeZoneDistroInstaller;

        $r1 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File currentTzDataDir>;

        return $r1;
    }

    public com.android.timezone.distro.DistroVersion getInstalledDistroVersion() throws com.android.timezone.distro.DistroException, java.io.IOException
    {
        com.android.timezone.distro.installer.TimeZoneDistroInstaller r0;
        java.io.File $r1, $r2;
        boolean $z0;
        com.android.timezone.distro.DistroVersion $r3;

        r0 := @this: com.android.timezone.distro.installer.TimeZoneDistroInstaller;

        $r1 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File currentTzDataDir>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File currentTzDataDir>;

        $r3 = specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: com.android.timezone.distro.DistroVersion readDistroVersion(java.io.File)>($r2);

        return $r3;
    }

    java.io.File getOldStagedDataDir()
    {
        com.android.timezone.distro.installer.TimeZoneDistroInstaller r0;
        java.io.File $r1;

        r0 := @this: com.android.timezone.distro.installer.TimeZoneDistroInstaller;

        $r1 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File oldStagedDataDir>;

        return $r1;
    }

    public com.android.timezone.distro.StagedDistroOperation getStagedDistroOperation() throws com.android.timezone.distro.DistroException, java.io.IOException
    {
        com.android.timezone.distro.installer.TimeZoneDistroInstaller r0;
        java.io.File $r1, $r2, $r3, $r4;
        boolean $z0, $z1;
        com.android.timezone.distro.DistroVersion $r5;
        com.android.timezone.distro.StagedDistroOperation $r6, $r7;

        r0 := @this: com.android.timezone.distro.installer.TimeZoneDistroInstaller;

        $r1 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File stagedTzDataDir>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = new java.io.File;

        $r3 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File stagedTzDataDir>;

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, "STAGED_UNINSTALL_TOMBSTONE");

        $z1 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label2;

        $r7 = staticinvoke <com.android.timezone.distro.StagedDistroOperation: com.android.timezone.distro.StagedDistroOperation uninstall()>();

        return $r7;

     label2:
        $r4 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File stagedTzDataDir>;

        $r5 = specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: com.android.timezone.distro.DistroVersion readDistroVersion(java.io.File)>($r4);

        $r6 = staticinvoke <com.android.timezone.distro.StagedDistroOperation: com.android.timezone.distro.StagedDistroOperation install(com.android.timezone.distro.DistroVersion)>($r5);

        return $r6;
    }

    java.io.File getStagedTzDataDir()
    {
        com.android.timezone.distro.installer.TimeZoneDistroInstaller r0;
        java.io.File $r1;

        r0 := @this: com.android.timezone.distro.installer.TimeZoneDistroInstaller;

        $r1 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File stagedTzDataDir>;

        return $r1;
    }

    java.io.File getWorkingDir()
    {
        com.android.timezone.distro.installer.TimeZoneDistroInstaller r0;
        java.io.File $r1;

        r0 := @this: com.android.timezone.distro.installer.TimeZoneDistroInstaller;

        $r1 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        return $r1;
    }

    public libcore.timezone.TzDataSetVersion readBaseVersion() throws java.io.IOException
    {
        com.android.timezone.distro.installer.TimeZoneDistroInstaller r0;
        java.io.File $r1;
        libcore.timezone.TzDataSetVersion $r2;

        r0 := @this: com.android.timezone.distro.installer.TimeZoneDistroInstaller;

        $r1 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File baseVersionFile>;

        $r2 = specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: libcore.timezone.TzDataSetVersion readBaseVersion(java.io.File)>($r1);

        return $r2;
    }

    public int stageInstallWithErrorCode(com.android.timezone.distro.TimeZoneDistro) throws java.io.IOException
    {
        com.android.timezone.distro.installer.TimeZoneDistroInstaller r0;
        java.io.File $r2, $r3, $r5, $r6, $r8, $r9, $r10, $r12, $r15, $r19, $r20, $r22, $r25, $r28, $r29, $r31, $r34, $r37, $r38, $r40, $r44, $r45, $r47, $r54, $r55, $r60, $r61, $r66, $r67, $r69, $r70, $r72, $r73, $r77, $r78, $r80, $r81, $r82, $r83, $r90, $r91, $r97, $r98, $r101, $r102, $r104, $r105, $r111, $r112, $r118, $r119, r125, r129, r132;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, z7;
        java.lang.String $r4, $r7, $r11, $r13, $r16, $r18, $r27, $r36, $r43, $r49, $r53, $r59, $r65, $r68, $r71, $r76, $r79, $r89, $r96, $r100, $r110, $r115, $r117, r123, r127, r130, r133, r135, r137, r139, r141, r144, r147, r150, r154;
        int $i1, $i2, $i3;
        libcore.timezone.TimeZoneFinder $r14;
        libcore.timezone.TelephonyLookup $r17;
        java.lang.Throwable $r84, $r85, $r92, $r99, $r103, $r106;
        com.android.timezone.distro.DistroException $r113;
        com.android.timezone.distro.TimeZoneDistro r120;
        com.android.timezone.distro.DistroVersion r121;
        libcore.timezone.TzDataSetVersion r122;
        java.lang.StringBuilder r124, r128, r131, r134, r136, r138, r140, r142, r145, r148, r151, r155;
        libcore.timezone.ZoneInfoDb r126;

        r0 := @this: com.android.timezone.distro.installer.TimeZoneDistroInstaller;

        r120 := @parameter0: com.android.timezone.distro.TimeZoneDistro;

        $r2 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File oldStagedDataDir>;

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label01;

        $r83 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File oldStagedDataDir>;

        staticinvoke <com.android.timezone.distro.FileUtils: void deleteRecursive(java.io.File)>($r83);

     label01:
        $r3 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        $z1 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label02;

        $r82 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        staticinvoke <com.android.timezone.distro.FileUtils: void deleteRecursive(java.io.File)>($r82);

     label02:
        $r4 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>($r4, "Unpacking / verifying time zone update");

     label03:
        $r5 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void unpackDistro(com.android.timezone.distro.TimeZoneDistro,java.io.File)>(r120, $r5);

     label04:
        $r6 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        r121 = specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: com.android.timezone.distro.DistroVersion readDistroVersion(java.io.File)>($r6);

     label05:
        if r121 != null goto label08;

     label06:
        $r79 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>($r79, "Update not applied: Distro version could not be loaded");

     label07:
        $r80 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File oldStagedDataDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r80);

        $r81 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r81);

        return 1;

     label08:
        r122 = new libcore.timezone.TzDataSetVersion;

        $i3 = r121.<com.android.timezone.distro.DistroVersion: int formatMajorVersion>;

        $i2 = r121.<com.android.timezone.distro.DistroVersion: int formatMinorVersion>;

        $r7 = r121.<com.android.timezone.distro.DistroVersion: java.lang.String rulesVersion>;

        $i1 = r121.<com.android.timezone.distro.DistroVersion: int revision>;

        specialinvoke r122.<libcore.timezone.TzDataSetVersion: void <init>(int,int,java.lang.String,int)>($i3, $i2, $r7, $i1);

     label09:
        $z2 = staticinvoke <libcore.timezone.TzDataSetVersion: boolean isCompatibleWithThisDevice(libcore.timezone.TzDataSetVersion)>(r122);

        if $z2 != 0 goto label11;

        r123 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        r124 = new java.lang.StringBuilder;

        specialinvoke r124.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Update not applied: Distro format version check failed: ");

        virtualinvoke r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r121);

        $r76 = virtualinvoke r124.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r123, $r76);

     label10:
        $r77 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File oldStagedDataDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r77);

        $r78 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r78);

        return 2;

     label11:
        $r8 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        $z3 = specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: boolean checkDistroDataFilesExist(java.io.File)>($r8);

        if $z3 != 0 goto label13;

        $r71 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>($r71, "Update not applied: Distro is missing required data file(s)");

     label12:
        $r72 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File oldStagedDataDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r72);

        $r73 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r73);

        return 1;

     label13:
        $r9 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File baseVersionFile>;

        $z4 = specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: boolean checkDistroRulesNewerThanBase(java.io.File,com.android.timezone.distro.DistroVersion)>($r9, r121);

        if $z4 != 0 goto label15;

        $r68 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>($r68, "Update not applied: Distro rules version check failed");

     label14:
        $r69 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File oldStagedDataDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r69);

        $r70 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r70);

        return 3;

     label15:
        r125 = new java.io.File;

        $r10 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        specialinvoke r125.<java.io.File: void <init>(java.io.File,java.lang.String)>($r10, "tzdata");

        $r11 = virtualinvoke r125.<java.io.File: java.lang.String getPath()>();

        r126 = staticinvoke <libcore.timezone.ZoneInfoDb: libcore.timezone.ZoneInfoDb loadTzData(java.lang.String)>($r11);

     label16:
        if r126 != null goto label19;

     label17:
        r127 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        r128 = new java.lang.StringBuilder;

        specialinvoke r128.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Update not applied: ");

        virtualinvoke r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r125);

        virtualinvoke r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" could not be loaded");

        $r65 = virtualinvoke r128.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r127, $r65);

     label18:
        $r66 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File oldStagedDataDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r66);

        $r67 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r67);

        return 4;

     label19:
        virtualinvoke r126.<libcore.timezone.ZoneInfoDb: void validate()>();

     label20:
        virtualinvoke r126.<libcore.timezone.ZoneInfoDb: void close()>();

     label21:
        r129 = new java.io.File;

        $r12 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        specialinvoke r129.<java.io.File: void <init>(java.io.File,java.lang.String)>($r12, "tzlookup.xml");

        z6 = virtualinvoke r129.<java.io.File: boolean exists()>();

     label22:
        if z6 != 0 goto label25;

     label23:
        r130 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        r131 = new java.lang.StringBuilder;

        specialinvoke r131.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Update not applied: ");

        virtualinvoke r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r129);

        virtualinvoke r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist");

        $r59 = virtualinvoke r131.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r130, $r59);

     label24:
        $r60 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File oldStagedDataDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r60);

        $r61 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r61);

        return 1;

     label25:
        $r13 = virtualinvoke r129.<java.io.File: java.lang.String getPath()>();

        $r14 = staticinvoke <libcore.timezone.TimeZoneFinder: libcore.timezone.TimeZoneFinder createInstance(java.lang.String)>($r13);

        virtualinvoke $r14.<libcore.timezone.TimeZoneFinder: void validate()>();

     label26:
        r132 = new java.io.File;

        $r15 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        specialinvoke r132.<java.io.File: void <init>(java.io.File,java.lang.String)>($r15, "telephonylookup.xml");

        $z5 = virtualinvoke r132.<java.io.File: boolean exists()>();

        if $z5 != 0 goto label28;

        r133 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        r134 = new java.lang.StringBuilder;

        specialinvoke r134.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Update not applied: ");

        virtualinvoke r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r132);

        virtualinvoke r134.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist");

        $r53 = virtualinvoke r134.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r133, $r53);

     label27:
        $r54 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File oldStagedDataDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r54);

        $r55 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r55);

        return 1;

     label28:
        $r16 = virtualinvoke r132.<java.io.File: java.lang.String getPath()>();

        $r17 = staticinvoke <libcore.timezone.TelephonyLookup: libcore.timezone.TelephonyLookup createInstance(java.lang.String)>($r16);

        virtualinvoke $r17.<libcore.timezone.TelephonyLookup: void validate()>();

     label29:
        $r18 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>($r18, "Applying time zone update");

        $r19 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        staticinvoke <com.android.timezone.distro.FileUtils: void makeDirectoryWorldAccessible(java.io.File)>($r19);

        $r20 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File stagedTzDataDir>;

        z7 = virtualinvoke $r20.<java.io.File: boolean exists()>();

     label30:
        if z7 != 0 goto label33;

     label31:
        r135 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        r136 = new java.lang.StringBuilder;

        specialinvoke r136.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Nothing to unstage at ");

        $r47 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File stagedTzDataDir>;

        virtualinvoke r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r47);

        $r49 = virtualinvoke r136.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r135, $r49);

     label32:
        goto label34;

     label33:
        r137 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        r138 = new java.lang.StringBuilder;

        specialinvoke r138.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Moving ");

        $r22 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File stagedTzDataDir>;

        virtualinvoke r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        virtualinvoke r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r25 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File oldStagedDataDir>;

        virtualinvoke r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r27 = virtualinvoke r138.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r137, $r27);

        $r29 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File stagedTzDataDir>;

        $r28 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File oldStagedDataDir>;

        staticinvoke <com.android.timezone.distro.FileUtils: void rename(java.io.File,java.io.File)>($r29, $r28);

     label34:
        r139 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        r140 = new java.lang.StringBuilder;

        specialinvoke r140.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r140.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Moving ");

        $r31 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        virtualinvoke r140.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        virtualinvoke r140.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r34 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File stagedTzDataDir>;

        virtualinvoke r140.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r34);

        $r36 = virtualinvoke r140.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r139, $r36);

        $r38 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        $r37 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File stagedTzDataDir>;

        staticinvoke <com.android.timezone.distro.FileUtils: void rename(java.io.File,java.io.File)>($r38, $r37);

        r141 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        r142 = new java.lang.StringBuilder;

        specialinvoke r142.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Install staged: ");

        $r40 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File stagedTzDataDir>;

        virtualinvoke r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r40);

        virtualinvoke r142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" successfully created");

        $r43 = virtualinvoke r142.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r141, $r43);

     label35:
        $r44 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File oldStagedDataDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r44);

        $r45 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r45);

        return 0;

     label36:
        $r92 := @caughtexception;

     label37:
        r144 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        r145 = new java.lang.StringBuilder;

        specialinvoke r145.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Update not applied: ");

        virtualinvoke r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r132);

        virtualinvoke r145.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed validation");

        $r96 = virtualinvoke r145.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String,java.lang.Throwable)>(r144, $r96, $r92);

     label38:
        $r97 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File oldStagedDataDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r97);

        $r98 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r98);

        return 4;

     label39:
        $r85 := @caughtexception;

     label40:
        r147 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        r148 = new java.lang.StringBuilder;

        specialinvoke r148.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Update not applied: ");

        virtualinvoke r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r129);

        virtualinvoke r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed validation");

        $r89 = virtualinvoke r148.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String,java.lang.Throwable)>(r147, $r89, $r85);

     label41:
        $r90 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File oldStagedDataDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r90);

        $r91 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r91);

        return 4;

     label42:
        $r84 := @caughtexception;

        goto label47;

     label43:
        $r106 := @caughtexception;

     label44:
        r150 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        r151 = new java.lang.StringBuilder;

        specialinvoke r151.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Update not applied: ");

        virtualinvoke r151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r125);

        virtualinvoke r151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed validation");

        $r110 = virtualinvoke r151.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String,java.lang.Throwable)>(r150, $r110, $r106);

     label45:
        virtualinvoke r126.<libcore.timezone.ZoneInfoDb: void close()>();

     label46:
        $r111 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File oldStagedDataDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r111);

        $r112 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r112);

        return 4;

     label47:
        virtualinvoke r126.<libcore.timezone.ZoneInfoDb: void close()>();

     label48:
        throw $r84;

     label49:
        $r99 := @caughtexception;

     label50:
        $r100 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String,java.lang.Throwable)>($r100, "Update not applied: Distro version could not be converted", $r99);

     label51:
        $r101 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File oldStagedDataDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r101);

        $r102 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r102);

        return 1;

     label52:
        $r113 := @caughtexception;

     label53:
        r154 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        r155 = new java.lang.StringBuilder;

        specialinvoke r155.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid distro version: ");

        $r115 = virtualinvoke $r113.<com.android.timezone.distro.DistroException: java.lang.String getMessage()>();

        virtualinvoke r155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r115);

        $r117 = virtualinvoke r155.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r154, $r117);

     label54:
        $r118 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File oldStagedDataDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r118);

        $r119 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r119);

        return 1;

     label55:
        $r103 := @caughtexception;

        $r104 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File oldStagedDataDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r104);

        $r105 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r105);

        throw $r103;

        catch java.lang.Throwable from label03 to label04 with label55;
        catch com.android.timezone.distro.DistroException from label04 to label05 with label52;
        catch java.lang.Throwable from label04 to label05 with label55;
        catch java.lang.Throwable from label06 to label07 with label55;
        catch libcore.timezone.TzDataSetVersion$TzDataSetException from label08 to label09 with label49;
        catch java.lang.Throwable from label08 to label09 with label55;
        catch java.lang.Throwable from label09 to label10 with label55;
        catch java.lang.Throwable from label11 to label12 with label55;
        catch java.lang.Throwable from label13 to label14 with label55;
        catch java.lang.Throwable from label15 to label16 with label55;
        catch java.lang.Throwable from label17 to label18 with label55;
        catch java.io.IOException from label19 to label20 with label43;
        catch java.lang.Throwable from label19 to label20 with label42;
        catch java.lang.Throwable from label20 to label21 with label55;
        catch java.lang.Throwable from label21 to label22 with label55;
        catch java.lang.Throwable from label23 to label24 with label55;
        catch java.io.IOException from label25 to label26 with label39;
        catch java.lang.Throwable from label25 to label26 with label55;
        catch java.lang.Throwable from label26 to label27 with label55;
        catch java.io.IOException from label28 to label29 with label36;
        catch java.lang.Throwable from label28 to label29 with label55;
        catch java.lang.Throwable from label29 to label30 with label55;
        catch java.lang.Throwable from label31 to label32 with label55;
        catch java.lang.Throwable from label33 to label34 with label55;
        catch java.lang.Throwable from label34 to label35 with label55;
        catch java.lang.Throwable from label37 to label38 with label55;
        catch java.lang.Throwable from label40 to label41 with label55;
        catch java.lang.Throwable from label44 to label45 with label42;
        catch java.lang.Throwable from label45 to label46 with label55;
        catch java.lang.Throwable from label47 to label48 with label55;
        catch java.lang.Throwable from label48 to label49 with label55;
        catch java.lang.Throwable from label50 to label51 with label55;
        catch java.lang.Throwable from label53 to label54 with label55;
    }

    public int stageUninstall() throws java.io.IOException
    {
        com.android.timezone.distro.installer.TimeZoneDistroInstaller r0;
        boolean z0, $z1, $z2, $z3;
        java.lang.String $r1, $r11, $r23, $r30, $r36, $r42, r48, r50, r52, r55, r57;
        java.io.File $r2, $r3, $r4, $r6, $r9, $r12, $r13, $r14, $r15, $r16, $r18, $r21, $r24, $r25, $r27, $r31, $r32, $r34, $r37, $r38, $r40, $r43, $r44, $r46, $r47, r54;
        java.lang.Throwable $r45;
        java.lang.StringBuilder r49, r51, r53, r56, r58;

        r0 := @this: com.android.timezone.distro.installer.TimeZoneDistroInstaller;

        $r1 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>($r1, "Uninstalling time zone update");

        $r2 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File oldStagedDataDir>;

        $z1 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label01;

        $r44 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File oldStagedDataDir>;

        staticinvoke <com.android.timezone.distro.FileUtils: void deleteRecursive(java.io.File)>($r44);

     label01:
        $r3 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        $z2 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z2 == 0 goto label02;

        $r43 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        staticinvoke <com.android.timezone.distro.FileUtils: void deleteRecursive(java.io.File)>($r43);

     label02:
        $r4 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File stagedTzDataDir>;

        z0 = virtualinvoke $r4.<java.io.File: boolean exists()>();

     label03:
        if z0 != 0 goto label06;

     label04:
        r48 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        r49 = new java.lang.StringBuilder;

        specialinvoke r49.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Nothing to unstage at ");

        $r40 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File stagedTzDataDir>;

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r40);

        $r42 = virtualinvoke r49.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r48, $r42);

     label05:
        goto label07;

     label06:
        r50 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        r51 = new java.lang.StringBuilder;

        specialinvoke r51.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Moving ");

        $r6 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File stagedTzDataDir>;

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r9 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File oldStagedDataDir>;

        virtualinvoke r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke r51.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r50, $r11);

        $r13 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File stagedTzDataDir>;

        $r12 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File oldStagedDataDir>;

        staticinvoke <com.android.timezone.distro.FileUtils: void rename(java.io.File,java.io.File)>($r13, $r12);

     label07:
        $r14 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File currentTzDataDir>;

        $z3 = virtualinvoke $r14.<java.io.File: boolean exists()>();

        if $z3 != 0 goto label09;

        r52 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        r53 = new java.lang.StringBuilder;

        specialinvoke r53.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Nothing to uninstall at ");

        $r34 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File currentTzDataDir>;

        virtualinvoke r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r34);

        $r36 = virtualinvoke r53.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r52, $r36);

     label08:
        $r37 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File oldStagedDataDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r37);

        $r38 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r38);

        return 1;

     label09:
        $r15 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        staticinvoke <com.android.timezone.distro.FileUtils: void ensureDirectoriesExist(java.io.File,boolean)>($r15, 1);

        r54 = new java.io.File;

        $r16 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        specialinvoke r54.<java.io.File: void <init>(java.io.File,java.lang.String)>($r16, "STAGED_UNINSTALL_TOMBSTONE");

        staticinvoke <com.android.timezone.distro.FileUtils: void createEmptyFile(java.io.File)>(r54);

        r55 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        r56 = new java.lang.StringBuilder;

        specialinvoke r56.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Moving ");

        $r18 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r21 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File stagedTzDataDir>;

        virtualinvoke r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke r56.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r55, $r23);

        $r25 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        $r24 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File stagedTzDataDir>;

        staticinvoke <com.android.timezone.distro.FileUtils: void rename(java.io.File,java.io.File)>($r25, $r24);

        r57 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String logTag>;

        r58 = new java.lang.StringBuilder;

        specialinvoke r58.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Uninstall staged: ");

        $r27 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File stagedTzDataDir>;

        virtualinvoke r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        virtualinvoke r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" successfully created");

        $r30 = virtualinvoke r58.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>(r57, $r30);

     label10:
        $r31 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File oldStagedDataDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r31);

        $r32 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r32);

        return 0;

     label11:
        $r45 := @caughtexception;

        $r46 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File oldStagedDataDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r46);

        $r47 = r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.io.File workingDir>;

        specialinvoke r0.<com.android.timezone.distro.installer.TimeZoneDistroInstaller: void deleteBestEffort(java.io.File)>($r47);

        throw $r45;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label07 to label08 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public static void <clinit>()
    {
        <com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String WORKING_DIR_NAME> = "working";

        <com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String UNINSTALL_TOMBSTONE_FILE_NAME> = "STAGED_UNINSTALL_TOMBSTONE";

        <com.android.timezone.distro.installer.TimeZoneDistroInstaller: int UNINSTALL_SUCCESS> = 0;

        <com.android.timezone.distro.installer.TimeZoneDistroInstaller: int UNINSTALL_NOTHING_INSTALLED> = 1;

        <com.android.timezone.distro.installer.TimeZoneDistroInstaller: int UNINSTALL_FAIL> = 2;

        <com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String STAGED_TZ_DATA_DIR_NAME> = "staged";

        <com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String OLD_TZ_DATA_DIR_NAME> = "old";

        <com.android.timezone.distro.installer.TimeZoneDistroInstaller: int INSTALL_SUCCESS> = 0;

        <com.android.timezone.distro.installer.TimeZoneDistroInstaller: int INSTALL_FAIL_VALIDATION_ERROR> = 4;

        <com.android.timezone.distro.installer.TimeZoneDistroInstaller: int INSTALL_FAIL_RULES_TOO_OLD> = 3;

        <com.android.timezone.distro.installer.TimeZoneDistroInstaller: int INSTALL_FAIL_BAD_DISTRO_STRUCTURE> = 1;

        <com.android.timezone.distro.installer.TimeZoneDistroInstaller: int INSTALL_FAIL_BAD_DISTRO_FORMAT_VERSION> = 2;

        <com.android.timezone.distro.installer.TimeZoneDistroInstaller: java.lang.String CURRENT_TZ_DATA_DIR_NAME> = "current";

        return;
    }
}
