class com.android.uiautomator.core.InteractionController extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final java.lang.String LOG_TAG;
    private static final int MOTION_EVENT_INJECTION_DELAY_MILLIS;
    private static final long REGULAR_CLICK_LENGTH;
    private long mDownTime;
    private final android.view.KeyCharacterMap mKeyCharacterMap;
    private final com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge;

    static void <clinit>()
    {
        java.lang.String r0;
        java.lang.Class $r1;
        boolean $z0;

        <com.android.uiautomator.core.InteractionController: long REGULAR_CLICK_LENGTH> = 100L;

        <com.android.uiautomator.core.InteractionController: int MOTION_EVENT_INJECTION_DELAY_MILLIS> = 5;

        $r1 = class "Lcom/android/uiautomator/core/InteractionController;";

        r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG> = r0;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>(r0, 3);

        <com.android.uiautomator.core.InteractionController: boolean DEBUG> = $z0;

        return;
    }

    public void <init>(com.android.uiautomator.core.UiAutomatorBridge)
    {
        com.android.uiautomator.core.InteractionController r0;
        com.android.uiautomator.core.UiAutomatorBridge r1;
        android.view.KeyCharacterMap $r2;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        r1 := @parameter0: com.android.uiautomator.core.UiAutomatorBridge;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>(-1);

        r0.<com.android.uiautomator.core.InteractionController: android.view.KeyCharacterMap mKeyCharacterMap> = $r2;

        r0.<com.android.uiautomator.core.InteractionController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge> = r1;

        return;
    }

    static boolean access$000(com.android.uiautomator.core.InteractionController, android.view.InputEvent)
    {
        com.android.uiautomator.core.InteractionController r0;
        android.view.InputEvent r1;
        boolean $z0;

        r0 := @parameter0: com.android.uiautomator.core.InteractionController;

        r1 := @parameter1: android.view.InputEvent;

        $z0 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean injectEventSync(android.view.InputEvent)>(r1);

        return $z0;
    }

    static boolean access$100(com.android.uiautomator.core.InteractionController, int, int)
    {
        com.android.uiautomator.core.InteractionController r0;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: com.android.uiautomator.core.InteractionController;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean touchDown(int,int)>(i0, i1);

        return $z0;
    }

    static boolean access$200(com.android.uiautomator.core.InteractionController, int, int)
    {
        com.android.uiautomator.core.InteractionController r0;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: com.android.uiautomator.core.InteractionController;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean touchUp(int,int)>(i0, i1);

        return $z0;
    }

    private java.lang.Runnable clickRunnable(int, int)
    {
        com.android.uiautomator.core.InteractionController r0;
        int i0, i1;
        com.android.uiautomator.core.InteractionController$2 $r1;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new com.android.uiautomator.core.InteractionController$2;

        specialinvoke $r1.<com.android.uiautomator.core.InteractionController$2: void <init>(com.android.uiautomator.core.InteractionController,int,int)>(r0, i0, i1);

        return $r1;
    }

    private android.view.accessibility.AccessibilityEvent getLastMatchingEvent(java.util.List, int)
    {
        com.android.uiautomator.core.InteractionController r0;
        java.util.List r1;
        int i0, $i1, $i2, i3;
        android.view.accessibility.AccessibilityEvent r2;
        java.lang.Object $r3;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i3 = interfaceinvoke r1.<java.util.List: int size()>();

     label1:
        if i3 <= 0 goto label3;

        $i1 = i3 - 1;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i1);

        r2 = (android.view.accessibility.AccessibilityEvent) $r3;

        $i2 = virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: int getEventType()>();

        if $i2 != i0 goto label2;

        return r2;

     label2:
        i3 = i3 + -1;

        goto label1;

     label3:
        return null;
    }

    private int getPointerAction(int, int)
    {
        com.android.uiautomator.core.InteractionController r0;
        int i0, i1, $i2, $i3;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i1 << 8;

        $i3 = $i2 + i0;

        return $i3;
    }

    private boolean injectEventSync(android.view.InputEvent)
    {
        com.android.uiautomator.core.InteractionController r0;
        android.view.InputEvent r1;
        com.android.uiautomator.core.UiAutomatorBridge $r2;
        boolean $z0;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        r1 := @parameter0: android.view.InputEvent;

        $r2 = r0.<com.android.uiautomator.core.InteractionController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        $z0 = virtualinvoke $r2.<com.android.uiautomator.core.UiAutomatorBridge: boolean injectInputEvent(android.view.InputEvent,boolean)>(r1, 1);

        return $z0;
    }

    private void recycleAccessibilityEvents(java.util.List)
    {
        com.android.uiautomator.core.InteractionController r0;
        java.util.List r1;
        java.util.Iterator r2;
        boolean $z0;
        java.lang.Object $r3;
        android.view.accessibility.AccessibilityEvent $r4;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        r1 := @parameter0: java.util.List;

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (android.view.accessibility.AccessibilityEvent) $r3;

        virtualinvoke $r4.<android.view.accessibility.AccessibilityEvent: void recycle()>();

        goto label1;

     label2:
        interfaceinvoke r1.<java.util.List: void clear()>();

        return;
    }

    private android.view.accessibility.AccessibilityEvent runAndWaitForEvents(java.lang.Runnable, android.app.UiAutomation$AccessibilityEventFilter, long)
    {
        com.android.uiautomator.core.InteractionController r0;
        android.app.UiAutomation$AccessibilityEventFilter r1;
        long l0;
        com.android.uiautomator.core.UiAutomatorBridge $r2;
        java.lang.Throwable $r3;
        java.lang.String $r4, $r6;
        java.lang.Exception $r5;
        java.lang.Runnable r7;
        android.view.accessibility.AccessibilityEvent r8;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        r7 := @parameter0: java.lang.Runnable;

        r1 := @parameter1: android.app.UiAutomation$AccessibilityEventFilter;

        l0 := @parameter2: long;

     label1:
        $r2 = r0.<com.android.uiautomator.core.InteractionController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        r8 = virtualinvoke $r2.<com.android.uiautomator.core.UiAutomatorBridge: android.view.accessibility.AccessibilityEvent executeCommandAndWaitForAccessibilityEvent(java.lang.Runnable,android.app.UiAutomation$AccessibilityEventFilter,long)>(r7, r1, l0);

     label2:
        return r8;

     label3:
        $r5 := @caughtexception;

        $r6 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r6, "exception from executeCommandAndWaitForAccessibilityEvent", $r5);

        return null;

     label4:
        $r3 := @caughtexception;

        $r4 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r4, "runAndwaitForEvent timedout waiting for events");

        return null;

        catch java.util.concurrent.TimeoutException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label3;
    }

    private boolean touchDown(int, int)
    {
        com.android.uiautomator.core.InteractionController r0;
        int i0, i1;
        java.lang.String r1, $r8;
        long l2;
        boolean $z0, $z1;
        float $f0, $f1;
        java.lang.StringBuilder $r2;
        android.view.MotionEvent r10;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = <com.android.uiautomator.core.InteractionController: boolean DEBUG>;

        if $z0 == 0 goto label1;

        r1 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("touchDown (");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r1, $r8);

     label1:
        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.uiautomator.core.InteractionController: long mDownTime> = l2;

        $f1 = (float) i0;

        $f0 = (float) i1;

        r10 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>(l2, l2, 0, $f1, $f0, 1);

        virtualinvoke r10.<android.view.MotionEvent: void setSource(int)>(4098);

        $z1 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean injectEventSync(android.view.InputEvent)>(r10);

        return $z1;
    }

    private boolean touchMove(int, int)
    {
        com.android.uiautomator.core.InteractionController r0;
        int i0, i1;
        java.lang.String r1, $r8;
        long l2, $l3;
        boolean $z0, $z1;
        float $f0, $f1;
        java.lang.StringBuilder $r2;
        android.view.MotionEvent r10;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = <com.android.uiautomator.core.InteractionController: boolean DEBUG>;

        if $z0 == 0 goto label1;

        r1 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("touchMove (");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r1, $r8);

     label1:
        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l3 = r0.<com.android.uiautomator.core.InteractionController: long mDownTime>;

        $f1 = (float) i0;

        $f0 = (float) i1;

        r10 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>($l3, l2, 2, $f1, $f0, 1);

        virtualinvoke r10.<android.view.MotionEvent: void setSource(int)>(4098);

        $z1 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean injectEventSync(android.view.InputEvent)>(r10);

        return $z1;
    }

    private boolean touchUp(int, int)
    {
        com.android.uiautomator.core.InteractionController r0;
        int i0, i1;
        long l2, $l3;
        boolean $z0, $z1;
        float $f0, $f1;
        java.lang.StringBuilder $r2;
        java.lang.String $r8, r9;
        android.view.MotionEvent r10;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = <com.android.uiautomator.core.InteractionController: boolean DEBUG>;

        if $z0 == 0 goto label1;

        r9 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("touchUp (");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r9, $r8);

     label1:
        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l3 = r0.<com.android.uiautomator.core.InteractionController: long mDownTime>;

        $f1 = (float) i0;

        $f0 = (float) i1;

        r10 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>($l3, l2, 1, $f1, $f0, 1);

        virtualinvoke r10.<android.view.MotionEvent: void setSource(int)>(4098);

        r0.<com.android.uiautomator.core.InteractionController: long mDownTime> = 0L;

        $z1 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean injectEventSync(android.view.InputEvent)>(r10);

        return $z1;
    }

    public boolean clickAndSync(int, int, long)
    {
        com.android.uiautomator.core.InteractionController r0;
        int i0, i1;
        long l2;
        java.lang.String r1, $r5;
        java.lang.Object[] $r2;
        java.lang.Integer $r3, $r4;
        java.lang.Runnable $r6;
        com.android.uiautomator.core.InteractionController$WaitForAnyEventPredicate $r7;
        android.view.accessibility.AccessibilityEvent $r8;
        boolean z0;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        z0 = 0;

        $r2 = newarray (java.lang.Object)[2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r2[1] = $r4;

        r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("clickAndSync(%d, %d)", $r2);

        $r5 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, r1);

        $r6 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: java.lang.Runnable clickRunnable(int,int)>(i0, i1);

        $r7 = new com.android.uiautomator.core.InteractionController$WaitForAnyEventPredicate;

        specialinvoke $r7.<com.android.uiautomator.core.InteractionController$WaitForAnyEventPredicate: void <init>(com.android.uiautomator.core.InteractionController,int)>(r0, 2052);

        $r8 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: android.view.accessibility.AccessibilityEvent runAndWaitForEvents(java.lang.Runnable,android.app.UiAutomation$AccessibilityEventFilter,long)>($r6, $r7, l2);

        if $r8 == null goto label1;

        z0 = 1;

     label1:
        return z0;
    }

    public boolean clickAndWaitForNewWindow(int, int, long)
    {
        com.android.uiautomator.core.InteractionController r0;
        int i0, i1;
        long l2;
        java.lang.String r1, $r5;
        java.lang.Object[] $r2;
        java.lang.Integer $r3, $r4;
        java.lang.Runnable $r6;
        com.android.uiautomator.core.InteractionController$WaitForAllEventPredicate $r7;
        android.view.accessibility.AccessibilityEvent $r8;
        boolean z0;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        z0 = 0;

        $r2 = newarray (java.lang.Object)[2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r2[1] = $r4;

        r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("clickAndWaitForNewWindow(%d, %d)", $r2);

        $r5 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, r1);

        $r6 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: java.lang.Runnable clickRunnable(int,int)>(i0, i1);

        $r7 = new com.android.uiautomator.core.InteractionController$WaitForAllEventPredicate;

        specialinvoke $r7.<com.android.uiautomator.core.InteractionController$WaitForAllEventPredicate: void <init>(com.android.uiautomator.core.InteractionController,int)>(r0, 2080);

        $r8 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: android.view.accessibility.AccessibilityEvent runAndWaitForEvents(java.lang.Runnable,android.app.UiAutomation$AccessibilityEventFilter,long)>($r6, $r7, l2);

        if $r8 == null goto label1;

        z0 = 1;

     label1:
        return z0;
    }

    public boolean clickNoSync(int, int)
    {
        com.android.uiautomator.core.InteractionController r0;
        int i0, i1;
        java.lang.String r1, $r9;
        java.lang.StringBuilder $r3;
        boolean $z0, $z1;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("clickNoSync (");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r1, $r9);

        $z0 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean touchDown(int,int)>(i0, i1);

        if $z0 == 0 goto label1;

        staticinvoke <android.os.SystemClock: void sleep(long)>(100L);

        $z1 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean touchUp(int,int)>(i0, i1);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void freezeRotation()
    {
        com.android.uiautomator.core.InteractionController r0;
        com.android.uiautomator.core.UiAutomatorBridge $r1;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        $r1 = r0.<com.android.uiautomator.core.InteractionController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        virtualinvoke $r1.<com.android.uiautomator.core.UiAutomatorBridge: boolean setRotation(int)>(-1);

        return;
    }

    public boolean isScreenOn() throws android.os.RemoteException
    {
        com.android.uiautomator.core.InteractionController r0;
        com.android.uiautomator.core.UiAutomatorBridge $r1;
        boolean $z0;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        $r1 = r0.<com.android.uiautomator.core.InteractionController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        $z0 = virtualinvoke $r1.<com.android.uiautomator.core.UiAutomatorBridge: boolean isScreenOn()>();

        return $z0;
    }

    public boolean longTapNoSync(int, int)
    {
        com.android.uiautomator.core.InteractionController r0;
        int i0, i1;
        java.lang.String r1, $r10;
        boolean $z0, $z1, $z2;
        com.android.uiautomator.core.UiAutomatorBridge $r3;
        long $l2;
        java.lang.StringBuilder $r4;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = <com.android.uiautomator.core.InteractionController: boolean DEBUG>;

        if $z0 == 0 goto label1;

        r1 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("longTapNoSync (");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r1, $r10);

     label1:
        $z1 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean touchDown(int,int)>(i0, i1);

        if $z1 == 0 goto label2;

        $r3 = r0.<com.android.uiautomator.core.InteractionController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        $l2 = virtualinvoke $r3.<com.android.uiautomator.core.UiAutomatorBridge: long getSystemLongPressTime()>();

        staticinvoke <android.os.SystemClock: void sleep(long)>($l2);

        $z2 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean touchUp(int,int)>(i0, i1);

        if $z2 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public boolean openNotification()
    {
        com.android.uiautomator.core.InteractionController r0;
        com.android.uiautomator.core.UiAutomatorBridge $r1;
        boolean $z0;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        $r1 = r0.<com.android.uiautomator.core.InteractionController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        $z0 = virtualinvoke $r1.<com.android.uiautomator.core.UiAutomatorBridge: boolean performGlobalAction(int)>(4);

        return $z0;
    }

    public boolean openQuickSettings()
    {
        com.android.uiautomator.core.InteractionController r0;
        com.android.uiautomator.core.UiAutomatorBridge $r1;
        boolean $z0;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        $r1 = r0.<com.android.uiautomator.core.InteractionController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        $z0 = virtualinvoke $r1.<com.android.uiautomator.core.UiAutomatorBridge: boolean performGlobalAction(int)>(5);

        return $z0;
    }

    public transient boolean performMultiPointerGesture(android.view.MotionEvent$PointerCoords[][])
    {
        com.android.uiautomator.core.InteractionController r0;
        android.view.MotionEvent$PointerProperties[] r1;
        android.view.MotionEvent$PointerCoords[] r2, $r12, $r13, $r16, $r17, $r18, $r20, $r24, $r26, $r27;
        long l0, $l6, $l12, $l13, $l19, $l24;
        int $i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i14, $i15, $i16, $i17, $i18, $i20, $i21, $i22, $i23, $i25, $i26, $i27, i28, i29, i30, i31, i32, i33, i34, i35;
        java.lang.IllegalArgumentException $r3;
        android.view.MotionEvent $r4, $r10, $r11, $r15, $r22;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6;
        java.lang.StringBuilder $r5;
        android.view.MotionEvent$PointerCoords $r7, $r14, $r19, $r21, $r25;
        float $f0;
        java.lang.String $r9, r30;
        android.view.MotionEvent$PointerProperties $r23;
        android.view.MotionEvent$PointerCoords[][] r28;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        r28 := @parameter0: android.view.MotionEvent$PointerCoords[][];

        $i1 = lengthof r28;

        if $i1 < 2 goto label18;

        i28 = 0;

        i29 = 0;

     label01:
        $i2 = lengthof r28;

        if i29 >= $i2 goto label03;

        $r26 = r28[i29];

        $i27 = lengthof $r26;

        if i28 >= $i27 goto label02;

        $r27 = r28[i29];

        i28 = lengthof $r27;

        goto label02;

     label02:
        i29 = i29 + 1;

        goto label01;

     label03:
        $i3 = lengthof r28;

        r1 = newarray (android.view.MotionEvent$PointerProperties)[$i3];

        $i4 = lengthof r28;

        r2 = newarray (android.view.MotionEvent$PointerCoords)[$i4];

        i30 = 0;

     label04:
        $i5 = lengthof r28;

        if i30 >= $i5 goto label05;

        $r23 = new android.view.MotionEvent$PointerProperties;

        specialinvoke $r23.<android.view.MotionEvent$PointerProperties: void <init>()>();

        $r23.<android.view.MotionEvent$PointerProperties: int id> = i30;

        $r23.<android.view.MotionEvent$PointerProperties: int toolType> = 1;

        r1[i30] = $r23;

        $r24 = r28[i30];

        $r25 = $r24[0];

        r2[i30] = $r25;

        i30 = i30 + 1;

        goto label04;

     label05:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l6 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r4 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[],int,int,float,float,int,int,int,int)>(l0, $l6, 0, 1, r1, r2, 0, 0, 1.0F, 1.0F, 0, 0, 4098, 0);

        $z0 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean injectEventSync(android.view.InputEvent)>($r4);

        z6 = 1 & $z0;

        i31 = 1;

     label06:
        $i7 = lengthof r28;

        if i31 >= $i7 goto label07;

        $l24 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i25 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: int getPointerAction(int,int)>(5, i31);

        $i26 = i31 + 1;

        $r22 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[],int,int,float,float,int,int,int,int)>(l0, $l24, $i25, $i26, r1, r2, 0, 0, 1.0F, 1.0F, 0, 0, 4098, 0);

        $z5 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean injectEventSync(android.view.InputEvent)>($r22);

        z6 = z6 & $z5;

        i31 = i31 + 1;

        goto label06;

     label07:
        i32 = 1;

     label08:
        $i8 = i28 - 1;

        if i32 >= $i8 goto label13;

        i33 = 0;

     label09:
        $i18 = lengthof r28;

        if i33 >= $i18 goto label12;

        $r16 = r28[i33];

        $i21 = lengthof $r16;

        if $i21 <= i32 goto label10;

        $r20 = r28[i33];

        $r21 = $r20[i32];

        r2[i33] = $r21;

        goto label11;

     label10:
        $r18 = r28[i33];

        $r17 = r28[i33];

        $i22 = lengthof $r17;

        $i23 = $i22 - 1;

        $r19 = $r18[$i23];

        r2[i33] = $r19;

     label11:
        i33 = i33 + 1;

        goto label09;

     label12:
        $l19 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i20 = lengthof r28;

        $r15 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[],int,int,float,float,int,int,int,int)>(l0, $l19, 2, $i20, r1, r2, 0, 0, 1.0F, 1.0F, 0, 0, 4098, 0);

        $z4 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean injectEventSync(android.view.InputEvent)>($r15);

        z6 = z6 & $z4;

        staticinvoke <android.os.SystemClock: void sleep(long)>(5L);

        i32 = i32 + 1;

        goto label08;

     label13:
        i34 = 0;

     label14:
        $i9 = lengthof r28;

        if i34 >= $i9 goto label15;

        $r13 = r28[i34];

        $r12 = r28[i34];

        $i16 = lengthof $r12;

        $i17 = $i16 - 1;

        $r14 = $r13[$i17];

        r2[i34] = $r14;

        i34 = i34 + 1;

        goto label14;

     label15:
        i35 = 1;

     label16:
        $i10 = lengthof r28;

        if i35 >= $i10 goto label17;

        $l13 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i14 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: int getPointerAction(int,int)>(6, i35);

        $i15 = i35 + 1;

        $r11 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[],int,int,float,float,int,int,int,int)>(l0, $l13, $i14, $i15, r1, r2, 0, 0, 1.0F, 1.0F, 0, 0, 4098, 0);

        $z3 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean injectEventSync(android.view.InputEvent)>($r11);

        z6 = z6 & $z3;

        i35 = i35 + 1;

        goto label16;

     label17:
        r30 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x ");

        $r7 = r2[0];

        $f0 = $r7.<android.view.MotionEvent$PointerCoords: float x>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>(r30, $r9);

        $l12 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r10 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[],int,int,float,float,int,int,int,int)>(l0, $l12, 1, 1, r1, r2, 0, 0, 1.0F, 1.0F, 0, 0, 4098, 0);

        $z1 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean injectEventSync(android.view.InputEvent)>($r10);

        $z2 = z6 & $z1;

        return $z2;

     label18:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must provide coordinates for at least 2 pointers");

        throw $r3;
    }

    public boolean scrollSwipe(int, int, int, int, int)
    {
        com.android.uiautomator.core.InteractionController r0;
        int i0, i1, i2, i3, i4, $i7, $i8, $i9, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i21, $i22, $i23, $i24;
        java.lang.StringBuilder $r1, $r31, $r35, $r39;
        java.lang.String $r13, r25, r30, $r33, r34, $r37, r38, $r41;
        com.android.uiautomator.core.InteractionController$3 $r14;
        java.util.ArrayList $r15;
        com.android.uiautomator.core.InteractionController$EventCollectingPredicate $r16;
        com.android.uiautomator.core.Configurator $r17;
        long $l6;
        android.view.accessibility.AccessibilityEvent r29;
        boolean z1, z2;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        r25 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scrollSwipe (");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r13 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r25, $r13);

        $r14 = new com.android.uiautomator.core.InteractionController$3;

        specialinvoke $r14.<com.android.uiautomator.core.InteractionController$3: void <init>(com.android.uiautomator.core.InteractionController,int,int,int,int,int)>(r0, i0, i1, i2, i3, i4);

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        $r16 = new com.android.uiautomator.core.InteractionController$EventCollectingPredicate;

        specialinvoke $r16.<com.android.uiautomator.core.InteractionController$EventCollectingPredicate: void <init>(com.android.uiautomator.core.InteractionController,int,java.util.List)>(r0, 4096, $r15);

        $r17 = staticinvoke <com.android.uiautomator.core.Configurator: com.android.uiautomator.core.Configurator getInstance()>();

        $l6 = virtualinvoke $r17.<com.android.uiautomator.core.Configurator: long getScrollAcknowledgmentTimeout()>();

        specialinvoke r0.<com.android.uiautomator.core.InteractionController: android.view.accessibility.AccessibilityEvent runAndWaitForEvents(java.lang.Runnable,android.app.UiAutomation$AccessibilityEventFilter,long)>($r14, $r16, $l6);

        r29 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: android.view.accessibility.AccessibilityEvent getLastMatchingEvent(java.util.List,int)>($r15, 4096);

        z1 = 0;

        if r29 != null goto label01;

        specialinvoke r0.<com.android.uiautomator.core.InteractionController: void recycleAccessibilityEvents(java.util.List)>($r15);

        return 0;

     label01:
        $i7 = virtualinvoke r29.<android.view.accessibility.AccessibilityEvent: int getFromIndex()>();

        if $i7 == -1 goto label05;

        $i17 = virtualinvoke r29.<android.view.accessibility.AccessibilityEvent: int getToIndex()>();

        if $i17 == -1 goto label05;

        $i18 = virtualinvoke r29.<android.view.accessibility.AccessibilityEvent: int getItemCount()>();

        if $i18 == -1 goto label05;

        $i19 = virtualinvoke r29.<android.view.accessibility.AccessibilityEvent: int getFromIndex()>();

        if $i19 == 0 goto label03;

        $i21 = virtualinvoke r29.<android.view.accessibility.AccessibilityEvent: int getItemCount()>();

        $i22 = $i21 - 1;

        $i23 = virtualinvoke r29.<android.view.accessibility.AccessibilityEvent: int getToIndex()>();

        if $i22 != $i23 goto label02;

        goto label03;

     label02:
        z2 = 0;

        goto label04;

     label03:
        z2 = 1;

     label04:
        r30 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scrollSwipe reached scroll end: ");

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z2);

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r30, $r33);

        goto label13;

     label05:
        z2 = 0;

        $i24 = virtualinvoke r29.<android.view.accessibility.AccessibilityEvent: int getScrollX()>();

        if $i24 == -1 goto label13;

        z2 = 0;

        $i8 = virtualinvoke r29.<android.view.accessibility.AccessibilityEvent: int getScrollY()>();

        if $i8 == -1 goto label13;

        if i0 != i2 goto label09;

        $i13 = virtualinvoke r29.<android.view.accessibility.AccessibilityEvent: int getScrollY()>();

        if $i13 == 0 goto label07;

        $i15 = virtualinvoke r29.<android.view.accessibility.AccessibilityEvent: int getScrollY()>();

        $i16 = virtualinvoke r29.<android.view.accessibility.AccessibilityEvent: int getMaxScrollY()>();

        if $i15 != $i16 goto label06;

        goto label07;

     label06:
        z2 = 0;

        goto label08;

     label07:
        z2 = 1;

     label08:
        r34 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Vertical scrollSwipe reached scroll end: ");

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z2);

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r34, $r37);

        goto label13;

     label09:
        z2 = 0;

        if i1 != i3 goto label13;

        $i9 = virtualinvoke r29.<android.view.accessibility.AccessibilityEvent: int getScrollX()>();

        if $i9 == 0 goto label11;

        $i11 = virtualinvoke r29.<android.view.accessibility.AccessibilityEvent: int getScrollX()>();

        $i12 = virtualinvoke r29.<android.view.accessibility.AccessibilityEvent: int getMaxScrollX()>();

        if $i11 != $i12 goto label10;

        goto label11;

     label10:
        z2 = 0;

        goto label12;

     label11:
        z2 = 1;

     label12:
        r38 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Horizontal scrollSwipe reached scroll end: ");

        virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z2);

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r38, $r41);

     label13:
        specialinvoke r0.<com.android.uiautomator.core.InteractionController: void recycleAccessibilityEvents(java.util.List)>($r15);

        if z2 != 0 goto label14;

        z1 = 1;

     label14:
        return z1;
    }

    public boolean sendKey(int, int)
    {
        com.android.uiautomator.core.InteractionController r0;
        int i0, i1;
        java.lang.String r1, $r11;
        long l2;
        boolean $z0, $z1, $z2;
        android.view.KeyEvent $r3, $r4;
        java.lang.StringBuilder $r5;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = <com.android.uiautomator.core.InteractionController: boolean DEBUG>;

        if $z0 == 0 goto label1;

        r1 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendKey (");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r1, $r11);

        goto label1;

     label1:
        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r3 = new android.view.KeyEvent;

        specialinvoke $r3.<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int,int)>(l2, l2, 0, i0, 0, i1, -1, 0, 0, 257);

        $z1 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean injectEventSync(android.view.InputEvent)>($r3);

        if $z1 == 0 goto label2;

        $r4 = new android.view.KeyEvent;

        specialinvoke $r4.<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int,int)>(l2, l2, 1, i0, 0, i1, -1, 0, 0, 257);

        $z2 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean injectEventSync(android.view.InputEvent)>($r4);

        if $z2 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public boolean sendKeyAndWaitForEvent(int, int, int, long)
    {
        com.android.uiautomator.core.InteractionController r0;
        int i0, i1, i2;
        long l3;
        com.android.uiautomator.core.InteractionController$1 $r1;
        com.android.uiautomator.core.InteractionController$WaitForAnyEventPredicate $r2;
        android.view.accessibility.AccessibilityEvent $r3;
        boolean z0;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        l3 := @parameter3: long;

        $r1 = new com.android.uiautomator.core.InteractionController$1;

        specialinvoke $r1.<com.android.uiautomator.core.InteractionController$1: void <init>(com.android.uiautomator.core.InteractionController,int,int)>(r0, i0, i1);

        $r2 = new com.android.uiautomator.core.InteractionController$WaitForAnyEventPredicate;

        specialinvoke $r2.<com.android.uiautomator.core.InteractionController$WaitForAnyEventPredicate: void <init>(com.android.uiautomator.core.InteractionController,int)>(r0, i2);

        $r3 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: android.view.accessibility.AccessibilityEvent runAndWaitForEvents(java.lang.Runnable,android.app.UiAutomation$AccessibilityEventFilter,long)>($r1, $r2, l3);

        if $r3 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean sendText(java.lang.String)
    {
        com.android.uiautomator.core.InteractionController r0;
        java.lang.String r1, $r10, r11;
        long l0, $l2;
        int i1, i4;
        boolean $z0, $z1;
        android.view.KeyCharacterMap $r2;
        char[] $r3;
        com.android.uiautomator.core.Configurator $r4;
        android.view.KeyEvent $r5, r14;
        java.lang.StringBuilder $r6;
        android.view.KeyEvent[] r13;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        r11 := @parameter0: java.lang.String;

        $z0 = <com.android.uiautomator.core.InteractionController: boolean DEBUG>;

        if $z0 == 0 goto label1;

        r1 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendText (");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r1, $r10);

     label1:
        $r2 = r0.<com.android.uiautomator.core.InteractionController: android.view.KeyCharacterMap mKeyCharacterMap>;

        $r3 = virtualinvoke r11.<java.lang.String: char[] toCharArray()>();

        r13 = virtualinvoke $r2.<android.view.KeyCharacterMap: android.view.KeyEvent[] getEvents(char[])>($r3);

        if r13 == null goto label4;

        $r4 = staticinvoke <com.android.uiautomator.core.Configurator: com.android.uiautomator.core.Configurator getInstance()>();

        l0 = virtualinvoke $r4.<com.android.uiautomator.core.Configurator: long getKeyInjectionDelay()>();

        i1 = lengthof r13;

        i4 = 0;

     label2:
        if i4 >= i1 goto label4;

        r14 = r13[i4];

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r5 = staticinvoke <android.view.KeyEvent: android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int)>(r14, $l2, 0);

        $z1 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean injectEventSync(android.view.InputEvent)>($r5);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        staticinvoke <android.os.SystemClock: void sleep(long)>(l0);

        i4 = i4 + 1;

        goto label2;

     label4:
        return 1;
    }

    public void setRotationLeft()
    {
        com.android.uiautomator.core.InteractionController r0;
        com.android.uiautomator.core.UiAutomatorBridge $r1;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        $r1 = r0.<com.android.uiautomator.core.InteractionController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        virtualinvoke $r1.<com.android.uiautomator.core.UiAutomatorBridge: boolean setRotation(int)>(1);

        return;
    }

    public void setRotationNatural()
    {
        com.android.uiautomator.core.InteractionController r0;
        com.android.uiautomator.core.UiAutomatorBridge $r1;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        $r1 = r0.<com.android.uiautomator.core.InteractionController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        virtualinvoke $r1.<com.android.uiautomator.core.UiAutomatorBridge: boolean setRotation(int)>(0);

        return;
    }

    public void setRotationRight()
    {
        com.android.uiautomator.core.InteractionController r0;
        com.android.uiautomator.core.UiAutomatorBridge $r1;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        $r1 = r0.<com.android.uiautomator.core.InteractionController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        virtualinvoke $r1.<com.android.uiautomator.core.UiAutomatorBridge: boolean setRotation(int)>(3);

        return;
    }

    public boolean sleepDevice() throws android.os.RemoteException
    {
        com.android.uiautomator.core.InteractionController r0;
        boolean $z0;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        $z0 = virtualinvoke r0.<com.android.uiautomator.core.InteractionController: boolean isScreenOn()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.uiautomator.core.InteractionController: boolean sendKey(int,int)>(26, 0);

        return 1;

     label1:
        return 0;
    }

    public boolean swipe(int, int, int, int, int)
    {
        com.android.uiautomator.core.InteractionController r0;
        int i0, i1, i2, i3, i4;
        boolean $z0;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        $z0 = virtualinvoke r0.<com.android.uiautomator.core.InteractionController: boolean swipe(int,int,int,int,int,boolean)>(i0, i1, i2, i3, i4, 0);

        return $z0;
    }

    public boolean swipe(int, int, int, int, int, boolean)
    {
        com.android.uiautomator.core.InteractionController r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, i11, i13, i14;
        boolean z0, $z1, $z2, $z3, z4, z5;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        com.android.uiautomator.core.UiAutomatorBridge $r1;
        long $l10;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i11 := @parameter4: int;

        z0 := @parameter5: boolean;

        i13 = i11;

        if i11 != 0 goto label1;

        i13 = 1;

     label1:
        $i4 = i2 - i0;

        $d3 = (double) $i4;

        $d2 = (double) i13;

        d0 = $d3 / $d2;

        $i5 = i3 - i1;

        $d5 = (double) $i5;

        $d4 = (double) i13;

        d1 = $d5 / $d4;

        z4 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean touchDown(int,int)>(i0, i1);

        if z0 == 0 goto label2;

        $r1 = r0.<com.android.uiautomator.core.InteractionController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        $l10 = virtualinvoke $r1.<com.android.uiautomator.core.UiAutomatorBridge: long getSystemLongPressTime()>();

        staticinvoke <android.os.SystemClock: void sleep(long)>($l10);

     label2:
        i14 = 1;

     label3:
        z5 = z4;

        if i14 >= i13 goto label5;

        $d6 = (double) i14;

        $d7 = $d6 * d0;

        $i6 = (int) $d7;

        $i9 = $i6 + i0;

        $d8 = (double) i14;

        $d9 = $d8 * d1;

        $i7 = (int) $d9;

        $i8 = $i7 + i1;

        $z3 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean touchMove(int,int)>($i9, $i8);

        z4 = z4 & $z3;

        if z4 != 0 goto label4;

        z5 = z4;

        goto label5;

     label4:
        staticinvoke <android.os.SystemClock: void sleep(long)>(5L);

        i14 = i14 + 1;

        goto label3;

     label5:
        if z0 == 0 goto label6;

        staticinvoke <android.os.SystemClock: void sleep(long)>(100L);

     label6:
        $z1 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean touchUp(int,int)>(i2, i3);

        $z2 = z5 & $z1;

        return $z2;
    }

    public boolean swipe(android.graphics.Point[], int)
    {
        com.android.uiautomator.core.InteractionController r0;
        android.graphics.Point[] r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28, i29, i30;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        android.graphics.Point $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        boolean $z0, $z1, $z2, z3, z4;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        r1 := @parameter0: android.graphics.Point[];

        i0 := @parameter1: int;

        i28 = i0;

        if i0 != 0 goto label1;

        i28 = 1;

     label1:
        i1 = i28;

        $i2 = lengthof r1;

        if $i2 != 0 goto label2;

        return 0;

     label2:
        $r2 = r1[0];

        $i4 = $r2.<android.graphics.Point: int x>;

        $r3 = r1[0];

        $i3 = $r3.<android.graphics.Point: int y>;

        z3 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean touchDown(int,int)>($i4, $i3);

        i29 = 0;

     label3:
        $i5 = lengthof r1;

        if i29 >= $i5 goto label8;

        z4 = z3;

        $i13 = i29 + 1;

        $i12 = lengthof r1;

        if $i13 >= $i12 goto label7;

        $i14 = i29 + 1;

        $r6 = r1[$i14];

        $i16 = $r6.<android.graphics.Point: int x>;

        $r7 = r1[i29];

        $i15 = $r7.<android.graphics.Point: int x>;

        $i17 = $i16 - $i15;

        $d3 = (double) $i17;

        $d2 = (double) i1;

        d0 = $d3 / $d2;

        $i18 = i29 + 1;

        $r8 = r1[$i18];

        $i20 = $r8.<android.graphics.Point: int y>;

        $r9 = r1[i29];

        $i19 = $r9.<android.graphics.Point: int y>;

        $i21 = $i20 - $i19;

        $d5 = (double) $i21;

        $d4 = (double) i1;

        d1 = $d5 / $d4;

        i30 = 1;

     label4:
        if i30 >= i0 goto label6;

        $r10 = r1[i29];

        $i23 = $r10.<android.graphics.Point: int x>;

        $d6 = (double) i30;

        $d7 = $d6 * d0;

        $i22 = (int) $d7;

        $i27 = $i23 + $i22;

        $r11 = r1[i29];

        $i25 = $r11.<android.graphics.Point: int y>;

        $d8 = (double) i30;

        $d9 = $d8 * d1;

        $i24 = (int) $d9;

        $i26 = $i25 + $i24;

        $z2 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean touchMove(int,int)>($i27, $i26);

        z3 = z3 & $z2;

        if z3 != 0 goto label5;

        z4 = z3;

        goto label7;

     label5:
        staticinvoke <android.os.SystemClock: void sleep(long)>(5L);

        i30 = i30 + 1;

        goto label4;

     label6:
        z4 = z3;

     label7:
        i29 = i29 + 1;

        z3 = z4;

        goto label3;

     label8:
        $i6 = lengthof r1;

        $i7 = $i6 - 1;

        $r4 = r1[$i7];

        $i11 = $r4.<android.graphics.Point: int x>;

        $i8 = lengthof r1;

        $i9 = $i8 - 1;

        $r5 = r1[$i9];

        $i10 = $r5.<android.graphics.Point: int y>;

        $z0 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean touchUp(int,int)>($i11, $i10);

        $z1 = z3 & $z0;

        return $z1;
    }

    public boolean toggleRecentApps()
    {
        com.android.uiautomator.core.InteractionController r0;
        com.android.uiautomator.core.UiAutomatorBridge $r1;
        boolean $z0;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        $r1 = r0.<com.android.uiautomator.core.InteractionController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        $z0 = virtualinvoke $r1.<com.android.uiautomator.core.UiAutomatorBridge: boolean performGlobalAction(int)>(3);

        return $z0;
    }

    public void unfreezeRotation()
    {
        com.android.uiautomator.core.InteractionController r0;
        com.android.uiautomator.core.UiAutomatorBridge $r1;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        $r1 = r0.<com.android.uiautomator.core.InteractionController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        virtualinvoke $r1.<com.android.uiautomator.core.UiAutomatorBridge: boolean setRotation(int)>(-2);

        return;
    }

    public boolean wakeDevice() throws android.os.RemoteException
    {
        com.android.uiautomator.core.InteractionController r0;
        boolean $z0;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        $z0 = virtualinvoke r0.<com.android.uiautomator.core.InteractionController: boolean isScreenOn()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.android.uiautomator.core.InteractionController: boolean sendKey(int,int)>(26, 0);

        return 1;

     label1:
        return 0;
    }
}
