class com.android.uiautomator.core.QueryController extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final java.lang.String LOG_TAG;
    private static final boolean VERBOSE;
    private java.lang.String mLastActivityName;
    private java.lang.String mLastTraversedText;
    private final java.lang.Object mLock;
    private int mLogIndent;
    private int mLogParentIndent;
    private int mPatternCounter;
    private int mPatternIndexer;
    private final com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge;

    static void <clinit>()
    {
        java.lang.String r0, $r2;
        java.lang.Class $r1;
        boolean $z0, $z1;

        $r1 = class "Lcom/android/uiautomator/core/QueryController;";

        r0 = virtualinvoke $r1.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG> = r0;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>(r0, 3);

        <com.android.uiautomator.core.QueryController: boolean DEBUG> = $z0;

        $r2 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>($r2, 2);

        <com.android.uiautomator.core.QueryController: boolean VERBOSE> = $z1;

        return;
    }

    public void <init>(com.android.uiautomator.core.UiAutomatorBridge)
    {
        com.android.uiautomator.core.QueryController r0;
        com.android.uiautomator.core.UiAutomatorBridge r1;
        java.lang.Object $r2;
        com.android.uiautomator.core.QueryController$1 $r3;

        r0 := @this: com.android.uiautomator.core.QueryController;

        r1 := @parameter0: com.android.uiautomator.core.UiAutomatorBridge;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<com.android.uiautomator.core.QueryController: java.lang.Object mLock> = $r2;

        r0.<com.android.uiautomator.core.QueryController: java.lang.String mLastActivityName> = null;

        r0.<com.android.uiautomator.core.QueryController: int mPatternCounter> = 0;

        r0.<com.android.uiautomator.core.QueryController: int mPatternIndexer> = 0;

        r0.<com.android.uiautomator.core.QueryController: int mLogIndent> = 0;

        r0.<com.android.uiautomator.core.QueryController: int mLogParentIndent> = 0;

        r0.<com.android.uiautomator.core.QueryController: java.lang.String mLastTraversedText> = "";

        r0.<com.android.uiautomator.core.QueryController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge> = r1;

        $r3 = new com.android.uiautomator.core.QueryController$1;

        specialinvoke $r3.<com.android.uiautomator.core.QueryController$1: void <init>(com.android.uiautomator.core.QueryController)>(r0);

        virtualinvoke r1.<com.android.uiautomator.core.UiAutomatorBridge: void setOnAccessibilityEventListener(android.app.UiAutomation$OnAccessibilityEventListener)>($r3);

        return;
    }

    static java.lang.Object access$000(com.android.uiautomator.core.QueryController)
    {
        com.android.uiautomator.core.QueryController r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.uiautomator.core.QueryController;

        $r1 = r0.<com.android.uiautomator.core.QueryController: java.lang.Object mLock>;

        return $r1;
    }

    static java.lang.String access$102(com.android.uiautomator.core.QueryController, java.lang.String)
    {
        com.android.uiautomator.core.QueryController r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.uiautomator.core.QueryController;

        r1 := @parameter1: java.lang.String;

        r0.<com.android.uiautomator.core.QueryController: java.lang.String mLastActivityName> = r1;

        return r1;
    }

    static java.lang.String access$200(com.android.uiautomator.core.QueryController)
    {
        com.android.uiautomator.core.QueryController r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.uiautomator.core.QueryController;

        $r1 = r0.<com.android.uiautomator.core.QueryController: java.lang.String mLastTraversedText>;

        return $r1;
    }

    static java.lang.String access$202(com.android.uiautomator.core.QueryController, java.lang.String)
    {
        com.android.uiautomator.core.QueryController r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.uiautomator.core.QueryController;

        r1 := @parameter1: java.lang.String;

        r0.<com.android.uiautomator.core.QueryController: java.lang.String mLastTraversedText> = r1;

        return r1;
    }

    static boolean access$300()
    {
        boolean $z0;

        $z0 = <com.android.uiautomator.core.QueryController: boolean DEBUG>;

        return $z0;
    }

    static java.lang.String access$400()
    {
        java.lang.String $r0;

        $r0 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        return $r0;
    }

    private android.view.accessibility.AccessibilityNodeInfo findNodePatternRecursive(com.android.uiautomator.core.UiSelector, android.view.accessibility.AccessibilityNodeInfo, int, com.android.uiautomator.core.UiSelector)
    {
        com.android.uiautomator.core.QueryController r0;
        android.view.accessibility.AccessibilityNodeInfo r1, r35, r37, r38, r39;
        com.android.uiautomator.core.UiSelector r2, r33, r34, r36;
        int i0, $i4, $i5, $i7, $i8, $i11, $i12, $i13, $i14, $i15, $i16, i19, i20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, z10;
        java.lang.Object[] $r3, $r7, $r12, $r18, $r23, $r28;
        java.lang.String $r4, $r5, $r6, $r8, $r11, $r13, $r14, $r15, $r16, $r17, $r19, $r20, $r21, $r22, $r24, $r25, $r26, $r27, $r29, $r30, $r31, $r32;
        java.lang.Integer $r9, $r10;

        r0 := @this: com.android.uiautomator.core.QueryController;

        r33 := @parameter0: com.android.uiautomator.core.UiSelector;

        r1 := @parameter1: android.view.accessibility.AccessibilityNodeInfo;

        i19 := @parameter2: int;

        r2 := @parameter3: com.android.uiautomator.core.UiSelector;

        r34 = r33;

        r35 = r1;

        $z0 = virtualinvoke r33.<com.android.uiautomator.core.UiSelector: boolean isMatchFor(android.view.accessibility.AccessibilityNodeInfo,int)>(r1, i19);

        if $z0 == 0 goto label08;

        $z3 = virtualinvoke r33.<com.android.uiautomator.core.UiSelector: boolean isLeaf()>();

        if $z3 == 0 goto label04;

        $i11 = r0.<com.android.uiautomator.core.QueryController: int mPatternIndexer>;

        if $i11 != 0 goto label02;

        $z8 = <com.android.uiautomator.core.QueryController: boolean DEBUG>;

        if $z8 == 0 goto label01;

        $r29 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        $r28 = newarray (java.lang.Object)[1];

        $r30 = virtualinvoke r33.<com.android.uiautomator.core.UiSelector: java.lang.String dumpToString(boolean)>(0);

        $r28[0] = $r30;

        $r31 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s", $r28);

        $r32 = specialinvoke r0.<com.android.uiautomator.core.QueryController: java.lang.String formatLog(java.lang.String)>($r31);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r29, $r32);

     label01:
        return r1;

     label02:
        $z7 = <com.android.uiautomator.core.QueryController: boolean DEBUG>;

        if $z7 == 0 goto label03;

        $r24 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        $r23 = newarray (java.lang.Object)[1];

        $r25 = virtualinvoke r33.<com.android.uiautomator.core.UiSelector: java.lang.String dumpToString(boolean)>(0);

        $r23[0] = $r25;

        $r26 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s", $r23);

        $r27 = specialinvoke r0.<com.android.uiautomator.core.QueryController: java.lang.String formatLog(java.lang.String)>($r26);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r24, $r27);

     label03:
        $i12 = r0.<com.android.uiautomator.core.QueryController: int mPatternCounter>;

        $i13 = $i12 + 1;

        r0.<com.android.uiautomator.core.QueryController: int mPatternCounter> = $i13;

        $i14 = r0.<com.android.uiautomator.core.QueryController: int mPatternIndexer>;

        $i15 = $i14 - 1;

        r0.<com.android.uiautomator.core.QueryController: int mPatternIndexer> = $i15;

        r34 = r2;

        $i16 = r0.<com.android.uiautomator.core.QueryController: int mLogParentIndent>;

        r0.<com.android.uiautomator.core.QueryController: int mLogIndent> = $i16;

        r35 = r1;

        goto label08;

     label04:
        $z4 = <com.android.uiautomator.core.QueryController: boolean DEBUG>;

        if $z4 == 0 goto label05;

        $r19 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        $r18 = newarray (java.lang.Object)[1];

        $r20 = virtualinvoke r33.<com.android.uiautomator.core.UiSelector: java.lang.String dumpToString(boolean)>(0);

        $r18[0] = $r20;

        $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s", $r18);

        $r22 = specialinvoke r0.<com.android.uiautomator.core.QueryController: java.lang.String formatLog(java.lang.String)>($r21);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r19, $r22);

     label05:
        $z5 = virtualinvoke r33.<com.android.uiautomator.core.UiSelector: boolean hasChildSelector()>();

        if $z5 == 0 goto label06;

        $i7 = r0.<com.android.uiautomator.core.QueryController: int mLogIndent>;

        $i8 = $i7 + 1;

        r0.<com.android.uiautomator.core.QueryController: int mLogIndent> = $i8;

        r36 = virtualinvoke r33.<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector getChildSelector()>();

        r34 = r36;

        r35 = r1;

        if r36 != null goto label08;

        $r17 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r17, "Error: A child selector without content");

        return null;

     label06:
        r34 = r33;

        r35 = r1;

        $z6 = virtualinvoke r33.<com.android.uiautomator.core.UiSelector: boolean hasParentSelector()>();

        if $z6 == 0 goto label08;

        $i4 = r0.<com.android.uiautomator.core.QueryController: int mLogIndent>;

        $i5 = $i4 + 1;

        r0.<com.android.uiautomator.core.QueryController: int mLogIndent> = $i5;

        r34 = virtualinvoke r33.<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector getParentSelector()>();

        if r34 != null goto label07;

        $r16 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r16, "Error: A parent selector without content");

        return null;

     label07:
        r37 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getParent()>();

        r35 = r37;

        if r37 != null goto label08;

        return null;

     label08:
        i0 = virtualinvoke r35.<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>();

        z9 = 0;

        i20 = 0;

     label09:
        if i20 >= i0 goto label14;

        r38 = virtualinvoke r35.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getChild(int)>(i20);

        if r38 != null goto label11;

        $r8 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        $r7 = newarray (java.lang.Object)[2];

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i20);

        $r7[0] = $r9;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7[1] = $r10;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("AccessibilityNodeInfo returned a null child (%d of %d)", $r7);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r8, $r11);

        if z9 != 0 goto label10;

        $r13 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        $r12 = newarray (java.lang.Object)[1];

        $r14 = virtualinvoke r35.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String toString()>();

        $r12[0] = $r14;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("parent = %s", $r12);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r13, $r15);

     label10:
        z10 = 1;

        goto label13;

     label11:
        $z1 = virtualinvoke r38.<android.view.accessibility.AccessibilityNodeInfo: boolean isVisibleToUser()>();

        if $z1 != 0 goto label12;

        z10 = z9;

        $z2 = <com.android.uiautomator.core.QueryController: boolean DEBUG>;

        if $z2 == 0 goto label13;

        $r4 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        $r3 = newarray (java.lang.Object)[1];

        $r5 = virtualinvoke r38.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String toString()>();

        $r3[0] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Skipping invisible child: %s", $r3);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r4, $r6);

        z10 = z9;

        goto label13;

     label12:
        r39 = specialinvoke r0.<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo findNodePatternRecursive(com.android.uiautomator.core.UiSelector,android.view.accessibility.AccessibilityNodeInfo,int,com.android.uiautomator.core.UiSelector)>(r34, r38, i20, r2);

        z10 = z9;

        if r39 == null goto label13;

        return r39;

     label13:
        i20 = i20 + 1;

        z9 = z10;

        goto label09;

     label14:
        return null;
    }

    private android.view.accessibility.AccessibilityNodeInfo findNodeRegularRecursive(com.android.uiautomator.core.UiSelector, android.view.accessibility.AccessibilityNodeInfo, int)
    {
        com.android.uiautomator.core.QueryController r0;
        android.view.accessibility.AccessibilityNodeInfo r1, r24, r26, r27, r28;
        int i0, $i4, $i5, $i7, $i8, i11, i12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, z8;
        java.lang.Object[] $r2, $r6, $r11, $r17;
        java.lang.String $r3, $r4, $r5, $r7, $r10, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r20, $r21;
        java.lang.Integer $r8, $r9;
        com.android.uiautomator.core.UiSelector r22, r23, r25;

        r0 := @this: com.android.uiautomator.core.QueryController;

        r22 := @parameter0: com.android.uiautomator.core.UiSelector;

        r1 := @parameter1: android.view.accessibility.AccessibilityNodeInfo;

        i11 := @parameter2: int;

        r23 = r22;

        r24 = r1;

        $z0 = virtualinvoke r22.<com.android.uiautomator.core.UiSelector: boolean isMatchFor(android.view.accessibility.AccessibilityNodeInfo,int)>(r1, i11);

        if $z0 == 0 goto label05;

        $z3 = <com.android.uiautomator.core.QueryController: boolean DEBUG>;

        if $z3 == 0 goto label01;

        $r18 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        $r17 = newarray (java.lang.Object)[1];

        $r19 = virtualinvoke r22.<com.android.uiautomator.core.UiSelector: java.lang.String dumpToString(boolean)>(0);

        $r17[0] = $r19;

        $r20 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s", $r17);

        $r21 = specialinvoke r0.<com.android.uiautomator.core.QueryController: java.lang.String formatLog(java.lang.String)>($r20);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r18, $r21);

     label01:
        $z4 = virtualinvoke r22.<com.android.uiautomator.core.UiSelector: boolean isLeaf()>();

        if $z4 == 0 goto label02;

        return r1;

     label02:
        $z5 = virtualinvoke r22.<com.android.uiautomator.core.UiSelector: boolean hasChildSelector()>();

        if $z5 == 0 goto label03;

        $i7 = r0.<com.android.uiautomator.core.QueryController: int mLogIndent>;

        $i8 = $i7 + 1;

        r0.<com.android.uiautomator.core.QueryController: int mLogIndent> = $i8;

        r25 = virtualinvoke r22.<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector getChildSelector()>();

        r23 = r25;

        r24 = r1;

        if r25 != null goto label05;

        $r16 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r16, "Error: A child selector without content");

        return null;

     label03:
        r23 = r22;

        r24 = r1;

        $z6 = virtualinvoke r22.<com.android.uiautomator.core.UiSelector: boolean hasParentSelector()>();

        if $z6 == 0 goto label05;

        $i4 = r0.<com.android.uiautomator.core.QueryController: int mLogIndent>;

        $i5 = $i4 + 1;

        r0.<com.android.uiautomator.core.QueryController: int mLogIndent> = $i5;

        r23 = virtualinvoke r22.<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector getParentSelector()>();

        if r23 != null goto label04;

        $r15 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r15, "Error: A parent selector without content");

        return null;

     label04:
        r26 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getParent()>();

        r24 = r26;

        if r26 != null goto label05;

        return null;

     label05:
        i0 = virtualinvoke r24.<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>();

        z7 = 0;

        i12 = 0;

     label06:
        if i12 >= i0 goto label11;

        r27 = virtualinvoke r24.<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getChild(int)>(i12);

        if r27 != null goto label08;

        $r7 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        $r6 = newarray (java.lang.Object)[2];

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i12);

        $r6[0] = $r8;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6[1] = $r9;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("AccessibilityNodeInfo returned a null child (%d of %d)", $r6);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r7, $r10);

        if z7 != 0 goto label07;

        $r12 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        $r11 = newarray (java.lang.Object)[1];

        $r13 = virtualinvoke r24.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String toString()>();

        $r11[0] = $r13;

        $r14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("parent = %s", $r11);

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r12, $r14);

     label07:
        z8 = 1;

        goto label10;

     label08:
        $z1 = virtualinvoke r27.<android.view.accessibility.AccessibilityNodeInfo: boolean isVisibleToUser()>();

        if $z1 != 0 goto label09;

        z8 = z7;

        $z2 = <com.android.uiautomator.core.QueryController: boolean VERBOSE>;

        if $z2 == 0 goto label10;

        $r3 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        $r2 = newarray (java.lang.Object)[1];

        $r4 = virtualinvoke r27.<android.view.accessibility.AccessibilityNodeInfo: java.lang.String toString()>();

        $r2[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Skipping invisible child: %s", $r2);

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r3, $r5);

        z8 = z7;

        goto label10;

     label09:
        r28 = specialinvoke r0.<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo findNodeRegularRecursive(com.android.uiautomator.core.UiSelector,android.view.accessibility.AccessibilityNodeInfo,int)>(r23, r27, i12);

        z8 = z7;

        if r28 == null goto label10;

        return r28;

     label10:
        i12 = i12 + 1;

        z7 = z8;

        goto label06;

     label11:
        return null;
    }

    private java.lang.String formatLog(java.lang.String)
    {
        com.android.uiautomator.core.QueryController r0;
        java.lang.String r1, $r6, $r8, $r11;
        int i0, $i1, $i2, i3;
        java.lang.StringBuilder $r3;
        java.lang.Object[] $r4, $r9;
        java.lang.Integer $r5, $r10;

        r0 := @this: com.android.uiautomator.core.QueryController;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        i3 = 0;

     label1:
        i0 = r0.<com.android.uiautomator.core.QueryController: int mLogIndent>;

        if i3 >= i0 goto label2;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". . ");

        i3 = i3 + 1;

        goto label1;

     label2:
        if i0 <= 0 goto label3;

        $r9 = newarray (java.lang.Object)[2];

        $i2 = r0.<com.android.uiautomator.core.QueryController: int mPatternCounter>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r9[0] = $r10;

        $r9[1] = r1;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(". . [%d]: %s", $r9);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        goto label4;

     label3:
        $r4 = newarray (java.lang.Object)[2];

        $i1 = r0.<com.android.uiautomator.core.QueryController: int mPatternCounter>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4[0] = $r5;

        $r4[1] = r1;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(". . [%d]: %s", $r4);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label4:
        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    private void initializeNewSearch()
    {
        com.android.uiautomator.core.QueryController r0;

        r0 := @this: com.android.uiautomator.core.QueryController;

        r0.<com.android.uiautomator.core.QueryController: int mPatternCounter> = 0;

        r0.<com.android.uiautomator.core.QueryController: int mPatternIndexer> = 0;

        r0.<com.android.uiautomator.core.QueryController: int mLogIndent> = 0;

        r0.<com.android.uiautomator.core.QueryController: int mLogParentIndent> = 0;

        return;
    }

    private android.view.accessibility.AccessibilityNodeInfo translateCompoundSelector(com.android.uiautomator.core.UiSelector, android.view.accessibility.AccessibilityNodeInfo, boolean)
    {
        com.android.uiautomator.core.QueryController r0;
        com.android.uiautomator.core.UiSelector r1, $r9, $r24, $r25, $r26;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.lang.Object[] $r2, $r15;
        java.lang.String $r3, $r4, $r8, $r12, $r14, $r16, $r18, $r21, $r23, r29, r33, r36;
        java.lang.StringBuilder $r5, $r10, $r19;
        int $i3;
        java.lang.Integer $r17;
        android.view.accessibility.AccessibilityNodeInfo r27, r28, r31, r32, r35;

        r0 := @this: com.android.uiautomator.core.QueryController;

        r1 := @parameter0: com.android.uiautomator.core.UiSelector;

        r27 := @parameter1: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter2: boolean;

        $z1 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: boolean hasContainerSelector()>();

        if $z1 == 0 goto label02;

        $r24 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector getContainerSelector()>();

        $z10 = virtualinvoke $r24.<com.android.uiautomator.core.UiSelector: boolean hasContainerSelector()>();

        if $z10 == 0 goto label01;

        $r26 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector getContainerSelector()>();

        r28 = specialinvoke r0.<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo translateCompoundSelector(com.android.uiautomator.core.UiSelector,android.view.accessibility.AccessibilityNodeInfo,boolean)>($r26, r27, 0);

        specialinvoke r0.<com.android.uiautomator.core.QueryController: void initializeNewSearch()>();

        goto label03;

     label01:
        $r25 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector getContainerSelector()>();

        r28 = specialinvoke r0.<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo translateReqularSelector(com.android.uiautomator.core.UiSelector,android.view.accessibility.AccessibilityNodeInfo)>($r25, r27);

        goto label03;

     label02:
        r28 = specialinvoke r0.<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo translateReqularSelector(com.android.uiautomator.core.UiSelector,android.view.accessibility.AccessibilityNodeInfo)>(r1, r27);

     label03:
        if r28 != null goto label05;

        $z9 = <com.android.uiautomator.core.QueryController: boolean DEBUG>;

        if $z9 == 0 goto label04;

        r29 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Container selector not found: ");

        $r21 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: java.lang.String dumpToString(boolean)>(0);

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r29, $r23);

     label04:
        return null;

     label05:
        r31 = r28;

        $z2 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: boolean hasPatternSelector()>();

        if $z2 == 0 goto label08;

        $r9 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector getPatternSelector()>();

        r32 = specialinvoke r0.<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo translatePatternSelector(com.android.uiautomator.core.UiSelector,android.view.accessibility.AccessibilityNodeInfo,boolean)>($r9, r28, z0);

        if z0 == 0 goto label06;

        $r16 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        $r15 = newarray (java.lang.Object)[2];

        $i3 = r0.<com.android.uiautomator.core.QueryController: int mPatternCounter>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r15[0] = $r17;

        $r15[1] = r1;

        $r18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Counted %d instances of: %s", $r15);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r16, $r18);

        return null;

     label06:
        r31 = r32;

        if r32 != null goto label08;

        $z8 = <com.android.uiautomator.core.QueryController: boolean DEBUG>;

        if $z8 == 0 goto label07;

        r33 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pattern selector not found: ");

        $r12 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: java.lang.String dumpToString(boolean)>(0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r33, $r14);

     label07:
        return null;

     label08:
        $z3 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: boolean hasContainerSelector()>();

        if $z3 != 0 goto label09;

        r35 = r31;

        $z7 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: boolean hasPatternSelector()>();

        if $z7 == 0 goto label11;

     label09:
        $z4 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: boolean hasChildSelector()>();

        if $z4 != 0 goto label10;

        r35 = r31;

        $z6 = virtualinvoke r1.<com.android.uiautomator.core.UiSelector: boolean hasParentSelector()>();

        if $z6 == 0 goto label11;

     label10:
        r35 = specialinvoke r0.<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo translateReqularSelector(com.android.uiautomator.core.UiSelector,android.view.accessibility.AccessibilityNodeInfo)>(r1, r31);

     label11:
        if r35 != null goto label13;

        $z5 = <com.android.uiautomator.core.QueryController: boolean DEBUG>;

        if $z5 == 0 goto label12;

        r36 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Object Not Found for selector ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r36, $r8);

     label12:
        return null;

     label13:
        $r3 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = r1;

        $r2[1] = r35;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Matched selector: %s <<==>> [%s]", $r2);

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r3, $r4);

        return r35;
    }

    private android.view.accessibility.AccessibilityNodeInfo translatePatternSelector(com.android.uiautomator.core.UiSelector, android.view.accessibility.AccessibilityNodeInfo, boolean)
    {
        com.android.uiautomator.core.QueryController r0;
        android.view.accessibility.AccessibilityNodeInfo r1, $r3;
        boolean z0, $z1;
        int i0, $i2, $i3;
        java.lang.String $r2, $r4;
        com.android.uiautomator.core.UiSelector r5, r6;

        r0 := @this: com.android.uiautomator.core.QueryController;

        r5 := @parameter0: com.android.uiautomator.core.UiSelector;

        r1 := @parameter1: android.view.accessibility.AccessibilityNodeInfo;

        z0 := @parameter2: boolean;

        $z1 = virtualinvoke r5.<com.android.uiautomator.core.UiSelector: boolean hasPatternSelector()>();

        if $z1 == 0 goto label4;

        if z0 == 0 goto label1;

        r0.<com.android.uiautomator.core.QueryController: int mPatternIndexer> = -1;

        goto label2;

     label1:
        $i2 = virtualinvoke r5.<com.android.uiautomator.core.UiSelector: int getInstance()>();

        r0.<com.android.uiautomator.core.QueryController: int mPatternIndexer> = $i2;

     label2:
        r6 = virtualinvoke r5.<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector getPatternSelector()>();

        if r6 != null goto label3;

        $r4 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r4, "Pattern portion of the selector is null or not defined");

        return null;

     label3:
        $i3 = r0.<com.android.uiautomator.core.QueryController: int mLogIndent>;

        i0 = $i3 + 1;

        r0.<com.android.uiautomator.core.QueryController: int mLogIndent> = i0;

        r0.<com.android.uiautomator.core.QueryController: int mLogParentIndent> = i0;

        $r3 = specialinvoke r0.<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo findNodePatternRecursive(com.android.uiautomator.core.UiSelector,android.view.accessibility.AccessibilityNodeInfo,int,com.android.uiautomator.core.UiSelector)>(r6, r1, 0, r6);

        return $r3;

     label4:
        $r2 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r2, "Selector must have a pattern selector defined");

        return null;
    }

    private android.view.accessibility.AccessibilityNodeInfo translateReqularSelector(com.android.uiautomator.core.UiSelector, android.view.accessibility.AccessibilityNodeInfo)
    {
        com.android.uiautomator.core.QueryController r0;
        com.android.uiautomator.core.UiSelector r1;
        android.view.accessibility.AccessibilityNodeInfo r2, $r3;

        r0 := @this: com.android.uiautomator.core.QueryController;

        r1 := @parameter0: com.android.uiautomator.core.UiSelector;

        r2 := @parameter1: android.view.accessibility.AccessibilityNodeInfo;

        $r3 = specialinvoke r0.<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo findNodeRegularRecursive(com.android.uiautomator.core.UiSelector,android.view.accessibility.AccessibilityNodeInfo,int)>(r1, r2, 0);

        return $r3;
    }

    public void clearLastTraversedText()
    {
        com.android.uiautomator.core.QueryController r0;
        java.lang.Object r1;
        com.android.uiautomator.core.UiAutomatorBridge $r3;
        java.lang.Throwable $r4;

        r0 := @this: com.android.uiautomator.core.QueryController;

        $r3 = r0.<com.android.uiautomator.core.QueryController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        virtualinvoke $r3.<com.android.uiautomator.core.UiAutomatorBridge: void waitForIdle()>();

        r1 = r0.<com.android.uiautomator.core.QueryController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r0.<com.android.uiautomator.core.QueryController: java.lang.String mLastTraversedText> = "";

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(com.android.uiautomator.core.UiSelector)
    {
        com.android.uiautomator.core.QueryController r0;
        com.android.uiautomator.core.UiSelector r1;
        android.view.accessibility.AccessibilityNodeInfo $r2;

        r0 := @this: com.android.uiautomator.core.QueryController;

        r1 := @parameter0: com.android.uiautomator.core.UiSelector;

        $r2 = virtualinvoke r0.<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(com.android.uiautomator.core.UiSelector,boolean)>(r1, 0);

        return $r2;
    }

    protected android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(com.android.uiautomator.core.UiSelector, boolean)
    {
        com.android.uiautomator.core.QueryController r0;
        boolean z0, $z1;
        com.android.uiautomator.core.UiSelector r1, r9;
        com.android.uiautomator.core.UiAutomatorBridge $r2;
        java.lang.String $r3, $r7, r10;
        java.lang.StringBuilder $r4;
        java.lang.Throwable $r8;
        java.lang.Object r12;
        android.view.accessibility.AccessibilityNodeInfo r13, r14;

        r0 := @this: com.android.uiautomator.core.QueryController;

        r9 := @parameter0: com.android.uiautomator.core.UiSelector;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.android.uiautomator.core.QueryController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        virtualinvoke $r2.<com.android.uiautomator.core.UiAutomatorBridge: void waitForIdle()>();

        specialinvoke r0.<com.android.uiautomator.core.QueryController: void initializeNewSearch()>();

        $z1 = <com.android.uiautomator.core.QueryController: boolean DEBUG>;

        if $z1 == 0 goto label01;

        r10 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Searching: ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>(r10, $r7);

     label01:
        r12 = r0.<com.android.uiautomator.core.QueryController: java.lang.Object mLock>;

        entermonitor r12;

     label02:
        r13 = virtualinvoke r0.<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo getRootNode()>();

     label03:
        if r13 != null goto label06;

     label04:
        $r3 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r3, "Cannot proceed when root node is null. Aborted search");

        exitmonitor r12;

     label05:
        return null;

     label06:
        r1 = new com.android.uiautomator.core.UiSelector;

        specialinvoke r1.<com.android.uiautomator.core.UiSelector: void <init>(com.android.uiautomator.core.UiSelector)>(r9);

        r14 = specialinvoke r0.<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo translateCompoundSelector(com.android.uiautomator.core.UiSelector,android.view.accessibility.AccessibilityNodeInfo,boolean)>(r1, r13, z0);

        exitmonitor r12;

     label07:
        return r14;

     label08:
        $r8 := @caughtexception;

     label09:
        exitmonitor r12;

     label10:
        throw $r8;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label09 to label10 with label08;
    }

    public android.view.accessibility.AccessibilityNodeInfo getAccessibilityRootNode()
    {
        com.android.uiautomator.core.QueryController r0;
        com.android.uiautomator.core.UiAutomatorBridge $r1;
        android.view.accessibility.AccessibilityNodeInfo $r2;

        r0 := @this: com.android.uiautomator.core.QueryController;

        $r1 = r0.<com.android.uiautomator.core.QueryController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        $r2 = virtualinvoke $r1.<com.android.uiautomator.core.UiAutomatorBridge: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow()>();

        return $r2;
    }

    public java.lang.String getCurrentActivityName()
    {
        com.android.uiautomator.core.QueryController r0;
        java.lang.Object r1;
        com.android.uiautomator.core.UiAutomatorBridge $r2;
        java.lang.Throwable $r3;
        java.lang.String r4;

        r0 := @this: com.android.uiautomator.core.QueryController;

        $r2 = r0.<com.android.uiautomator.core.QueryController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        virtualinvoke $r2.<com.android.uiautomator.core.UiAutomatorBridge: void waitForIdle()>();

        r1 = r0.<com.android.uiautomator.core.QueryController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        r4 = r0.<com.android.uiautomator.core.QueryController: java.lang.String mLastActivityName>;

        exitmonitor r1;

     label2:
        return r4;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public java.lang.String getCurrentPackageName()
    {
        com.android.uiautomator.core.QueryController r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        com.android.uiautomator.core.UiAutomatorBridge $r2;
        java.lang.CharSequence $r3, $r4;
        java.lang.String r5;

        r0 := @this: com.android.uiautomator.core.QueryController;

        $r2 = r0.<com.android.uiautomator.core.QueryController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        virtualinvoke $r2.<com.android.uiautomator.core.UiAutomatorBridge: void waitForIdle()>();

        r1 = virtualinvoke r0.<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo getRootNode()>();

        r5 = null;

        if r1 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPackageName()>();

        if $r3 == null goto label2;

        $r4 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPackageName()>();

        r5 = interfaceinvoke $r4.<java.lang.CharSequence: java.lang.String toString()>();

     label2:
        return r5;
    }

    public java.lang.String getLastTraversedText()
    {
        com.android.uiautomator.core.QueryController r0;
        java.lang.Object r1;
        com.android.uiautomator.core.UiAutomatorBridge $r2;
        java.lang.String $r3, r5;
        int $i0;
        java.lang.Throwable $r4;

        r0 := @this: com.android.uiautomator.core.QueryController;

        $r2 = r0.<com.android.uiautomator.core.QueryController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        virtualinvoke $r2.<com.android.uiautomator.core.UiAutomatorBridge: void waitForIdle()>();

        r1 = r0.<com.android.uiautomator.core.QueryController: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        $r3 = r0.<com.android.uiautomator.core.QueryController: java.lang.String mLastTraversedText>;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label3;

        r5 = r0.<com.android.uiautomator.core.QueryController: java.lang.String mLastTraversedText>;

        exitmonitor r1;

     label2:
        return r5;

     label3:
        exitmonitor r1;

     label4:
        return null;

     label5:
        $r4 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }

    public int getPatternCount(com.android.uiautomator.core.UiSelector)
    {
        com.android.uiautomator.core.QueryController r0;
        com.android.uiautomator.core.UiSelector r1;
        int $i0;

        r0 := @this: com.android.uiautomator.core.QueryController;

        r1 := @parameter0: com.android.uiautomator.core.UiSelector;

        virtualinvoke r0.<com.android.uiautomator.core.QueryController: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(com.android.uiautomator.core.UiSelector,boolean)>(r1, 1);

        $i0 = r0.<com.android.uiautomator.core.QueryController: int mPatternCounter>;

        return $i0;
    }

    protected android.view.accessibility.AccessibilityNodeInfo getRootNode()
    {
        com.android.uiautomator.core.QueryController r0;
        com.android.uiautomator.core.UiAutomatorBridge $r1;
        java.lang.String $r2;
        android.view.accessibility.AccessibilityNodeInfo r3;
        int i1;

        r0 := @this: com.android.uiautomator.core.QueryController;

        r3 = null;

        i1 = 0;

     label1:
        if i1 >= 4 goto label4;

        $r1 = r0.<com.android.uiautomator.core.QueryController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        r3 = virtualinvoke $r1.<com.android.uiautomator.core.UiAutomatorBridge: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow()>();

        if r3 == null goto label2;

        return r3;

     label2:
        if i1 >= 3 goto label3;

        $r2 = <com.android.uiautomator.core.QueryController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r2, "Got null root node from accessibility - Retrying...");

        staticinvoke <android.os.SystemClock: void sleep(long)>(250L);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return r3;
    }
}
