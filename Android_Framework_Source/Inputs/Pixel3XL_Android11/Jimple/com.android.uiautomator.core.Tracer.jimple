public class com.android.uiautomator.core.Tracer extends java.lang.Object
{
    private static final int CALLER_LOCATION;
    private static final int METHOD_TO_TRACE_LOCATION;
    private static final int MIN_STACK_TRACE_LENGTH;
    private static final java.lang.String UIAUTOMATOR_PACKAGE;
    private static final java.lang.String UNKNOWN_METHOD_STRING;
    private static com.android.uiautomator.core.Tracer mInstance;
    private com.android.uiautomator.core.Tracer$Mode mCurrentMode;
    private java.io.File mOutputFile;
    private java.util.List mSinks;

    static void <clinit>()
    {
        <com.android.uiautomator.core.Tracer: java.lang.String UNKNOWN_METHOD_STRING> = "(unknown method)";

        <com.android.uiautomator.core.Tracer: java.lang.String UIAUTOMATOR_PACKAGE> = "com.android.uiautomator.core";

        <com.android.uiautomator.core.Tracer: int MIN_STACK_TRACE_LENGTH> = 7;

        <com.android.uiautomator.core.Tracer: int METHOD_TO_TRACE_LOCATION> = 5;

        <com.android.uiautomator.core.Tracer: int CALLER_LOCATION> = 6;

        <com.android.uiautomator.core.Tracer: com.android.uiautomator.core.Tracer mInstance> = null;

        return;
    }

    public void <init>()
    {
        com.android.uiautomator.core.Tracer r0;
        com.android.uiautomator.core.Tracer$Mode $r1;
        java.util.ArrayList $r2;

        r0 := @this: com.android.uiautomator.core.Tracer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <com.android.uiautomator.core.Tracer$Mode: com.android.uiautomator.core.Tracer$Mode NONE>;

        r0.<com.android.uiautomator.core.Tracer: com.android.uiautomator.core.Tracer$Mode mCurrentMode> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.uiautomator.core.Tracer: java.util.List mSinks> = $r2;

        return;
    }

    private void closeSinks()
    {
        com.android.uiautomator.core.Tracer r0;
        java.util.Iterator r1;
        java.util.List $r2, $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.android.uiautomator.core.Tracer$TracerSink $r5;

        r0 := @this: com.android.uiautomator.core.Tracer;

        $r2 = r0.<com.android.uiautomator.core.Tracer: java.util.List mSinks>;

        r1 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.android.uiautomator.core.Tracer$TracerSink) $r4;

        interfaceinvoke $r5.<com.android.uiautomator.core.Tracer$TracerSink: void close()>();

        goto label1;

     label2:
        $r3 = r0.<com.android.uiautomator.core.Tracer: java.util.List mSinks>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        return;
    }

    private void doTrace(java.lang.Object[])
    {
        com.android.uiautomator.core.Tracer r0;
        java.lang.Object[] r1, $r5;
        java.lang.String r2, $r6, $r7;
        com.android.uiautomator.core.Tracer$Mode $r3, $r4;

        r0 := @this: com.android.uiautomator.core.Tracer;

        r1 := @parameter0: java.lang.Object[];

        $r4 = r0.<com.android.uiautomator.core.Tracer: com.android.uiautomator.core.Tracer$Mode mCurrentMode>;

        $r3 = <com.android.uiautomator.core.Tracer$Mode: com.android.uiautomator.core.Tracer$Mode NONE>;

        if $r4 != $r3 goto label1;

        return;

     label1:
        r2 = staticinvoke <com.android.uiautomator.core.Tracer: java.lang.String getCaller()>();

        if r2 != null goto label2;

        return;

     label2:
        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = r2;

        $r6 = staticinvoke <com.android.uiautomator.core.Tracer: java.lang.String join(java.lang.String,java.lang.Object[])>(", ", r1);

        $r5[1] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s (%s)", $r5);

        specialinvoke r0.<com.android.uiautomator.core.Tracer: void log(java.lang.String)>($r7);

        return;
    }

    private static java.lang.String getCaller()
    {
        java.lang.StackTraceElement r0, r14;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.Thread $r1;
        java.lang.String $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r12;
        boolean $z0;
        java.lang.Object[] $r5;
        java.lang.Integer $r11;
        java.lang.StackTraceElement[] r13;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r13 = virtualinvoke $r1.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        $i1 = lengthof r13;

        if $i1 >= 7 goto label1;

        return "(unknown method)";

     label1:
        r0 = r13[5];

        r14 = r13[6];

        $r2 = virtualinvoke r14.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("com.android.uiautomator.core");

        if $z0 == 0 goto label2;

        return null;

     label2:
        $r3 = virtualinvoke r0.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        i0 = virtualinvoke $r3.<java.lang.String: int lastIndexOf(int)>(46);

        i6 = i0;

        if i0 >= 0 goto label3;

        i6 = 0;

     label3:
        $i2 = i6 + 1;

        $r4 = virtualinvoke r0.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        $i3 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i2 < $i3 goto label4;

        return "(unknown method)";

     label4:
        $r5 = newarray (java.lang.Object)[5];

        $r6 = virtualinvoke r0.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        $i4 = i6 + 1;

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int)>($i4);

        $r5[0] = $r7;

        $r8 = virtualinvoke r0.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $r5[1] = $r8;

        $r9 = virtualinvoke r14.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $r5[2] = $r9;

        $r10 = virtualinvoke r14.<java.lang.StackTraceElement: java.lang.String getFileName()>();

        $r5[3] = $r10;

        $i5 = virtualinvoke r14.<java.lang.StackTraceElement: int getLineNumber()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r5[4] = $r11;

        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s.%s from %s() at %s:%d", $r5);

        return $r12;
    }

    public static com.android.uiautomator.core.Tracer getInstance()
    {
        com.android.uiautomator.core.Tracer $r0, $r1, $r2;

        $r0 = <com.android.uiautomator.core.Tracer: com.android.uiautomator.core.Tracer mInstance>;

        if $r0 != null goto label1;

        $r2 = new com.android.uiautomator.core.Tracer;

        specialinvoke $r2.<com.android.uiautomator.core.Tracer: void <init>()>();

        <com.android.uiautomator.core.Tracer: com.android.uiautomator.core.Tracer mInstance> = $r2;

     label1:
        $r1 = <com.android.uiautomator.core.Tracer: com.android.uiautomator.core.Tracer mInstance>;

        return $r1;
    }

    private static java.lang.String join(java.lang.String, java.lang.Object[])
    {
        java.lang.String r0, $r5, $r6, $r9;
        java.lang.Object[] r1;
        int $i0, $i1, i2;
        java.lang.StringBuilder $r3;
        java.lang.Object $r4, $r8;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        $i0 = lengthof r1;

        if $i0 != 0 goto label1;

        return "";

     label1:
        $r3 = new java.lang.StringBuilder;

        $r4 = r1[0];

        $r5 = staticinvoke <com.android.uiautomator.core.Tracer: java.lang.String objectToString(java.lang.Object)>($r4);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r5);

        i2 = 1;

     label2:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label3;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r8 = r1[i2];

        $r9 = staticinvoke <com.android.uiautomator.core.Tracer: java.lang.String objectToString(java.lang.Object)>($r8);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        i2 = i2 + 1;

        goto label2;

     label3:
        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private void log(java.lang.String)
    {
        com.android.uiautomator.core.Tracer r0;
        java.lang.String r1;
        java.util.Iterator r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.android.uiautomator.core.Tracer$TracerSink $r5;

        r0 := @this: com.android.uiautomator.core.Tracer;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.uiautomator.core.Tracer: java.util.List mSinks>;

        r2 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.android.uiautomator.core.Tracer$TracerSink) $r4;

        interfaceinvoke $r5.<com.android.uiautomator.core.Tracer$TracerSink: void log(java.lang.String)>(r1);

        goto label1;

     label2:
        return;
    }

    private static java.lang.String objectToString(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.Class $r1;
        boolean $z0, $z1;
        java.lang.String $r2, $r4;
        java.lang.Object[] $r3;

        r0 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label2;

        $z1 = r0 instanceof java.lang.Object[];

        if $z1 == 0 goto label1;

        $r3 = (java.lang.Object[]) r0;

        $r4 = staticinvoke <java.util.Arrays: java.lang.String deepToString(java.lang.Object[])>($r3);

        return $r4;

     label1:
        return "[...]";

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public static transient void trace(java.lang.Object[])
    {
        java.lang.Object[] r0;
        com.android.uiautomator.core.Tracer $r1;

        r0 := @parameter0: java.lang.Object[];

        $r1 = staticinvoke <com.android.uiautomator.core.Tracer: com.android.uiautomator.core.Tracer getInstance()>();

        specialinvoke $r1.<com.android.uiautomator.core.Tracer: void doTrace(java.lang.Object[])>(r0);

        return;
    }

    public boolean isTracingEnabled()
    {
        com.android.uiautomator.core.Tracer r0;
        com.android.uiautomator.core.Tracer$Mode $r1, $r2;
        boolean z0;

        r0 := @this: com.android.uiautomator.core.Tracer;

        $r2 = r0.<com.android.uiautomator.core.Tracer: com.android.uiautomator.core.Tracer$Mode mCurrentMode>;

        $r1 = <com.android.uiautomator.core.Tracer$Mode: com.android.uiautomator.core.Tracer$Mode NONE>;

        if $r2 == $r1 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void setOutputFilename(java.lang.String)
    {
        com.android.uiautomator.core.Tracer r0;
        java.lang.String r1;
        java.io.File $r2;

        r0 := @this: com.android.uiautomator.core.Tracer;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r1);

        r0.<com.android.uiautomator.core.Tracer: java.io.File mOutputFile> = $r2;

        return;
    }

    public void setOutputMode(com.android.uiautomator.core.Tracer$Mode)
    {
        com.android.uiautomator.core.Tracer r0;
        int i0, $i1;
        int[] $r1;
        java.io.File $r2, $r3, $r4, $r5;
        java.lang.Throwable $r6;
        java.lang.String $r9, $r11;
        com.android.uiautomator.core.Tracer$Mode r12;
        java.util.List r13, r15, r18, r20;
        com.android.uiautomator.core.Tracer$LogcatSink r25, r28;
        com.android.uiautomator.core.Tracer$FileSink r26, r29;
        java.lang.IllegalArgumentException r27, r30;
        java.lang.StringBuilder r31;
        java.io.FileNotFoundException r32;

        r0 := @this: com.android.uiautomator.core.Tracer;

        r12 := @parameter0: com.android.uiautomator.core.Tracer$Mode;

        specialinvoke r0.<com.android.uiautomator.core.Tracer: void closeSinks()>();

        r0.<com.android.uiautomator.core.Tracer: com.android.uiautomator.core.Tracer$Mode mCurrentMode> = r12;

     label01:
        $r1 = <com.android.uiautomator.core.Tracer$1: int[] $SwitchMap$com$android$uiautomator$core$Tracer$Mode>;

        $i1 = virtualinvoke r12.<com.android.uiautomator.core.Tracer$Mode: int ordinal()>();

        i0 = $r1[$i1];

     label02:
        if i0 == 1 goto label08;

        if i0 == 2 goto label06;

        if i0 == 3 goto label03;

        goto label09;

     label03:
        r13 = r0.<com.android.uiautomator.core.Tracer: java.util.List mSinks>;

        r25 = new com.android.uiautomator.core.Tracer$LogcatSink;

        specialinvoke r25.<com.android.uiautomator.core.Tracer$LogcatSink: void <init>(com.android.uiautomator.core.Tracer,com.android.uiautomator.core.Tracer$1)>(r0, null);

        interfaceinvoke r13.<java.util.List: boolean add(java.lang.Object)>(r25);

        $r4 = r0.<com.android.uiautomator.core.Tracer: java.io.File mOutputFile>;

        if $r4 == null goto label05;

        r15 = r0.<com.android.uiautomator.core.Tracer: java.util.List mSinks>;

        r26 = new com.android.uiautomator.core.Tracer$FileSink;

        $r5 = r0.<com.android.uiautomator.core.Tracer: java.io.File mOutputFile>;

        specialinvoke r26.<com.android.uiautomator.core.Tracer$FileSink: void <init>(com.android.uiautomator.core.Tracer,java.io.File)>(r0, $r5);

        interfaceinvoke r15.<java.util.List: boolean add(java.lang.Object)>(r26);

     label04:
        goto label09;

     label05:
        r27 = new java.lang.IllegalArgumentException;

        specialinvoke r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Please provide a filename before attempting write trace to a file");

        throw r27;

     label06:
        r18 = r0.<com.android.uiautomator.core.Tracer: java.util.List mSinks>;

        r28 = new com.android.uiautomator.core.Tracer$LogcatSink;

        specialinvoke r28.<com.android.uiautomator.core.Tracer$LogcatSink: void <init>(com.android.uiautomator.core.Tracer,com.android.uiautomator.core.Tracer$1)>(r0, null);

        interfaceinvoke r18.<java.util.List: boolean add(java.lang.Object)>(r28);

     label07:
        goto label09;

     label08:
        $r2 = r0.<com.android.uiautomator.core.Tracer: java.io.File mOutputFile>;

        if $r2 == null goto label10;

        r20 = r0.<com.android.uiautomator.core.Tracer: java.util.List mSinks>;

        r29 = new com.android.uiautomator.core.Tracer$FileSink;

        $r3 = r0.<com.android.uiautomator.core.Tracer: java.io.File mOutputFile>;

        specialinvoke r29.<com.android.uiautomator.core.Tracer$FileSink: void <init>(com.android.uiautomator.core.Tracer,java.io.File)>(r0, $r3);

        interfaceinvoke r20.<java.util.List: boolean add(java.lang.Object)>(r29);

     label09:
        goto label12;

     label10:
        r30 = new java.lang.IllegalArgumentException;

        specialinvoke r30.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Please provide a filename before attempting write trace to a file");

        throw r30;

     label11:
        $r6 := @caughtexception;

        r31 = new java.lang.StringBuilder;

        specialinvoke r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not open log file: ");

        r32 = (java.io.FileNotFoundException) $r6;

        $r9 = virtualinvoke r32.<java.io.FileNotFoundException: java.lang.String getMessage()>();

        virtualinvoke r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Tracer", $r11);

     label12:
        return;

        catch java.io.FileNotFoundException from label01 to label02 with label11;
        catch java.io.FileNotFoundException from label03 to label04 with label11;
        catch java.io.FileNotFoundException from label05 to label06 with label11;
        catch java.io.FileNotFoundException from label06 to label07 with label11;
        catch java.io.FileNotFoundException from label08 to label09 with label11;
        catch java.io.FileNotFoundException from label10 to label11 with label11;
    }
}
