class com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher extends java.lang.Object implements android.app.IInstrumentationWatcher
{
    private final boolean mRawMode;
    final com.android.uiautomator.testrunner.UiAutomatorTestRunner this$0;

    private void <init>(com.android.uiautomator.testrunner.UiAutomatorTestRunner)
    {
        com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher r0;
        com.android.uiautomator.testrunner.UiAutomatorTestRunner r1;

        r0 := @this: com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher;

        r1 := @parameter0: com.android.uiautomator.testrunner.UiAutomatorTestRunner;

        r0.<com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher: com.android.uiautomator.testrunner.UiAutomatorTestRunner this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher: boolean mRawMode> = 1;

        return;
    }

    void <init>(com.android.uiautomator.testrunner.UiAutomatorTestRunner, com.android.uiautomator.testrunner.UiAutomatorTestRunner$1)
    {
        com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher r0;
        com.android.uiautomator.testrunner.UiAutomatorTestRunner r1;
        com.android.uiautomator.testrunner.UiAutomatorTestRunner$1 r2;

        r0 := @this: com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher;

        r1 := @parameter0: com.android.uiautomator.testrunner.UiAutomatorTestRunner;

        r2 := @parameter1: com.android.uiautomator.testrunner.UiAutomatorTestRunner$1;

        specialinvoke r0.<com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher: void <init>(com.android.uiautomator.testrunner.UiAutomatorTestRunner)>(r1);

        return;
    }

    public android.os.IBinder asBinder()
    {
        com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("I\'m just a fake!");

        throw $r1;
    }

    public void instrumentationFinished(android.content.ComponentName, int, android.os.Bundle)
    {
        com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher r0;
        int i0;
        java.lang.String r1, $r6, $r14;
        java.io.PrintStream r2, r21;
        java.lang.StringBuilder r3, r22;
        java.util.Set $r7;
        boolean $z0;
        java.lang.Object $r8, $r12;
        java.lang.Throwable $r16;
        android.content.ComponentName r17;
        android.os.Bundle r18;
        java.util.Iterator r20;

        r0 := @this: com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher;

        r17 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        r18 := @parameter2: android.os.Bundle;

        entermonitor r0;

        goto label02;

     label01:
        $r16 := @caughtexception;

        goto label09;

     label02:
        if r18 == null goto label06;

     label03:
        $r7 = virtualinvoke r18.<android.os.Bundle: java.util.Set keySet()>();

        r20 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r8 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r1 = (java.lang.String) $r8;

        r2 = <java.lang.System: java.io.PrintStream out>;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INSTRUMENTATION_RESULT: ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r12 = virtualinvoke r18.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r1);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintStream: void println(java.lang.String)>($r14);

     label05:
        goto label04;

     label06:
        r21 = <java.lang.System: java.io.PrintStream out>;

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INSTRUMENTATION_CODE: ");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r21.<java.io.PrintStream: void println(java.lang.String)>($r6);

     label07:
        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label08:
        return;

     label09:
        exitmonitor r0;

     label10:
        throw $r16;

        catch java.lang.Throwable from label01 to label01 with label01;
        catch java.lang.Throwable from label03 to label04 with label01;
        catch java.lang.Throwable from label04 to label05 with label01;
        catch java.lang.Throwable from label06 to label07 with label01;
        catch java.lang.Throwable from label07 to label08 with label01;
        catch java.lang.Throwable from label09 to label10 with label01;
    }

    public void instrumentationStatus(android.content.ComponentName, int, android.os.Bundle)
    {
        com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher r0;
        int i0;
        java.util.Iterator r1;
        java.lang.String r2, $r6, $r14;
        java.lang.StringBuilder r3, r22;
        java.util.Set $r7;
        boolean $z0;
        java.lang.Object $r8, $r12;
        java.lang.Throwable $r16;
        android.content.ComponentName r17;
        android.os.Bundle r18;
        java.io.PrintStream r20, r21;

        r0 := @this: com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher;

        r17 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        r18 := @parameter2: android.os.Bundle;

        entermonitor r0;

        goto label02;

     label01:
        $r16 := @caughtexception;

        goto label09;

     label02:
        if r18 == null goto label06;

     label03:
        $r7 = virtualinvoke r18.<android.os.Bundle: java.util.Set keySet()>();

        r1 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r8 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.lang.String) $r8;

        r20 = <java.lang.System: java.io.PrintStream out>;

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INSTRUMENTATION_STATUS: ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r12 = virtualinvoke r18.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r2);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r20.<java.io.PrintStream: void println(java.lang.String)>($r14);

     label05:
        goto label04;

     label06:
        r21 = <java.lang.System: java.io.PrintStream out>;

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INSTRUMENTATION_STATUS_CODE: ");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r21.<java.io.PrintStream: void println(java.lang.String)>($r6);

     label07:
        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

     label08:
        return;

     label09:
        exitmonitor r0;

     label10:
        throw $r16;

        catch java.lang.Throwable from label01 to label01 with label01;
        catch java.lang.Throwable from label03 to label04 with label01;
        catch java.lang.Throwable from label04 to label05 with label01;
        catch java.lang.Throwable from label06 to label07 with label01;
        catch java.lang.Throwable from label07 to label08 with label01;
        catch java.lang.Throwable from label09 to label10 with label01;
    }
}
