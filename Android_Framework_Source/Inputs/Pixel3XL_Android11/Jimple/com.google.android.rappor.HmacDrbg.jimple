public class com.google.android.rappor.HmacDrbg extends java.lang.Object
{
    private static final byte[] BYTE_ARRAY_0;
    private static final byte[] BYTE_ARRAY_1;
    private static final int DIGEST_NUM_BYTES;
    public static final int ENTROPY_INPUT_SIZE_BYTES;
    private static final int MAX_BYTES_PER_REQUEST;
    public static final int MAX_BYTES_TOTAL;
    public static final int MAX_PERSONALIZATION_STRING_LENGTH_BYTES;
    public static final int SECURITY_STRENGTH;
    private int bytesGenerated;
    private javax.crypto.Mac hmac;
    private byte[] value;

    static void <clinit>()
    {
        byte[] $r0, $r1;

        <com.google.android.rappor.HmacDrbg: int SECURITY_STRENGTH> = 256;

        <com.google.android.rappor.HmacDrbg: int MAX_PERSONALIZATION_STRING_LENGTH_BYTES> = 20;

        <com.google.android.rappor.HmacDrbg: int MAX_BYTES_TOTAL> = 10000;

        <com.google.android.rappor.HmacDrbg: int MAX_BYTES_PER_REQUEST> = 937;

        <com.google.android.rappor.HmacDrbg: int ENTROPY_INPUT_SIZE_BYTES> = 48;

        <com.google.android.rappor.HmacDrbg: int DIGEST_NUM_BYTES> = 32;

        $r0 = newarray (byte)[1];

        $r0[0] = 0;

        <com.google.android.rappor.HmacDrbg: byte[] BYTE_ARRAY_0> = $r0;

        $r1 = newarray (byte)[1];

        $r1[0] = 1;

        <com.google.android.rappor.HmacDrbg: byte[] BYTE_ARRAY_1> = $r1;

        return;
    }

    public void <init>(byte[], byte[])
    {
        com.google.android.rappor.HmacDrbg r0;
        byte[][] $r1;
        byte[] $r2, $r3, r4, r5, r6, r7;

        r0 := @this: com.google.android.rappor.HmacDrbg;

        r4 := @parameter0: byte[];

        r5 := @parameter1: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte[])[2];

        $r1[0] = r4;

        $r2 = staticinvoke <com.google.android.rappor.HmacDrbg: byte[] emptyIfNull(byte[])>(r5);

        $r1[1] = $r2;

        r6 = staticinvoke <com.google.android.rappor.HmacDrbg: byte[] bytesConcat(byte[][])>($r1);

        $r3 = newarray (byte)[32];

        specialinvoke r0.<com.google.android.rappor.HmacDrbg: void setKey(byte[])>($r3);

        r7 = newarray (byte)[32];

        r0.<com.google.android.rappor.HmacDrbg: byte[] value> = r7;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>(r7, 1);

        specialinvoke r0.<com.google.android.rappor.HmacDrbg: void hmacDrbgUpdate(byte[])>(r6);

        r0.<com.google.android.rappor.HmacDrbg: int bytesGenerated> = 0;

        return;
    }

    private static transient byte[] bytesConcat(byte[][])
    {
        byte[][] r0;
        byte[] r1, r2, $r3;
        int $i0, $i1, $i2, i3, i4, i5, i6, i7, i8;

        r0 := @parameter0: byte[][];

        i3 = 0;

        i4 = lengthof r0;

        i5 = 0;

     label1:
        if i5 >= i4 goto label2;

        $r3 = r0[i5];

        $i2 = lengthof $r3;

        i3 = i3 + $i2;

        i5 = i5 + 1;

        goto label1;

     label2:
        r1 = newarray (byte)[i3];

        i6 = 0;

        i7 = lengthof r0;

        i8 = 0;

     label3:
        if i8 >= i7 goto label4;

        r2 = r0[i8];

        $i0 = lengthof r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, r1, i6, $i0);

        $i1 = lengthof r2;

        i6 = i6 + $i1;

        i8 = i8 + 1;

        goto label3;

     label4:
        return r1;
    }

    private static byte[] emptyIfNull(byte[])
    {
        byte[] r0;

        r0 := @parameter0: byte[];

        if r0 != null goto label1;

        r0 = newarray (byte)[0];

        goto label1;

     label1:
        return r0;
    }

    public static byte[] generateEntropyInput()
    {
        byte[] r0;
        java.security.SecureRandom $r1;

        r0 = newarray (byte)[48];

        $r1 = new java.security.SecureRandom;

        specialinvoke $r1.<java.security.SecureRandom: void <init>()>();

        virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>(r0);

        return r0;
    }

    private byte[] hash(byte[])
    {
        com.google.android.rappor.HmacDrbg r0;
        javax.crypto.Mac $r1;
        java.lang.Exception $r2;
        byte[] r3, r4;

        r0 := @this: com.google.android.rappor.HmacDrbg;

        r3 := @parameter0: byte[];

     label1:
        $r1 = r0.<com.google.android.rappor.HmacDrbg: javax.crypto.Mac hmac>;

        r4 = virtualinvoke $r1.<javax.crypto.Mac: byte[] doFinal(byte[])>(r3);

     label2:
        return r4;

     label3:
        $r2 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void hmacDrbgGenerate(byte[], int, int)
    {
        com.google.android.rappor.HmacDrbg r0;
        byte[] r1, $r2, $r3, $r4;
        int i0, i1, i2, $i3, $i4, i5;

        r0 := @this: com.google.android.rappor.HmacDrbg;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i5 = 0;

     label1:
        if i5 >= i1 goto label2;

        $r2 = r0.<com.google.android.rappor.HmacDrbg: byte[] value>;

        $r3 = specialinvoke r0.<com.google.android.rappor.HmacDrbg: byte[] hash(byte[])>($r2);

        r0.<com.google.android.rappor.HmacDrbg: byte[] value> = $r3;

        $i3 = i1 - i5;

        i2 = staticinvoke <java.lang.Math: int min(int,int)>($i3, 32);

        $r4 = r0.<com.google.android.rappor.HmacDrbg: byte[] value>;

        $i4 = i0 + i5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r1, $i4, i2);

        i5 = i5 + i2;

        goto label1;

     label2:
        specialinvoke r0.<com.google.android.rappor.HmacDrbg: void hmacDrbgUpdate(byte[])>(null);

        return;
    }

    private void hmacDrbgUpdate(byte[])
    {
        com.google.android.rappor.HmacDrbg r0;
        byte[] r1, r2, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r15;
        byte[][] $r3, $r10;

        r0 := @this: com.google.android.rappor.HmacDrbg;

        r1 := @parameter0: byte[];

        $r3 = newarray (byte[])[3];

        $r4 = r0.<com.google.android.rappor.HmacDrbg: byte[] value>;

        $r3[0] = $r4;

        $r5 = <com.google.android.rappor.HmacDrbg: byte[] BYTE_ARRAY_0>;

        $r3[1] = $r5;

        $r6 = staticinvoke <com.google.android.rappor.HmacDrbg: byte[] emptyIfNull(byte[])>(r1);

        $r3[2] = $r6;

        $r7 = staticinvoke <com.google.android.rappor.HmacDrbg: byte[] bytesConcat(byte[][])>($r3);

        $r8 = specialinvoke r0.<com.google.android.rappor.HmacDrbg: byte[] hash(byte[])>($r7);

        specialinvoke r0.<com.google.android.rappor.HmacDrbg: void setKey(byte[])>($r8);

        $r9 = r0.<com.google.android.rappor.HmacDrbg: byte[] value>;

        r2 = specialinvoke r0.<com.google.android.rappor.HmacDrbg: byte[] hash(byte[])>($r9);

        r0.<com.google.android.rappor.HmacDrbg: byte[] value> = r2;

        if r1 != null goto label1;

        return;

     label1:
        $r10 = newarray (byte[])[3];

        $r10[0] = r2;

        $r11 = <com.google.android.rappor.HmacDrbg: byte[] BYTE_ARRAY_1>;

        $r10[1] = $r11;

        $r10[2] = r1;

        $r12 = staticinvoke <com.google.android.rappor.HmacDrbg: byte[] bytesConcat(byte[][])>($r10);

        $r13 = specialinvoke r0.<com.google.android.rappor.HmacDrbg: byte[] hash(byte[])>($r12);

        specialinvoke r0.<com.google.android.rappor.HmacDrbg: void setKey(byte[])>($r13);

        $r14 = r0.<com.google.android.rappor.HmacDrbg: byte[] value>;

        $r15 = specialinvoke r0.<com.google.android.rappor.HmacDrbg: byte[] hash(byte[])>($r14);

        r0.<com.google.android.rappor.HmacDrbg: byte[] value> = $r15;

        return;
    }

    private void setKey(byte[])
    {
        com.google.android.rappor.HmacDrbg r0;
        javax.crypto.spec.SecretKeySpec r1;
        javax.crypto.Mac $r2, $r3;
        java.lang.Exception $r4;
        byte[] r5;

        r0 := @this: com.google.android.rappor.HmacDrbg;

        r5 := @parameter0: byte[];

     label1:
        $r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>("HmacSHA256");

        r0.<com.google.android.rappor.HmacDrbg: javax.crypto.Mac hmac> = $r2;

        r1 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r5, "HmacSHA256");

        $r3 = r0.<com.google.android.rappor.HmacDrbg: javax.crypto.Mac hmac>;

        virtualinvoke $r3.<javax.crypto.Mac: void init(java.security.Key)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void nextBytes(byte[])
    {
        com.google.android.rappor.HmacDrbg r0;
        byte[] r1;
        int $i0;

        r0 := @this: com.google.android.rappor.HmacDrbg;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<com.google.android.rappor.HmacDrbg: void nextBytes(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    public void nextBytes(byte[], int, int)
    {
        com.google.android.rappor.HmacDrbg r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11;
        java.lang.StringBuilder $r1;
        java.lang.IllegalStateException $r5;
        java.lang.String $r6;
        java.lang.Throwable $r7;
        byte[] r8;

        r0 := @this: com.google.android.rappor.HmacDrbg;

        r8 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i1 != 0 goto label1;

        return;

     label1:
        $i3 = r0.<com.google.android.rappor.HmacDrbg: int bytesGenerated>;

        $i4 = $i3 + i1;

        if $i4 > 10000 goto label7;

        i11 = 0;

     label2:
        if i11 >= i1 goto label6;

     label3:
        $i7 = i1 - i11;

        i2 = staticinvoke <java.lang.Math: int min(int,int)>($i7, 937);

        $i8 = i0 + i11;

        specialinvoke r0.<com.google.android.rappor.HmacDrbg: void hmacDrbgGenerate(byte[],int,int)>(r8, $i8, i2);

     label4:
        i11 = i11 + i2;

        goto label2;

     label5:
        $r7 := @caughtexception;

        $i9 = r0.<com.google.android.rappor.HmacDrbg: int bytesGenerated>;

        $i10 = $i9 + i1;

        r0.<com.google.android.rappor.HmacDrbg: int bytesGenerated> = $i10;

        throw $r7;

     label6:
        $i5 = r0.<com.google.android.rappor.HmacDrbg: int bytesGenerated>;

        $i6 = $i5 + i1;

        r0.<com.google.android.rappor.HmacDrbg: int bytesGenerated> = $i6;

        return;

     label7:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot generate more than a total of ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes.");

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r5;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public byte[] nextBytes(int)
    {
        com.google.android.rappor.HmacDrbg r0;
        int i0;
        byte[] r1;

        r0 := @this: com.google.android.rappor.HmacDrbg;

        i0 := @parameter0: int;

        r1 = newarray (byte)[i0];

        virtualinvoke r0.<com.google.android.rappor.HmacDrbg: void nextBytes(byte[])>(r1);

        return r1;
    }
}
