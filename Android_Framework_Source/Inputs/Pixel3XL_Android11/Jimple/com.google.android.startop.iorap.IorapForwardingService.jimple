public class com.google.android.startop.iorap.IorapForwardingService extends com.android.server.SystemService
{
    public static final boolean DEBUG;
    private static boolean IS_ENABLED;
    public static final int JOB_ID_IORAPD;
    public static final long JOB_INTERVAL_MS;
    public static final java.lang.String TAG;
    private static boolean WTF_CRASH;
    private static volatile com.google.android.startop.iorap.IorapForwardingService sSelfService;
    private final com.google.android.startop.iorap.IorapForwardingService$AppLaunchObserver mAppLaunchObserver;
    private final com.google.android.startop.iorap.IorapForwardingService$DexOptPackagesUpdated mDexOptPackagesUpdated;
    private final com.google.android.startop.iorap.EventSequenceValidator mEventSequenceValidator;
    private final android.os.Handler mHandler;
    private com.google.android.startop.iorap.IIorap mIorapRemote;
    private volatile com.google.android.startop.iorap.IorapForwardingService$IorapdJobService mJobService;
    private final java.lang.Object mLock;
    private boolean mRegisteredListeners;

    static void <clinit>()
    {
        boolean $z0, $z1, $z2;
        int $i0;
        java.util.concurrent.TimeUnit $r0;
        long $l1;

        <com.google.android.startop.iorap.IorapForwardingService: java.lang.String TAG> = "IorapForwardingService";

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("IorapForwardingService", 3);

        <com.google.android.startop.iorap.IorapForwardingService: boolean DEBUG> = $z0;

        $z1 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("ro.iorapd.enable", 1);

        <com.google.android.startop.iorap.IorapForwardingService: boolean IS_ENABLED> = $z1;

        $z2 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("iorapd.forwarding_service.wtf_crash", 0);

        <com.google.android.startop.iorap.IorapForwardingService: boolean WTF_CRASH> = $z2;

        $i0 = staticinvoke <com.google.android.startop.iorap.IorapForwardingService: int encodeEnglishAlphabetStringIntoInt(java.lang.String)>("iorapd");

        <com.google.android.startop.iorap.IorapForwardingService: int JOB_ID_IORAPD> = $i0;

        $r0 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit HOURS>;

        $l1 = virtualinvoke $r0.<java.util.concurrent.TimeUnit: long toMillis(long)>(24L);

        <com.google.android.startop.iorap.IorapForwardingService: long JOB_INTERVAL_MS> = $l1;

        return;
    }

    public void <init>(android.content.Context)
    {
        com.google.android.startop.iorap.IorapForwardingService r0, $r10;
        android.content.Context r1;
        java.lang.Object $r3;
        com.google.android.startop.iorap.IorapForwardingService$BinderConnectionHandler $r4;
        android.os.Handler $r5;
        android.os.Looper $r6;
        com.google.android.startop.iorap.IorapForwardingService$AppLaunchObserver $r7;
        com.google.android.startop.iorap.EventSequenceValidator $r8;
        com.google.android.startop.iorap.IorapForwardingService$DexOptPackagesUpdated $r9;
        boolean $z0;
        java.lang.AssertionError $r11;
        java.lang.StringBuilder $r12;
        java.lang.String $r14, $r17;

        r0 := @this: com.google.android.startop.iorap.IorapForwardingService;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.server.SystemService: void <init>(android.content.Context)>(r1);

        $r3 = new java.lang.Object;

        specialinvoke $r3.<java.lang.Object: void <init>()>();

        r0.<com.google.android.startop.iorap.IorapForwardingService: java.lang.Object mLock> = $r3;

        $r4 = new com.google.android.startop.iorap.IorapForwardingService$BinderConnectionHandler;

        $r5 = staticinvoke <com.android.server.IoThread: android.os.Handler getHandler()>();

        $r6 = virtualinvoke $r5.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r4.<com.google.android.startop.iorap.IorapForwardingService$BinderConnectionHandler: void <init>(com.google.android.startop.iorap.IorapForwardingService,android.os.Looper)>(r0, $r6);

        r0.<com.google.android.startop.iorap.IorapForwardingService: android.os.Handler mHandler> = $r4;

        $r7 = new com.google.android.startop.iorap.IorapForwardingService$AppLaunchObserver;

        specialinvoke $r7.<com.google.android.startop.iorap.IorapForwardingService$AppLaunchObserver: void <init>(com.google.android.startop.iorap.IorapForwardingService,com.google.android.startop.iorap.IorapForwardingService$1)>(r0, null);

        r0.<com.google.android.startop.iorap.IorapForwardingService: com.google.android.startop.iorap.IorapForwardingService$AppLaunchObserver mAppLaunchObserver> = $r7;

        $r8 = new com.google.android.startop.iorap.EventSequenceValidator;

        specialinvoke $r8.<com.google.android.startop.iorap.EventSequenceValidator: void <init>()>();

        r0.<com.google.android.startop.iorap.IorapForwardingService: com.google.android.startop.iorap.EventSequenceValidator mEventSequenceValidator> = $r8;

        $r9 = new com.google.android.startop.iorap.IorapForwardingService$DexOptPackagesUpdated;

        specialinvoke $r9.<com.google.android.startop.iorap.IorapForwardingService$DexOptPackagesUpdated: void <init>(com.google.android.startop.iorap.IorapForwardingService,com.google.android.startop.iorap.IorapForwardingService$1)>(r0, null);

        r0.<com.google.android.startop.iorap.IorapForwardingService: com.google.android.startop.iorap.IorapForwardingService$DexOptPackagesUpdated mDexOptPackagesUpdated> = $r9;

        r0.<com.google.android.startop.iorap.IorapForwardingService: boolean mRegisteredListeners> = 0;

        $z0 = <com.google.android.startop.iorap.IorapForwardingService: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IorapForwardingService (Context=");

        $r14 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("IorapForwardingService", $r17);

     label1:
        $r10 = <com.google.android.startop.iorap.IorapForwardingService: com.google.android.startop.iorap.IorapForwardingService sSelfService>;

        if $r10 != null goto label2;

        <com.google.android.startop.iorap.IorapForwardingService: com.google.android.startop.iorap.IorapForwardingService sSelfService> = r0;

        return;

     label2:
        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>(java.lang.Object)>("only one service instance allowed");

        throw $r11;
    }

    static boolean access$000(com.google.android.startop.iorap.IorapForwardingService, int)
    {
        com.google.android.startop.iorap.IorapForwardingService r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.google.android.startop.iorap.IorapForwardingService;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.google.android.startop.iorap.IorapForwardingService: boolean retryConnectToRemoteAndConfigure(int)>(i0);

        return $z0;
    }

    static com.google.android.startop.iorap.IorapForwardingService$IorapdJobService access$100(com.google.android.startop.iorap.IorapForwardingService)
    {
        com.google.android.startop.iorap.IorapForwardingService r0;
        com.google.android.startop.iorap.IorapForwardingService$IorapdJobService $r1;

        r0 := @parameter0: com.google.android.startop.iorap.IorapForwardingService;

        $r1 = r0.<com.google.android.startop.iorap.IorapForwardingService: com.google.android.startop.iorap.IorapForwardingService$IorapdJobService mJobService>;

        return $r1;
    }

    static com.google.android.startop.iorap.IIorap access$400(com.google.android.startop.iorap.IorapForwardingService)
    {
        com.google.android.startop.iorap.IorapForwardingService r0;
        com.google.android.startop.iorap.IIorap $r1;

        r0 := @parameter0: com.google.android.startop.iorap.IorapForwardingService;

        $r1 = r0.<com.google.android.startop.iorap.IorapForwardingService: com.google.android.startop.iorap.IIorap mIorapRemote>;

        return $r1;
    }

    static boolean access$500(com.google.android.startop.iorap.IIorap, com.google.android.startop.iorap.IorapForwardingService$RemoteRunnable)
    {
        com.google.android.startop.iorap.IIorap r0;
        com.google.android.startop.iorap.IorapForwardingService$RemoteRunnable r1;
        boolean $z0;

        r0 := @parameter0: com.google.android.startop.iorap.IIorap;

        r1 := @parameter1: com.google.android.startop.iorap.IorapForwardingService$RemoteRunnable;

        $z0 = staticinvoke <com.google.android.startop.iorap.IorapForwardingService: boolean invokeRemote(com.google.android.startop.iorap.IIorap,com.google.android.startop.iorap.IorapForwardingService$RemoteRunnable)>(r0, r1);

        return $z0;
    }

    static com.google.android.startop.iorap.IorapForwardingService access$600()
    {
        com.google.android.startop.iorap.IorapForwardingService $r0;

        $r0 = <com.google.android.startop.iorap.IorapForwardingService: com.google.android.startop.iorap.IorapForwardingService sSelfService>;

        return $r0;
    }

    private boolean connectToRemoteAndConfigure()
    {
        com.google.android.startop.iorap.IorapForwardingService r0;
        java.lang.Object r1;
        boolean z0;
        java.lang.Throwable $r3;

        r0 := @this: com.google.android.startop.iorap.IorapForwardingService;

        r1 = r0.<com.google.android.startop.iorap.IorapForwardingService: java.lang.Object mLock>;

        entermonitor r1;

     label1:
        z0 = specialinvoke r0.<com.google.android.startop.iorap.IorapForwardingService: boolean connectToRemoteAndConfigureLocked()>();

        exitmonitor r1;

     label2:
        return z0;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private boolean connectToRemoteAndConfigureLocked()
    {
        com.google.android.startop.iorap.IorapForwardingService r0;
        com.google.android.startop.iorap.IIorap r1;
        boolean $z0, $z2;
        com.google.android.startop.iorap._$$Lambda$IorapForwardingService$miQO_RJhHA7C1W4BujwCS9blXFc $r2;

        r0 := @this: com.google.android.startop.iorap.IorapForwardingService;

        $z0 = virtualinvoke r0.<com.google.android.startop.iorap.IorapForwardingService: boolean isIorapEnabled()>();

        if $z0 != 0 goto label2;

        $z2 = <com.google.android.startop.iorap.IorapForwardingService: boolean DEBUG>;

        if $z2 == 0 goto label1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("IorapForwardingService", "connectToRemoteAndConfigure - iorapd is disabled, skip rest of work");

     label1:
        return 1;

     label2:
        r1 = virtualinvoke r0.<com.google.android.startop.iorap.IorapForwardingService: com.google.android.startop.iorap.IIorap provideIorapRemote()>();

        r0.<com.google.android.startop.iorap.IorapForwardingService: com.google.android.startop.iorap.IIorap mIorapRemote> = r1;

        if r1 != null goto label3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("IorapForwardingService", "connectToRemoteAndConfigure - null iorap remote. check for Log.wtf?");

        return 0;

     label3:
        $r2 = new com.google.android.startop.iorap._$$Lambda$IorapForwardingService$miQO_RJhHA7C1W4BujwCS9blXFc;

        specialinvoke $r2.<com.google.android.startop.iorap._$$Lambda$IorapForwardingService$miQO_RJhHA7C1W4BujwCS9blXFc: void <init>(com.google.android.startop.iorap.IorapForwardingService)>(r0);

        staticinvoke <com.google.android.startop.iorap.IorapForwardingService: boolean invokeRemote(com.google.android.startop.iorap.IIorap,com.google.android.startop.iorap.IorapForwardingService$RemoteRunnable)>(r1, $r2);

        specialinvoke r0.<com.google.android.startop.iorap.IorapForwardingService: void registerInProcessListenersLocked()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("IorapForwardingService", "Connected to iorapd native service.");

        return 1;
    }

    private static int encodeEnglishAlphabetStringIntoInt(java.lang.String)
    {
        java.lang.String r0, $r5, $r10, $r17;
        int $i0, $i1, $i3, i4, i5, i7;
        java.lang.StringBuilder $r1, $r6, $r11;
        java.lang.IllegalArgumentException $r4, $r9;
        char $c2, c6;
        java.lang.AssertionError $r16;

        r0 := @parameter0: java.lang.String;

        i4 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 > 6 goto label5;

        i5 = 0;

     label1:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i5 >= $i1 goto label4;

        c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i5);

        if c6 < 97 goto label3;

        if c6 > 122 goto label3;

        $c2 = 65535 & c6;

        i7 = $c2 - 97;

        if i7 >= 32 goto label2;

        $i3 = i4 << 5;

        i4 = $i3 | i7;

        i5 = i5 + 1;

        goto label1;

     label2:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("wtf? i=");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", name=");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r16 = new java.lang.AssertionError;

        $r17 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.AssertionError: void <init>(java.lang.Object)>($r17);

        throw $r16;

     label3:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("String has out-of-range [a-z] chars: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label4:
        return i4;

     label5:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("String too long. Cannot encode more than 6 chars: ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    private static void handleRemoteError(java.lang.Throwable)
    {
        java.lang.Throwable r0;
        boolean $z0;
        java.lang.AssertionError $r1;

        r0 := @parameter0: java.lang.Throwable;

        $z0 = <com.google.android.startop.iorap.IorapForwardingService: boolean WTF_CRASH>;

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.Throwable)>("IorapForwardingService", r0);

        return;

     label1:
        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>(java.lang.String,java.lang.Throwable)>("unexpected remote error", r0);

        throw $r1;
    }

    private static boolean invokeRemote(com.google.android.startop.iorap.IIorap, com.google.android.startop.iorap.IorapForwardingService$RemoteRunnable)
    {
        com.google.android.startop.iorap.IorapForwardingService$RemoteRunnable r0;
        android.os.RemoteException $r1;
        com.google.android.startop.iorap.IIorap r2;

        r2 := @parameter0: com.google.android.startop.iorap.IIorap;

        r0 := @parameter1: com.google.android.startop.iorap.IorapForwardingService$RemoteRunnable;

        if r2 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IorapForwardingService", "IIorap went to null in this thread, drop invokeRemote.");

        return 0;

     label1:
        interfaceinvoke r0.<com.google.android.startop.iorap.IorapForwardingService$RemoteRunnable: void run(com.google.android.startop.iorap.IIorap)>(r2);

     label2:
        return 1;

     label3:
        $r1 := @caughtexception;

        staticinvoke <com.google.android.startop.iorap.IorapForwardingService: void handleRemoteError(java.lang.Throwable)>($r1);

        return 0;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void registerInProcessListenersLocked()
    {
        com.google.android.startop.iorap.IorapForwardingService r0;
        com.android.server.wm.ActivityMetricsLaunchObserverRegistry r1;
        boolean $z0;
        com.google.android.startop.iorap.IorapForwardingService$AppLaunchObserver $r2;
        com.google.android.startop.iorap.EventSequenceValidator $r3;
        com.google.android.startop.iorap.IorapForwardingService$DexOptPackagesUpdated $r4;

        r0 := @this: com.google.android.startop.iorap.IorapForwardingService;

        $z0 = r0.<com.google.android.startop.iorap.IorapForwardingService: boolean mRegisteredListeners>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r1 = virtualinvoke r0.<com.google.android.startop.iorap.IorapForwardingService: com.android.server.wm.ActivityMetricsLaunchObserverRegistry provideLaunchObserverRegistry()>();

        $r2 = r0.<com.google.android.startop.iorap.IorapForwardingService: com.google.android.startop.iorap.IorapForwardingService$AppLaunchObserver mAppLaunchObserver>;

        interfaceinvoke r1.<com.android.server.wm.ActivityMetricsLaunchObserverRegistry: void registerLaunchObserver(com.android.server.wm.ActivityMetricsLaunchObserver)>($r2);

        $r3 = r0.<com.google.android.startop.iorap.IorapForwardingService: com.google.android.startop.iorap.EventSequenceValidator mEventSequenceValidator>;

        interfaceinvoke r1.<com.android.server.wm.ActivityMetricsLaunchObserverRegistry: void registerLaunchObserver(com.android.server.wm.ActivityMetricsLaunchObserver)>($r3);

        $r4 = r0.<com.google.android.startop.iorap.IorapForwardingService: com.google.android.startop.iorap.IorapForwardingService$DexOptPackagesUpdated mDexOptPackagesUpdated>;

        staticinvoke <com.android.server.pm.BackgroundDexOptService: void addPackagesUpdatedListener(com.android.server.pm.BackgroundDexOptService$PackagesUpdatedListener)>($r4);

        r0.<com.google.android.startop.iorap.IorapForwardingService: boolean mRegisteredListeners> = 1;

        return;
    }

    private boolean retryConnectToRemoteAndConfigure(int)
    {
        com.google.android.startop.iorap.IorapForwardingService r0;
        int i0;
        boolean $z0, $z1;
        android.os.Message $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r5;
        android.os.Handler r7;

        r0 := @this: com.google.android.startop.iorap.IorapForwardingService;

        i0 := @parameter0: int;

        $z0 = <com.google.android.startop.iorap.IorapForwardingService: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("retryConnectToRemoteAndConfigure - attempt #");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("IorapForwardingService", $r5);

     label1:
        $z1 = specialinvoke r0.<com.google.android.startop.iorap.IorapForwardingService: boolean connectToRemoteAndConfigure()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("IorapForwardingService", "Failed to connect to iorapd, is it down? Delay for 1000");

        r7 = r0.<com.google.android.startop.iorap.IorapForwardingService: android.os.Handler mHandler>;

        $r1 = virtualinvoke r7.<android.os.Handler: android.os.Message obtainMessage(int)>(0);

        virtualinvoke r7.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r1, 1000L);

        return 0;
    }

    protected boolean isIorapEnabled()
    {
        com.google.android.startop.iorap.IorapForwardingService r0;
        boolean $z0;

        r0 := @this: com.google.android.startop.iorap.IorapForwardingService;

        $z0 = <com.google.android.startop.iorap.IorapForwardingService: boolean IS_ENABLED>;

        return $z0;
    }

    public void lambda$connectToRemoteAndConfigureLocked$0$IorapForwardingService(com.google.android.startop.iorap.IIorap) throws android.os.RemoteException
    {
        com.google.android.startop.iorap.IorapForwardingService r0;
        com.google.android.startop.iorap.IIorap r1;
        com.google.android.startop.iorap.IorapForwardingService$RemoteTaskListener $r2;

        r0 := @this: com.google.android.startop.iorap.IorapForwardingService;

        r1 := @parameter0: com.google.android.startop.iorap.IIorap;

        $r2 = new com.google.android.startop.iorap.IorapForwardingService$RemoteTaskListener;

        specialinvoke $r2.<com.google.android.startop.iorap.IorapForwardingService$RemoteTaskListener: void <init>(com.google.android.startop.iorap.IorapForwardingService,com.google.android.startop.iorap.IorapForwardingService$1)>(r0, null);

        interfaceinvoke r1.<com.google.android.startop.iorap.IIorap: void setTaskListener(com.google.android.startop.iorap.ITaskListener)>($r2);

        return;
    }

    public void onBootPhase(int)
    {
        com.google.android.startop.iorap.IorapForwardingService r0;
        int i0;
        boolean $z0, $z1;
        com.google.android.startop.iorap.IorapForwardingService$IorapdJobService $r1;
        android.content.Context $r2;

        r0 := @this: com.google.android.startop.iorap.IorapForwardingService;

        i0 := @parameter0: int;

        if i0 != 1000 goto label2;

        $z0 = <com.google.android.startop.iorap.IorapForwardingService: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("IorapForwardingService", "onBootPhase(PHASE_BOOT_COMPLETED)");

     label1:
        $z1 = virtualinvoke r0.<com.google.android.startop.iorap.IorapForwardingService: boolean isIorapEnabled()>();

        if $z1 == 0 goto label2;

        $r1 = new com.google.android.startop.iorap.IorapForwardingService$IorapdJobService;

        $r2 = virtualinvoke r0.<com.google.android.startop.iorap.IorapForwardingService: android.content.Context getContext()>();

        specialinvoke $r1.<com.google.android.startop.iorap.IorapForwardingService$IorapdJobService: void <init>(com.google.android.startop.iorap.IorapForwardingService,android.content.Context)>(r0, $r2);

        r0.<com.google.android.startop.iorap.IorapForwardingService: com.google.android.startop.iorap.IorapForwardingService$IorapdJobService mJobService> = $r1;

     label2:
        return;
    }

    public void onStart()
    {
        com.google.android.startop.iorap.IorapForwardingService r0;
        boolean $z0;

        r0 := @this: com.google.android.startop.iorap.IorapForwardingService;

        $z0 = <com.google.android.startop.iorap.IorapForwardingService: boolean DEBUG>;

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("IorapForwardingService", "onStart");

     label1:
        specialinvoke r0.<com.google.android.startop.iorap.IorapForwardingService: boolean retryConnectToRemoteAndConfigure(int)>(0);

        return;
    }

    protected android.os.IBinder$DeathRecipient provideDeathRecipient()
    {
        com.google.android.startop.iorap.IorapForwardingService r0;
        com.google.android.startop.iorap.IorapForwardingService$1 $r1;

        r0 := @this: com.google.android.startop.iorap.IorapForwardingService;

        $r1 = new com.google.android.startop.iorap.IorapForwardingService$1;

        specialinvoke $r1.<com.google.android.startop.iorap.IorapForwardingService$1: void <init>(com.google.android.startop.iorap.IorapForwardingService)>(r0);

        return $r1;
    }

    protected com.google.android.startop.iorap.IIorap provideIorapRemote()
    {
        com.google.android.startop.iorap.IorapForwardingService r0;
        android.os.IBinder $r1, $r2;
        android.os.IBinder$DeathRecipient $r3;
        android.os.ServiceManager$ServiceNotFoundException $r4;
        android.os.RemoteException $r5;
        com.google.android.startop.iorap.IIorap r6;

        r0 := @this: com.google.android.startop.iorap.IorapForwardingService;

     label1:
        $r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getServiceOrThrow(java.lang.String)>("iorapd");

        r6 = staticinvoke <com.google.android.startop.iorap.IIorap$Stub: com.google.android.startop.iorap.IIorap asInterface(android.os.IBinder)>($r1);

     label2:
        $r2 = interfaceinvoke r6.<com.google.android.startop.iorap.IIorap: android.os.IBinder asBinder()>();

        $r3 = virtualinvoke r0.<com.google.android.startop.iorap.IorapForwardingService: android.os.IBinder$DeathRecipient provideDeathRecipient()>();

        interfaceinvoke $r2.<android.os.IBinder: void linkToDeath(android.os.IBinder$DeathRecipient,int)>($r3, 0);

     label3:
        return r6;

     label4:
        $r5 := @caughtexception;

        staticinvoke <com.google.android.startop.iorap.IorapForwardingService: void handleRemoteError(java.lang.Throwable)>($r5);

        return null;

     label5:
        $r4 := @caughtexception;

        staticinvoke <com.google.android.startop.iorap.IorapForwardingService: void handleRemoteError(java.lang.Throwable)>($r4);

        return null;

        catch android.os.ServiceManager$ServiceNotFoundException from label1 to label2 with label5;
        catch android.os.RemoteException from label2 to label3 with label4;
    }

    protected com.android.server.wm.ActivityMetricsLaunchObserverRegistry provideLaunchObserverRegistry()
    {
        com.google.android.startop.iorap.IorapForwardingService r0;
        com.android.server.wm.ActivityTaskManagerInternal r1;
        java.lang.Object $r2;
        com.android.server.wm.ActivityMetricsLaunchObserverRegistry $r3;

        r0 := @this: com.google.android.startop.iorap.IorapForwardingService;

        $r2 = staticinvoke <com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>(class "Lcom/android/server/wm/ActivityTaskManagerInternal;");

        r1 = (com.android.server.wm.ActivityTaskManagerInternal) $r2;

        $r3 = virtualinvoke r1.<com.android.server.wm.ActivityTaskManagerInternal: com.android.server.wm.ActivityMetricsLaunchObserverRegistry getLaunchObserverRegistry()>();

        return $r3;
    }
}
