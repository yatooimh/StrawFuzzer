class com.google.protobuf.AllocatedBuffer$2 extends com.google.protobuf.AllocatedBuffer
{
    private int position;
    final byte[] val$bytes;
    final int val$length;
    final int val$offset;

    void <init>(byte[], int, int)
    {
        com.google.protobuf.AllocatedBuffer$2 r0;
        byte[] r1;
        int i0, i1;

        r0 := @this: com.google.protobuf.AllocatedBuffer$2;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0.<com.google.protobuf.AllocatedBuffer$2: byte[] val$bytes> = r1;

        r0.<com.google.protobuf.AllocatedBuffer$2: int val$offset> = i0;

        r0.<com.google.protobuf.AllocatedBuffer$2: int val$length> = i1;

        specialinvoke r0.<com.google.protobuf.AllocatedBuffer: void <init>()>();

        return;
    }

    public byte[] array()
    {
        com.google.protobuf.AllocatedBuffer$2 r0;
        byte[] $r1;

        r0 := @this: com.google.protobuf.AllocatedBuffer$2;

        $r1 = r0.<com.google.protobuf.AllocatedBuffer$2: byte[] val$bytes>;

        return $r1;
    }

    public int arrayOffset()
    {
        com.google.protobuf.AllocatedBuffer$2 r0;
        int $i0;

        r0 := @this: com.google.protobuf.AllocatedBuffer$2;

        $i0 = r0.<com.google.protobuf.AllocatedBuffer$2: int val$offset>;

        return $i0;
    }

    public boolean hasArray()
    {
        com.google.protobuf.AllocatedBuffer$2 r0;

        r0 := @this: com.google.protobuf.AllocatedBuffer$2;

        return 1;
    }

    public boolean hasNioBuffer()
    {
        com.google.protobuf.AllocatedBuffer$2 r0;

        r0 := @this: com.google.protobuf.AllocatedBuffer$2;

        return 0;
    }

    public int limit()
    {
        com.google.protobuf.AllocatedBuffer$2 r0;
        int $i0;

        r0 := @this: com.google.protobuf.AllocatedBuffer$2;

        $i0 = r0.<com.google.protobuf.AllocatedBuffer$2: int val$length>;

        return $i0;
    }

    public java.nio.ByteBuffer nioBuffer()
    {
        com.google.protobuf.AllocatedBuffer$2 r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.google.protobuf.AllocatedBuffer$2;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public int position()
    {
        com.google.protobuf.AllocatedBuffer$2 r0;
        int $i0;

        r0 := @this: com.google.protobuf.AllocatedBuffer$2;

        $i0 = r0.<com.google.protobuf.AllocatedBuffer$2: int position>;

        return $i0;
    }

    public com.google.protobuf.AllocatedBuffer position(int)
    {
        com.google.protobuf.AllocatedBuffer$2 r0;
        int i0, $i1;
        java.lang.StringBuilder $r2;
        java.lang.IllegalArgumentException $r5;
        java.lang.String $r6;

        r0 := @this: com.google.protobuf.AllocatedBuffer$2;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i1 = r0.<com.google.protobuf.AllocatedBuffer$2: int val$length>;

        if i0 > $i1 goto label1;

        r0.<com.google.protobuf.AllocatedBuffer$2: int position> = i0;

        return r0;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid position: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public int remaining()
    {
        com.google.protobuf.AllocatedBuffer$2 r0;
        int $i0, $i1, $i2;

        r0 := @this: com.google.protobuf.AllocatedBuffer$2;

        $i1 = r0.<com.google.protobuf.AllocatedBuffer$2: int val$length>;

        $i0 = r0.<com.google.protobuf.AllocatedBuffer$2: int position>;

        $i2 = $i1 - $i0;

        return $i2;
    }
}
