abstract class com.google.protobuf.AllocatedBuffer extends java.lang.Object
{

    void <init>()
    {
        com.google.protobuf.AllocatedBuffer r0;

        r0 := @this: com.google.protobuf.AllocatedBuffer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.google.protobuf.AllocatedBuffer wrap(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0;
        com.google.protobuf.AllocatedBuffer$1 $r2;

        r0 := @parameter0: java.nio.ByteBuffer;

        staticinvoke <com.google.protobuf.Internal: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(r0, "buffer");

        $r2 = new com.google.protobuf.AllocatedBuffer$1;

        specialinvoke $r2.<com.google.protobuf.AllocatedBuffer$1: void <init>(java.nio.ByteBuffer)>(r0);

        return $r2;
    }

    public static com.google.protobuf.AllocatedBuffer wrap(byte[])
    {
        byte[] r0;
        int $i0;
        com.google.protobuf.AllocatedBuffer $r1;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        $r1 = staticinvoke <com.google.protobuf.AllocatedBuffer: com.google.protobuf.AllocatedBuffer wrapNoCheck(byte[],int,int)>(r0, 0, $i0);

        return $r1;
    }

    public static com.google.protobuf.AllocatedBuffer wrap(byte[], int, int)
    {
        byte[] r0;
        int i0, i1, $i2, $i3, $i4;
        com.google.protobuf.AllocatedBuffer $r1;
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.Object[] $r3;
        java.lang.Integer $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 < 0 goto label1;

        if i1 < 0 goto label1;

        $i3 = i0 + i1;

        $i2 = lengthof r0;

        if $i3 > $i2 goto label1;

        $r1 = staticinvoke <com.google.protobuf.AllocatedBuffer: com.google.protobuf.AllocatedBuffer wrapNoCheck(byte[],int,int)>(r0, i0, i1);

        return $r1;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = newarray (java.lang.Object)[3];

        $i4 = lengthof r0;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3[1] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r3[2] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("bytes.length=%d, offset=%d, length=%d", $r3);

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r7);

        throw $r2;
    }

    private static com.google.protobuf.AllocatedBuffer wrapNoCheck(byte[], int, int)
    {
        byte[] r0;
        int i0, i1;
        com.google.protobuf.AllocatedBuffer$2 $r1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new com.google.protobuf.AllocatedBuffer$2;

        specialinvoke $r1.<com.google.protobuf.AllocatedBuffer$2: void <init>(byte[],int,int)>(r0, i0, i1);

        return $r1;
    }

    public abstract byte[] array();

    public abstract int arrayOffset();

    public abstract boolean hasArray();

    public abstract boolean hasNioBuffer();

    public abstract int limit();

    public abstract java.nio.ByteBuffer nioBuffer();

    public abstract int position();

    public abstract com.google.protobuf.AllocatedBuffer position(int);

    public abstract int remaining();
}
