public abstract class com.google.protobuf.ByteString extends java.lang.Object implements java.lang.Iterable, java.io.Serializable
{
    static final int CONCATENATE_BY_COPY_SIZE;
    public static final com.google.protobuf.ByteString EMPTY;
    static final int MAX_READ_FROM_CHUNK_SIZE;
    static final int MIN_READ_FROM_CHUNK_SIZE;
    private static final int UNSIGNED_BYTE_MASK;
    private static final java.util.Comparator UNSIGNED_LEXICOGRAPHICAL_COMPARATOR;
    private static final com.google.protobuf.ByteString$ByteArrayCopier byteArrayCopier;
    private int hash;

    static void <clinit>()
    {
        com.google.protobuf.ByteString$LiteralByteString $r0;
        byte[] $r1;
        boolean $z0;
        com.google.protobuf.ByteString$ArraysByteArrayCopier $r2;
        com.google.protobuf.ByteString$2 $r3;
        com.google.protobuf.ByteString$SystemByteArrayCopier $r4;
        com.google.protobuf.ByteString$ByteArrayCopier r5;

        <com.google.protobuf.ByteString: int UNSIGNED_BYTE_MASK> = 255;

        <com.google.protobuf.ByteString: int MIN_READ_FROM_CHUNK_SIZE> = 256;

        <com.google.protobuf.ByteString: int MAX_READ_FROM_CHUNK_SIZE> = 8192;

        <com.google.protobuf.ByteString: int CONCATENATE_BY_COPY_SIZE> = 128;

        $r0 = new com.google.protobuf.ByteString$LiteralByteString;

        $r1 = <com.google.protobuf.Internal: byte[] EMPTY_BYTE_ARRAY>;

        specialinvoke $r0.<com.google.protobuf.ByteString$LiteralByteString: void <init>(byte[])>($r1);

        <com.google.protobuf.ByteString: com.google.protobuf.ByteString EMPTY> = $r0;

        $z0 = staticinvoke <com.google.protobuf.Android: boolean isOnAndroidDevice()>();

        if $z0 == 0 goto label1;

        $r4 = new com.google.protobuf.ByteString$SystemByteArrayCopier;

        specialinvoke $r4.<com.google.protobuf.ByteString$SystemByteArrayCopier: void <init>(com.google.protobuf.ByteString$1)>(null);

        r5 = $r4;

        goto label2;

     label1:
        $r2 = new com.google.protobuf.ByteString$ArraysByteArrayCopier;

        specialinvoke $r2.<com.google.protobuf.ByteString$ArraysByteArrayCopier: void <init>(com.google.protobuf.ByteString$1)>(null);

        r5 = $r2;

     label2:
        <com.google.protobuf.ByteString: com.google.protobuf.ByteString$ByteArrayCopier byteArrayCopier> = r5;

        $r3 = new com.google.protobuf.ByteString$2;

        specialinvoke $r3.<com.google.protobuf.ByteString$2: void <init>()>();

        <com.google.protobuf.ByteString: java.util.Comparator UNSIGNED_LEXICOGRAPHICAL_COMPARATOR> = $r3;

        return;
    }

    void <init>()
    {
        com.google.protobuf.ByteString r0;

        r0 := @this: com.google.protobuf.ByteString;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.protobuf.ByteString: int hash> = 0;

        return;
    }

    static int access$200(byte)
    {
        byte b0;
        int $i1;

        b0 := @parameter0: byte;

        $i1 = staticinvoke <com.google.protobuf.ByteString: int toInt(byte)>(b0);

        return $i1;
    }

    private static com.google.protobuf.ByteString balancedConcat(java.util.Iterator, int)
    {
        int i0, i1, $i2;
        java.lang.IllegalArgumentException $r0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        java.lang.String $r3;
        com.google.protobuf.ByteString $r4, $r5, r8;
        java.lang.Object $r6;
        java.util.Iterator r7;

        r7 := @parameter0: java.util.Iterator;

        i0 := @parameter1: int;

        if i0 < 1 goto label3;

        if i0 != 1 goto label1;

        $r6 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.google.protobuf.ByteString) $r6;

        goto label2;

     label1:
        i1 = i0 >>> 1;

        $r4 = staticinvoke <com.google.protobuf.ByteString: com.google.protobuf.ByteString balancedConcat(java.util.Iterator,int)>(r7, i1);

        $i2 = i0 - i1;

        $r5 = staticinvoke <com.google.protobuf.ByteString: com.google.protobuf.ByteString balancedConcat(java.util.Iterator,int)>(r7, $i2);

        r8 = virtualinvoke $r4.<com.google.protobuf.ByteString: com.google.protobuf.ByteString concat(com.google.protobuf.ByteString)>($r5);

     label2:
        return r8;

     label3:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("length (%s) must be >= 1", $r1);

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r0;
    }

    static void checkIndex(int, int)
    {
        int i0, i1, $i2, $i3, $i4;
        java.lang.StringBuilder $r0, $r7;
        java.lang.ArrayIndexOutOfBoundsException $r5, $r10;
        java.lang.String $r6, $r11;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 + 1;

        $i3 = i1 - $i2;

        $i4 = $i3 | i0;

        if $i4 >= 0 goto label2;

        if i0 >= 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index < 0: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = new java.lang.ArrayIndexOutOfBoundsException;

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Index > length: ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = new java.lang.ArrayIndexOutOfBoundsException;

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.ArrayIndexOutOfBoundsException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label2:
        return;
    }

    static int checkRange(int, int, int)
    {
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        java.lang.StringBuilder $r0, $r6, $r13;
        java.lang.IndexOutOfBoundsException $r4, $r11, $r18;
        java.lang.String $r5, $r12, $r19;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 = i1 - i0;

        $i4 = i0 | i1;

        $i6 = $i4 | i3;

        $i5 = i2 - i1;

        $i7 = $i6 | $i5;

        if $i7 >= 0 goto label3;

        if i0 < 0 goto label2;

        if i1 >= i0 goto label1;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Beginning index larger than ending index: ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r18 = new java.lang.IndexOutOfBoundsException;

        $r19 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r19);

        throw $r18;

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("End index: ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" >= ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r11 = new java.lang.IndexOutOfBoundsException;

        $r12 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label2:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Beginning index: ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" < 0");

        $r4 = new java.lang.IndexOutOfBoundsException;

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label3:
        return i3;
    }

    public static com.google.protobuf.ByteString copyFrom(java.lang.Iterable)
    {
        java.lang.Iterable r0;
        java.util.Iterator r1, $r3;
        boolean $z0, $z1;
        java.util.Collection $r2;
        com.google.protobuf.ByteString $r4, $r5;
        int i0;

        r0 := @parameter0: java.lang.Iterable;

        $z0 = r0 instanceof java.util.Collection;

        if $z0 != 0 goto label3;

        i0 = 0;

        r1 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        goto label4;

     label3:
        $r2 = (java.util.Collection) r0;

        i0 = interfaceinvoke $r2.<java.util.Collection: int size()>();

     label4:
        if i0 != 0 goto label5;

        $r5 = <com.google.protobuf.ByteString: com.google.protobuf.ByteString EMPTY>;

        return $r5;

     label5:
        $r3 = interfaceinvoke r0.<java.lang.Iterable: java.util.Iterator iterator()>();

        $r4 = staticinvoke <com.google.protobuf.ByteString: com.google.protobuf.ByteString balancedConcat(java.util.Iterator,int)>($r3, i0);

        return $r4;
    }

    public static com.google.protobuf.ByteString copyFrom(java.lang.String, java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.lang.String r0, r1;
        com.google.protobuf.ByteString$LiteralByteString $r2;
        byte[] $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = new com.google.protobuf.ByteString$LiteralByteString;

        $r3 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>(r1);

        specialinvoke $r2.<com.google.protobuf.ByteString$LiteralByteString: void <init>(byte[])>($r3);

        return $r2;
    }

    public static com.google.protobuf.ByteString copyFrom(java.lang.String, java.nio.charset.Charset)
    {
        java.lang.String r0;
        java.nio.charset.Charset r1;
        com.google.protobuf.ByteString$LiteralByteString $r2;
        byte[] $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.nio.charset.Charset;

        $r2 = new com.google.protobuf.ByteString$LiteralByteString;

        $r3 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(r1);

        specialinvoke $r2.<com.google.protobuf.ByteString$LiteralByteString: void <init>(byte[])>($r3);

        return $r2;
    }

    public static com.google.protobuf.ByteString copyFrom(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0;
        int $i0;
        com.google.protobuf.ByteString $r1;

        r0 := @parameter0: java.nio.ByteBuffer;

        $i0 = virtualinvoke r0.<java.nio.ByteBuffer: int remaining()>();

        $r1 = staticinvoke <com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(java.nio.ByteBuffer,int)>(r0, $i0);

        return $r1;
    }

    public static com.google.protobuf.ByteString copyFrom(java.nio.ByteBuffer, int)
    {
        java.nio.ByteBuffer r0;
        int i0, $i1;
        byte[] r1;
        com.google.protobuf.ByteString$LiteralByteString $r3;

        r0 := @parameter0: java.nio.ByteBuffer;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<java.nio.ByteBuffer: int remaining()>();

        staticinvoke <com.google.protobuf.ByteString: int checkRange(int,int,int)>(0, i0, $i1);

        r1 = newarray (byte)[i0];

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r1);

        $r3 = new com.google.protobuf.ByteString$LiteralByteString;

        specialinvoke $r3.<com.google.protobuf.ByteString$LiteralByteString: void <init>(byte[])>(r1);

        return $r3;
    }

    public static com.google.protobuf.ByteString copyFrom(byte[])
    {
        byte[] r0;
        int $i0;
        com.google.protobuf.ByteString $r1;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        $r1 = staticinvoke <com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[],int,int)>(r0, 0, $i0);

        return $r1;
    }

    public static com.google.protobuf.ByteString copyFrom(byte[], int, int)
    {
        byte[] r0, $r3;
        int i0, i1, $i2, $i3;
        com.google.protobuf.ByteString$LiteralByteString $r1;
        com.google.protobuf.ByteString$ByteArrayCopier $r2;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i3 = i0 + i1;

        $i2 = lengthof r0;

        staticinvoke <com.google.protobuf.ByteString: int checkRange(int,int,int)>(i0, $i3, $i2);

        $r1 = new com.google.protobuf.ByteString$LiteralByteString;

        $r2 = <com.google.protobuf.ByteString: com.google.protobuf.ByteString$ByteArrayCopier byteArrayCopier>;

        $r3 = interfaceinvoke $r2.<com.google.protobuf.ByteString$ByteArrayCopier: byte[] copyFrom(byte[],int,int)>(r0, i0, i1);

        specialinvoke $r1.<com.google.protobuf.ByteString$LiteralByteString: void <init>(byte[])>($r3);

        return $r1;
    }

    public static com.google.protobuf.ByteString copyFromUtf8(java.lang.String)
    {
        java.lang.String r0;
        com.google.protobuf.ByteString$LiteralByteString $r1;
        java.nio.charset.Charset $r2;
        byte[] $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = new com.google.protobuf.ByteString$LiteralByteString;

        $r2 = <com.google.protobuf.Internal: java.nio.charset.Charset UTF_8>;

        $r3 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        specialinvoke $r1.<com.google.protobuf.ByteString$LiteralByteString: void <init>(byte[])>($r3);

        return $r1;
    }

    static com.google.protobuf.ByteString$CodedBuilder newCodedBuilder(int)
    {
        int i0;
        com.google.protobuf.ByteString$CodedBuilder $r0;

        i0 := @parameter0: int;

        $r0 = new com.google.protobuf.ByteString$CodedBuilder;

        specialinvoke $r0.<com.google.protobuf.ByteString$CodedBuilder: void <init>(int,com.google.protobuf.ByteString$1)>(i0, null);

        return $r0;
    }

    public static com.google.protobuf.ByteString$Output newOutput()
    {
        com.google.protobuf.ByteString$Output $r0;

        $r0 = new com.google.protobuf.ByteString$Output;

        specialinvoke $r0.<com.google.protobuf.ByteString$Output: void <init>(int)>(128);

        return $r0;
    }

    public static com.google.protobuf.ByteString$Output newOutput(int)
    {
        int i0;
        com.google.protobuf.ByteString$Output $r0;

        i0 := @parameter0: int;

        $r0 = new com.google.protobuf.ByteString$Output;

        specialinvoke $r0.<com.google.protobuf.ByteString$Output: void <init>(int)>(i0);

        return $r0;
    }

    private static com.google.protobuf.ByteString readChunk(java.io.InputStream, int) throws java.io.IOException
    {
        java.io.InputStream r0;
        int i0, i1, $i2, i3;
        byte[] r1;
        com.google.protobuf.ByteString $r2;

        r0 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        r1 = newarray (byte)[i0];

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        $i2 = i0 - i3;

        i1 = virtualinvoke r0.<java.io.InputStream: int read(byte[],int,int)>(r1, i3, $i2);

        if i1 != -1 goto label2;

        goto label3;

     label2:
        i3 = i3 + i1;

        goto label1;

     label3:
        if i3 != 0 goto label4;

        return null;

     label4:
        $r2 = staticinvoke <com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(byte[],int,int)>(r1, 0, i3);

        return $r2;
    }

    public static com.google.protobuf.ByteString readFrom(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream r0;
        com.google.protobuf.ByteString $r1;

        r0 := @parameter0: java.io.InputStream;

        $r1 = staticinvoke <com.google.protobuf.ByteString: com.google.protobuf.ByteString readFrom(java.io.InputStream,int,int)>(r0, 256, 8192);

        return $r1;
    }

    public static com.google.protobuf.ByteString readFrom(java.io.InputStream, int) throws java.io.IOException
    {
        java.io.InputStream r0;
        int i0;
        com.google.protobuf.ByteString $r1;

        r0 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        $r1 = staticinvoke <com.google.protobuf.ByteString: com.google.protobuf.ByteString readFrom(java.io.InputStream,int,int)>(r0, i0, i0);

        return $r1;
    }

    public static com.google.protobuf.ByteString readFrom(java.io.InputStream, int, int) throws java.io.IOException
    {
        java.io.InputStream r0;
        int i0, $i1, i2;
        com.google.protobuf.ByteString r2, $r4;
        java.util.ArrayList $r3;

        r0 := @parameter0: java.io.InputStream;

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

     label1:
        r2 = staticinvoke <com.google.protobuf.ByteString: com.google.protobuf.ByteString readChunk(java.io.InputStream,int)>(r0, i2);

        if r2 != null goto label2;

        $r4 = staticinvoke <com.google.protobuf.ByteString: com.google.protobuf.ByteString copyFrom(java.lang.Iterable)>($r3);

        return $r4;

     label2:
        interfaceinvoke $r3.<java.util.Collection: boolean add(java.lang.Object)>(r2);

        $i1 = i2 * 2;

        i2 = staticinvoke <java.lang.Math: int min(int,int)>($i1, i0);

        goto label1;
    }

    private static int toInt(byte)
    {
        byte b0;
        short $s1;

        b0 := @parameter0: byte;

        $s1 = b0 & 255;

        return $s1;
    }

    public static java.util.Comparator unsignedLexicographicalComparator()
    {
        java.util.Comparator $r0;

        $r0 = <com.google.protobuf.ByteString: java.util.Comparator UNSIGNED_LEXICOGRAPHICAL_COMPARATOR>;

        return $r0;
    }

    static com.google.protobuf.ByteString wrap(java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer r0;
        int i0, $i1, $i2, $i3;
        boolean $z0;
        com.google.protobuf.NioByteString $r1;
        byte[] $r2;
        com.google.protobuf.ByteString $r3;

        r0 := @parameter0: java.nio.ByteBuffer;

        $z0 = virtualinvoke r0.<java.nio.ByteBuffer: boolean hasArray()>();

        if $z0 == 0 goto label1;

        i0 = virtualinvoke r0.<java.nio.ByteBuffer: int arrayOffset()>();

        $r2 = virtualinvoke r0.<java.nio.ByteBuffer: byte[] array()>();

        $i1 = virtualinvoke r0.<java.nio.ByteBuffer: int position()>();

        $i2 = $i1 + i0;

        $i3 = virtualinvoke r0.<java.nio.ByteBuffer: int remaining()>();

        $r3 = staticinvoke <com.google.protobuf.ByteString: com.google.protobuf.ByteString wrap(byte[],int,int)>($r2, $i2, $i3);

        return $r3;

     label1:
        $r1 = new com.google.protobuf.NioByteString;

        specialinvoke $r1.<com.google.protobuf.NioByteString: void <init>(java.nio.ByteBuffer)>(r0);

        return $r1;
    }

    static com.google.protobuf.ByteString wrap(byte[])
    {
        byte[] r0;
        com.google.protobuf.ByteString$LiteralByteString $r1;

        r0 := @parameter0: byte[];

        $r1 = new com.google.protobuf.ByteString$LiteralByteString;

        specialinvoke $r1.<com.google.protobuf.ByteString$LiteralByteString: void <init>(byte[])>(r0);

        return $r1;
    }

    static com.google.protobuf.ByteString wrap(byte[], int, int)
    {
        byte[] r0;
        int i0, i1;
        com.google.protobuf.ByteString$BoundedByteString $r1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new com.google.protobuf.ByteString$BoundedByteString;

        specialinvoke $r1.<com.google.protobuf.ByteString$BoundedByteString: void <init>(byte[],int,int)>(r0, i0, i1);

        return $r1;
    }

    public abstract java.nio.ByteBuffer asReadOnlyByteBuffer();

    public abstract java.util.List asReadOnlyByteBufferList();

    public abstract byte byteAt(int);

    public final com.google.protobuf.ByteString concat(com.google.protobuf.ByteString)
    {
        com.google.protobuf.ByteString r0, r1, $r10;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.StringBuilder $r3;
        java.lang.IllegalArgumentException $r8;
        java.lang.String $r9;

        r0 := @this: com.google.protobuf.ByteString;

        r1 := @parameter0: com.google.protobuf.ByteString;

        $i0 = virtualinvoke r0.<com.google.protobuf.ByteString: int size()>();

        $i1 = 2147483647 - $i0;

        $i2 = virtualinvoke r1.<com.google.protobuf.ByteString: int size()>();

        if $i1 < $i2 goto label1;

        $r10 = staticinvoke <com.google.protobuf.RopeByteString: com.google.protobuf.ByteString concatenate(com.google.protobuf.ByteString,com.google.protobuf.ByteString)>(r0, r1);

        return $r10;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ByteString would be too long: ");

        $i3 = virtualinvoke r0.<com.google.protobuf.ByteString: int size()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+");

        $i4 = virtualinvoke r1.<com.google.protobuf.ByteString: int size()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r8;
    }

    public abstract void copyTo(java.nio.ByteBuffer);

    public void copyTo(byte[], int)
    {
        com.google.protobuf.ByteString r0;
        byte[] r1;
        int i0, $i1;

        r0 := @this: com.google.protobuf.ByteString;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<com.google.protobuf.ByteString: int size()>();

        virtualinvoke r0.<com.google.protobuf.ByteString: void copyTo(byte[],int,int,int)>(r1, 0, i0, $i1);

        return;
    }

    public final void copyTo(byte[], int, int, int)
    {
        com.google.protobuf.ByteString r0;
        byte[] r1;
        int i0, i1, i2, $i3, $i4, $i6, $i7;

        r0 := @this: com.google.protobuf.ByteString;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $i3 = i0 + i2;

        $i4 = virtualinvoke r0.<com.google.protobuf.ByteString: int size()>();

        staticinvoke <com.google.protobuf.ByteString: int checkRange(int,int,int)>(i0, $i3, $i4);

        $i7 = i1 + i2;

        $i6 = lengthof r1;

        staticinvoke <com.google.protobuf.ByteString: int checkRange(int,int,int)>(i1, $i7, $i6);

        if i2 <= 0 goto label1;

        virtualinvoke r0.<com.google.protobuf.ByteString: void copyToInternal(byte[],int,int,int)>(r1, i0, i1, i2);

     label1:
        return;
    }

    protected abstract void copyToInternal(byte[], int, int, int);

    public final boolean endsWith(com.google.protobuf.ByteString)
    {
        com.google.protobuf.ByteString r0, r1, $r2;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, z1;

        r0 := @this: com.google.protobuf.ByteString;

        r1 := @parameter0: com.google.protobuf.ByteString;

        $i0 = virtualinvoke r0.<com.google.protobuf.ByteString: int size()>();

        $i1 = virtualinvoke r1.<com.google.protobuf.ByteString: int size()>();

        if $i0 < $i1 goto label1;

        $i2 = virtualinvoke r0.<com.google.protobuf.ByteString: int size()>();

        $i3 = virtualinvoke r1.<com.google.protobuf.ByteString: int size()>();

        $i4 = $i2 - $i3;

        $r2 = virtualinvoke r0.<com.google.protobuf.ByteString: com.google.protobuf.ByteString substring(int)>($i4);

        $z0 = virtualinvoke $r2.<com.google.protobuf.ByteString: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }

    public abstract boolean equals(java.lang.Object);

    protected abstract int getTreeDepth();

    public final int hashCode()
    {
        com.google.protobuf.ByteString r0;
        int i0, i1, i2, i3;

        r0 := @this: com.google.protobuf.ByteString;

        i0 = r0.<com.google.protobuf.ByteString: int hash>;

        i1 = i0;

        if i0 != 0 goto label2;

        i2 = virtualinvoke r0.<com.google.protobuf.ByteString: int size()>();

        i3 = virtualinvoke r0.<com.google.protobuf.ByteString: int partialHash(int,int,int)>(i2, 0, i2);

        i1 = i3;

        if i3 != 0 goto label1;

        i1 = 1;

     label1:
        r0.<com.google.protobuf.ByteString: int hash> = i1;

     label2:
        return i1;
    }

    abstract byte internalByteAt(int);

    protected abstract boolean isBalanced();

    public final boolean isEmpty()
    {
        com.google.protobuf.ByteString r0;
        int $i0;
        boolean z0;

        r0 := @this: com.google.protobuf.ByteString;

        $i0 = virtualinvoke r0.<com.google.protobuf.ByteString: int size()>();

        if $i0 != 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public abstract boolean isValidUtf8();

    public com.google.protobuf.ByteString$ByteIterator iterator()
    {
        com.google.protobuf.ByteString r0;
        com.google.protobuf.ByteString$1 $r1;

        r0 := @this: com.google.protobuf.ByteString;

        $r1 = new com.google.protobuf.ByteString$1;

        specialinvoke $r1.<com.google.protobuf.ByteString$1: void <init>(com.google.protobuf.ByteString)>(r0);

        return $r1;
    }

    public volatile java.util.Iterator iterator()
    {
        com.google.protobuf.ByteString r0;
        com.google.protobuf.ByteString$ByteIterator $r1;

        r0 := @this: com.google.protobuf.ByteString;

        $r1 = virtualinvoke r0.<com.google.protobuf.ByteString: com.google.protobuf.ByteString$ByteIterator iterator()>();

        return $r1;
    }

    public abstract com.google.protobuf.CodedInputStream newCodedInput();

    public abstract java.io.InputStream newInput();

    protected abstract int partialHash(int, int, int);

    protected abstract int partialIsValidUtf8(int, int, int);

    protected final int peekCachedHashCode()
    {
        com.google.protobuf.ByteString r0;
        int $i0;

        r0 := @this: com.google.protobuf.ByteString;

        $i0 = r0.<com.google.protobuf.ByteString: int hash>;

        return $i0;
    }

    public abstract int size();

    public final boolean startsWith(com.google.protobuf.ByteString)
    {
        com.google.protobuf.ByteString r0, r1, $r2;
        int i0, i1, $i2;
        boolean $z1, z2;

        r0 := @this: com.google.protobuf.ByteString;

        r1 := @parameter0: com.google.protobuf.ByteString;

        i0 = virtualinvoke r0.<com.google.protobuf.ByteString: int size()>();

        i1 = virtualinvoke r1.<com.google.protobuf.ByteString: int size()>();

        z2 = 0;

        if i0 < i1 goto label1;

        z2 = 0;

        $i2 = virtualinvoke r1.<com.google.protobuf.ByteString: int size()>();

        $r2 = virtualinvoke r0.<com.google.protobuf.ByteString: com.google.protobuf.ByteString substring(int,int)>(0, $i2);

        $z1 = virtualinvoke $r2.<com.google.protobuf.ByteString: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        z2 = 1;

     label1:
        return z2;
    }

    public final com.google.protobuf.ByteString substring(int)
    {
        com.google.protobuf.ByteString r0, $r1;
        int i0, $i1;

        r0 := @this: com.google.protobuf.ByteString;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<com.google.protobuf.ByteString: int size()>();

        $r1 = virtualinvoke r0.<com.google.protobuf.ByteString: com.google.protobuf.ByteString substring(int,int)>(i0, $i1);

        return $r1;
    }

    public abstract com.google.protobuf.ByteString substring(int, int);

    public final byte[] toByteArray()
    {
        com.google.protobuf.ByteString r0;
        int i0;
        byte[] r1, $r2;

        r0 := @this: com.google.protobuf.ByteString;

        i0 = virtualinvoke r0.<com.google.protobuf.ByteString: int size()>();

        if i0 != 0 goto label1;

        $r2 = <com.google.protobuf.Internal: byte[] EMPTY_BYTE_ARRAY>;

        return $r2;

     label1:
        r1 = newarray (byte)[i0];

        virtualinvoke r0.<com.google.protobuf.ByteString: void copyToInternal(byte[],int,int,int)>(r1, 0, 0, i0);

        return r1;
    }

    public final java.lang.String toString()
    {
        com.google.protobuf.ByteString r0;
        java.lang.Object[] $r1;
        int $i0, $i1;
        java.lang.String $r2, $r4;
        java.lang.Integer $r3;

        r0 := @this: com.google.protobuf.ByteString;

        $r1 = newarray (java.lang.Object)[2];

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r1[0] = $r2;

        $i1 = virtualinvoke r0.<com.google.protobuf.ByteString: int size()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[1] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("<ByteString@%s size=%d>", $r1);

        return $r4;
    }

    public final java.lang.String toString(java.lang.String) throws java.io.UnsupportedEncodingException
    {
        com.google.protobuf.ByteString r0;
        java.nio.charset.Charset $r1;
        java.lang.Throwable $r2;
        java.io.UnsupportedEncodingException $r3;
        java.lang.String r5, r6;

        r0 := @this: com.google.protobuf.ByteString;

        r5 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>(r5);

        r6 = virtualinvoke r0.<com.google.protobuf.ByteString: java.lang.String toString(java.nio.charset.Charset)>($r1);

     label2:
        return r6;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.io.UnsupportedEncodingException;

        specialinvoke $r3.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>(r5);

        virtualinvoke $r3.<java.io.UnsupportedEncodingException: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r3;

        catch java.nio.charset.UnsupportedCharsetException from label1 to label2 with label3;
    }

    public final java.lang.String toString(java.nio.charset.Charset)
    {
        com.google.protobuf.ByteString r0;
        int $i0;
        java.nio.charset.Charset r1;
        java.lang.String r2;

        r0 := @this: com.google.protobuf.ByteString;

        r1 := @parameter0: java.nio.charset.Charset;

        $i0 = virtualinvoke r0.<com.google.protobuf.ByteString: int size()>();

        if $i0 != 0 goto label1;

        r2 = "";

        goto label2;

     label1:
        r2 = virtualinvoke r0.<com.google.protobuf.ByteString: java.lang.String toStringInternal(java.nio.charset.Charset)>(r1);

     label2:
        return r2;
    }

    protected abstract java.lang.String toStringInternal(java.nio.charset.Charset);

    public final java.lang.String toStringUtf8()
    {
        com.google.protobuf.ByteString r0;
        java.nio.charset.Charset $r1;
        java.lang.String $r2;

        r0 := @this: com.google.protobuf.ByteString;

        $r1 = <com.google.protobuf.Internal: java.nio.charset.Charset UTF_8>;

        $r2 = virtualinvoke r0.<com.google.protobuf.ByteString: java.lang.String toString(java.nio.charset.Charset)>($r1);

        return $r2;
    }

    abstract void writeTo(com.google.protobuf.ByteOutput) throws java.io.IOException;

    public abstract void writeTo(java.io.OutputStream) throws java.io.IOException;

    final void writeTo(java.io.OutputStream, int, int) throws java.io.IOException
    {
        com.google.protobuf.ByteString r0;
        java.io.OutputStream r1;
        int i0, i1, $i2, $i3;

        r0 := @this: com.google.protobuf.ByteString;

        r1 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = i0 + i1;

        $i3 = virtualinvoke r0.<com.google.protobuf.ByteString: int size()>();

        staticinvoke <com.google.protobuf.ByteString: int checkRange(int,int,int)>(i0, $i2, $i3);

        if i1 <= 0 goto label1;

        virtualinvoke r0.<com.google.protobuf.ByteString: void writeToInternal(java.io.OutputStream,int,int)>(r1, i0, i1);

     label1:
        return;
    }

    abstract void writeToInternal(java.io.OutputStream, int, int) throws java.io.IOException;

    abstract void writeToReverse(com.google.protobuf.ByteOutput) throws java.io.IOException;
}
