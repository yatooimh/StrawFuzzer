final class com.google.protobuf.CodedOutputStream$HeapNioEncoder extends com.google.protobuf.CodedOutputStream$ArrayEncoder
{
    private final java.nio.ByteBuffer byteBuffer;
    private int initialPosition;

    void <init>(java.nio.ByteBuffer)
    {
        com.google.protobuf.CodedOutputStream$HeapNioEncoder r0;
        java.nio.ByteBuffer r1;
        byte[] $r2;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.google.protobuf.CodedOutputStream$HeapNioEncoder;

        r1 := @parameter0: java.nio.ByteBuffer;

        $r2 = virtualinvoke r1.<java.nio.ByteBuffer: byte[] array()>();

        $i0 = virtualinvoke r1.<java.nio.ByteBuffer: int arrayOffset()>();

        $i1 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>();

        $i2 = $i0 + $i1;

        $i3 = virtualinvoke r1.<java.nio.ByteBuffer: int remaining()>();

        specialinvoke r0.<com.google.protobuf.CodedOutputStream$ArrayEncoder: void <init>(byte[],int,int)>($r2, $i2, $i3);

        r0.<com.google.protobuf.CodedOutputStream$HeapNioEncoder: java.nio.ByteBuffer byteBuffer> = r1;

        $i4 = virtualinvoke r1.<java.nio.ByteBuffer: int position()>();

        r0.<com.google.protobuf.CodedOutputStream$HeapNioEncoder: int initialPosition> = $i4;

        return;
    }

    public void flush()
    {
        com.google.protobuf.CodedOutputStream$HeapNioEncoder r0;
        java.nio.ByteBuffer $r1;
        int $i0, $i1, $i2;

        r0 := @this: com.google.protobuf.CodedOutputStream$HeapNioEncoder;

        $r1 = r0.<com.google.protobuf.CodedOutputStream$HeapNioEncoder: java.nio.ByteBuffer byteBuffer>;

        $i0 = r0.<com.google.protobuf.CodedOutputStream$HeapNioEncoder: int initialPosition>;

        $i1 = virtualinvoke r0.<com.google.protobuf.CodedOutputStream$HeapNioEncoder: int getTotalBytesWritten()>();

        $i2 = $i0 + $i1;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i2);

        return;
    }
}
