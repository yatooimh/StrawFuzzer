class com.google.protobuf.NioByteString$1 extends java.io.InputStream
{
    private final java.nio.ByteBuffer buf;
    final com.google.protobuf.NioByteString this$0;

    void <init>(com.google.protobuf.NioByteString)
    {
        com.google.protobuf.NioByteString$1 r0;
        com.google.protobuf.NioByteString r1, $r2;
        java.nio.ByteBuffer $r3, $r4;

        r0 := @this: com.google.protobuf.NioByteString$1;

        r1 := @parameter0: com.google.protobuf.NioByteString;

        r0.<com.google.protobuf.NioByteString$1: com.google.protobuf.NioByteString this$0> = r1;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        $r2 = r0.<com.google.protobuf.NioByteString$1: com.google.protobuf.NioByteString this$0>;

        $r3 = staticinvoke <com.google.protobuf.NioByteString: java.nio.ByteBuffer access$000(com.google.protobuf.NioByteString)>($r2);

        $r4 = virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer slice()>();

        r0.<com.google.protobuf.NioByteString$1: java.nio.ByteBuffer buf> = $r4;

        return;
    }

    public int available() throws java.io.IOException
    {
        com.google.protobuf.NioByteString$1 r0;
        java.nio.ByteBuffer $r1;
        int $i0;

        r0 := @this: com.google.protobuf.NioByteString$1;

        $r1 = r0.<com.google.protobuf.NioByteString$1: java.nio.ByteBuffer buf>;

        $i0 = virtualinvoke $r1.<java.nio.ByteBuffer: int remaining()>();

        return $i0;
    }

    public void mark(int)
    {
        com.google.protobuf.NioByteString$1 r0;
        int i0;
        java.nio.ByteBuffer $r1;

        r0 := @this: com.google.protobuf.NioByteString$1;

        i0 := @parameter0: int;

        $r1 = r0.<com.google.protobuf.NioByteString$1: java.nio.ByteBuffer buf>;

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.Buffer mark()>();

        return;
    }

    public boolean markSupported()
    {
        com.google.protobuf.NioByteString$1 r0;

        r0 := @this: com.google.protobuf.NioByteString$1;

        return 1;
    }

    public int read() throws java.io.IOException
    {
        com.google.protobuf.NioByteString$1 r0;
        java.nio.ByteBuffer $r1, $r2;
        boolean $z0;
        byte $b0;
        short $s1;

        r0 := @this: com.google.protobuf.NioByteString$1;

        $r1 = r0.<com.google.protobuf.NioByteString$1: java.nio.ByteBuffer buf>;

        $z0 = virtualinvoke $r1.<java.nio.ByteBuffer: boolean hasRemaining()>();

        if $z0 != 0 goto label1;

        return -1;

     label1:
        $r2 = r0.<com.google.protobuf.NioByteString$1: java.nio.ByteBuffer buf>;

        $b0 = virtualinvoke $r2.<java.nio.ByteBuffer: byte get()>();

        $s1 = $b0 & 255;

        return $s1;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        com.google.protobuf.NioByteString$1 r0;
        byte[] r1;
        int i0, $i1, i2, i3;
        java.nio.ByteBuffer $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: com.google.protobuf.NioByteString$1;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        $r2 = r0.<com.google.protobuf.NioByteString$1: java.nio.ByteBuffer buf>;

        $z0 = virtualinvoke $r2.<java.nio.ByteBuffer: boolean hasRemaining()>();

        if $z0 != 0 goto label1;

        return -1;

     label1:
        $r3 = r0.<com.google.protobuf.NioByteString$1: java.nio.ByteBuffer buf>;

        $i1 = virtualinvoke $r3.<java.nio.ByteBuffer: int remaining()>();

        i3 = staticinvoke <java.lang.Math: int min(int,int)>(i2, $i1);

        $r4 = r0.<com.google.protobuf.NioByteString$1: java.nio.ByteBuffer buf>;

        virtualinvoke $r4.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>(r1, i0, i3);

        return i3;
    }

    public void reset() throws java.io.IOException
    {
        com.google.protobuf.NioByteString$1 r0;
        java.nio.ByteBuffer $r2;
        java.lang.Throwable $r4;
        java.io.IOException $r5;

        r0 := @this: com.google.protobuf.NioByteString$1;

     label1:
        $r2 = r0.<com.google.protobuf.NioByteString$1: java.nio.ByteBuffer buf>;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer reset()>();

     label2:
        return;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch java.nio.InvalidMarkException from label1 to label2 with label3;
    }
}
