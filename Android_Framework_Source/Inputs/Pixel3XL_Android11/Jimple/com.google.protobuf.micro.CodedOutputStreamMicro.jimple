public final class com.google.protobuf.micro.CodedOutputStreamMicro extends java.lang.Object
{
    public static final int DEFAULT_BUFFER_SIZE;
    public static final int LITTLE_ENDIAN_32_SIZE;
    public static final int LITTLE_ENDIAN_64_SIZE;
    private final byte[] buffer;
    private final int limit;
    private final java.io.OutputStream output;
    private int position;

    private void <init>(java.io.OutputStream, byte[])
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        java.io.OutputStream r1;
        byte[] r2;
        int $i0;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.protobuf.micro.CodedOutputStreamMicro: java.io.OutputStream output> = r1;

        r0.<com.google.protobuf.micro.CodedOutputStreamMicro: byte[] buffer> = r2;

        r0.<com.google.protobuf.micro.CodedOutputStreamMicro: int position> = 0;

        $i0 = lengthof r2;

        r0.<com.google.protobuf.micro.CodedOutputStreamMicro: int limit> = $i0;

        return;
    }

    private void <init>(byte[], int, int)
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        byte[] r1;
        int i0, i1, $i2;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.protobuf.micro.CodedOutputStreamMicro: java.io.OutputStream output> = null;

        r0.<com.google.protobuf.micro.CodedOutputStreamMicro: byte[] buffer> = r1;

        r0.<com.google.protobuf.micro.CodedOutputStreamMicro: int position> = i0;

        $i2 = i0 + i1;

        r0.<com.google.protobuf.micro.CodedOutputStreamMicro: int limit> = $i2;

        return;
    }

    public static int computeBoolSize(int, boolean)
    {
        int i0, $i1, $i2, $i3;
        boolean z0;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $i1 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeBoolSizeNoTag(boolean)>(z0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeBoolSizeNoTag(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        return 1;
    }

    public static int computeByteArraySize(int, byte[])
    {
        int i0, $i1, $i2, $i3;
        byte[] r0;

        i0 := @parameter0: int;

        r0 := @parameter1: byte[];

        $i1 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeByteArraySizeNoTag(byte[])>(r0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeByteArraySizeNoTag(byte[])
    {
        byte[] r0;
        int $i0, $i1, $i2, $i3;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        $i1 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeRawVarint32Size(int)>($i0);

        $i2 = lengthof r0;

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeBytesSize(int, com.google.protobuf.micro.ByteStringMicro)
    {
        int i0, $i1, $i2, $i3;
        com.google.protobuf.micro.ByteStringMicro r0;

        i0 := @parameter0: int;

        r0 := @parameter1: com.google.protobuf.micro.ByteStringMicro;

        $i1 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeBytesSizeNoTag(com.google.protobuf.micro.ByteStringMicro)>(r0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeBytesSizeNoTag(com.google.protobuf.micro.ByteStringMicro)
    {
        com.google.protobuf.micro.ByteStringMicro r0;
        int $i0, $i1, $i2, $i3;

        r0 := @parameter0: com.google.protobuf.micro.ByteStringMicro;

        $i0 = virtualinvoke r0.<com.google.protobuf.micro.ByteStringMicro: int size()>();

        $i1 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeRawVarint32Size(int)>($i0);

        $i2 = virtualinvoke r0.<com.google.protobuf.micro.ByteStringMicro: int size()>();

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeDoubleSize(int, double)
    {
        int i0, $i1, $i2, $i3;
        double d0;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        $i1 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeDoubleSizeNoTag(double)>(d0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeDoubleSizeNoTag(double)
    {
        double d0;

        d0 := @parameter0: double;

        return 8;
    }

    public static int computeEnumSize(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeEnumSizeNoTag(int)>(i1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeEnumSizeNoTag(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeRawVarint32Size(int)>(i0);

        return $i1;
    }

    public static int computeFixed32Size(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeFixed32SizeNoTag(int)>(i1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeFixed32SizeNoTag(int)
    {
        int i0;

        i0 := @parameter0: int;

        return 4;
    }

    public static int computeFixed64Size(int, long)
    {
        int i0, $i2, $i3, $i4;
        long l1;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $i2 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeFixed64SizeNoTag(long)>(l1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeFixed64SizeNoTag(long)
    {
        long l0;

        l0 := @parameter0: long;

        return 8;
    }

    public static int computeFloatSize(int, float)
    {
        int i0, $i1, $i2, $i3;
        float f0;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        $i1 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeFloatSizeNoTag(float)>(f0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeFloatSizeNoTag(float)
    {
        float f0;

        f0 := @parameter0: float;

        return 4;
    }

    public static int computeGroupSize(int, com.google.protobuf.micro.MessageMicro)
    {
        int i0, $i1, $i2, $i3, $i4;
        com.google.protobuf.micro.MessageMicro r0;

        i0 := @parameter0: int;

        r0 := @parameter1: com.google.protobuf.micro.MessageMicro;

        $i1 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeTagSize(int)>(i0);

        $i2 = $i1 * 2;

        $i3 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeGroupSizeNoTag(com.google.protobuf.micro.MessageMicro)>(r0);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeGroupSizeNoTag(com.google.protobuf.micro.MessageMicro)
    {
        com.google.protobuf.micro.MessageMicro r0;
        int $i0;

        r0 := @parameter0: com.google.protobuf.micro.MessageMicro;

        $i0 = virtualinvoke r0.<com.google.protobuf.micro.MessageMicro: int getSerializedSize()>();

        return $i0;
    }

    public static int computeInt32Size(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeInt32SizeNoTag(int)>(i1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeInt32SizeNoTag(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i1 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeRawVarint32Size(int)>(i0);

        return $i1;

     label1:
        return 10;
    }

    public static int computeInt64Size(int, long)
    {
        int i0, $i2, $i3, $i4;
        long l1;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $i2 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeInt64SizeNoTag(long)>(l1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeInt64SizeNoTag(long)
    {
        long l0;
        int $i1;

        l0 := @parameter0: long;

        $i1 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeRawVarint64Size(long)>(l0);

        return $i1;
    }

    public static int computeMessageSize(int, com.google.protobuf.micro.MessageMicro)
    {
        int i0, $i1, $i2, $i3;
        com.google.protobuf.micro.MessageMicro r0;

        i0 := @parameter0: int;

        r0 := @parameter1: com.google.protobuf.micro.MessageMicro;

        $i1 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeMessageSizeNoTag(com.google.protobuf.micro.MessageMicro)>(r0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeMessageSizeNoTag(com.google.protobuf.micro.MessageMicro)
    {
        com.google.protobuf.micro.MessageMicro r0;
        int i0, $i1, $i2;

        r0 := @parameter0: com.google.protobuf.micro.MessageMicro;

        i0 = virtualinvoke r0.<com.google.protobuf.micro.MessageMicro: int getSerializedSize()>();

        $i1 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeRawVarint32Size(int)>(i0);

        $i2 = $i1 + i0;

        return $i2;
    }

    public static int computeRawVarint32Size(int)
    {
        int i0, $i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        $i1 = i0 & -128;

        if $i1 != 0 goto label1;

        return 1;

     label1:
        $i2 = i0 & -16384;

        if $i2 != 0 goto label2;

        return 2;

     label2:
        $i3 = -2097152 & i0;

        if $i3 != 0 goto label3;

        return 3;

     label3:
        $i4 = -268435456 & i0;

        if $i4 != 0 goto label4;

        return 4;

     label4:
        return 5;
    }

    public static int computeRawVarint64Size(long)
    {
        long l0, $l1, $l3, $l5, $l7, $l9, $l11, $l13, $l15, $l17;
        byte $b2, $b4, $b6, $b8, $b10, $b12, $b14, $b16, $b18;

        l0 := @parameter0: long;

        $l1 = -128L & l0;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        return 1;

     label1:
        $l3 = -16384L & l0;

        $b4 = $l3 cmp 0L;

        if $b4 != 0 goto label2;

        return 2;

     label2:
        $l5 = -2097152L & l0;

        $b6 = $l5 cmp 0L;

        if $b6 != 0 goto label3;

        return 3;

     label3:
        $l7 = -268435456L & l0;

        $b8 = $l7 cmp 0L;

        if $b8 != 0 goto label4;

        return 4;

     label4:
        $l9 = -34359738368L & l0;

        $b10 = $l9 cmp 0L;

        if $b10 != 0 goto label5;

        return 5;

     label5:
        $l11 = -4398046511104L & l0;

        $b12 = $l11 cmp 0L;

        if $b12 != 0 goto label6;

        return 6;

     label6:
        $l13 = -562949953421312L & l0;

        $b14 = $l13 cmp 0L;

        if $b14 != 0 goto label7;

        return 7;

     label7:
        $l15 = -72057594037927936L & l0;

        $b16 = $l15 cmp 0L;

        if $b16 != 0 goto label8;

        return 8;

     label8:
        $l17 = -9223372036854775808L & l0;

        $b18 = $l17 cmp 0L;

        if $b18 != 0 goto label9;

        return 9;

     label9:
        return 10;
    }

    public static int computeSFixed32Size(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeSFixed32SizeNoTag(int)>(i1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeSFixed32SizeNoTag(int)
    {
        int i0;

        i0 := @parameter0: int;

        return 4;
    }

    public static int computeSFixed64Size(int, long)
    {
        int i0, $i2, $i3, $i4;
        long l1;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $i2 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeSFixed64SizeNoTag(long)>(l1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeSFixed64SizeNoTag(long)
    {
        long l0;

        l0 := @parameter0: long;

        return 8;
    }

    public static int computeSInt32Size(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeSInt32SizeNoTag(int)>(i1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeSInt32SizeNoTag(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int encodeZigZag32(int)>(i0);

        $i2 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeRawVarint32Size(int)>($i1);

        return $i2;
    }

    public static int computeSInt64Size(int, long)
    {
        int i0, $i2, $i3, $i4;
        long l1;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $i2 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeSInt64SizeNoTag(long)>(l1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeSInt64SizeNoTag(long)
    {
        long l0, $l1;
        int $i2;

        l0 := @parameter0: long;

        $l1 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: long encodeZigZag64(long)>(l0);

        $i2 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeRawVarint64Size(long)>($l1);

        return $i2;
    }

    public static int computeStringSize(int, java.lang.String)
    {
        int i0, $i1, $i2, $i3;
        java.lang.String r0;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        $i1 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeTagSize(int)>(i0);

        $i2 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeStringSizeNoTag(java.lang.String)>(r0);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public static int computeStringSizeNoTag(java.lang.String)
    {
        int i0, i1, $i2, $i3;
        java.lang.Throwable $r0;
        java.lang.RuntimeException $r1;
        java.lang.String r2;
        byte[] r3;

        r2 := @parameter0: java.lang.String;

     label1:
        r3 = virtualinvoke r2.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $i2 = lengthof r3;

        i0 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeRawVarint32Size(int)>($i2);

        i1 = lengthof r3;

     label2:
        $i3 = i0 + i1;

        return $i3;

     label3:
        $r0 := @caughtexception;

        $r1 = new java.lang.RuntimeException;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>("UTF-8 not supported.");

        throw $r1;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static int computeTagSize(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = staticinvoke <com.google.protobuf.micro.WireFormatMicro: int makeTag(int,int)>(i0, 0);

        $i2 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeRawVarint32Size(int)>($i1);

        return $i2;
    }

    public static int computeUInt32Size(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeUInt32SizeNoTag(int)>(i1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeUInt32SizeNoTag(int)
    {
        int i0, $i1;

        i0 := @parameter0: int;

        $i1 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeRawVarint32Size(int)>(i0);

        return $i1;
    }

    public static int computeUInt64Size(int, long)
    {
        int i0, $i2, $i3, $i4;
        long l1;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $i2 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeTagSize(int)>(i0);

        $i3 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeUInt64SizeNoTag(long)>(l1);

        $i4 = $i2 + $i3;

        return $i4;
    }

    public static int computeUInt64SizeNoTag(long)
    {
        long l0;
        int $i1;

        l0 := @parameter0: long;

        $i1 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int computeRawVarint64Size(long)>(l0);

        return $i1;
    }

    public static int encodeZigZag32(int)
    {
        int i0, $i1, $i2, $i3;

        i0 := @parameter0: int;

        $i2 = i0 << 1;

        $i1 = i0 >> 31;

        $i3 = $i2 ^ $i1;

        return $i3;
    }

    public static long encodeZigZag64(long)
    {
        long l0, $l1, $l2, $l3;

        l0 := @parameter0: long;

        $l2 = l0 << 1;

        $l1 = l0 >> 63;

        $l3 = $l2 ^ $l1;

        return $l3;
    }

    public static com.google.protobuf.micro.CodedOutputStreamMicro newInstance(java.io.OutputStream)
    {
        java.io.OutputStream r0;
        com.google.protobuf.micro.CodedOutputStreamMicro $r1;

        r0 := @parameter0: java.io.OutputStream;

        $r1 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: com.google.protobuf.micro.CodedOutputStreamMicro newInstance(java.io.OutputStream,int)>(r0, 4096);

        return $r1;
    }

    public static com.google.protobuf.micro.CodedOutputStreamMicro newInstance(java.io.OutputStream, int)
    {
        java.io.OutputStream r0;
        int i0;
        com.google.protobuf.micro.CodedOutputStreamMicro $r1;
        byte[] $r2;

        r0 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        $r1 = new com.google.protobuf.micro.CodedOutputStreamMicro;

        $r2 = newarray (byte)[i0];

        specialinvoke $r1.<com.google.protobuf.micro.CodedOutputStreamMicro: void <init>(java.io.OutputStream,byte[])>(r0, $r2);

        return $r1;
    }

    public static com.google.protobuf.micro.CodedOutputStreamMicro newInstance(byte[])
    {
        byte[] r0;
        int $i0;
        com.google.protobuf.micro.CodedOutputStreamMicro $r1;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        $r1 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: com.google.protobuf.micro.CodedOutputStreamMicro newInstance(byte[],int,int)>(r0, 0, $i0);

        return $r1;
    }

    public static com.google.protobuf.micro.CodedOutputStreamMicro newInstance(byte[], int, int)
    {
        byte[] r0;
        int i0, i1;
        com.google.protobuf.micro.CodedOutputStreamMicro $r1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new com.google.protobuf.micro.CodedOutputStreamMicro;

        specialinvoke $r1.<com.google.protobuf.micro.CodedOutputStreamMicro: void <init>(byte[],int,int)>(r0, i0, i1);

        return $r1;
    }

    private void refreshBuffer() throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        java.io.OutputStream r1;
        com.google.protobuf.micro.CodedOutputStreamMicro$OutOfSpaceException $r2;
        int $i0;
        byte[] $r3;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        r1 = r0.<com.google.protobuf.micro.CodedOutputStreamMicro: java.io.OutputStream output>;

        if r1 == null goto label1;

        $r3 = r0.<com.google.protobuf.micro.CodedOutputStreamMicro: byte[] buffer>;

        $i0 = r0.<com.google.protobuf.micro.CodedOutputStreamMicro: int position>;

        virtualinvoke r1.<java.io.OutputStream: void write(byte[],int,int)>($r3, 0, $i0);

        r0.<com.google.protobuf.micro.CodedOutputStreamMicro: int position> = 0;

        return;

     label1:
        $r2 = new com.google.protobuf.micro.CodedOutputStreamMicro$OutOfSpaceException;

        specialinvoke $r2.<com.google.protobuf.micro.CodedOutputStreamMicro$OutOfSpaceException: void <init>()>();

        throw $r2;
    }

    public void checkNoSpaceLeft()
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        int $i0;
        java.lang.IllegalStateException $r1;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        $i0 = virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: int spaceLeft()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Did not write as much data as expected.");

        throw $r1;
    }

    public void flush() throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        java.io.OutputStream $r1;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        $r1 = r0.<com.google.protobuf.micro.CodedOutputStreamMicro: java.io.OutputStream output>;

        if $r1 == null goto label1;

        specialinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void refreshBuffer()>();

     label1:
        return;
    }

    public int spaceLeft()
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        java.io.OutputStream $r1;
        java.lang.UnsupportedOperationException $r2;
        int $i0, $i1, $i2;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        $r1 = r0.<com.google.protobuf.micro.CodedOutputStreamMicro: java.io.OutputStream output>;

        if $r1 != null goto label1;

        $i1 = r0.<com.google.protobuf.micro.CodedOutputStreamMicro: int limit>;

        $i0 = r0.<com.google.protobuf.micro.CodedOutputStreamMicro: int position>;

        $i2 = $i1 - $i0;

        return $i2;

     label1:
        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("spaceLeft() can only be called on CodedOutputStreams that are writing to a flat array.");

        throw $r2;
    }

    public void writeBool(int, boolean) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        int i0;
        boolean z0;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeTag(int,int)>(i0, 0);

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeBoolNoTag(boolean)>(z0);

        return;
    }

    public void writeBoolNoTag(boolean) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        boolean z0;
        int i0;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        z0 := @parameter0: boolean;

        i0 = (int) z0;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawByte(int)>(i0);

        return;
    }

    public void writeByteArray(int, byte[]) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        int i0;
        byte[] r1;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeTag(int,int)>(i0, 2);

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeByteArrayNoTag(byte[])>(r1);

        return;
    }

    public void writeByteArrayNoTag(byte[]) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        byte[] r1;
        int $i0;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawVarint32(int)>($i0);

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawBytes(byte[])>(r1);

        return;
    }

    public void writeBytes(int, com.google.protobuf.micro.ByteStringMicro) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        int i0;
        com.google.protobuf.micro.ByteStringMicro r1;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        i0 := @parameter0: int;

        r1 := @parameter1: com.google.protobuf.micro.ByteStringMicro;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeTag(int,int)>(i0, 2);

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeBytesNoTag(com.google.protobuf.micro.ByteStringMicro)>(r1);

        return;
    }

    public void writeBytesNoTag(com.google.protobuf.micro.ByteStringMicro) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        int $i0;
        com.google.protobuf.micro.ByteStringMicro r1;
        byte[] r2;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        r1 := @parameter0: com.google.protobuf.micro.ByteStringMicro;

        r2 = virtualinvoke r1.<com.google.protobuf.micro.ByteStringMicro: byte[] toByteArray()>();

        $i0 = lengthof r2;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawVarint32(int)>($i0);

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawBytes(byte[])>(r2);

        return;
    }

    public void writeDouble(int, double) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        int i0;
        double d0;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeTag(int,int)>(i0, 1);

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeDoubleNoTag(double)>(d0);

        return;
    }

    public void writeDoubleNoTag(double) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        double d0;
        long $l0;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        d0 := @parameter0: double;

        $l0 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d0);

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawLittleEndian64(long)>($l0);

        return;
    }

    public void writeEnum(int, int) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        int i0, i1;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeTag(int,int)>(i0, 0);

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeEnumNoTag(int)>(i1);

        return;
    }

    public void writeEnumNoTag(int) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        int i0;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawVarint32(int)>(i0);

        return;
    }

    public void writeFixed32(int, int) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        int i0, i1;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeTag(int,int)>(i0, 5);

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeFixed32NoTag(int)>(i1);

        return;
    }

    public void writeFixed32NoTag(int) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        int i0;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawLittleEndian32(int)>(i0);

        return;
    }

    public void writeFixed64(int, long) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        int i0;
        long l1;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeTag(int,int)>(i0, 1);

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeFixed64NoTag(long)>(l1);

        return;
    }

    public void writeFixed64NoTag(long) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        long l0;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        l0 := @parameter0: long;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawLittleEndian64(long)>(l0);

        return;
    }

    public void writeFloat(int, float) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        int i0;
        float f0;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeTag(int,int)>(i0, 5);

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeFloatNoTag(float)>(f0);

        return;
    }

    public void writeFloatNoTag(float) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        float f0;
        int $i0;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        f0 := @parameter0: float;

        $i0 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawLittleEndian32(int)>($i0);

        return;
    }

    public void writeGroup(int, com.google.protobuf.micro.MessageMicro) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        int i0;
        com.google.protobuf.micro.MessageMicro r1;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        i0 := @parameter0: int;

        r1 := @parameter1: com.google.protobuf.micro.MessageMicro;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeTag(int,int)>(i0, 3);

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeGroupNoTag(com.google.protobuf.micro.MessageMicro)>(r1);

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeTag(int,int)>(i0, 4);

        return;
    }

    public void writeGroupNoTag(com.google.protobuf.micro.MessageMicro) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        com.google.protobuf.micro.MessageMicro r1;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        r1 := @parameter0: com.google.protobuf.micro.MessageMicro;

        virtualinvoke r1.<com.google.protobuf.micro.MessageMicro: void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro)>(r0);

        return;
    }

    public void writeInt32(int, int) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        int i0, i1;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeTag(int,int)>(i0, 0);

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeInt32NoTag(int)>(i1);

        return;
    }

    public void writeInt32NoTag(int) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        int i0;
        long $l1;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawVarint32(int)>(i0);

        goto label2;

     label1:
        $l1 = (long) i0;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawVarint64(long)>($l1);

     label2:
        return;
    }

    public void writeInt64(int, long) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        int i0;
        long l1;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeTag(int,int)>(i0, 0);

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeInt64NoTag(long)>(l1);

        return;
    }

    public void writeInt64NoTag(long) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        long l0;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        l0 := @parameter0: long;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawVarint64(long)>(l0);

        return;
    }

    public void writeMessage(int, com.google.protobuf.micro.MessageMicro) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        int i0;
        com.google.protobuf.micro.MessageMicro r1;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        i0 := @parameter0: int;

        r1 := @parameter1: com.google.protobuf.micro.MessageMicro;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeTag(int,int)>(i0, 2);

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeMessageNoTag(com.google.protobuf.micro.MessageMicro)>(r1);

        return;
    }

    public void writeMessageNoTag(com.google.protobuf.micro.MessageMicro) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        com.google.protobuf.micro.MessageMicro r1;
        int $i0;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        r1 := @parameter0: com.google.protobuf.micro.MessageMicro;

        $i0 = virtualinvoke r1.<com.google.protobuf.micro.MessageMicro: int getCachedSize()>();

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawVarint32(int)>($i0);

        virtualinvoke r1.<com.google.protobuf.micro.MessageMicro: void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro)>(r0);

        return;
    }

    public void writeRawByte(byte) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        byte b0, $b5;
        byte[] r1;
        int i1, $i2, $i3, $i4;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        b0 := @parameter0: byte;

        $i3 = r0.<com.google.protobuf.micro.CodedOutputStreamMicro: int position>;

        $i2 = r0.<com.google.protobuf.micro.CodedOutputStreamMicro: int limit>;

        if $i3 != $i2 goto label1;

        specialinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void refreshBuffer()>();

     label1:
        r1 = r0.<com.google.protobuf.micro.CodedOutputStreamMicro: byte[] buffer>;

        i1 = r0.<com.google.protobuf.micro.CodedOutputStreamMicro: int position>;

        $i4 = i1 + 1;

        r0.<com.google.protobuf.micro.CodedOutputStreamMicro: int position> = $i4;

        $b5 = (byte) b0;

        r1[i1] = $b5;

        return;
    }

    public void writeRawByte(int) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        int i0;
        byte $b1;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        i0 := @parameter0: int;

        $b1 = (byte) i0;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawByte(byte)>($b1);

        return;
    }

    public void writeRawBytes(byte[]) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        byte[] r1;
        int $i0;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawBytes(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    public void writeRawBytes(byte[], int, int) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        byte[] r1, $r2, $r4, $r5;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9, i10, i11;
        java.io.OutputStream $r3;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        r1 := @parameter0: byte[];

        i6 := @parameter1: int;

        i7 := @parameter2: int;

        i8 = r0.<com.google.protobuf.micro.CodedOutputStreamMicro: int limit>;

        i0 = r0.<com.google.protobuf.micro.CodedOutputStreamMicro: int position>;

        $i1 = i8 - i0;

        if $i1 < i7 goto label1;

        $r5 = r0.<com.google.protobuf.micro.CodedOutputStreamMicro: byte[] buffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i6, $r5, i0, i7);

        $i4 = r0.<com.google.protobuf.micro.CodedOutputStreamMicro: int position>;

        $i5 = $i4 + i7;

        r0.<com.google.protobuf.micro.CodedOutputStreamMicro: int position> = $i5;

        goto label3;

     label1:
        i9 = i8 - i0;

        $r2 = r0.<com.google.protobuf.micro.CodedOutputStreamMicro: byte[] buffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i6, $r2, i0, i9);

        i10 = i6 + i9;

        i11 = i7 - i9;

        $i2 = r0.<com.google.protobuf.micro.CodedOutputStreamMicro: int limit>;

        r0.<com.google.protobuf.micro.CodedOutputStreamMicro: int position> = $i2;

        specialinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void refreshBuffer()>();

        $i3 = r0.<com.google.protobuf.micro.CodedOutputStreamMicro: int limit>;

        if i11 > $i3 goto label2;

        $r4 = r0.<com.google.protobuf.micro.CodedOutputStreamMicro: byte[] buffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i10, $r4, 0, i11);

        r0.<com.google.protobuf.micro.CodedOutputStreamMicro: int position> = i11;

        goto label3;

     label2:
        $r3 = r0.<com.google.protobuf.micro.CodedOutputStreamMicro: java.io.OutputStream output>;

        virtualinvoke $r3.<java.io.OutputStream: void write(byte[],int,int)>(r1, i10, i11);

     label3:
        return;
    }

    public void writeRawLittleEndian32(int) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        i0 := @parameter0: int;

        $i1 = i0 & 255;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawByte(int)>($i1);

        $i2 = i0 >> 8;

        $i3 = $i2 & 255;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawByte(int)>($i3);

        $i4 = i0 >> 16;

        $i5 = $i4 & 255;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawByte(int)>($i5);

        $i6 = i0 >> 24;

        $i7 = $i6 & 255;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawByte(int)>($i7);

        return;
    }

    public void writeRawLittleEndian64(long) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        long l0, $l3, $l6, $l9, $l12, $l15, $l18, $l21;
        int $i1, $i2, $i4, $i5, $i7, $i8, $i10, $i11, $i13, $i14, $i16, $i17, $i19, $i20, $i22, $i23;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        l0 := @parameter0: long;

        $i1 = (int) l0;

        $i2 = $i1 & 255;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawByte(int)>($i2);

        $l3 = l0 >> 8;

        $i4 = (int) $l3;

        $i5 = $i4 & 255;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawByte(int)>($i5);

        $l6 = l0 >> 16;

        $i7 = (int) $l6;

        $i8 = $i7 & 255;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawByte(int)>($i8);

        $l9 = l0 >> 24;

        $i10 = (int) $l9;

        $i11 = $i10 & 255;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawByte(int)>($i11);

        $l12 = l0 >> 32;

        $i13 = (int) $l12;

        $i14 = $i13 & 255;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawByte(int)>($i14);

        $l15 = l0 >> 40;

        $i16 = (int) $l15;

        $i17 = $i16 & 255;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawByte(int)>($i17);

        $l18 = l0 >> 48;

        $i19 = (int) $l18;

        $i20 = $i19 & 255;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawByte(int)>($i20);

        $l21 = l0 >> 56;

        $i22 = (int) $l21;

        $i23 = $i22 & 255;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawByte(int)>($i23);

        return;
    }

    public void writeRawVarint32(int) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        int $i0, $i1, $i2, i3;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        i3 := @parameter0: int;

     label1:
        $i0 = i3 & -128;

        if $i0 != 0 goto label2;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawByte(int)>(i3);

        return;

     label2:
        $i1 = i3 & 127;

        $i2 = $i1 | 128;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawByte(int)>($i2);

        i3 = i3 >>> 7;

        goto label1;
    }

    public void writeRawVarint64(long) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        long $l0, l6;
        byte $b1;
        int $i2, $i3, $i4, $i5;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        l6 := @parameter0: long;

     label1:
        $l0 = -128L & l6;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label2;

        $i5 = (int) l6;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawByte(int)>($i5);

        return;

     label2:
        $i2 = (int) l6;

        $i3 = $i2 & 127;

        $i4 = $i3 | 128;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawByte(int)>($i4);

        l6 = l6 >>> 7;

        goto label1;
    }

    public void writeSFixed32(int, int) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        int i0, i1;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeTag(int,int)>(i0, 5);

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeSFixed32NoTag(int)>(i1);

        return;
    }

    public void writeSFixed32NoTag(int) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        int i0;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawLittleEndian32(int)>(i0);

        return;
    }

    public void writeSFixed64(int, long) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        int i0;
        long l1;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeTag(int,int)>(i0, 1);

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeSFixed64NoTag(long)>(l1);

        return;
    }

    public void writeSFixed64NoTag(long) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        long l0;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        l0 := @parameter0: long;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawLittleEndian64(long)>(l0);

        return;
    }

    public void writeSInt32(int, int) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        int i0, i1;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeTag(int,int)>(i0, 0);

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeSInt32NoTag(int)>(i1);

        return;
    }

    public void writeSInt32NoTag(int) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        int i0, $i1;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        i0 := @parameter0: int;

        $i1 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: int encodeZigZag32(int)>(i0);

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawVarint32(int)>($i1);

        return;
    }

    public void writeSInt64(int, long) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        int i0;
        long l1;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeTag(int,int)>(i0, 0);

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeSInt64NoTag(long)>(l1);

        return;
    }

    public void writeSInt64NoTag(long) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        long l0, $l1;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        l0 := @parameter0: long;

        $l1 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: long encodeZigZag64(long)>(l0);

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawVarint64(long)>($l1);

        return;
    }

    public void writeString(int, java.lang.String) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        int i0;
        java.lang.String r1;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeTag(int,int)>(i0, 2);

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeStringNoTag(java.lang.String)>(r1);

        return;
    }

    public void writeStringNoTag(java.lang.String) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        int $i0;
        java.lang.String r1;
        byte[] r2;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $i0 = lengthof r2;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawVarint32(int)>($i0);

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawBytes(byte[])>(r2);

        return;
    }

    public void writeTag(int, int) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        int i0, i1, $i2;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <com.google.protobuf.micro.WireFormatMicro: int makeTag(int,int)>(i0, i1);

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawVarint32(int)>($i2);

        return;
    }

    public void writeUInt32(int, int) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        int i0, i1;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeTag(int,int)>(i0, 0);

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeUInt32NoTag(int)>(i1);

        return;
    }

    public void writeUInt32NoTag(int) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        int i0;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawVarint32(int)>(i0);

        return;
    }

    public void writeUInt64(int, long) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        int i0;
        long l1;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeTag(int,int)>(i0, 0);

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeUInt64NoTag(long)>(l1);

        return;
    }

    public void writeUInt64NoTag(long) throws java.io.IOException
    {
        com.google.protobuf.micro.CodedOutputStreamMicro r0;
        long l0;

        r0 := @this: com.google.protobuf.micro.CodedOutputStreamMicro;

        l0 := @parameter0: long;

        virtualinvoke r0.<com.google.protobuf.micro.CodedOutputStreamMicro: void writeRawVarint64(long)>(l0);

        return;
    }

    public static void <clinit>()
    {
        <com.google.protobuf.micro.CodedOutputStreamMicro: int LITTLE_ENDIAN_64_SIZE> = 8;

        <com.google.protobuf.micro.CodedOutputStreamMicro: int LITTLE_ENDIAN_32_SIZE> = 4;

        <com.google.protobuf.micro.CodedOutputStreamMicro: int DEFAULT_BUFFER_SIZE> = 4096;

        return;
    }
}
