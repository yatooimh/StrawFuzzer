public abstract class com.google.protobuf.micro.MessageMicro extends java.lang.Object
{

    public void <init>()
    {
        com.google.protobuf.micro.MessageMicro r0;

        r0 := @this: com.google.protobuf.micro.MessageMicro;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract int getCachedSize();

    public abstract int getSerializedSize();

    public abstract com.google.protobuf.micro.MessageMicro mergeFrom(com.google.protobuf.micro.CodedInputStreamMicro) throws java.io.IOException;

    public com.google.protobuf.micro.MessageMicro mergeFrom(byte[]) throws com.google.protobuf.micro.InvalidProtocolBufferMicroException
    {
        com.google.protobuf.micro.MessageMicro r0, $r2;
        byte[] r1;
        int $i0;

        r0 := @this: com.google.protobuf.micro.MessageMicro;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        $r2 = virtualinvoke r0.<com.google.protobuf.micro.MessageMicro: com.google.protobuf.micro.MessageMicro mergeFrom(byte[],int,int)>(r1, 0, $i0);

        return $r2;
    }

    public com.google.protobuf.micro.MessageMicro mergeFrom(byte[], int, int) throws com.google.protobuf.micro.InvalidProtocolBufferMicroException
    {
        com.google.protobuf.micro.MessageMicro r0;
        int i0, i1;
        java.lang.Throwable $r2;
        java.lang.RuntimeException $r3;
        com.google.protobuf.micro.InvalidProtocolBufferMicroException $r4;
        byte[] r5;
        com.google.protobuf.micro.CodedInputStreamMicro r6;

        r0 := @this: com.google.protobuf.micro.MessageMicro;

        r5 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        r6 = staticinvoke <com.google.protobuf.micro.CodedInputStreamMicro: com.google.protobuf.micro.CodedInputStreamMicro newInstance(byte[],int,int)>(r5, i0, i1);

        virtualinvoke r0.<com.google.protobuf.micro.MessageMicro: com.google.protobuf.micro.MessageMicro mergeFrom(com.google.protobuf.micro.CodedInputStreamMicro)>(r6);

        virtualinvoke r6.<com.google.protobuf.micro.CodedInputStreamMicro: void checkLastTagWas(int)>(0);

     label2:
        return r0;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("Reading from a byte array threw an IOException (should never happen).");

        throw $r3;

     label4:
        $r4 := @caughtexception;

        throw $r4;

        catch com.google.protobuf.micro.InvalidProtocolBufferMicroException from label1 to label2 with label4;
        catch java.io.IOException from label1 to label2 with label3;
    }

    protected boolean parseUnknownField(com.google.protobuf.micro.CodedInputStreamMicro, int) throws java.io.IOException
    {
        com.google.protobuf.micro.MessageMicro r0;
        com.google.protobuf.micro.CodedInputStreamMicro r1;
        int i0;
        boolean $z0;

        r0 := @this: com.google.protobuf.micro.MessageMicro;

        r1 := @parameter0: com.google.protobuf.micro.CodedInputStreamMicro;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r1.<com.google.protobuf.micro.CodedInputStreamMicro: boolean skipField(int)>(i0);

        return $z0;
    }

    public void toByteArray(byte[], int, int)
    {
        com.google.protobuf.micro.MessageMicro r0;
        int i0, i1;
        java.lang.Throwable $r1;
        java.lang.RuntimeException $r2;
        byte[] r3;
        com.google.protobuf.micro.CodedOutputStreamMicro r4;

        r0 := @this: com.google.protobuf.micro.MessageMicro;

        r3 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        r4 = staticinvoke <com.google.protobuf.micro.CodedOutputStreamMicro: com.google.protobuf.micro.CodedOutputStreamMicro newInstance(byte[],int,int)>(r3, i0, i1);

        virtualinvoke r0.<com.google.protobuf.micro.MessageMicro: void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro)>(r4);

        virtualinvoke r4.<com.google.protobuf.micro.CodedOutputStreamMicro: void checkNoSpaceLeft()>();

     label2:
        return;

     label3:
        $r1 := @caughtexception;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Serializing to a byte array threw an IOException (should never happen).");

        throw $r2;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public byte[] toByteArray()
    {
        com.google.protobuf.micro.MessageMicro r0;
        byte[] r1;
        int $i0, $i1;

        r0 := @this: com.google.protobuf.micro.MessageMicro;

        $i0 = virtualinvoke r0.<com.google.protobuf.micro.MessageMicro: int getSerializedSize()>();

        r1 = newarray (byte)[$i0];

        $i1 = lengthof r1;

        virtualinvoke r0.<com.google.protobuf.micro.MessageMicro: void toByteArray(byte[],int,int)>(r1, 0, $i1);

        return r1;
    }

    public abstract void writeTo(com.google.protobuf.micro.CodedOutputStreamMicro) throws java.io.IOException;
}
