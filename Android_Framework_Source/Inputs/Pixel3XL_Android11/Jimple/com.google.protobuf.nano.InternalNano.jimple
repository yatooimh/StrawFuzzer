public final class com.google.protobuf.nano.InternalNano extends java.lang.Object
{
    static final java.nio.charset.Charset ISO_8859_1;
    public static final java.lang.Object LAZY_INIT_LOCK;
    public static final int TYPE_BOOL;
    public static final int TYPE_BYTES;
    public static final int TYPE_DOUBLE;
    public static final int TYPE_ENUM;
    public static final int TYPE_FIXED32;
    public static final int TYPE_FIXED64;
    public static final int TYPE_FLOAT;
    public static final int TYPE_GROUP;
    public static final int TYPE_INT32;
    public static final int TYPE_INT64;
    public static final int TYPE_MESSAGE;
    public static final int TYPE_SFIXED32;
    public static final int TYPE_SFIXED64;
    public static final int TYPE_SINT32;
    public static final int TYPE_SINT64;
    public static final int TYPE_STRING;
    public static final int TYPE_UINT32;
    public static final int TYPE_UINT64;
    static final java.nio.charset.Charset UTF_8;

    static void <clinit>()
    {
        java.nio.charset.Charset $r0, $r1;
        java.lang.Object $r2;

        <com.google.protobuf.nano.InternalNano: int TYPE_UINT64> = 4;

        <com.google.protobuf.nano.InternalNano: int TYPE_UINT32> = 13;

        <com.google.protobuf.nano.InternalNano: int TYPE_STRING> = 9;

        <com.google.protobuf.nano.InternalNano: int TYPE_SINT64> = 18;

        <com.google.protobuf.nano.InternalNano: int TYPE_SINT32> = 17;

        <com.google.protobuf.nano.InternalNano: int TYPE_SFIXED64> = 16;

        <com.google.protobuf.nano.InternalNano: int TYPE_SFIXED32> = 15;

        <com.google.protobuf.nano.InternalNano: int TYPE_MESSAGE> = 11;

        <com.google.protobuf.nano.InternalNano: int TYPE_INT64> = 3;

        <com.google.protobuf.nano.InternalNano: int TYPE_INT32> = 5;

        <com.google.protobuf.nano.InternalNano: int TYPE_GROUP> = 10;

        <com.google.protobuf.nano.InternalNano: int TYPE_FLOAT> = 2;

        <com.google.protobuf.nano.InternalNano: int TYPE_FIXED64> = 6;

        <com.google.protobuf.nano.InternalNano: int TYPE_FIXED32> = 7;

        <com.google.protobuf.nano.InternalNano: int TYPE_ENUM> = 14;

        <com.google.protobuf.nano.InternalNano: int TYPE_DOUBLE> = 1;

        <com.google.protobuf.nano.InternalNano: int TYPE_BYTES> = 12;

        <com.google.protobuf.nano.InternalNano: int TYPE_BOOL> = 8;

        $r0 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");

        <com.google.protobuf.nano.InternalNano: java.nio.charset.Charset UTF_8> = $r0;

        $r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("ISO-8859-1");

        <com.google.protobuf.nano.InternalNano: java.nio.charset.Charset ISO_8859_1> = $r1;

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        <com.google.protobuf.nano.InternalNano: java.lang.Object LAZY_INIT_LOCK> = $r2;

        return;
    }

    private void <init>()
    {
        com.google.protobuf.nano.InternalNano r0;

        r0 := @this: com.google.protobuf.nano.InternalNano;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] bytesDefaultValue(java.lang.String)
    {
        java.lang.String r0;
        java.nio.charset.Charset $r1;
        byte[] $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.google.protobuf.nano.InternalNano: java.nio.charset.Charset ISO_8859_1>;

        $r2 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r1);

        return $r2;
    }

    public static void cloneUnknownFieldData(com.google.protobuf.nano.ExtendableMessageNano, com.google.protobuf.nano.ExtendableMessageNano)
    {
        com.google.protobuf.nano.ExtendableMessageNano r0, r1;
        com.google.protobuf.nano.FieldArray $r2, $r3, $r4;

        r0 := @parameter0: com.google.protobuf.nano.ExtendableMessageNano;

        r1 := @parameter1: com.google.protobuf.nano.ExtendableMessageNano;

        $r2 = r0.<com.google.protobuf.nano.ExtendableMessageNano: com.google.protobuf.nano.FieldArray unknownFieldData>;

        if $r2 == null goto label1;

        $r3 = r0.<com.google.protobuf.nano.ExtendableMessageNano: com.google.protobuf.nano.FieldArray unknownFieldData>;

        $r4 = virtualinvoke $r3.<com.google.protobuf.nano.FieldArray: com.google.protobuf.nano.FieldArray clone()>();

        r1.<com.google.protobuf.nano.ExtendableMessageNano: com.google.protobuf.nano.FieldArray unknownFieldData> = $r4;

     label1:
        return;
    }

    public static int computeMapFieldSize(java.util.Map, int, int, int)
    {
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, i8, i10, i11;
        java.lang.Object r0, $r2, r7;
        java.util.Set $r1;
        boolean $z0;
        java.lang.IllegalStateException $r3;
        java.util.Map r4;
        java.util.Iterator r5;
        java.util.Map$Entry r6;

        r4 := @parameter0: java.util.Map;

        i8 := @parameter1: int;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 = staticinvoke <com.google.protobuf.nano.CodedOutputByteBufferNano: int computeTagSize(int)>(i8);

        $r1 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>();

        r5 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

        i10 = 0;

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r2;

        r0 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        if r0 == null goto label2;

        if r7 == null goto label2;

        $i3 = staticinvoke <com.google.protobuf.nano.CodedOutputByteBufferNano: int computeFieldSize(int,int,java.lang.Object)>(1, i0, r0);

        $i4 = staticinvoke <com.google.protobuf.nano.CodedOutputByteBufferNano: int computeFieldSize(int,int,java.lang.Object)>(2, i1, r7);

        i11 = $i3 + $i4;

        $i5 = i2 + i11;

        $i6 = staticinvoke <com.google.protobuf.nano.CodedOutputByteBufferNano: int computeRawVarint32Size(int)>(i11);

        $i7 = $i5 + $i6;

        i10 = i10 + $i7;

        goto label1;

     label2:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("keys and values in maps cannot be null");

        throw $r3;

     label3:
        return i10;
    }

    public static byte[] copyFromUtf8(java.lang.String)
    {
        java.lang.String r0;
        java.nio.charset.Charset $r1;
        byte[] $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.google.protobuf.nano.InternalNano: java.nio.charset.Charset UTF_8>;

        $r2 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r1);

        return $r2;
    }

    public static boolean equals(java.util.Map, java.util.Map)
    {
        java.util.Map r0, r8;
        java.util.Iterator r1;
        int $i0, $i1, $i2, $i3;
        java.util.Set $r2;
        boolean $z1, $z2, $z3, z4, z5;
        java.lang.Object $r3, $r4, $r5, $r6, $r7;
        java.util.Map$Entry r9;

        r8 := @parameter0: java.util.Map;

        r0 := @parameter1: java.util.Map;

        z4 = 1;

        if r8 != r0 goto label01;

        return 1;

     label01:
        if r8 != null goto label04;

        $i3 = interfaceinvoke r0.<java.util.Map: int size()>();

        if $i3 != 0 goto label02;

        goto label03;

     label02:
        z4 = 0;

     label03:
        return z4;

     label04:
        if r0 != null goto label07;

        $i2 = interfaceinvoke r8.<java.util.Map: int size()>();

        if $i2 != 0 goto label05;

        z5 = 1;

        goto label06;

     label05:
        z5 = 0;

     label06:
        return z5;

     label07:
        $i0 = interfaceinvoke r8.<java.util.Map: int size()>();

        $i1 = interfaceinvoke r0.<java.util.Map: int size()>();

        if $i0 == $i1 goto label08;

        return 0;

     label08:
        $r2 = interfaceinvoke r8.<java.util.Map: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label12;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.util.Map$Entry) $r3;

        $r4 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        $z2 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>($r4);

        if $z2 != 0 goto label10;

        return 0;

     label10:
        $r5 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $z3 = staticinvoke <com.google.protobuf.nano.InternalNano: boolean equalsMapValue(java.lang.Object,java.lang.Object)>($r5, $r7);

        if $z3 != 0 goto label11;

        return 0;

     label11:
        goto label09;

     label12:
        return 1;
    }

    public static boolean equals(double[], double[])
    {
        double[] r0, r1;
        int $i0, $i1;
        boolean $z0, z1;

        r0 := @parameter0: double[];

        r1 := @parameter1: double[];

        if r0 == null goto label2;

        $i1 = lengthof r0;

        if $i1 != 0 goto label1;

        goto label2;

     label1:
        $z0 = staticinvoke <java.util.Arrays: boolean equals(double[],double[])>(r0, r1);

        return $z0;

     label2:
        if r1 == null goto label4;

        $i0 = lengthof r1;

        if $i0 != 0 goto label3;

        goto label4;

     label3:
        z1 = 0;

        goto label5;

     label4:
        z1 = 1;

     label5:
        return z1;
    }

    public static boolean equals(float[], float[])
    {
        float[] r0, r1;
        int $i0, $i1;
        boolean $z0, z1;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        if r0 == null goto label2;

        $i1 = lengthof r0;

        if $i1 != 0 goto label1;

        goto label2;

     label1:
        $z0 = staticinvoke <java.util.Arrays: boolean equals(float[],float[])>(r0, r1);

        return $z0;

     label2:
        if r1 == null goto label4;

        $i0 = lengthof r1;

        if $i0 != 0 goto label3;

        goto label4;

     label3:
        z1 = 0;

        goto label5;

     label4:
        z1 = 1;

     label5:
        return z1;
    }

    public static boolean equals(int[], int[])
    {
        int[] r0, r1;
        int $i0, $i1;
        boolean $z0, z1;

        r0 := @parameter0: int[];

        r1 := @parameter1: int[];

        if r0 == null goto label2;

        $i1 = lengthof r0;

        if $i1 != 0 goto label1;

        goto label2;

     label1:
        $z0 = staticinvoke <java.util.Arrays: boolean equals(int[],int[])>(r0, r1);

        return $z0;

     label2:
        if r1 == null goto label4;

        $i0 = lengthof r1;

        if $i0 != 0 goto label3;

        goto label4;

     label3:
        z1 = 0;

        goto label5;

     label4:
        z1 = 1;

     label5:
        return z1;
    }

    public static boolean equals(long[], long[])
    {
        long[] r0, r1;
        int $i0, $i1;
        boolean $z0, z1;

        r0 := @parameter0: long[];

        r1 := @parameter1: long[];

        if r0 == null goto label2;

        $i1 = lengthof r0;

        if $i1 != 0 goto label1;

        goto label2;

     label1:
        $z0 = staticinvoke <java.util.Arrays: boolean equals(long[],long[])>(r0, r1);

        return $z0;

     label2:
        if r1 == null goto label4;

        $i0 = lengthof r1;

        if $i0 != 0 goto label3;

        goto label4;

     label3:
        z1 = 0;

        goto label5;

     label4:
        z1 = 1;

     label5:
        return z1;
    }

    public static boolean equals(java.lang.Object[], java.lang.Object[])
    {
        java.lang.Object[] r0, r1;
        java.lang.Object $r2, $r3, $r4, $r5;
        boolean $z0, z1, z2;
        int i0, i1, i2, i3, i4;

        r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: java.lang.Object[];

        i0 = 0;

        if r0 != null goto label01;

        i1 = 0;

        goto label02;

     label01:
        i1 = lengthof r0;

     label02:
        i2 = 0;

        if r1 != null goto label03;

        i3 = 0;

        goto label04;

     label03:
        i3 = lengthof r1;

     label04:
        i4 = i2;

        if i0 >= i1 goto label05;

        i4 = i2;

        $r5 = r0[i0];

        if $r5 != null goto label05;

        i0 = i0 + 1;

        goto label04;

     label05:
        if i4 >= i3 goto label06;

        $r4 = r1[i4];

        if $r4 != null goto label06;

        i4 = i4 + 1;

        goto label05;

     label06:
        if i0 < i1 goto label07;

        z1 = 1;

        goto label08;

     label07:
        z1 = 0;

     label08:
        if i4 < i3 goto label09;

        z2 = 1;

        goto label10;

     label09:
        z2 = 0;

     label10:
        if z1 == 0 goto label11;

        if z2 == 0 goto label11;

        return 1;

     label11:
        if z1 == z2 goto label12;

        return 0;

     label12:
        $r3 = r0[i0];

        $r2 = r1[i4];

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label13;

        return 0;

     label13:
        i0 = i0 + 1;

        i2 = i4 + 1;

        goto label04;
    }

    public static boolean equals(boolean[], boolean[])
    {
        boolean[] r0, r1;
        int $i0, $i1;
        boolean $z0, z1;

        r0 := @parameter0: boolean[];

        r1 := @parameter1: boolean[];

        if r0 == null goto label2;

        $i1 = lengthof r0;

        if $i1 != 0 goto label1;

        goto label2;

     label1:
        $z0 = staticinvoke <java.util.Arrays: boolean equals(boolean[],boolean[])>(r0, r1);

        return $z0;

     label2:
        if r1 == null goto label4;

        $i0 = lengthof r1;

        if $i0 != 0 goto label3;

        goto label4;

     label3:
        z1 = 0;

        goto label5;

     label4:
        z1 = 1;

     label5:
        return z1;
    }

    public static boolean equals(byte[][], byte[][])
    {
        byte[][] r0, r1;
        byte[] $r2, $r3, $r4, $r5;
        boolean $z0, z1, z2;
        int i0, i1, i2, i3, i4;

        r0 := @parameter0: byte[][];

        r1 := @parameter1: byte[][];

        i0 = 0;

        if r0 != null goto label01;

        i1 = 0;

        goto label02;

     label01:
        i1 = lengthof r0;

     label02:
        i2 = 0;

        if r1 != null goto label03;

        i3 = 0;

        goto label04;

     label03:
        i3 = lengthof r1;

     label04:
        i4 = i2;

        if i0 >= i1 goto label05;

        i4 = i2;

        $r5 = r0[i0];

        if $r5 != null goto label05;

        i0 = i0 + 1;

        goto label04;

     label05:
        if i4 >= i3 goto label06;

        $r4 = r1[i4];

        if $r4 != null goto label06;

        i4 = i4 + 1;

        goto label05;

     label06:
        if i0 < i1 goto label07;

        z1 = 1;

        goto label08;

     label07:
        z1 = 0;

     label08:
        if i4 < i3 goto label09;

        z2 = 1;

        goto label10;

     label09:
        z2 = 0;

     label10:
        if z1 == 0 goto label11;

        if z2 == 0 goto label11;

        return 1;

     label11:
        if z1 == z2 goto label12;

        return 0;

     label12:
        $r3 = r0[i0];

        $r2 = r1[i4];

        $z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r3, $r2);

        if $z0 != 0 goto label13;

        return 0;

     label13:
        i0 = i0 + 1;

        i2 = i4 + 1;

        goto label04;
    }

    private static boolean equalsMapValue(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        java.lang.IllegalStateException $r2;
        boolean $z0, $z1, $z2, $z3;
        byte[] $r3, $r4;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 == null goto label2;

        if r1 == null goto label2;

        $z0 = r0 instanceof byte[];

        if $z0 == 0 goto label1;

        $z2 = r1 instanceof byte[];

        if $z2 == 0 goto label1;

        $r4 = (byte[]) r0;

        $r3 = (byte[]) r1;

        $z3 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r4, $r3);

        return $z3;

     label1:
        $z1 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z1;

     label2:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("keys and values in maps cannot be null");

        throw $r2;
    }

    public static int hashCode(java.util.Map)
    {
        java.util.Map$Entry r0;
        java.util.Set $r1;
        boolean $z0;
        java.lang.Object $r2, $r3, $r4;
        int $i0, $i1, $i2, i3;
        java.util.Map r5;
        java.util.Iterator r6;

        r5 := @parameter0: java.util.Map;

        if r5 != null goto label1;

        return 0;

     label1:
        i3 = 0;

        $r1 = interfaceinvoke r5.<java.util.Map: java.util.Set entrySet()>();

        r6 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r0 = (java.util.Map$Entry) $r2;

        $r3 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getKey()>();

        $i0 = staticinvoke <com.google.protobuf.nano.InternalNano: int hashCodeForMap(java.lang.Object)>($r3);

        $r4 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getValue()>();

        $i1 = staticinvoke <com.google.protobuf.nano.InternalNano: int hashCodeForMap(java.lang.Object)>($r4);

        $i2 = $i0 ^ $i1;

        i3 = i3 + $i2;

        goto label2;

     label3:
        return i3;
    }

    public static int hashCode(double[])
    {
        double[] r0;
        int $i0, i1;

        r0 := @parameter0: double[];

        if r0 == null goto label2;

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        goto label2;

     label1:
        i1 = staticinvoke <java.util.Arrays: int hashCode(double[])>(r0);

        goto label3;

     label2:
        i1 = 0;

     label3:
        return i1;
    }

    public static int hashCode(float[])
    {
        float[] r0;
        int $i0, i1;

        r0 := @parameter0: float[];

        if r0 == null goto label2;

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        goto label2;

     label1:
        i1 = staticinvoke <java.util.Arrays: int hashCode(float[])>(r0);

        goto label3;

     label2:
        i1 = 0;

     label3:
        return i1;
    }

    public static int hashCode(int[])
    {
        int[] r0;
        int $i0, i1;

        r0 := @parameter0: int[];

        if r0 == null goto label2;

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        goto label2;

     label1:
        i1 = staticinvoke <java.util.Arrays: int hashCode(int[])>(r0);

        goto label3;

     label2:
        i1 = 0;

     label3:
        return i1;
    }

    public static int hashCode(long[])
    {
        long[] r0;
        int $i0, i1;

        r0 := @parameter0: long[];

        if r0 == null goto label2;

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        goto label2;

     label1:
        i1 = staticinvoke <java.util.Arrays: int hashCode(long[])>(r0);

        goto label3;

     label2:
        i1 = 0;

     label3:
        return i1;
    }

    public static int hashCode(java.lang.Object[])
    {
        java.lang.Object[] r0;
        java.lang.Object r1;
        int $i0, $i1, i2, i3, i4, i5;

        r0 := @parameter0: java.lang.Object[];

        i2 = 0;

        i3 = 0;

        if r0 != null goto label1;

        i4 = 0;

        goto label2;

     label1:
        i4 = lengthof r0;

     label2:
        if i3 >= i4 goto label4;

        r1 = r0[i3];

        i5 = i2;

        if r1 == null goto label3;

        $i0 = i2 * 31;

        $i1 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        i5 = $i0 + $i1;

     label3:
        i3 = i3 + 1;

        i2 = i5;

        goto label2;

     label4:
        return i2;
    }

    public static int hashCode(boolean[])
    {
        boolean[] r0;
        int $i0, i1;

        r0 := @parameter0: boolean[];

        if r0 == null goto label2;

        $i0 = lengthof r0;

        if $i0 != 0 goto label1;

        goto label2;

     label1:
        i1 = staticinvoke <java.util.Arrays: int hashCode(boolean[])>(r0);

        goto label3;

     label2:
        i1 = 0;

     label3:
        return i1;
    }

    public static int hashCode(byte[][])
    {
        byte[][] r0;
        byte[] r1;
        int $i0, $i1, i2, i3, i4, i5;

        r0 := @parameter0: byte[][];

        i2 = 0;

        i3 = 0;

        if r0 != null goto label1;

        i4 = 0;

        goto label2;

     label1:
        i4 = lengthof r0;

     label2:
        if i3 >= i4 goto label4;

        r1 = r0[i3];

        i5 = i2;

        if r1 == null goto label3;

        $i0 = i2 * 31;

        $i1 = staticinvoke <java.util.Arrays: int hashCode(byte[])>(r1);

        i5 = $i0 + $i1;

     label3:
        i3 = i3 + 1;

        i2 = i5;

        goto label2;

     label4:
        return i2;
    }

    private static int hashCodeForMap(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0;
        int $i0, $i1;
        byte[] $r1;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof byte[];

        if $z0 == 0 goto label1;

        $r1 = (byte[]) r0;

        $i1 = staticinvoke <java.util.Arrays: int hashCode(byte[])>($r1);

        return $i1;

     label1:
        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public static final java.util.Map mergeMapEntry(com.google.protobuf.nano.CodedInputByteBufferNano, java.util.Map, com.google.protobuf.nano.MapFactories$MapFactory, int, int, java.lang.Object, int, int) throws java.io.IOException
    {
        int i0, i1, i2, i3, i4, i5, $i6;
        java.util.Map r0, r4;
        boolean $z0;
        com.google.protobuf.nano.MessageNano $r2;
        com.google.protobuf.nano.CodedInputByteBufferNano r3;
        com.google.protobuf.nano.MapFactories$MapFactory r5;
        java.lang.Object r6, r7, r8, r9, r10, r11;

        r3 := @parameter0: com.google.protobuf.nano.CodedInputByteBufferNano;

        r4 := @parameter1: java.util.Map;

        r5 := @parameter2: com.google.protobuf.nano.MapFactories$MapFactory;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r6 := @parameter5: java.lang.Object;

        i2 := @parameter6: int;

        i3 := @parameter7: int;

        r0 = interfaceinvoke r5.<com.google.protobuf.nano.MapFactories$MapFactory: java.util.Map forMap(java.util.Map)>(r4);

        $i6 = virtualinvoke r3.<com.google.protobuf.nano.CodedInputByteBufferNano: int readRawVarint32()>();

        i4 = virtualinvoke r3.<com.google.protobuf.nano.CodedInputByteBufferNano: int pushLimit(int)>($i6);

        r7 = null;

     label1:
        i5 = virtualinvoke r3.<com.google.protobuf.nano.CodedInputByteBufferNano: int readTag()>();

        if i5 != 0 goto label2;

        goto label6;

     label2:
        if i5 != i2 goto label3;

        r8 = virtualinvoke r3.<com.google.protobuf.nano.CodedInputByteBufferNano: java.lang.Object readPrimitiveField(int)>(i0);

        r9 = r6;

        goto label9;

     label3:
        if i5 != i3 goto label5;

        if i1 != 11 goto label4;

        $r2 = (com.google.protobuf.nano.MessageNano) r6;

        virtualinvoke r3.<com.google.protobuf.nano.CodedInputByteBufferNano: void readMessage(com.google.protobuf.nano.MessageNano)>($r2);

        r8 = r7;

        r9 = r6;

        goto label9;

     label4:
        r9 = virtualinvoke r3.<com.google.protobuf.nano.CodedInputByteBufferNano: java.lang.Object readPrimitiveField(int)>(i1);

        r8 = r7;

        goto label9;

     label5:
        r8 = r7;

        r9 = r6;

        $z0 = virtualinvoke r3.<com.google.protobuf.nano.CodedInputByteBufferNano: boolean skipField(int)>(i5);

        if $z0 != 0 goto label9;

     label6:
        virtualinvoke r3.<com.google.protobuf.nano.CodedInputByteBufferNano: void checkLastTagWas(int)>(0);

        virtualinvoke r3.<com.google.protobuf.nano.CodedInputByteBufferNano: void popLimit(int)>(i4);

        r10 = r7;

        if r7 != null goto label7;

        r10 = staticinvoke <com.google.protobuf.nano.InternalNano: java.lang.Object primitiveDefaultValue(int)>(i0);

     label7:
        r11 = r6;

        if r6 != null goto label8;

        r11 = staticinvoke <com.google.protobuf.nano.InternalNano: java.lang.Object primitiveDefaultValue(int)>(i1);

     label8:
        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, r11);

        return r0;

     label9:
        r7 = r8;

        r6 = r9;

        goto label1;
    }

    private static java.lang.Object primitiveDefaultValue(int)
    {
        int i0;
        byte[] $r1;
        java.lang.Boolean $r2;
        java.lang.Integer $r3;
        java.lang.Long $r4;
        java.lang.Float $r5;
        java.lang.Double $r6;
        java.lang.StringBuilder $r7;
        java.lang.IllegalArgumentException $r11;
        java.lang.String $r12;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label8;
            case 2: goto label7;
            case 3: goto label6;
            case 4: goto label6;
            case 5: goto label5;
            case 6: goto label6;
            case 7: goto label5;
            case 8: goto label4;
            case 9: goto label3;
            case 10: goto label1;
            case 11: goto label1;
            case 12: goto label2;
            case 13: goto label5;
            case 14: goto label5;
            case 15: goto label5;
            case 16: goto label6;
            case 17: goto label5;
            case 18: goto label6;
            default: goto label1;
        };

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Type: ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a primitive type.");

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label2:
        $r1 = <com.google.protobuf.nano.WireFormatNano: byte[] EMPTY_BYTES>;

        return $r1;

     label3:
        return "";

     label4:
        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r2;

     label5:
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        return $r3;

     label6:
        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        return $r4;

     label7:
        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);

        return $r5;

     label8:
        $r6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        return $r6;
    }

    public static void serializeMapField(com.google.protobuf.nano.CodedOutputByteBufferNano, java.util.Map, int, int, int) throws java.io.IOException
    {
        com.google.protobuf.nano.CodedOutputByteBufferNano r0;
        int i0, i1, i2, i3, i4, $i5;
        java.lang.Object r1, $r3, r8;
        java.util.Set $r2;
        boolean $z0;
        java.lang.IllegalStateException $r4;
        java.util.Map r5;
        java.util.Iterator r6;
        java.util.Map$Entry r7;

        r0 := @parameter0: com.google.protobuf.nano.CodedOutputByteBufferNano;

        r5 := @parameter1: java.util.Map;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $r2 = interfaceinvoke r5.<java.util.Map: java.util.Set entrySet()>();

        r6 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r3;

        r1 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        if r1 == null goto label2;

        if r8 == null goto label2;

        i3 = staticinvoke <com.google.protobuf.nano.CodedOutputByteBufferNano: int computeFieldSize(int,int,java.lang.Object)>(1, i1, r1);

        i4 = staticinvoke <com.google.protobuf.nano.CodedOutputByteBufferNano: int computeFieldSize(int,int,java.lang.Object)>(2, i2, r8);

        virtualinvoke r0.<com.google.protobuf.nano.CodedOutputByteBufferNano: void writeTag(int,int)>(i0, 2);

        $i5 = i3 + i4;

        virtualinvoke r0.<com.google.protobuf.nano.CodedOutputByteBufferNano: void writeRawVarint32(int)>($i5);

        virtualinvoke r0.<com.google.protobuf.nano.CodedOutputByteBufferNano: void writeField(int,int,java.lang.Object)>(1, i1, r1);

        virtualinvoke r0.<com.google.protobuf.nano.CodedOutputByteBufferNano: void writeField(int,int,java.lang.Object)>(2, i2, r8);

        goto label1;

     label2:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("keys and values in maps cannot be null");

        throw $r4;

     label3:
        return;
    }

    public static java.lang.String stringDefaultValue(java.lang.String)
    {
        java.lang.String r0, $r1;
        java.nio.charset.Charset $r2, $r4;
        byte[] $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.String;

        $r2 = <com.google.protobuf.nano.InternalNano: java.nio.charset.Charset ISO_8859_1>;

        $r3 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        $r4 = <com.google.protobuf.nano.InternalNano: java.nio.charset.Charset UTF_8>;

        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r3, $r4);

        return $r1;
    }
}
