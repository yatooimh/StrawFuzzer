public abstract class com.qualcomm.qcrilhook.BaseQmiTypes$QmiBase extends java.lang.Object
{
    public static final java.nio.ByteOrder QMI_BYTE_ORDER;
    public static final java.lang.String QMI_CHARSET;
    public static final int TLV_LENGTH_SIZE;
    public static final int TLV_TYPE_SIZE;

    static void <clinit>()
    {
        java.nio.ByteOrder $r0;

        <com.qualcomm.qcrilhook.BaseQmiTypes$QmiBase: int TLV_TYPE_SIZE> = 1;

        <com.qualcomm.qcrilhook.BaseQmiTypes$QmiBase: int TLV_LENGTH_SIZE> = 2;

        <com.qualcomm.qcrilhook.BaseQmiTypes$QmiBase: java.lang.String QMI_CHARSET> = "US-ASCII";

        $r0 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        <com.qualcomm.qcrilhook.BaseQmiTypes$QmiBase: java.nio.ByteOrder QMI_BYTE_ORDER> = $r0;

        return;
    }

    public void <init>()
    {
        com.qualcomm.qcrilhook.BaseQmiTypes$QmiBase r0;

        r0 := @this: com.qualcomm.qcrilhook.BaseQmiTypes$QmiBase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.nio.ByteBuffer createByteBuffer(int)
    {
        int i0;
        java.nio.ByteBuffer r0;
        java.nio.ByteOrder $r1;

        i0 := @parameter0: int;

        r0 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(i0);

        $r1 = <com.qualcomm.qcrilhook.BaseQmiTypes$QmiBase: java.nio.ByteOrder QMI_BYTE_ORDER>;

        virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r1);

        return r0;
    }

    public static java.nio.ByteBuffer createByteBuffer(byte[])
    {
        java.nio.ByteOrder $r0;
        byte[] r2;
        java.nio.ByteBuffer r3;

        r2 := @parameter0: byte[];

        r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r2);

        $r0 = <com.qualcomm.qcrilhook.BaseQmiTypes$QmiBase: java.nio.ByteOrder QMI_BYTE_ORDER>;

        virtualinvoke r3.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r0);

        return r3;
    }

    public abstract java.lang.String toString();
}
