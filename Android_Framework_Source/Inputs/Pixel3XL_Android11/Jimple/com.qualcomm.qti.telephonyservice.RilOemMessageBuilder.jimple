public class com.qualcomm.qti.telephonyservice.RilOemMessageBuilder extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final int TOKEN_BASE;
    private int mToken;

    public void <init>()
    {
        com.qualcomm.qti.telephonyservice.RilOemMessageBuilder r0;

        r0 := @this: com.qualcomm.qti.telephonyservice.RilOemMessageBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.qualcomm.qti.telephonyservice.RilOemMessageBuilder: int mToken> = 1000;

        return;
    }

    private byte[] buildMessage(int, byte[])
    {
        com.qualcomm.qti.telephonyservice.RilOemMessageBuilder r0;
        int i0, $i1;
        byte[] r1, $r9;
        com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RILOEMMessage $r3;
        com.google.protobuf.micro.ByteStringMicro $r7;

        r0 := @this: com.qualcomm.qti.telephonyservice.RilOemMessageBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        $r3 = new com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RILOEMMessage;

        specialinvoke $r3.<com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RILOEMMessage: void <init>()>();

        $i1 = specialinvoke r0.<com.qualcomm.qti.telephonyservice.RilOemMessageBuilder: int incrementToken()>();

        virtualinvoke $r3.<com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RILOEMMessage: com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RILOEMMessage setToken(int)>($i1);

        virtualinvoke $r3.<com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RILOEMMessage: com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RILOEMMessage setType(int)>(1);

        virtualinvoke $r3.<com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RILOEMMessage: com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RILOEMMessage setId(int)>(i0);

        $r7 = staticinvoke <com.google.protobuf.micro.ByteStringMicro: com.google.protobuf.micro.ByteStringMicro copyFrom(byte[])>(r1);

        virtualinvoke $r3.<com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RILOEMMessage: com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RILOEMMessage setPayload(com.google.protobuf.micro.ByteStringMicro)>($r7);

        $r9 = virtualinvoke $r3.<com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RILOEMMessage: byte[] toByteArray()>();

        return $r9;
    }

    private int incrementToken()
    {
        com.qualcomm.qti.telephonyservice.RilOemMessageBuilder r0;
        int i0, $i1;
        java.lang.Throwable $r2;

        r0 := @this: com.qualcomm.qti.telephonyservice.RilOemMessageBuilder;

        entermonitor r0;

     label1:
        $i1 = r0.<com.qualcomm.qti.telephonyservice.RilOemMessageBuilder: int mToken>;

        i0 = $i1 + 1;

        r0.<com.qualcomm.qti.telephonyservice.RilOemMessageBuilder: int mToken> = i0;

        exitmonitor r0;

     label2:
        return i0;

     label3:
        $r2 := @caughtexception;

     label4:
        exitmonitor r0;

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    private void validateApplicationType(int)
    {
        com.qualcomm.qti.telephonyservice.RilOemMessageBuilder r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.qualcomm.qti.telephonyservice.RilOemMessageBuilder;

        i0 := @parameter0: int;

        if i0 == 0 goto label2;

        if i0 == 1 goto label2;

        if i0 == 2 goto label2;

        if i0 == 3 goto label2;

        if i0 == 4 goto label2;

        if i0 != 5 goto label1;

        goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Not a valid ApplicationType");

        throw $r1;

     label2:
        return;
    }

    private void validateSlotId(int)
    {
        com.qualcomm.qti.telephonyservice.RilOemMessageBuilder r0;
        int i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.qualcomm.qti.telephonyservice.RilOemMessageBuilder;

        i0 := @parameter0: int;

        if i0 == 0 goto label2;

        if i0 == 1 goto label2;

        if i0 != 2 goto label1;

        goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Not a valid SlotId");

        throw $r1;

     label2:
        return;
    }

    public byte[] buildGbaInitRequest(byte[], java.lang.String, int, int, boolean)
    {
        com.qualcomm.qti.telephonyservice.RilOemMessageBuilder r0;
        byte[] r1, $r13, $r14;
        java.lang.String r2;
        int i0, i1, $i2;
        boolean z0, $z1;
        java.lang.IllegalArgumentException $r4, $r5;
        com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RilOemGbaInitRequestPayload $r6;
        com.google.protobuf.micro.ByteStringMicro $r7;

        r0 := @this: com.qualcomm.qti.telephonyservice.RilOemMessageBuilder;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        z0 := @parameter4: boolean;

        specialinvoke r0.<com.qualcomm.qti.telephonyservice.RilOemMessageBuilder: void validateSlotId(int)>(i0);

        specialinvoke r0.<com.qualcomm.qti.telephonyservice.RilOemMessageBuilder: void validateApplicationType(int)>(i1);

        if r2 == null goto label2;

        $z1 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        $i2 = lengthof r1;

        if $i2 == 0 goto label1;

        $r6 = new com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RilOemGbaInitRequestPayload;

        specialinvoke $r6.<com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RilOemGbaInitRequestPayload: void <init>()>();

        $r7 = staticinvoke <com.google.protobuf.micro.ByteStringMicro: com.google.protobuf.micro.ByteStringMicro copyFrom(byte[])>(r1);

        virtualinvoke $r6.<com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RilOemGbaInitRequestPayload: com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RilOemGbaInitRequestPayload setSecurityProtocol(com.google.protobuf.micro.ByteStringMicro)>($r7);

        virtualinvoke $r6.<com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RilOemGbaInitRequestPayload: com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RilOemGbaInitRequestPayload setNafFullyQualifiedDomainName(java.lang.String)>(r2);

        virtualinvoke $r6.<com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RilOemGbaInitRequestPayload: com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RilOemGbaInitRequestPayload setSlotId(int)>(i0);

        virtualinvoke $r6.<com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RilOemGbaInitRequestPayload: com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RilOemGbaInitRequestPayload setApplicationType(int)>(i1);

        virtualinvoke $r6.<com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RilOemGbaInitRequestPayload: com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RilOemGbaInitRequestPayload setForceBootstrapping(boolean)>(z0);

        $r13 = virtualinvoke $r6.<com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RilOemGbaInitRequestPayload: byte[] toByteArray()>();

        $r14 = specialinvoke r0.<com.qualcomm.qti.telephonyservice.RilOemMessageBuilder: byte[] buildMessage(int,byte[])>(1, $r13);

        return $r14;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("securityProtocol cannot be null or empty");

        throw $r5;

     label2:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("nafFullyQualifiedDomainName cannot be null or empty");

        throw $r4;
    }

    public byte[] buildImpiRequest(int, int, boolean)
    {
        com.qualcomm.qti.telephonyservice.RilOemMessageBuilder r0;
        int i0, i1;
        boolean z0;
        com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RilOemImpiRequestPayload $r2;
        byte[] $r6, $r7;

        r0 := @this: com.qualcomm.qti.telephonyservice.RilOemMessageBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.qualcomm.qti.telephonyservice.RilOemMessageBuilder: void validateSlotId(int)>(i0);

        specialinvoke r0.<com.qualcomm.qti.telephonyservice.RilOemMessageBuilder: void validateApplicationType(int)>(i1);

        $r2 = new com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RilOemImpiRequestPayload;

        specialinvoke $r2.<com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RilOemImpiRequestPayload: void <init>()>();

        virtualinvoke $r2.<com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RilOemImpiRequestPayload: com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RilOemImpiRequestPayload setSlotId(int)>(i0);

        virtualinvoke $r2.<com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RilOemImpiRequestPayload: com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RilOemImpiRequestPayload setApplicationType(int)>(i1);

        virtualinvoke $r2.<com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RilOemImpiRequestPayload: com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RilOemImpiRequestPayload setSecure(boolean)>(z0);

        $r6 = virtualinvoke $r2.<com.qualcomm.qti.telephonyservice.TelephonyServiceProtos$RilOemImpiRequestPayload: byte[] toByteArray()>();

        $r7 = specialinvoke r0.<com.qualcomm.qti.telephonyservice.RilOemMessageBuilder: byte[] buildMessage(int,byte[])>(2, $r6);

        return $r7;
    }

    public static void <clinit>()
    {
        <com.qualcomm.qti.telephonyservice.RilOemMessageBuilder: int TOKEN_BASE> = 1000;

        <com.qualcomm.qti.telephonyservice.RilOemMessageBuilder: java.lang.String TAG> = "RilOemMessageBuilder";

        return;
    }
}
