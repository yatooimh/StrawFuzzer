public class gov.nist.core.DuplicateNameValueList extends java.lang.Object implements java.io.Serializable, java.lang.Cloneable
{
    private static final long serialVersionUID;
    private gov.nist.core.MultiValueMapImpl nameValueMap;
    private java.lang.String separator;

    public void <init>()
    {
        gov.nist.core.DuplicateNameValueList r0;
        gov.nist.core.MultiValueMapImpl $r1;

        r0 := @this: gov.nist.core.DuplicateNameValueList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new gov.nist.core.MultiValueMapImpl;

        specialinvoke $r1.<gov.nist.core.MultiValueMapImpl: void <init>()>();

        r0.<gov.nist.core.DuplicateNameValueList: gov.nist.core.MultiValueMapImpl nameValueMap> = $r1;

        r0.<gov.nist.core.DuplicateNameValueList: java.lang.String separator> = ";";

        return;
    }

    public void clear()
    {
        gov.nist.core.DuplicateNameValueList r0;
        gov.nist.core.MultiValueMapImpl $r1;

        r0 := @this: gov.nist.core.DuplicateNameValueList;

        $r1 = r0.<gov.nist.core.DuplicateNameValueList: gov.nist.core.MultiValueMapImpl nameValueMap>;

        virtualinvoke $r1.<gov.nist.core.MultiValueMapImpl: void clear()>();

        return;
    }

    public java.lang.Object clone()
    {
        gov.nist.core.DuplicateNameValueList r0, $r3;
        java.util.Iterator r2;
        java.lang.String $r4;
        gov.nist.core.MultiValueMapImpl $r5;
        java.util.Collection $r6;
        boolean $z0;
        java.lang.Object $r7, $r9;
        gov.nist.core.NameValue $r8, $r10;

        r0 := @this: gov.nist.core.DuplicateNameValueList;

        $r3 = new gov.nist.core.DuplicateNameValueList;

        specialinvoke $r3.<gov.nist.core.DuplicateNameValueList: void <init>()>();

        $r4 = r0.<gov.nist.core.DuplicateNameValueList: java.lang.String separator>;

        virtualinvoke $r3.<gov.nist.core.DuplicateNameValueList: void setSeparator(java.lang.String)>($r4);

        $r5 = r0.<gov.nist.core.DuplicateNameValueList: gov.nist.core.MultiValueMapImpl nameValueMap>;

        $r6 = virtualinvoke $r5.<gov.nist.core.MultiValueMapImpl: java.util.Collection values()>();

        r2 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (gov.nist.core.NameValue) $r7;

        $r9 = virtualinvoke $r8.<gov.nist.core.NameValue: java.lang.Object clone()>();

        $r10 = (gov.nist.core.NameValue) $r9;

        virtualinvoke $r3.<gov.nist.core.DuplicateNameValueList: void set(gov.nist.core.NameValue)>($r10);

        goto label1;

     label2:
        return $r3;
    }

    public boolean delete(java.lang.String)
    {
        gov.nist.core.DuplicateNameValueList r0;
        gov.nist.core.MultiValueMapImpl $r1, $r2;
        boolean $z0;
        java.lang.String r4, r5;

        r0 := @this: gov.nist.core.DuplicateNameValueList;

        r4 := @parameter0: java.lang.String;

        r5 = virtualinvoke r4.<java.lang.String: java.lang.String toLowerCase()>();

        $r1 = r0.<gov.nist.core.DuplicateNameValueList: gov.nist.core.MultiValueMapImpl nameValueMap>;

        $z0 = virtualinvoke $r1.<gov.nist.core.MultiValueMapImpl: boolean containsKey(java.lang.Object)>(r5);

        if $z0 == 0 goto label1;

        $r2 = r0.<gov.nist.core.DuplicateNameValueList: gov.nist.core.MultiValueMapImpl nameValueMap>;

        virtualinvoke $r2.<gov.nist.core.MultiValueMapImpl: java.util.List remove(java.lang.Object)>(r5);

        return 1;

     label1:
        return 0;
    }

    public java.lang.String encode()
    {
        gov.nist.core.DuplicateNameValueList r0;
        java.lang.StringBuffer $r1, $r2;
        java.lang.String $r3;

        r0 := @this: gov.nist.core.DuplicateNameValueList;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke r0.<gov.nist.core.DuplicateNameValueList: java.lang.StringBuffer encode(java.lang.StringBuffer)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.StringBuffer encode(java.lang.StringBuffer)
    {
        gov.nist.core.DuplicateNameValueList r0;
        java.lang.StringBuffer r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        gov.nist.core.MultiValueMapImpl $r4, $r5;
        boolean $z0, $z1, $z2, $z3;
        java.util.Collection $r6;
        java.lang.String $r7, $r9;
        gov.nist.core.GenericObject $r11;

        r0 := @this: gov.nist.core.DuplicateNameValueList;

        r1 := @parameter0: java.lang.StringBuffer;

        $r4 = r0.<gov.nist.core.DuplicateNameValueList: gov.nist.core.MultiValueMapImpl nameValueMap>;

        $z0 = virtualinvoke $r4.<gov.nist.core.MultiValueMapImpl: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $r5 = r0.<gov.nist.core.DuplicateNameValueList: gov.nist.core.MultiValueMapImpl nameValueMap>;

        $r6 = virtualinvoke $r5.<gov.nist.core.MultiValueMapImpl: java.util.Collection values()>();

        r2 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

     label1:
        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $z2 = r3 instanceof gov.nist.core.GenericObject;

        if $z2 == 0 goto label2;

        $r11 = (gov.nist.core.GenericObject) r3;

        virtualinvoke $r11.<gov.nist.core.GenericObject: java.lang.StringBuffer encode(java.lang.StringBuffer)>(r1);

        goto label3;

     label2:
        $r7 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

     label3:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label4;

        $r9 = r0.<gov.nist.core.DuplicateNameValueList: java.lang.String separator>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        goto label1;

     label4:
        return r1;
    }

    public boolean equals(java.lang.Object)
    {
        gov.nist.core.DuplicateNameValueList r0, r1;
        java.util.Collection r2;
        java.lang.Class $r3, $r4;
        boolean $z0, $z1, $z2;
        gov.nist.core.MultiValueMapImpl $r5, $r6, $r7, $r10;
        int $i0, $i1;
        java.util.Set $r8;
        java.lang.Object $r9, r11;
        java.util.Iterator r12;
        java.lang.String r13;
        java.util.List r14;

        r0 := @this: gov.nist.core.DuplicateNameValueList;

        r11 := @parameter0: java.lang.Object;

        if r11 != null goto label1;

        return 0;

     label1:
        $r3 = virtualinvoke r11.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r1 = (gov.nist.core.DuplicateNameValueList) r11;

        $r5 = r0.<gov.nist.core.DuplicateNameValueList: gov.nist.core.MultiValueMapImpl nameValueMap>;

        $i0 = virtualinvoke $r5.<gov.nist.core.MultiValueMapImpl: int size()>();

        $r6 = r1.<gov.nist.core.DuplicateNameValueList: gov.nist.core.MultiValueMapImpl nameValueMap>;

        $i1 = virtualinvoke $r6.<gov.nist.core.MultiValueMapImpl: int size()>();

        if $i0 == $i1 goto label3;

        return 0;

     label3:
        $r7 = r0.<gov.nist.core.DuplicateNameValueList: gov.nist.core.MultiValueMapImpl nameValueMap>;

        $r8 = virtualinvoke $r7.<gov.nist.core.MultiValueMapImpl: java.util.Set keySet()>();

        r12 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r9 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.lang.String) $r9;

        r2 = virtualinvoke r0.<gov.nist.core.DuplicateNameValueList: java.util.Collection getNameValue(java.lang.String)>(r13);

        $r10 = r1.<gov.nist.core.DuplicateNameValueList: gov.nist.core.MultiValueMapImpl nameValueMap>;

        r14 = virtualinvoke $r10.<gov.nist.core.MultiValueMapImpl: java.util.List get(java.lang.Object)>(r13);

        if r14 != null goto label5;

        return 0;

     label5:
        $z2 = interfaceinvoke r14.<java.util.Collection: boolean equals(java.lang.Object)>(r2);

        if $z2 != 0 goto label6;

        return 0;

     label6:
        goto label4;

     label7:
        return 1;
    }

    public java.util.Collection getNameValue(java.lang.String)
    {
        gov.nist.core.DuplicateNameValueList r0;
        java.lang.String r1, $r3;
        gov.nist.core.MultiValueMapImpl $r2;
        java.util.List $r4;

        r0 := @this: gov.nist.core.DuplicateNameValueList;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<gov.nist.core.DuplicateNameValueList: gov.nist.core.MultiValueMapImpl nameValueMap>;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r4 = virtualinvoke $r2.<gov.nist.core.MultiValueMapImpl: java.util.List get(java.lang.Object)>($r3);

        return $r4;
    }

    public java.util.Iterator getNames()
    {
        gov.nist.core.DuplicateNameValueList r0;
        gov.nist.core.MultiValueMapImpl $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;

        r0 := @this: gov.nist.core.DuplicateNameValueList;

        $r1 = r0.<gov.nist.core.DuplicateNameValueList: gov.nist.core.MultiValueMapImpl nameValueMap>;

        $r2 = virtualinvoke $r1.<gov.nist.core.MultiValueMapImpl: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        return $r3;
    }

    public java.lang.String getParameter(java.lang.String)
    {
        gov.nist.core.DuplicateNameValueList r0;
        boolean $z0;
        java.lang.String $r1, $r3, r4;
        gov.nist.core.GenericObject $r2;
        java.lang.Object r5;

        r0 := @this: gov.nist.core.DuplicateNameValueList;

        r4 := @parameter0: java.lang.String;

        r5 = virtualinvoke r0.<gov.nist.core.DuplicateNameValueList: java.lang.Object getValue(java.lang.String)>(r4);

        if r5 != null goto label1;

        return null;

     label1:
        $z0 = r5 instanceof gov.nist.core.GenericObject;

        if $z0 == 0 goto label2;

        $r2 = (gov.nist.core.GenericObject) r5;

        $r3 = virtualinvoke $r2.<gov.nist.core.GenericObject: java.lang.String encode()>();

        return $r3;

     label2:
        $r1 = virtualinvoke r5.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    public java.lang.Object getValue(java.lang.String)
    {
        gov.nist.core.DuplicateNameValueList r0;
        java.lang.String $r1, r2;
        java.util.Collection r3;

        r0 := @this: gov.nist.core.DuplicateNameValueList;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase()>();

        r3 = virtualinvoke r0.<gov.nist.core.DuplicateNameValueList: java.util.Collection getNameValue(java.lang.String)>($r1);

        if r3 == null goto label1;

        return r3;

     label1:
        return null;
    }

    public boolean hasNameValue(java.lang.String)
    {
        gov.nist.core.DuplicateNameValueList r0;
        java.lang.String r1, $r3;
        gov.nist.core.MultiValueMapImpl $r2;
        boolean $z0;

        r0 := @this: gov.nist.core.DuplicateNameValueList;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<gov.nist.core.DuplicateNameValueList: gov.nist.core.MultiValueMapImpl nameValueMap>;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r2.<gov.nist.core.MultiValueMapImpl: boolean containsKey(java.lang.Object)>($r3);

        return $z0;
    }

    public int hashCode()
    {
        gov.nist.core.DuplicateNameValueList r0;
        gov.nist.core.MultiValueMapImpl $r1;
        java.util.Set $r2;
        int $i0;

        r0 := @this: gov.nist.core.DuplicateNameValueList;

        $r1 = r0.<gov.nist.core.DuplicateNameValueList: gov.nist.core.MultiValueMapImpl nameValueMap>;

        $r2 = virtualinvoke $r1.<gov.nist.core.MultiValueMapImpl: java.util.Set keySet()>();

        $i0 = interfaceinvoke $r2.<java.util.Set: int hashCode()>();

        return $i0;
    }

    public boolean isEmpty()
    {
        gov.nist.core.DuplicateNameValueList r0;
        gov.nist.core.MultiValueMapImpl $r1;
        boolean $z0;

        r0 := @this: gov.nist.core.DuplicateNameValueList;

        $r1 = r0.<gov.nist.core.DuplicateNameValueList: gov.nist.core.MultiValueMapImpl nameValueMap>;

        $z0 = virtualinvoke $r1.<gov.nist.core.MultiValueMapImpl: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Iterator iterator()
    {
        gov.nist.core.DuplicateNameValueList r0;
        gov.nist.core.MultiValueMapImpl $r1;
        java.util.Collection $r2;
        java.util.Iterator $r3;

        r0 := @this: gov.nist.core.DuplicateNameValueList;

        $r1 = r0.<gov.nist.core.DuplicateNameValueList: gov.nist.core.MultiValueMapImpl nameValueMap>;

        $r2 = virtualinvoke $r1.<gov.nist.core.MultiValueMapImpl: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

        return $r3;
    }

    public gov.nist.core.NameValue put(java.lang.String, gov.nist.core.NameValue)
    {
        gov.nist.core.DuplicateNameValueList r0;
        java.lang.String r1;
        gov.nist.core.NameValue r2, $r5;
        gov.nist.core.MultiValueMapImpl $r3;
        java.util.List $r4;

        r0 := @this: gov.nist.core.DuplicateNameValueList;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: gov.nist.core.NameValue;

        $r3 = r0.<gov.nist.core.DuplicateNameValueList: gov.nist.core.MultiValueMapImpl nameValueMap>;

        $r4 = virtualinvoke $r3.<gov.nist.core.MultiValueMapImpl: java.util.List put(java.lang.String,java.lang.Object)>(r1, r2);

        $r5 = (gov.nist.core.NameValue) $r4;

        return $r5;
    }

    public gov.nist.core.NameValue remove(java.lang.Object)
    {
        gov.nist.core.DuplicateNameValueList r0;
        java.lang.Object r1;
        gov.nist.core.MultiValueMapImpl $r2;
        java.util.List $r3;
        gov.nist.core.NameValue $r4;

        r0 := @this: gov.nist.core.DuplicateNameValueList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<gov.nist.core.DuplicateNameValueList: gov.nist.core.MultiValueMapImpl nameValueMap>;

        $r3 = virtualinvoke $r2.<gov.nist.core.MultiValueMapImpl: java.util.List remove(java.lang.Object)>(r1);

        $r4 = (gov.nist.core.NameValue) $r3;

        return $r4;
    }

    public void set(gov.nist.core.NameValue)
    {
        gov.nist.core.DuplicateNameValueList r0;
        gov.nist.core.NameValue r1;
        gov.nist.core.MultiValueMapImpl $r2;
        java.lang.String $r3, $r4;

        r0 := @this: gov.nist.core.DuplicateNameValueList;

        r1 := @parameter0: gov.nist.core.NameValue;

        $r2 = r0.<gov.nist.core.DuplicateNameValueList: gov.nist.core.MultiValueMapImpl nameValueMap>;

        $r3 = virtualinvoke r1.<gov.nist.core.NameValue: java.lang.String getName()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();

        virtualinvoke $r2.<gov.nist.core.MultiValueMapImpl: java.util.List put(java.lang.String,java.lang.Object)>($r4, r1);

        return;
    }

    public void set(java.lang.String, java.lang.Object)
    {
        gov.nist.core.DuplicateNameValueList r0;
        java.lang.String r1, $r4;
        gov.nist.core.NameValue $r2;
        gov.nist.core.MultiValueMapImpl $r3;
        java.lang.Object r6;

        r0 := @this: gov.nist.core.DuplicateNameValueList;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.Object;

        $r2 = new gov.nist.core.NameValue;

        specialinvoke $r2.<gov.nist.core.NameValue: void <init>(java.lang.String,java.lang.Object)>(r1, r6);

        $r3 = r0.<gov.nist.core.DuplicateNameValueList: gov.nist.core.MultiValueMapImpl nameValueMap>;

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        virtualinvoke $r3.<gov.nist.core.MultiValueMapImpl: java.util.List put(java.lang.String,java.lang.Object)>($r4, $r2);

        return;
    }

    public void setSeparator(java.lang.String)
    {
        gov.nist.core.DuplicateNameValueList r0;
        java.lang.String r1;

        r0 := @this: gov.nist.core.DuplicateNameValueList;

        r1 := @parameter0: java.lang.String;

        r0.<gov.nist.core.DuplicateNameValueList: java.lang.String separator> = r1;

        return;
    }

    public int size()
    {
        gov.nist.core.DuplicateNameValueList r0;
        gov.nist.core.MultiValueMapImpl $r1;
        int $i0;

        r0 := @this: gov.nist.core.DuplicateNameValueList;

        $r1 = r0.<gov.nist.core.DuplicateNameValueList: gov.nist.core.MultiValueMapImpl nameValueMap>;

        $i0 = virtualinvoke $r1.<gov.nist.core.MultiValueMapImpl: int size()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        gov.nist.core.DuplicateNameValueList r0;
        java.lang.String $r1;

        r0 := @this: gov.nist.core.DuplicateNameValueList;

        $r1 = virtualinvoke r0.<gov.nist.core.DuplicateNameValueList: java.lang.String encode()>();

        return $r1;
    }

    public java.util.Collection values()
    {
        gov.nist.core.DuplicateNameValueList r0;
        gov.nist.core.MultiValueMapImpl $r1;
        java.util.Collection $r2;

        r0 := @this: gov.nist.core.DuplicateNameValueList;

        $r1 = r0.<gov.nist.core.DuplicateNameValueList: gov.nist.core.MultiValueMapImpl nameValueMap>;

        $r2 = virtualinvoke $r1.<gov.nist.core.MultiValueMapImpl: java.util.Collection values()>();

        return $r2;
    }

    public static void <clinit>()
    {
        <gov.nist.core.DuplicateNameValueList: long serialVersionUID> = -5611332957903796952L;

        return;
    }
}
