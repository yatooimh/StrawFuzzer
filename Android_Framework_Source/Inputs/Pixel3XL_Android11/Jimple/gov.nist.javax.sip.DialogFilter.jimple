class gov.nist.javax.sip.DialogFilter extends java.lang.Object implements gov.nist.javax.sip.stack.ServerRequestInterface, gov.nist.javax.sip.stack.ServerResponseInterface
{
    protected gov.nist.javax.sip.ListeningPointImpl listeningPoint;
    private gov.nist.javax.sip.SipStackImpl sipStack;
    protected gov.nist.javax.sip.stack.SIPTransaction transactionChannel;

    public void <init>(gov.nist.javax.sip.SipStackImpl)
    {
        gov.nist.javax.sip.DialogFilter r0;
        gov.nist.javax.sip.SipStackImpl r1;

        r0 := @this: gov.nist.javax.sip.DialogFilter;

        r1 := @parameter0: gov.nist.javax.sip.SipStackImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack> = r1;

        return;
    }

    private void sendBadRequestResponse(gov.nist.javax.sip.message.SIPRequest, gov.nist.javax.sip.stack.SIPServerTransaction, java.lang.String)
    {
        gov.nist.javax.sip.DialogFilter r0;
        gov.nist.javax.sip.stack.SIPServerTransaction r1;
        gov.nist.javax.sip.message.SIPResponse r2;
        java.lang.String $r3, r10;
        boolean $z0;
        gov.nist.javax.sip.SipStackImpl $r4, $r6, $r8;
        java.lang.Exception $r5;
        gov.nist.core.StackLogger $r7;
        gov.nist.javax.sip.message.SIPRequest r9;
        javax.sip.header.ServerHeader r11;

        r0 := @this: gov.nist.javax.sip.DialogFilter;

        r9 := @parameter0: gov.nist.javax.sip.message.SIPRequest;

        r1 := @parameter1: gov.nist.javax.sip.stack.SIPServerTransaction;

        r10 := @parameter2: java.lang.String;

        r2 = virtualinvoke r9.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPResponse createResponse(int)>(400);

        if r10 == null goto label1;

        virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: void setReasonPhrase(java.lang.String)>(r10);

     label1:
        r11 = staticinvoke <gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.ServerHeader getDefaultServerHeader()>();

        if r11 == null goto label2;

        virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: void setHeader(javax.sip.header.Header)>(r11);

     label2:
        $r3 = virtualinvoke r9.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z0 == 0 goto label3;

        $r4 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        virtualinvoke $r4.<gov.nist.javax.sip.SipStackImpl: void addTransactionPendingAck(gov.nist.javax.sip.stack.SIPServerTransaction)>(r1);

     label3:
        virtualinvoke r1.<gov.nist.javax.sip.stack.SIPServerTransaction: void sendResponse(javax.sip.message.Response)>(r2);

        virtualinvoke r1.<gov.nist.javax.sip.stack.SIPServerTransaction: void releaseSem()>();

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

        $r6 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r7 = virtualinvoke $r6.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r7.<gov.nist.core.StackLogger: void logError(java.lang.String,java.lang.Exception)>("Problem sending error response", $r5);

        virtualinvoke r1.<gov.nist.javax.sip.stack.SIPServerTransaction: void releaseSem()>();

        $r8 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        virtualinvoke $r8.<gov.nist.javax.sip.SipStackImpl: void removeTransaction(gov.nist.javax.sip.stack.SIPTransaction)>(r1);

     label6:
        return;

        catch java.lang.Exception from label2 to label3 with label5;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    private void sendCallOrTransactionDoesNotExistResponse(gov.nist.javax.sip.message.SIPRequest, gov.nist.javax.sip.stack.SIPServerTransaction)
    {
        gov.nist.javax.sip.DialogFilter r0;
        gov.nist.javax.sip.stack.SIPServerTransaction r1;
        gov.nist.javax.sip.message.SIPResponse r2;
        javax.sip.header.ServerHeader r3;
        java.lang.String $r4;
        boolean $z0;
        gov.nist.javax.sip.SipStackImpl $r5, $r7, $r9;
        java.lang.Exception $r6;
        gov.nist.core.StackLogger $r8;
        gov.nist.javax.sip.message.SIPRequest r10;

        r0 := @this: gov.nist.javax.sip.DialogFilter;

        r10 := @parameter0: gov.nist.javax.sip.message.SIPRequest;

        r1 := @parameter1: gov.nist.javax.sip.stack.SIPServerTransaction;

        r2 = virtualinvoke r10.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPResponse createResponse(int)>(481);

        r3 = staticinvoke <gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.ServerHeader getDefaultServerHeader()>();

        if r3 == null goto label1;

        virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: void setHeader(javax.sip.header.Header)>(r3);

     label1:
        $r4 = virtualinvoke r10.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z0 == 0 goto label2;

        $r5 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        virtualinvoke $r5.<gov.nist.javax.sip.SipStackImpl: void addTransactionPendingAck(gov.nist.javax.sip.stack.SIPServerTransaction)>(r1);

     label2:
        virtualinvoke r1.<gov.nist.javax.sip.stack.SIPServerTransaction: void sendResponse(javax.sip.message.Response)>(r2);

        virtualinvoke r1.<gov.nist.javax.sip.stack.SIPServerTransaction: void releaseSem()>();

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        $r7 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r8 = virtualinvoke $r7.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r8.<gov.nist.core.StackLogger: void logError(java.lang.String,java.lang.Exception)>("Problem sending error response", $r6);

        virtualinvoke r1.<gov.nist.javax.sip.stack.SIPServerTransaction: void releaseSem()>();

        $r9 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        virtualinvoke $r9.<gov.nist.javax.sip.SipStackImpl: void removeTransaction(gov.nist.javax.sip.stack.SIPTransaction)>(r1);

     label5:
        return;

        catch java.lang.Exception from label1 to label2 with label4;
        catch java.lang.Exception from label2 to label3 with label4;
    }

    private void sendLoopDetectedResponse(gov.nist.javax.sip.message.SIPRequest, gov.nist.javax.sip.stack.SIPServerTransaction)
    {
        gov.nist.javax.sip.DialogFilter r0;
        gov.nist.javax.sip.stack.SIPServerTransaction r1;
        javax.sip.header.ServerHeader r2;
        gov.nist.javax.sip.SipStackImpl $r3, $r5, $r7;
        java.lang.Exception $r4;
        gov.nist.core.StackLogger $r6;
        gov.nist.javax.sip.message.SIPRequest r8;
        gov.nist.javax.sip.message.SIPResponse r9;

        r0 := @this: gov.nist.javax.sip.DialogFilter;

        r8 := @parameter0: gov.nist.javax.sip.message.SIPRequest;

        r1 := @parameter1: gov.nist.javax.sip.stack.SIPServerTransaction;

        r9 = virtualinvoke r8.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPResponse createResponse(int)>(482);

        r2 = staticinvoke <gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.ServerHeader getDefaultServerHeader()>();

        if r2 == null goto label1;

        virtualinvoke r9.<gov.nist.javax.sip.message.SIPResponse: void setHeader(javax.sip.header.Header)>(r2);

     label1:
        $r3 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        virtualinvoke $r3.<gov.nist.javax.sip.SipStackImpl: void addTransactionPendingAck(gov.nist.javax.sip.stack.SIPServerTransaction)>(r1);

        virtualinvoke r1.<gov.nist.javax.sip.stack.SIPServerTransaction: void sendResponse(javax.sip.message.Response)>(r9);

        virtualinvoke r1.<gov.nist.javax.sip.stack.SIPServerTransaction: void releaseSem()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r6 = virtualinvoke $r5.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r6.<gov.nist.core.StackLogger: void logError(java.lang.String,java.lang.Exception)>("Problem sending error response", $r4);

        virtualinvoke r1.<gov.nist.javax.sip.stack.SIPServerTransaction: void releaseSem()>();

        $r7 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        virtualinvoke $r7.<gov.nist.javax.sip.SipStackImpl: void removeTransaction(gov.nist.javax.sip.stack.SIPTransaction)>(r1);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void sendRequestPendingResponse(gov.nist.javax.sip.message.SIPRequest, gov.nist.javax.sip.stack.SIPServerTransaction)
    {
        gov.nist.javax.sip.DialogFilter r0;
        gov.nist.javax.sip.stack.SIPServerTransaction r1;
        gov.nist.javax.sip.message.SIPResponse r2;
        java.lang.String $r3;
        boolean $z0;
        gov.nist.javax.sip.SipStackImpl $r4, $r6, $r8;
        java.lang.Exception $r5;
        gov.nist.core.StackLogger $r7;
        gov.nist.javax.sip.message.SIPRequest r9;
        javax.sip.header.ServerHeader r10;
        gov.nist.javax.sip.header.RetryAfter r11;

        r0 := @this: gov.nist.javax.sip.DialogFilter;

        r9 := @parameter0: gov.nist.javax.sip.message.SIPRequest;

        r1 := @parameter1: gov.nist.javax.sip.stack.SIPServerTransaction;

        r2 = virtualinvoke r9.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPResponse createResponse(int)>(491);

        r10 = staticinvoke <gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.ServerHeader getDefaultServerHeader()>();

        if r10 == null goto label1;

        virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: void setHeader(javax.sip.header.Header)>(r10);

     label1:
        r11 = new gov.nist.javax.sip.header.RetryAfter;

        specialinvoke r11.<gov.nist.javax.sip.header.RetryAfter: void <init>()>();

        virtualinvoke r11.<gov.nist.javax.sip.header.RetryAfter: void setRetryAfter(int)>(1);

        virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: void setHeader(javax.sip.header.Header)>(r11);

        $r3 = virtualinvoke r9.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z0 == 0 goto label2;

        $r4 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        virtualinvoke $r4.<gov.nist.javax.sip.SipStackImpl: void addTransactionPendingAck(gov.nist.javax.sip.stack.SIPServerTransaction)>(r1);

     label2:
        virtualinvoke r1.<gov.nist.javax.sip.stack.SIPServerTransaction: void sendResponse(javax.sip.message.Response)>(r2);

        virtualinvoke r1.<gov.nist.javax.sip.stack.SIPServerTransaction: void releaseSem()>();

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        $r6 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r7 = virtualinvoke $r6.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r7.<gov.nist.core.StackLogger: void logError(java.lang.String,java.lang.Exception)>("Problem sending error response", $r5);

        virtualinvoke r1.<gov.nist.javax.sip.stack.SIPServerTransaction: void releaseSem()>();

        $r8 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        virtualinvoke $r8.<gov.nist.javax.sip.SipStackImpl: void removeTransaction(gov.nist.javax.sip.stack.SIPTransaction)>(r1);

     label5:
        return;

        catch java.lang.Exception from label1 to label2 with label4;
        catch java.lang.Exception from label2 to label3 with label4;
    }

    private void sendServerInternalErrorResponse(gov.nist.javax.sip.message.SIPRequest, gov.nist.javax.sip.stack.SIPServerTransaction)
    {
        gov.nist.javax.sip.DialogFilter r0;
        gov.nist.javax.sip.stack.SIPServerTransaction r1;
        gov.nist.javax.sip.header.RetryAfter r2;
        gov.nist.javax.sip.SipStackImpl $r3, $r5, $r7, $r10, $r12;
        boolean $z0;
        javax.sip.header.ServerHeader $r4, $r6;
        gov.nist.core.StackLogger $r8, $r11;
        java.lang.Exception $r9;
        gov.nist.javax.sip.message.SIPRequest r13;
        gov.nist.javax.sip.message.SIPResponse r14;

        r0 := @this: gov.nist.javax.sip.DialogFilter;

        r13 := @parameter0: gov.nist.javax.sip.message.SIPRequest;

        r1 := @parameter1: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r3 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z0 = virtualinvoke $r3.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r8 = virtualinvoke $r7.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r8.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Sending 500 response for out of sequence message");

     label1:
        r14 = virtualinvoke r13.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPResponse createResponse(int)>(500);

        virtualinvoke r14.<gov.nist.javax.sip.message.SIPResponse: void setReasonPhrase(java.lang.String)>("Request out of order");

        $r4 = staticinvoke <gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.ServerHeader getDefaultServerHeader()>();

        if $r4 == null goto label2;

        $r6 = staticinvoke <gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.ServerHeader getDefaultServerHeader()>();

        virtualinvoke r14.<gov.nist.javax.sip.message.SIPResponse: void setHeader(javax.sip.header.Header)>($r6);

     label2:
        r2 = new gov.nist.javax.sip.header.RetryAfter;

        specialinvoke r2.<gov.nist.javax.sip.header.RetryAfter: void <init>()>();

        virtualinvoke r2.<gov.nist.javax.sip.header.RetryAfter: void setRetryAfter(int)>(10);

        virtualinvoke r14.<gov.nist.javax.sip.message.SIPResponse: void setHeader(javax.sip.header.Header)>(r2);

        $r5 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        virtualinvoke $r5.<gov.nist.javax.sip.SipStackImpl: void addTransactionPendingAck(gov.nist.javax.sip.stack.SIPServerTransaction)>(r1);

        virtualinvoke r1.<gov.nist.javax.sip.stack.SIPServerTransaction: void sendResponse(javax.sip.message.Response)>(r14);

        virtualinvoke r1.<gov.nist.javax.sip.stack.SIPServerTransaction: void releaseSem()>();

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        $r10 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r11 = virtualinvoke $r10.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r11.<gov.nist.core.StackLogger: void logError(java.lang.String,java.lang.Exception)>("Problem sending response", $r9);

        virtualinvoke r1.<gov.nist.javax.sip.stack.SIPServerTransaction: void releaseSem()>();

        $r12 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        virtualinvoke $r12.<gov.nist.javax.sip.SipStackImpl: void removeTransaction(gov.nist.javax.sip.stack.SIPTransaction)>(r1);

     label5:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public java.lang.String getProcessingInfo()
    {
        gov.nist.javax.sip.DialogFilter r0;

        r0 := @this: gov.nist.javax.sip.DialogFilter;

        return null;
    }

    public void processRequest(gov.nist.javax.sip.message.SIPRequest, gov.nist.javax.sip.stack.MessageChannel)
    {
        gov.nist.javax.sip.DialogFilter r0;
        gov.nist.javax.sip.SipStackImpl r1, $r6, $r26, $r27, $r39, $r40, $r217, $r218, $r220;
        gov.nist.javax.sip.SipProviderImpl r2, $r56, $r118, $r198;
        gov.nist.javax.sip.stack.SIPServerTransaction r3, $r197, r290, r291, r295, r296, r314, r324;
        java.lang.String r4, $r13, $r14, $r15, $r16, $r19, $r30, $r35, $r36, $r37, $r38, $r45, $r47, $r51, $r52, $r53, $r54, $r55, $r68, $r74, $r90, $r99, $r111, $r117, $r129, $r135, $r139, $r143, $r144, $r149, $r154, $r156, $r160, $r164, $r168, $r174, $r175, $r183, $r186, $r191, $r195, $r196, $r202, $r209, $r215, $r229, $r234, r266, r267, r268, r277, $r279, $r280, $r285, r313;
        int i0, $i2, $i7, $i17, $i18, $i19, $i20, $i21, i22, i23;
        long l1, $l3, $l4, $l6, $l8, $l9, $l10, $l12, $l13, $l15, $l16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z45, $z46, $z47, $z48, $z49, $z50, $z51, $z52, $z53, $z54, $z55, $z56, $z57, $z58, $z59, $z60, $z61, $z62, $z63, $z65, $z66, $z67, $z68, $z69, $z71, $z72, $z73, $z74, $z76, $z77, $z78, $z79, $z80, $z81, $z82, $z83, $z84, $z85, $z86, $z87, $z88, $z89, $z90, $z91, $z92, $z93, $z94, $z95, $z96, $z97, $z98, $z99, $z100, $z101, $z102, $z103, $z104, $z105, $z106, $z107, $z108, $z109, $z110, $z111;
        gov.nist.javax.sip.ListeningPointImpl $r7, $r10, $r20, $r182, $r184, $r185, $r201, $r207, $r210, $r228, $r232, $r278;
        gov.nist.javax.sip.stack.SIPTransaction $r8, $r11, $r89, $r225, r281, r325;
        gov.nist.javax.sip.stack.SIPTransactionStack $r9;
        javax.sip.header.Header $r12, $r28, $r170, $r177;
        gov.nist.core.StackLogger $r22, $r41, $r75, $r80, $r88, $r91, $r103, $r119, $r130, $r131, $r132, $r145, $r146, $r157, $r169, $r216, $r219, $r236, $r240, $r245, $r252, $r254, r258, r260, r269, r271, r273, r286, r288, r293, r299, r301, r306, r311, r315, r318, r326, r328, r331, r334, r342;
        javax.sip.DialogState $r25;
        gov.nist.javax.sip.header.Event $r29;
        gov.nist.javax.sip.stack.SIPDialog $r31, $r94, r262, r263, r284, r320, r338, r340, r341, r344;
        javax.sip.header.CSeqHeader $r57, $r66, $r79, $r81, $r120, $r127, $r173;
        byte $b5, $b11, $b14;
        javax.sip.TransactionState $r58, $r59, $r60, $r61, $r82, $r83, $r84, $r85, $r86, $r87, $r100, $r101, $r121, $r122, $r213;
        gov.nist.javax.sip.message.SIPResponse $r76, $r77, $r78, $r102, r303, r308, r321, r336;
        javax.sip.Dialog $r92, $r93, $r95, $r176;
        javax.sip.header.ReferToHeader $r171;
        javax.sip.message.Request $r172;
        gov.nist.javax.sip.header.Route $r178;
        javax.sip.address.Address $r179, $r199;
        javax.sip.address.URI $r180, $r200;
        gov.nist.core.HostPort $r181, $r187;
        java.lang.Exception $r235, $r238, $r239, $r246, $r247, $r250, $r253, $r255, r371, r372, r373, r374;
        java.lang.Throwable $r237, $r241, $r242, $r243, $r244, $r248, $r249, $r251;
        gov.nist.javax.sip.message.SIPRequest r256, r282;
        gov.nist.javax.sip.stack.MessageChannel r257;
        gov.nist.javax.sip.header.Contact r264;
        gov.nist.javax.sip.address.SipUri r265, r276;
        gov.nist.javax.sip.header.RouteList r275;
        gov.nist.javax.sip.stack.SIPClientTransaction r333;
        javax.sip.RequestEvent r346, r366, r367, r368, r369, r370;
        java.lang.StringBuilder r347, r348, r349, r350, r351, r352, r353, r354, r355, r356, r357, r358, r359, r360, r361, r362, r363, r364, r365;

        r0 := @this: gov.nist.javax.sip.DialogFilter;

        r256 := @parameter0: gov.nist.javax.sip.message.SIPRequest;

        r257 := @parameter1: gov.nist.javax.sip.stack.MessageChannel;

        $r6 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z0 = virtualinvoke $r6.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label001;

        $r220 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        r258 = virtualinvoke $r220.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r347 = new java.lang.StringBuilder;

        specialinvoke r347.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r347.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PROCESSING INCOMING REQUEST ");

        virtualinvoke r347.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r256);

        virtualinvoke r347.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" transactionChannel = ");

        $r225 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.stack.SIPTransaction transactionChannel>;

        virtualinvoke r347.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r225);

        virtualinvoke r347.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" listening point = ");

        $r228 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.ListeningPointImpl listeningPoint>;

        $r229 = virtualinvoke $r228.<gov.nist.javax.sip.ListeningPointImpl: java.lang.String getIPAddress()>();

        virtualinvoke r347.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r229);

        virtualinvoke r347.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r232 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.ListeningPointImpl listeningPoint>;

        $i21 = virtualinvoke $r232.<gov.nist.javax.sip.ListeningPointImpl: int getPort()>();

        virtualinvoke r347.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i21);

        $r234 = virtualinvoke r347.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r258.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r234);

     label001:
        $r7 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.ListeningPointImpl listeningPoint>;

        if $r7 != null goto label003;

        $r217 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z98 = virtualinvoke $r217.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z98 == 0 goto label002;

        $r218 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r219 = virtualinvoke $r218.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r219.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Dropping message: No listening point registered!");

     label002:
        return;

     label003:
        $r8 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.stack.SIPTransaction transactionChannel>;

        $r9 = virtualinvoke $r8.<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()>();

        r1 = (gov.nist.javax.sip.SipStackImpl) $r9;

        $r10 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.ListeningPointImpl listeningPoint>;

        r2 = virtualinvoke $r10.<gov.nist.javax.sip.ListeningPointImpl: gov.nist.javax.sip.SipProviderImpl getProvider()>();

        if r2 != null goto label005;

        $z97 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z97 == 0 goto label004;

        $r216 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r216.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("No provider - dropping !!");

     label004:
        return;

     label005:
        if r1 != null goto label006;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.String)>("Egads! no sip stack!");

     label006:
        $r11 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.stack.SIPTransaction transactionChannel>;

        r3 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r11;

        if r3 == null goto label007;

        $z96 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z96 == 0 goto label007;

        r260 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r348 = new java.lang.StringBuilder;

        specialinvoke r348.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r348.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("transaction state = ");

        $r213 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getState()>();

        virtualinvoke r348.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r213);

        $r215 = virtualinvoke r348.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r260.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r215);

     label007:
        r4 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getDialogId(boolean)>(1);

        r262 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.stack.SIPDialog getDialog(java.lang.String)>(r4);

        r263 = r262;

        if r262 == null goto label014;

        r263 = r262;

        $r198 = virtualinvoke r262.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl getSipProvider()>();

        if r2 == $r198 goto label014;

        r264 = virtualinvoke r262.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.Contact getMyContactHeader()>();

        r263 = r262;

        if r264 == null goto label014;

        $r199 = virtualinvoke r264.<gov.nist.javax.sip.header.Contact: javax.sip.address.Address getAddress()>();

        $r200 = interfaceinvoke $r199.<javax.sip.address.Address: javax.sip.address.URI getURI()>();

        r265 = (gov.nist.javax.sip.address.SipUri) $r200;

        r266 = virtualinvoke r265.<gov.nist.javax.sip.address.SipUri: java.lang.String getHost()>();

        i0 = virtualinvoke r265.<gov.nist.javax.sip.address.SipUri: int getPort()>();

        r267 = virtualinvoke r265.<gov.nist.javax.sip.address.SipUri: java.lang.String getTransportParam()>();

        r268 = r267;

        if r267 != null goto label008;

        r268 = "udp";

     label008:
        i22 = i0;

        if i0 != -1 goto label011;

        $z94 = virtualinvoke r268.<java.lang.String: boolean equals(java.lang.Object)>("udp");

        if $z94 != 0 goto label010;

        $z95 = virtualinvoke r268.<java.lang.String: boolean equals(java.lang.Object)>("tcp");

        if $z95 == 0 goto label009;

        goto label010;

     label009:
        i22 = 5061;

        goto label011;

     label010:
        i22 = 5060;

     label011:
        r263 = r262;

        if r266 == null goto label014;

        $r201 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.ListeningPointImpl listeningPoint>;

        $r202 = virtualinvoke $r201.<gov.nist.javax.sip.ListeningPointImpl: java.lang.String getIPAddress()>();

        $z92 = virtualinvoke r266.<java.lang.String: boolean equals(java.lang.Object)>($r202);

        if $z92 == 0 goto label012;

        r263 = r262;

        $r210 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.ListeningPointImpl listeningPoint>;

        $i20 = virtualinvoke $r210.<gov.nist.javax.sip.ListeningPointImpl: int getPort()>();

        if i22 == $i20 goto label014;

     label012:
        $z93 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z93 == 0 goto label013;

        r269 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r349 = new java.lang.StringBuilder;

        specialinvoke r349.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r349.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nulling dialog -- listening point mismatch!  ");

        virtualinvoke r349.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i22);

        virtualinvoke r349.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  lp port = ");

        $r207 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.ListeningPointImpl listeningPoint>;

        $i19 = virtualinvoke $r207.<gov.nist.javax.sip.ListeningPointImpl: int getPort()>();

        virtualinvoke r349.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r209 = virtualinvoke r349.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r269.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r209);

     label013:
        r263 = null;

     label014:
        $z102 = virtualinvoke r2.<gov.nist.javax.sip.SipProviderImpl: boolean isAutomaticDialogSupportEnabled()>();

        if $z102 == 0 goto label015;

        $z91 = virtualinvoke r2.<gov.nist.javax.sip.SipProviderImpl: boolean isDialogErrorsAutomaticallyHandled()>();

        if $z91 == 0 goto label015;

        $r196 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getToTag()>();

        if $r196 != null goto label015;

        $r197 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.stack.SIPServerTransaction findMergedTransaction(gov.nist.javax.sip.message.SIPRequest)>(r256);

        if $r197 == null goto label015;

        specialinvoke r0.<gov.nist.javax.sip.DialogFilter: void sendLoopDetectedResponse(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.SIPServerTransaction)>(r256, r3);

        return;

     label015:
        $z103 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z103 == 0 goto label016;

        r271 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r350 = new java.lang.StringBuilder;

        specialinvoke r350.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r350.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dialogId = ");

        virtualinvoke r350.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r191 = virtualinvoke r350.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r271.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r191);

        r273 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r351 = new java.lang.StringBuilder;

        specialinvoke r351.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r351.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dialog = ");

        virtualinvoke r351.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r263);

        $r195 = virtualinvoke r351.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r273.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r195);

     label016:
        $r12 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.Header getHeader(java.lang.String)>("Route");

        if $r12 == null goto label022;

        $r176 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.Dialog getDialog()>();

        if $r176 == null goto label022;

        r275 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RouteList getRouteHeaders()>();

        $r177 = virtualinvoke r275.<gov.nist.javax.sip.header.RouteList: javax.sip.header.Header getFirst()>();

        $r178 = (gov.nist.javax.sip.header.Route) $r177;

        $r179 = virtualinvoke $r178.<gov.nist.javax.sip.header.Route: javax.sip.address.Address getAddress()>();

        $r180 = interfaceinvoke $r179.<javax.sip.address.Address: javax.sip.address.URI getURI()>();

        r276 = (gov.nist.javax.sip.address.SipUri) $r180;

        $r181 = virtualinvoke r276.<gov.nist.javax.sip.address.SipUri: gov.nist.core.HostPort getHostPort()>();

        $z88 = virtualinvoke $r181.<gov.nist.core.HostPort: boolean hasPort()>();

        if $z88 == 0 goto label017;

        $r187 = virtualinvoke r276.<gov.nist.javax.sip.address.SipUri: gov.nist.core.HostPort getHostPort()>();

        i23 = virtualinvoke $r187.<gov.nist.core.HostPort: int getPort()>();

        goto label019;

     label017:
        $r182 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.ListeningPointImpl listeningPoint>;

        $r183 = virtualinvoke $r182.<gov.nist.javax.sip.ListeningPointImpl: java.lang.String getTransport()>();

        $z89 = virtualinvoke $r183.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("TLS");

        if $z89 == 0 goto label018;

        i23 = 5061;

        goto label019;

     label018:
        i23 = 5060;

     label019:
        r277 = virtualinvoke r276.<gov.nist.javax.sip.address.SipUri: java.lang.String getHost()>();

        $r278 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.ListeningPointImpl listeningPoint>;

        $r279 = virtualinvoke $r278.<gov.nist.javax.sip.ListeningPointImpl: java.lang.String getIPAddress()>();

        $z104 = virtualinvoke r277.<java.lang.String: boolean equals(java.lang.Object)>($r279);

        if $z104 != 0 goto label020;

        $r185 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.ListeningPointImpl listeningPoint>;

        $r186 = virtualinvoke $r185.<gov.nist.javax.sip.ListeningPointImpl: java.lang.String getSentBy()>();

        $z90 = virtualinvoke r277.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r186);

        if $z90 == 0 goto label022;

     label020:
        $r184 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.ListeningPointImpl listeningPoint>;

        $i17 = virtualinvoke $r184.<gov.nist.javax.sip.ListeningPointImpl: int getPort()>();

        if i23 != $i17 goto label022;

        $i18 = virtualinvoke r275.<gov.nist.javax.sip.header.RouteList: int size()>();

        if $i18 != 1 goto label021;

        virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: void removeHeader(java.lang.String)>("Route");

        goto label022;

     label021:
        virtualinvoke r275.<gov.nist.javax.sip.header.RouteList: void removeFirst()>();

     label022:
        $r280 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z105 = virtualinvoke $r280.<java.lang.String: boolean equals(java.lang.Object)>("REFER");

        if $z105 == 0 goto label030;

        if r263 == null goto label030;

        $z80 = virtualinvoke r2.<gov.nist.javax.sip.SipProviderImpl: boolean isDialogErrorsAutomaticallyHandled()>();

        if $z80 == 0 goto label029;

        $r170 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.Header getHeader(java.lang.String)>("Refer-To");

        $r171 = (javax.sip.header.ReferToHeader) $r170;

        if $r171 != null goto label023;

        specialinvoke r0.<gov.nist.javax.sip.DialogFilter: void sendBadRequestResponse(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.SIPServerTransaction,java.lang.String)>(r256, r3, "Refer-To header is missing");

        return;

     label023:
        r281 = virtualinvoke r263.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransaction getLastTransaction()>();

        if r281 == null goto label028;

        $z81 = virtualinvoke r2.<gov.nist.javax.sip.SipProviderImpl: boolean isDialogErrorsAutomaticallyHandled()>();

        if $z81 == 0 goto label028;

        $r172 = virtualinvoke r281.<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.message.Request getRequest()>();

        r282 = (gov.nist.javax.sip.message.SIPRequest) $r172;

        $z82 = r281 instanceof gov.nist.javax.sip.stack.SIPServerTransaction;

        if $z82 == 0 goto label026;

        $z86 = virtualinvoke r263.<gov.nist.javax.sip.stack.SIPDialog: boolean isAckSeen()>();

        if $z86 != 0 goto label025;

        $r175 = virtualinvoke r282.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z87 = virtualinvoke $r175.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z87 == 0 goto label024;

        specialinvoke r0.<gov.nist.javax.sip.DialogFilter: void sendRequestPendingResponse(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.SIPServerTransaction)>(r256, r3);

        return;

     label024:
        goto label028;

     label025:
        goto label028;

     label026:
        $z83 = r281 instanceof gov.nist.javax.sip.stack.SIPClientTransaction;

        if $z83 == 0 goto label027;

        $r173 = virtualinvoke r282.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeqHeader()>();

        l1 = interfaceinvoke $r173.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $r174 = virtualinvoke r282.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z84 = virtualinvoke $r174.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z84 == 0 goto label028;

        $z85 = virtualinvoke r263.<gov.nist.javax.sip.stack.SIPDialog: boolean isAckSent(long)>(l1);

        if $z85 != 0 goto label028;

        specialinvoke r0.<gov.nist.javax.sip.DialogFilter: void sendRequestPendingResponse(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.SIPServerTransaction)>(r256, r3);

        return;

     label027:
        goto label028;

     label028:
        r284 = r263;

        goto label122;

     label029:
        goto label030;

     label030:
        $r285 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z106 = virtualinvoke $r285.<java.lang.String: boolean equals(java.lang.Object)>("UPDATE");

        if $z106 == 0 goto label032;

        $z79 = virtualinvoke r2.<gov.nist.javax.sip.SipProviderImpl: boolean isAutomaticDialogSupportEnabled()>();

        if $z79 == 0 goto label031;

        if r263 != null goto label031;

        specialinvoke r0.<gov.nist.javax.sip.DialogFilter: void sendCallOrTransactionDoesNotExistResponse(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.SIPServerTransaction)>(r256, r3);

        return;

     label031:
        r284 = r263;

        goto label122;

     label032:
        $r13 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("ACK");

        if $z1 == 0 goto label059;

        if r3 == null goto label034;

        $z77 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isInviteTransaction()>();

        if $z77 == 0 goto label034;

        $z78 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z78 == 0 goto label033;

        $r169 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r169.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Processing ACK for INVITE Tx ");

        r284 = r263;

        goto label122;

     label033:
        r284 = r263;

        goto label122;

     label034:
        $z62 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z62 == 0 goto label035;

        r286 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r352 = new java.lang.StringBuilder;

        specialinvoke r352.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r352.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Processing ACK for dialog ");

        virtualinvoke r352.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r263);

        $r168 = virtualinvoke r352.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r286.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r168);

        goto label035;

     label035:
        if r263 != null goto label043;

        $z73 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z73 == 0 goto label036;

        r288 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r353 = new java.lang.StringBuilder;

        specialinvoke r353.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r353.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dialog does not exist ");

        $r160 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()>();

        virtualinvoke r353.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r160);

        virtualinvoke r353.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isServerTransaction = ");

        virtualinvoke r353.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(1);

        $r164 = virtualinvoke r353.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r288.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r164);

     label036:
        r290 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.stack.SIPServerTransaction getRetransmissionAlertTransaction(java.lang.String)>(r4);

        if r290 == null goto label037;

        $z76 = virtualinvoke r290.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isRetransmissionAlertEnabled()>();

        if $z76 == 0 goto label037;

        virtualinvoke r290.<gov.nist.javax.sip.stack.SIPServerTransaction: void disableRetransmissionAlerts()>();

     label037:
        r291 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.stack.SIPServerTransaction findTransactionPendingAck(gov.nist.javax.sip.message.SIPRequest)>(r256);

        if r291 == null goto label042;

        $z74 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z74 == 0 goto label038;

        $r157 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r157.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Found Tx pending ACK");

     label038:
        virtualinvoke r291.<gov.nist.javax.sip.stack.SIPServerTransaction: void setAckSeen()>();

        virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: void removeTransaction(gov.nist.javax.sip.stack.SIPTransaction)>(r291);

        virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean removeTransactionPendingAck(gov.nist.javax.sip.stack.SIPServerTransaction)>(r291);

     label039:
        goto label041;

     label040:
        $r253 := @caughtexception;

        $z101 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z101 == 0 goto label041;

        $r254 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r254.<gov.nist.core.StackLogger: void logError(java.lang.String,java.lang.Exception)>("Problem terminating transaction", $r253);

     label041:
        return;

     label042:
        r284 = r263;

        goto label122;

     label043:
        $z63 = virtualinvoke r263.<gov.nist.javax.sip.stack.SIPDialog: boolean handleAck(gov.nist.javax.sip.stack.SIPServerTransaction)>(r3);

        if $z63 != 0 goto label052;

        $z67 = virtualinvoke r263.<gov.nist.javax.sip.stack.SIPDialog: boolean isSequnceNumberValidation()>();

        if $z67 != 0 goto label046;

        $z71 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z71 == 0 goto label044;

        r293 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r354 = new java.lang.StringBuilder;

        specialinvoke r354.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r354.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dialog exists with loose dialog validation ");

        $r149 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()>();

        virtualinvoke r354.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r149);

        virtualinvoke r354.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isServerTransaction = ");

        virtualinvoke r354.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(1);

        virtualinvoke r354.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dialog = ");

        $r154 = virtualinvoke r263.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getDialogId()>();

        virtualinvoke r354.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r154);

        $r156 = virtualinvoke r354.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r293.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r156);

     label044:
        r295 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.stack.SIPServerTransaction getRetransmissionAlertTransaction(java.lang.String)>(r4);

        if r295 == null goto label045;

        $z72 = virtualinvoke r295.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isRetransmissionAlertEnabled()>();

        if $z72 == 0 goto label045;

        virtualinvoke r295.<gov.nist.javax.sip.stack.SIPServerTransaction: void disableRetransmissionAlerts()>();

     label045:
        r284 = r263;

        goto label122;

     label046:
        $z68 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z68 == 0 goto label047;

        $r146 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r146.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Dropping ACK - cannot find a transaction or dialog");

     label047:
        r296 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.stack.SIPServerTransaction findTransactionPendingAck(gov.nist.javax.sip.message.SIPRequest)>(r256);

        if r296 == null goto label051;

        $z69 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z69 == 0 goto label048;

        $r145 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r145.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Found Tx pending ACK");

     label048:
        virtualinvoke r296.<gov.nist.javax.sip.stack.SIPServerTransaction: void setAckSeen()>();

        virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: void removeTransaction(gov.nist.javax.sip.stack.SIPTransaction)>(r296);

        virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean removeTransactionPendingAck(gov.nist.javax.sip.stack.SIPServerTransaction)>(r296);

     label049:
        goto label051;

     label050:
        $r239 := @caughtexception;

        $z99 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z99 == 0 goto label051;

        $r240 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r240.<gov.nist.core.StackLogger: void logError(java.lang.String,java.lang.Exception)>("Problem terminating transaction", $r239);

     label051:
        return;

     label052:
        virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean passToListener()>();

        virtualinvoke r263.<gov.nist.javax.sip.stack.SIPDialog: void addTransaction(gov.nist.javax.sip.stack.SIPTransaction)>(r3);

        virtualinvoke r263.<gov.nist.javax.sip.stack.SIPDialog: void addRoute(gov.nist.javax.sip.message.SIPRequest)>(r256);

        virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: void setDialog(gov.nist.javax.sip.stack.SIPDialog,java.lang.String)>(r263, r4);

        $r144 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z65 = virtualinvoke $r144.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z65 == 0 goto label053;

        $z66 = virtualinvoke r2.<gov.nist.javax.sip.SipProviderImpl: boolean isDialogErrorsAutomaticallyHandled()>();

        if $z66 == 0 goto label053;

        virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: void putInMergeTable(gov.nist.javax.sip.stack.SIPServerTransaction,gov.nist.javax.sip.message.SIPRequest)>(r3, r256);

     label053:
        $z107 = r1.<gov.nist.javax.sip.SipStackImpl: boolean deliverTerminatedEventForAck>;

        if $z107 == 0 goto label058;

     label054:
        virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: void addTransaction(gov.nist.javax.sip.stack.SIPServerTransaction)>(r3);

        virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: void scheduleAckRemoval()>();

     label055:
        goto label057;

     label056:
        $r243 := @caughtexception;

     label057:
        r284 = r263;

        goto label122;

     label058:
        virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: void setMapped(boolean)>(1);

        r284 = r263;

        goto label122;

     label059:
        $r14 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("PRACK");

        if $z2 == 0 goto label077;

        $z55 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z55 == 0 goto label060;

        r299 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r355 = new java.lang.StringBuilder;

        specialinvoke r355.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r355.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Processing PRACK for dialog ");

        virtualinvoke r355.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r263);

        $r143 = virtualinvoke r355.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r299.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r143);

     label060:
        if r263 != null goto label068;

        $z59 = virtualinvoke r2.<gov.nist.javax.sip.SipProviderImpl: boolean isAutomaticDialogSupportEnabled()>();

        if $z59 == 0 goto label068;

        $z60 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z60 == 0 goto label061;

        r301 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r356 = new java.lang.StringBuilder;

        specialinvoke r356.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r356.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dialog does not exist ");

        $r135 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()>();

        virtualinvoke r356.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r135);

        virtualinvoke r356.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isServerTransaction = ");

        virtualinvoke r356.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(1);

        $r139 = virtualinvoke r356.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r301.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r139);

     label061:
        $z61 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z61 == 0 goto label062;

        $r132 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r132.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Sending 481 for PRACK - automatic dialog support is enabled -- cant find dialog!");

     label062:
        r303 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPResponse createResponse(int)>(481);

     label063:
        virtualinvoke r2.<gov.nist.javax.sip.SipProviderImpl: void sendResponse(javax.sip.message.Response)>(r303);

     label064:
        goto label066;

     label065:
        $r251 := @caughtexception;

        $r252 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r371 = (java.lang.Exception) $r251;

        interfaceinvoke $r252.<gov.nist.core.StackLogger: void logError(java.lang.String,java.lang.Exception)>("error sending response", r371);

     label066:
        if r3 == null goto label067;

        virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: void removeTransaction(gov.nist.javax.sip.stack.SIPTransaction)>(r3);

        virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: void releaseSem()>();

     label067:
        return;

     label068:
        if r263 == null goto label075;

        $z57 = virtualinvoke r263.<gov.nist.javax.sip.stack.SIPDialog: boolean handlePrack(gov.nist.javax.sip.message.SIPRequest)>(r256);

        if $z57 != 0 goto label071;

        $z58 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z58 == 0 goto label069;

        $r131 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r131.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Dropping out of sequence PRACK ");

     label069:
        if r3 == null goto label070;

        virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: void removeTransaction(gov.nist.javax.sip.stack.SIPTransaction)>(r3);

        virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: void releaseSem()>();

     label070:
        return;

     label071:
        virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: void addTransaction(gov.nist.javax.sip.stack.SIPServerTransaction)>(r3);

        virtualinvoke r263.<gov.nist.javax.sip.stack.SIPDialog: void addTransaction(gov.nist.javax.sip.stack.SIPTransaction)>(r3);

        virtualinvoke r263.<gov.nist.javax.sip.stack.SIPDialog: void addRoute(gov.nist.javax.sip.message.SIPRequest)>(r256);

        virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: void setDialog(gov.nist.javax.sip.stack.SIPDialog,java.lang.String)>(r263, r4);

     label072:
        goto label074;

     label073:
        $r250 := @caughtexception;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>($r250);

     label074:
        r284 = r263;

        goto label122;

     label075:
        $z56 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z56 == 0 goto label076;

        $r130 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r130.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Processing PRACK without a DIALOG -- this must be a proxy element");

        r284 = r263;

        goto label122;

     label076:
        r284 = r263;

        goto label122;

     label077:
        $r15 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z3 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("BYE");

        if $z3 == 0 goto label093;

        if r263 == null goto label081;

        $z53 = virtualinvoke r263.<gov.nist.javax.sip.stack.SIPDialog: boolean isRequestConsumable(gov.nist.javax.sip.message.SIPRequest)>(r256);

        if $z53 != 0 goto label081;

        $z54 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z54 == 0 goto label078;

        r306 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r357 = new java.lang.StringBuilder;

        specialinvoke r357.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r357.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dropping out of sequence BYE ");

        $l15 = virtualinvoke r263.<gov.nist.javax.sip.stack.SIPDialog: long getRemoteSeqNumber()>();

        virtualinvoke r357.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l15);

        virtualinvoke r357.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r127 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $l16 = interfaceinvoke $r127.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        virtualinvoke r357.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l16);

        $r129 = virtualinvoke r357.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r306.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r129);

     label078:
        $l12 = virtualinvoke r263.<gov.nist.javax.sip.stack.SIPDialog: long getRemoteSeqNumber()>();

        $r120 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $l13 = interfaceinvoke $r120.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $b14 = $l12 cmp $l13;

        if $b14 < 0 goto label079;

        $r121 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getState()>();

        $r122 = <javax.sip.TransactionState: javax.sip.TransactionState TRYING>;

        if $r121 != $r122 goto label079;

        specialinvoke r0.<gov.nist.javax.sip.DialogFilter: void sendServerInternalErrorResponse(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.SIPServerTransaction)>(r256, r3);

     label079:
        if r3 == null goto label080;

        virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: void removeTransaction(gov.nist.javax.sip.stack.SIPTransaction)>(r3);

     label080:
        return;

     label081:
        if r263 != null goto label087;

        $z51 = virtualinvoke r2.<gov.nist.javax.sip.SipProviderImpl: boolean isAutomaticDialogSupportEnabled()>();

        if $z51 == 0 goto label087;

        r308 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPResponse createResponse(int)>(481);

        virtualinvoke r308.<gov.nist.javax.sip.message.SIPResponse: void setReasonPhrase(java.lang.String)>("Dialog Not Found");

        $z52 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z52 == 0 goto label082;

        $r119 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r119.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("dropping request -- automatic dialog support enabled and dialog does not exist!");

     label082:
        virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: void sendResponse(javax.sip.message.Response)>(r308);

     label083:
        goto label085;

     label084:
        $r244 := @caughtexception;

        $r245 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r372 = (java.lang.Exception) $r244;

        interfaceinvoke $r245.<gov.nist.core.StackLogger: void logError(java.lang.String,java.lang.Exception)>("Error in sending response", r372);

     label085:
        if r3 == null goto label086;

        virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: void removeTransaction(gov.nist.javax.sip.stack.SIPTransaction)>(r3);

        virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: void releaseSem()>();

     label086:
        return;

     label087:
        if r3 == null goto label091;

        if r263 == null goto label091;

     label088:
        $r118 = virtualinvoke r263.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl getSipProvider()>();

        if r2 != $r118 goto label089;

        virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: void addTransaction(gov.nist.javax.sip.stack.SIPServerTransaction)>(r3);

        virtualinvoke r263.<gov.nist.javax.sip.stack.SIPDialog: void addTransaction(gov.nist.javax.sip.stack.SIPTransaction)>(r3);

        virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: void setDialog(gov.nist.javax.sip.stack.SIPDialog,java.lang.String)>(r263, r4);

     label089:
        goto label091;

     label090:
        $r237 := @caughtexception;

        r373 = (java.lang.Exception) $r237;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r373);

     label091:
        $z108 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z108 == 0 goto label092;

        r311 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r358 = new java.lang.StringBuilder;

        specialinvoke r358.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r358.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BYE Tx = ");

        virtualinvoke r358.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        virtualinvoke r358.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isMapped =");

        $z50 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isTransactionMapped()>();

        virtualinvoke r358.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z50);

        $r117 = virtualinvoke r358.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r311.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r117);

        r284 = r263;

        goto label122;

     label092:
        r284 = r263;

        goto label122;

     label093:
        r313 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z4 = virtualinvoke r313.<java.lang.String: boolean equals(java.lang.Object)>("CANCEL");

        if $z4 == 0 goto label112;

        $r89 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.stack.SIPTransaction findCancelTransaction(gov.nist.javax.sip.message.SIPRequest,boolean)>(r256, 1);

        r314 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r89;

        $z42 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z42 == 0 goto label094;

        r315 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r359 = new java.lang.StringBuilder;

        specialinvoke r359.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r359.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got a CANCEL, InviteServerTx = ");

        virtualinvoke r359.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r314);

        virtualinvoke r359.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cancel Server Tx ID = ");

        virtualinvoke r359.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        virtualinvoke r359.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isMapped = ");

        $z49 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isTransactionMapped()>();

        virtualinvoke r359.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z49);

        $r111 = virtualinvoke r359.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r315.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r111);

     label094:
        $r90 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z43 = virtualinvoke $r90.<java.lang.String: boolean equals(java.lang.Object)>("CANCEL");

        if $z43 == 0 goto label100;

        if r314 == null goto label099;

        $r100 = virtualinvoke r314.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getState()>();

        $r101 = <gov.nist.javax.sip.stack.SIPTransaction: javax.sip.TransactionState TERMINATED_STATE>;

        if $r100 != $r101 goto label099;

        $z48 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z48 == 0 goto label095;

        $r103 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r103.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Too late to cancel Transaction");

     label095:
        $r102 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPResponse createResponse(int)>(200);

        virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: void sendResponse(javax.sip.message.Response)>($r102);

     label096:
        goto label098;

     label097:
        $r247 := @caughtexception;

        $r248 = virtualinvoke $r247.<java.lang.Exception: java.lang.Throwable getCause()>();

        if $r248 == null goto label098;

        $r249 = virtualinvoke $r247.<java.lang.Exception: java.lang.Throwable getCause()>();

        $z100 = $r249 instanceof java.io.IOException;

        if $z100 == 0 goto label098;

        virtualinvoke r314.<gov.nist.javax.sip.stack.SIPServerTransaction: void raiseIOExceptionEvent()>();

     label098:
        return;

     label099:
        $z47 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z47 == 0 goto label100;

        r318 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r360 = new java.lang.StringBuilder;

        specialinvoke r360.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r360.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cancel transaction = ");

        virtualinvoke r360.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r314);

        $r99 = virtualinvoke r360.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r318.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r99);

     label100:
        if r3 == null goto label101;

        if r314 == null goto label101;

        $r92 = virtualinvoke r314.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.Dialog getDialog()>();

        if $r92 == null goto label101;

        $r93 = virtualinvoke r314.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.Dialog getDialog()>();

        $r94 = (gov.nist.javax.sip.stack.SIPDialog) $r93;

        virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: void setDialog(gov.nist.javax.sip.stack.SIPDialog,java.lang.String)>($r94, r4);

        $r95 = virtualinvoke r314.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.Dialog getDialog()>();

        r320 = (gov.nist.javax.sip.stack.SIPDialog) $r95;

        goto label107;

     label101:
        r320 = r263;

        if r314 != null goto label107;

        r320 = r263;

        $z45 = virtualinvoke r2.<gov.nist.javax.sip.SipProviderImpl: boolean isAutomaticDialogSupportEnabled()>();

        if $z45 == 0 goto label107;

        r320 = r263;

        if r3 == null goto label107;

        r321 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPResponse createResponse(int)>(481);

        $z46 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z46 == 0 goto label102;

        $r91 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r91.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("dropping request -- automatic dialog support enabled and INVITE ST does not exist!");

     label102:
        virtualinvoke r2.<gov.nist.javax.sip.SipProviderImpl: void sendResponse(javax.sip.message.Response)>(r321);

     label103:
        goto label105;

     label104:
        $r241 := @caughtexception;

        r374 = (java.lang.Exception) $r241;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r374);

     label105:
        if r3 == null goto label106;

        virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: void removeTransaction(gov.nist.javax.sip.stack.SIPTransaction)>(r3);

        virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: void releaseSem()>();

     label106:
        return;

     label107:
        r284 = r320;

        if r314 == null goto label111;

        r284 = r320;

        if r3 == null goto label111;

     label108:
        virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: void addTransaction(gov.nist.javax.sip.stack.SIPServerTransaction)>(r3);

        virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: void setPassToListener()>();

        virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: void setInviteTransaction(gov.nist.javax.sip.stack.SIPServerTransaction)>(r314);

        virtualinvoke r314.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean acquireSem()>();

     label109:
        r284 = r320;

        goto label111;

     label110:
        $r246 := @caughtexception;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>($r246);

        r284 = r320;

     label111:
        goto label122;

     label112:
        r284 = r263;

        $r16 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z5 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z5 == 0 goto label111;

        if r263 != null goto label113;

        r324 = null;

        goto label114;

     label113:
        r324 = virtualinvoke r263.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPServerTransaction getInviteTransaction()>();

     label114:
        if r263 == null goto label116;

        if r3 == null goto label116;

        if r324 == null goto label116;

        $r81 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $l9 = interfaceinvoke $r81.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $l10 = virtualinvoke r263.<gov.nist.javax.sip.stack.SIPDialog: long getRemoteSeqNumber()>();

        $b11 = $l9 cmp $l10;

        if $b11 <= 0 goto label116;

        $z37 = r324 instanceof gov.nist.javax.sip.stack.SIPServerTransaction;

        if $z37 == 0 goto label116;

        $z38 = virtualinvoke r2.<gov.nist.javax.sip.SipProviderImpl: boolean isDialogErrorsAutomaticallyHandled()>();

        if $z38 == 0 goto label116;

        $z39 = virtualinvoke r263.<gov.nist.javax.sip.stack.SIPDialog: boolean isSequnceNumberValidation()>();

        if $z39 == 0 goto label116;

        $z40 = virtualinvoke r324.<gov.nist.javax.sip.stack.SIPTransaction: boolean isInviteTransaction()>();

        if $z40 == 0 goto label116;

        $r82 = virtualinvoke r324.<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.TransactionState getState()>();

        $r83 = <javax.sip.TransactionState: javax.sip.TransactionState COMPLETED>;

        if $r82 == $r83 goto label116;

        $r84 = virtualinvoke r324.<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.TransactionState getState()>();

        $r85 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        if $r84 == $r85 goto label116;

        $r86 = virtualinvoke r324.<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.TransactionState getState()>();

        $r87 = <javax.sip.TransactionState: javax.sip.TransactionState CONFIRMED>;

        if $r86 == $r87 goto label116;

        $z41 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z41 == 0 goto label115;

        $r88 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r88.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Sending 500 response for out of sequence message");

     label115:
        specialinvoke r0.<gov.nist.javax.sip.DialogFilter: void sendServerInternalErrorResponse(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.SIPServerTransaction)>(r256, r3);

        return;

     label116:
        if r263 != null goto label117;

        r325 = null;

        goto label118;

     label117:
        r325 = virtualinvoke r263.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransaction getLastTransaction()>();

     label118:
        if r263 == null goto label120;

        $z32 = virtualinvoke r2.<gov.nist.javax.sip.SipProviderImpl: boolean isDialogErrorsAutomaticallyHandled()>();

        if $z32 == 0 goto label120;

        if r325 == null goto label120;

        $z33 = virtualinvoke r325.<gov.nist.javax.sip.stack.SIPTransaction: boolean isInviteTransaction()>();

        if $z33 == 0 goto label120;

        $z34 = r325 instanceof javax.sip.ClientTransaction;

        if $z34 == 0 goto label120;

        $r76 = virtualinvoke r325.<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.message.SIPResponse getLastResponse()>();

        if $r76 == null goto label120;

        $r77 = virtualinvoke r325.<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.message.SIPResponse getLastResponse()>();

        $i7 = virtualinvoke $r77.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        if $i7 != 200 goto label120;

        $r78 = virtualinvoke r325.<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.message.SIPResponse getLastResponse()>();

        $r79 = virtualinvoke $r78.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $l8 = interfaceinvoke $r79.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $z35 = virtualinvoke r263.<gov.nist.javax.sip.stack.SIPDialog: boolean isAckSent(long)>($l8);

        if $z35 != 0 goto label120;

        $z36 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z36 == 0 goto label119;

        $r80 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r80.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Sending 491 response for client Dialog ACK not sent.");

     label119:
        specialinvoke r0.<gov.nist.javax.sip.DialogFilter: void sendRequestPendingResponse(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.SIPServerTransaction)>(r256, r3);

        return;

     label120:
        r284 = r263;

        if r263 == null goto label122;

        r284 = r263;

        if r325 == null goto label122;

        r284 = r263;

        $z27 = virtualinvoke r2.<gov.nist.javax.sip.SipProviderImpl: boolean isDialogErrorsAutomaticallyHandled()>();

        if $z27 == 0 goto label122;

        r284 = r263;

        $z28 = virtualinvoke r325.<gov.nist.javax.sip.stack.SIPTransaction: boolean isInviteTransaction()>();

        if $z28 == 0 goto label122;

        r284 = r263;

        $z29 = r325 instanceof javax.sip.ServerTransaction;

        if $z29 == 0 goto label122;

        r284 = r263;

        $z30 = virtualinvoke r263.<gov.nist.javax.sip.stack.SIPDialog: boolean isAckSeen()>();

        if $z30 != 0 goto label122;

        $z31 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z31 == 0 goto label121;

        $r75 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r75.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Sending 491 response for server Dialog ACK not seen.");

     label121:
        specialinvoke r0.<gov.nist.javax.sip.DialogFilter: void sendRequestPendingResponse(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.SIPServerTransaction)>(r256, r3);

        return;

     label122:
        $z109 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z109 == 0 goto label123;

        r326 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r361 = new java.lang.StringBuilder;

        specialinvoke r361.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r361.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CHECK FOR OUT OF SEQ MESSAGE ");

        virtualinvoke r361.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r284);

        virtualinvoke r361.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" transaction ");

        virtualinvoke r361.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r74 = virtualinvoke r361.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r326.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r74);

     label123:
        if r284 == null goto label130;

        if r3 == null goto label130;

        $r52 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z20 = virtualinvoke $r52.<java.lang.String: boolean equals(java.lang.Object)>("BYE");

        if $z20 != 0 goto label130;

        $r53 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z21 = virtualinvoke $r53.<java.lang.String: boolean equals(java.lang.Object)>("CANCEL");

        if $z21 != 0 goto label130;

        $r54 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z22 = virtualinvoke $r54.<java.lang.String: boolean equals(java.lang.Object)>("ACK");

        if $z22 != 0 goto label130;

        $r55 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z23 = virtualinvoke $r55.<java.lang.String: boolean equals(java.lang.Object)>("PRACK");

        if $z23 != 0 goto label130;

        $z24 = virtualinvoke r284.<gov.nist.javax.sip.stack.SIPDialog: boolean isRequestConsumable(gov.nist.javax.sip.message.SIPRequest)>(r256);

        if $z24 != 0 goto label127;

        $z25 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z25 == 0 goto label124;

        r328 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r362 = new java.lang.StringBuilder;

        specialinvoke r362.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r362.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dropping out of sequence message ");

        $l6 = virtualinvoke r284.<gov.nist.javax.sip.stack.SIPDialog: long getRemoteSeqNumber()>();

        virtualinvoke r362.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        virtualinvoke r362.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r66 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        virtualinvoke r362.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r66);

        $r68 = virtualinvoke r362.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r328.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r68);

     label124:
        $l3 = virtualinvoke r284.<gov.nist.javax.sip.stack.SIPDialog: long getRemoteSeqNumber()>();

        $r57 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $l4 = interfaceinvoke $r57.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $b5 = $l3 cmp $l4;

        if $b5 < 0 goto label126;

        $z26 = virtualinvoke r2.<gov.nist.javax.sip.SipProviderImpl: boolean isDialogErrorsAutomaticallyHandled()>();

        if $z26 == 0 goto label126;

        $r58 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getState()>();

        $r59 = <javax.sip.TransactionState: javax.sip.TransactionState TRYING>;

        if $r58 == $r59 goto label125;

        $r60 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getState()>();

        $r61 = <javax.sip.TransactionState: javax.sip.TransactionState PROCEEDING>;

        if $r60 != $r61 goto label126;

     label125:
        specialinvoke r0.<gov.nist.javax.sip.DialogFilter: void sendServerInternalErrorResponse(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.SIPServerTransaction)>(r256, r3);

     label126:
        return;

     label127:
        $r56 = virtualinvoke r284.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl getSipProvider()>();

        if r2 != $r56 goto label128;

        virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: void addTransaction(gov.nist.javax.sip.stack.SIPServerTransaction)>(r3);

        virtualinvoke r284.<gov.nist.javax.sip.stack.SIPDialog: void addTransaction(gov.nist.javax.sip.stack.SIPTransaction)>(r3);

        virtualinvoke r284.<gov.nist.javax.sip.stack.SIPDialog: void addRoute(gov.nist.javax.sip.message.SIPRequest)>(r256);

        virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: void setDialog(gov.nist.javax.sip.stack.SIPDialog,java.lang.String)>(r284, r4);

     label128:
        goto label130;

     label129:
        $r242 := @caughtexception;

        virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: void raiseIOExceptionEvent()>();

        virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: void removeTransaction(gov.nist.javax.sip.stack.SIPTransaction)>(r3);

        return;

     label130:
        $z110 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z110 == 0 goto label131;

        r331 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r363 = new java.lang.StringBuilder;

        specialinvoke r363.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        virtualinvoke r363.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        virtualinvoke r363.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" transaction.isMapped = ");

        $z19 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isTransactionMapped()>();

        virtualinvoke r363.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z19);

        $r51 = virtualinvoke r363.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r331.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r51);

     label131:
        if r284 != null goto label158;

        $r19 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z7 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>("NOTIFY");

        if $z7 == 0 goto label158;

        $r20 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.ListeningPointImpl listeningPoint>;

        r333 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.stack.SIPClientTransaction findSubscribeTransaction(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.ListeningPointImpl)>(r256, $r20);

        $z8 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z8 == 0 goto label132;

        r334 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r364 = new java.lang.StringBuilder;

        specialinvoke r364.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r364.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PROCESSING NOTIFY  DIALOG == null ");

        virtualinvoke r364.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r333);

        $r45 = virtualinvoke r364.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r334.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r45);

     label132:
        $z9 = virtualinvoke r2.<gov.nist.javax.sip.SipProviderImpl: boolean isAutomaticDialogSupportEnabled()>();

        if $z9 == 0 goto label137;

        if r333 != null goto label137;

        $z17 = r1.<gov.nist.javax.sip.SipStackImpl: boolean deliverUnsolicitedNotify>;

        if $z17 != 0 goto label137;

     label133:
        $z18 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z18 == 0 goto label134;

        $r41 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r41.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Could not find Subscription for Notify Tx.");

     label134:
        r336 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPResponse createResponse(int)>(481);

        interfaceinvoke r336.<javax.sip.message.Response: void setReasonPhrase(java.lang.String)>("Subscription does not exist");

        virtualinvoke r2.<gov.nist.javax.sip.SipProviderImpl: void sendResponse(javax.sip.message.Response)>(r336);

     label135:
        return;

     label136:
        $r235 := @caughtexception;

        $r236 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r236.<gov.nist.core.StackLogger: void logError(java.lang.String,java.lang.Exception)>("Exception while sending error response statelessly", $r235);

        return;

     label137:
        if r333 == null goto label155;

        virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: void setPendingSubscribe(gov.nist.javax.sip.stack.SIPClientTransaction)>(r333);

        r338 = virtualinvoke r333.<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.stack.SIPDialog getDefaultDialog()>();

        if r338 == null goto label143;

        $r37 = virtualinvoke r338.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getDialogId()>();

        if $r37 == null goto label143;

        $r38 = virtualinvoke r338.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getDialogId()>();

        $z15 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z15 != 0 goto label138;

        goto label143;

     label138:
        virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: void setDialog(gov.nist.javax.sip.stack.SIPDialog,java.lang.String)>(r338, r4);

        $z16 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isTransactionMapped()>();

        if $z16 != 0 goto label142;

        $r39 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        virtualinvoke $r39.<gov.nist.javax.sip.SipStackImpl: void mapTransaction(gov.nist.javax.sip.stack.SIPServerTransaction)>(r3);

        virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: void setPassToListener()>();

     label139:
        $r40 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        virtualinvoke $r40.<gov.nist.javax.sip.SipStackImpl: void addTransaction(gov.nist.javax.sip.stack.SIPServerTransaction)>(r3);

     label140:
        goto label142;

     label141:
        $r255 := @caughtexception;

     label142:
        virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: void putDialog(gov.nist.javax.sip.stack.SIPDialog)>(r338);

        r340 = r338;

        if r333 == null goto label152;

        virtualinvoke r338.<gov.nist.javax.sip.stack.SIPDialog: void addTransaction(gov.nist.javax.sip.stack.SIPTransaction)>(r333);

        virtualinvoke r333.<gov.nist.javax.sip.stack.SIPClientTransaction: void setDialog(gov.nist.javax.sip.stack.SIPDialog,java.lang.String)>(r338, r4);

        r340 = r338;

        goto label152;

     label143:
        if r338 == null goto label144;

        $r36 = virtualinvoke r338.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getDialogId()>();

        if $r36 != null goto label144;

        virtualinvoke r338.<gov.nist.javax.sip.stack.SIPDialog: void setDialogId(java.lang.String)>(r4);

        r341 = r338;

        goto label145;

     label144:
        r341 = virtualinvoke r333.<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.stack.SIPDialog getDialog(java.lang.String)>(r4);

     label145:
        $z111 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z111 == 0 goto label146;

        r342 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r365 = new java.lang.StringBuilder;

        specialinvoke r365.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r365.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PROCESSING NOTIFY Subscribe DIALOG ");

        virtualinvoke r365.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r341);

        $r35 = virtualinvoke r365.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r342.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r35);

     label146:
        r344 = r341;

        if r341 != null goto label148;

        $z13 = virtualinvoke r2.<gov.nist.javax.sip.SipProviderImpl: boolean isAutomaticDialogSupportEnabled()>();

        if $z13 != 0 goto label147;

        r344 = r341;

        $r31 = virtualinvoke r333.<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.stack.SIPDialog getDefaultDialog()>();

        if $r31 == null goto label148;

     label147:
        r344 = r341;

        $r28 = virtualinvoke r256.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.Header getHeader(java.lang.String)>("Event");

        $r29 = (gov.nist.javax.sip.header.Event) $r28;

        $r30 = virtualinvoke $r29.<gov.nist.javax.sip.header.Event: java.lang.String getEventType()>();

        $z14 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isEventForked(java.lang.String)>($r30);

        if $z14 == 0 goto label148;

        r344 = staticinvoke <gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog createFromNOTIFY(gov.nist.javax.sip.stack.SIPClientTransaction,gov.nist.javax.sip.stack.SIPTransaction)>(r333, r3);

     label148:
        r340 = r344;

        if r344 == null goto label152;

        virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: void setDialog(gov.nist.javax.sip.stack.SIPDialog,java.lang.String)>(r344, r4);

        $r25 = <javax.sip.DialogState: javax.sip.DialogState CONFIRMED>;

        $i2 = virtualinvoke $r25.<javax.sip.DialogState: int getValue()>();

        virtualinvoke r344.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i2);

        virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: void putDialog(gov.nist.javax.sip.stack.SIPDialog)>(r344);

        virtualinvoke r333.<gov.nist.javax.sip.stack.SIPClientTransaction: void setDialog(gov.nist.javax.sip.stack.SIPDialog,java.lang.String)>(r344, r4);

        r340 = r344;

        $z12 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isTransactionMapped()>();

        if $z12 != 0 goto label152;

        $r26 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        virtualinvoke $r26.<gov.nist.javax.sip.SipStackImpl: void mapTransaction(gov.nist.javax.sip.stack.SIPServerTransaction)>(r3);

        virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: void setPassToListener()>();

     label149:
        $r27 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        virtualinvoke $r27.<gov.nist.javax.sip.SipStackImpl: void addTransaction(gov.nist.javax.sip.stack.SIPServerTransaction)>(r3);

     label150:
        r340 = r344;

        goto label152;

     label151:
        $r238 := @caughtexception;

        r340 = r344;

     label152:
        if r3 == null goto label153;

        $z11 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isTransactionMapped()>();

        if $z11 == 0 goto label153;

        r366 = new javax.sip.RequestEvent;

        specialinvoke r366.<javax.sip.RequestEvent: void <init>(java.lang.Object,javax.sip.ServerTransaction,javax.sip.Dialog,javax.sip.message.Request)>(r2, r3, r340, r256);

        r346 = r366;

        goto label154;

     label153:
        r367 = new javax.sip.RequestEvent;

        specialinvoke r367.<javax.sip.RequestEvent: void <init>(java.lang.Object,javax.sip.ServerTransaction,javax.sip.Dialog,javax.sip.message.Request)>(r2, null, r340, r256);

        r346 = r367;

     label154:
        goto label157;

     label155:
        $z10 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z10 == 0 goto label156;

        $r22 = virtualinvoke r1.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r22.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("could not find subscribe tx");

     label156:
        r368 = new javax.sip.RequestEvent;

        specialinvoke r368.<javax.sip.RequestEvent: void <init>(java.lang.Object,javax.sip.ServerTransaction,javax.sip.Dialog,javax.sip.message.Request)>(r2, null, null, r256);

        r346 = r368;

     label157:
        goto label160;

     label158:
        if r3 == null goto label159;

        $z6 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isTransactionMapped()>();

        if $z6 == 0 goto label159;

        r369 = new javax.sip.RequestEvent;

        specialinvoke r369.<javax.sip.RequestEvent: void <init>(java.lang.Object,javax.sip.ServerTransaction,javax.sip.Dialog,javax.sip.message.Request)>(r2, r3, r284, r256);

        r346 = r369;

        goto label160;

     label159:
        r370 = new javax.sip.RequestEvent;

        specialinvoke r370.<javax.sip.RequestEvent: void <init>(java.lang.Object,javax.sip.ServerTransaction,javax.sip.Dialog,javax.sip.message.Request)>(r2, null, r284, r256);

        r346 = r370;

     label160:
        virtualinvoke r2.<gov.nist.javax.sip.SipProviderImpl: void handleEvent(java.util.EventObject,gov.nist.javax.sip.stack.SIPTransaction)>(r346, r3);

        return;

        catch java.lang.Exception from label038 to label039 with label040;
        catch java.lang.Exception from label048 to label049 with label050;
        catch java.io.IOException from label054 to label055 with label056;
        catch javax.sip.SipException from label063 to label064 with label065;
        catch java.lang.Exception from label071 to label072 with label073;
        catch javax.sip.SipException from label082 to label083 with label084;
        catch java.io.IOException from label088 to label089 with label090;
        catch java.lang.Exception from label095 to label096 with label097;
        catch javax.sip.SipException from label102 to label103 with label104;
        catch java.lang.Exception from label108 to label109 with label110;
        catch java.io.IOException from label127 to label128 with label129;
        catch java.lang.Exception from label133 to label134 with label136;
        catch java.lang.Exception from label134 to label135 with label136;
        catch java.lang.Exception from label139 to label140 with label141;
        catch java.lang.Exception from label149 to label150 with label151;
    }

    public void processResponse(gov.nist.javax.sip.message.SIPResponse, gov.nist.javax.sip.stack.MessageChannel)
    {
        gov.nist.javax.sip.DialogFilter r0;
        gov.nist.javax.sip.SipProviderImpl r1;
        gov.nist.javax.sip.SipStackImpl $r2, $r4, $r5, $r8, $r13, $r22, $r23, $r32, $r37, $r39, $r40, $r49, $r51, $r60, $r61, $r63, $r64, $r66, $r75, $r76, $r78, $r79, $r81, $r82, $r85, $r86, $r88, $r96, $r109, $r120;
        javax.sip.header.CSeqHeader $r3, $r19, $r27, $r28, $r33, $r35, $r123;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, z20, z21, $z22, z24, $z25, $z26;
        javax.sip.SipListener $r6;
        gov.nist.javax.sip.stack.SIPTransaction $r7, $r52, r112, r115;
        java.lang.String $r9, $r12, $r20, $r21, $r29, $r31, $r34, $r44, $r46, $r48, $r53, $r57, $r59, $r72, $r91, $r93, r100, r102, r113, $r124;
        gov.nist.javax.sip.stack.SIPClientTransaction $r10, $r50, r106;
        int $i0, $i1, $i2, $i6, $i7, $i9, $i10;
        javax.sip.header.ToHeader $r11, $r47;
        gov.nist.core.StackLogger $r14, $r24, $r38, $r62, $r65, $r77, $r80, $r83, $r87, $r97, r103, r110, r116;
        javax.sip.DialogState $r15, $r16, $r17, $r18, $r73, $r74;
        gov.nist.javax.sip.message.SIPRequest $r25, $r26, $r30, $r55;
        long $l3, $l4, $l8;
        byte $b5;
        javax.sip.message.Request $r36, $r54;
        java.lang.StringBuilder $r41, $r67, $r89;
        javax.sip.header.FromHeader $r45, $r56, $r58;
        gov.nist.javax.sip.Utils $r84;
        java.lang.Throwable $r94;
        java.lang.Exception $r95;
        gov.nist.javax.sip.message.SIPResponse r98;
        gov.nist.javax.sip.stack.MessageChannel r99;
        gov.nist.javax.sip.stack.SIPDialog r101, r107, r108, r114;
        gov.nist.javax.sip.ListeningPointImpl r105;
        gov.nist.javax.sip.ResponseEventExt $r121;

        r0 := @this: gov.nist.javax.sip.DialogFilter;

        r98 := @parameter0: gov.nist.javax.sip.message.SIPResponse;

        r99 := @parameter1: gov.nist.javax.sip.stack.MessageChannel;

        r100 = virtualinvoke r98.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getDialogId(boolean)>(0);

        $r2 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        r101 = virtualinvoke $r2.<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.stack.SIPDialog getDialog(java.lang.String)>(r100);

        $r3 = virtualinvoke r98.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        r102 = interfaceinvoke $r3.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $r4 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z0 = virtualinvoke $r4.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label01;

        $r88 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        r103 = virtualinvoke $r88.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PROCESSING INCOMING RESPONSE: ");

        $r91 = virtualinvoke r98.<gov.nist.javax.sip.message.SIPResponse: java.lang.String encodeMessage()>();

        virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r91);

        $r93 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r103.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r93);

     label01:
        $r5 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z1 = virtualinvoke $r5.<gov.nist.javax.sip.SipStackImpl: boolean checkBranchId()>();

        if $z1 == 0 goto label03;

        $r84 = staticinvoke <gov.nist.javax.sip.Utils: gov.nist.javax.sip.Utils getInstance()>();

        $z17 = virtualinvoke $r84.<gov.nist.javax.sip.Utils: boolean responseBelongsToUs(gov.nist.javax.sip.message.SIPResponse)>(r98);

        if $z17 != 0 goto label03;

        $r85 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z18 = virtualinvoke $r85.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z18 == 0 goto label02;

        $r86 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r87 = virtualinvoke $r86.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r87.<gov.nist.core.StackLogger: void logError(java.lang.String)>("Detected stray response -- dropping");

     label02:
        return;

     label03:
        r105 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.ListeningPointImpl listeningPoint>;

        if r105 != null goto label05;

        $r81 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z16 = virtualinvoke $r81.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z16 == 0 goto label04;

        $r82 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r83 = virtualinvoke $r82.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r83.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Dropping message: No listening point registered!");

     label04:
        return;

     label05:
        r1 = virtualinvoke r105.<gov.nist.javax.sip.ListeningPointImpl: gov.nist.javax.sip.SipProviderImpl getProvider()>();

        if r1 != null goto label07;

        $r78 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z15 = virtualinvoke $r78.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z15 == 0 goto label06;

        $r79 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r80 = virtualinvoke $r79.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r80.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Dropping message:  no provider");

     label06:
        return;

     label07:
        $r6 = virtualinvoke r1.<gov.nist.javax.sip.SipProviderImpl: javax.sip.SipListener getSipListener()>();

        if $r6 != null goto label09;

        $r75 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z14 = virtualinvoke $r75.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z14 == 0 goto label08;

        $r76 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r77 = virtualinvoke $r76.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r77.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Dropping message:  no sipListener registered!");

     label08:
        return;

     label09:
        $r7 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.stack.SIPTransaction transactionChannel>;

        r106 = (gov.nist.javax.sip.stack.SIPClientTransaction) $r7;

        r107 = r101;

        if r101 != null goto label10;

        r107 = r101;

        if r106 == null goto label10;

        r108 = virtualinvoke r106.<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.stack.SIPDialog getDialog(java.lang.String)>(r100);

        r107 = r108;

        if r108 == null goto label10;

        r107 = r108;

        $r73 = virtualinvoke r108.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r74 = <javax.sip.DialogState: javax.sip.DialogState TERMINATED>;

        if $r73 != $r74 goto label10;

        r107 = null;

     label10:
        $r109 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z19 = virtualinvoke $r109.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z19 == 0 goto label11;

        $r66 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        r110 = virtualinvoke $r66.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Transaction = ");

        virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r106);

        virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sipDialog = ");

        virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r107);

        $r72 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r110.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r72);

     label11:
        r112 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.stack.SIPTransaction transactionChannel>;

        if r112 == null goto label19;

        $r54 = virtualinvoke r112.<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.message.Request getRequest()>();

        $r55 = (gov.nist.javax.sip.message.SIPRequest) $r54;

        r113 = virtualinvoke $r55.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFromTag()>();

        z20 = 1;

        if r113 != null goto label12;

        z21 = 1;

        goto label13;

     label12:
        z21 = 0;

     label13:
        $r56 = virtualinvoke r98.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.FromHeader getFrom()>();

        $r57 = interfaceinvoke $r56.<javax.sip.header.FromHeader: java.lang.String getTag()>();

        if $r57 != null goto label14;

        goto label15;

     label14:
        z20 = 0;

     label15:
        $z10 = z20 ^ z21;

        if $z10 == 0 goto label17;

        $r63 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z13 = virtualinvoke $r63.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z13 == 0 goto label16;

        $r64 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r65 = virtualinvoke $r64.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r65.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("From tag mismatch -- dropping response");

     label16:
        return;

     label17:
        if r113 == null goto label19;

        $r58 = virtualinvoke r98.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.FromHeader getFrom()>();

        $r59 = interfaceinvoke $r58.<javax.sip.header.FromHeader: java.lang.String getTag()>();

        $z11 = virtualinvoke r113.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r59);

        if $z11 != 0 goto label19;

        $r60 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z12 = virtualinvoke $r60.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z12 == 0 goto label18;

        $r61 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r62 = virtualinvoke $r61.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r62.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("From tag mismatch -- dropping response");

     label18:
        return;

     label19:
        $z22 = staticinvoke <gov.nist.javax.sip.SipStackImpl: boolean isDialogCreated(java.lang.String)>(r102);

        if $z22 == 0 goto label21;

        $i10 = virtualinvoke r98.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        if $i10 == 100 goto label21;

        $r45 = virtualinvoke r98.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.FromHeader getFrom()>();

        $r46 = interfaceinvoke $r45.<javax.sip.header.FromHeader: java.lang.String getTag()>();

        if $r46 == null goto label21;

        $r47 = virtualinvoke r98.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.ToHeader getTo()>();

        $r48 = interfaceinvoke $r47.<javax.sip.header.ToHeader: java.lang.String getTag()>();

        if $r48 == null goto label21;

        if r107 != null goto label21;

        r114 = r107;

        $z9 = virtualinvoke r1.<gov.nist.javax.sip.SipProviderImpl: boolean isAutomaticDialogSupportEnabled()>();

        if $z9 == 0 goto label34;

        r115 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.stack.SIPTransaction transactionChannel>;

        if r115 == null goto label20;

        r114 = r107;

        if r107 != null goto label34;

        $r51 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r50 = (gov.nist.javax.sip.stack.SIPClientTransaction) r115;

        r114 = virtualinvoke $r51.<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.stack.SIPDialog createDialog(gov.nist.javax.sip.stack.SIPClientTransaction,gov.nist.javax.sip.message.SIPResponse)>($r50, r98);

        $r52 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.stack.SIPTransaction transactionChannel>;

        $r53 = virtualinvoke r98.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getDialogId(boolean)>(0);

        virtualinvoke $r52.<gov.nist.javax.sip.stack.SIPTransaction: void setDialog(gov.nist.javax.sip.stack.SIPDialog,java.lang.String)>(r114, $r53);

        goto label34;

     label20:
        $r49 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        r114 = virtualinvoke $r49.<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.stack.SIPDialog createDialog(gov.nist.javax.sip.SipProviderImpl,gov.nist.javax.sip.message.SIPResponse)>(r1, r98);

        goto label34;

     label21:
        r114 = r107;

        if r107 == null goto label34;

        r114 = r107;

        if r106 != null goto label34;

        r114 = r107;

        $r15 = virtualinvoke r107.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r16 = <javax.sip.DialogState: javax.sip.DialogState TERMINATED>;

        if $r15 == $r16 goto label34;

        $i1 = virtualinvoke r98.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        $i2 = $i1 / 100;

        if $i2 == 2 goto label22;

        r114 = r107;

        $r39 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z8 = virtualinvoke $r39.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z8 == 0 goto label34;

        $r40 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        r116 = virtualinvoke $r40.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("status code != 200 ; statusCode = ");

        $i9 = virtualinvoke r98.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r44 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r116.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r44);

        r114 = r107;

        goto label34;

     label22:
        $r17 = virtualinvoke r107.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r18 = <javax.sip.DialogState: javax.sip.DialogState TERMINATED>;

        if $r17 != $r18 goto label28;

        $r32 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z6 = virtualinvoke $r32.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z6 == 0 goto label23;

        $r37 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r38 = virtualinvoke $r37.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r38.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Dialog is terminated -- dropping response!");

     label23:
        $i6 = virtualinvoke r98.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        $i7 = $i6 / 100;

        if $i7 != 2 goto label27;

        $r33 = virtualinvoke r98.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $r34 = interfaceinvoke $r33.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $z7 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z7 == 0 goto label27;

     label24:
        $r35 = virtualinvoke r98.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $l8 = interfaceinvoke $r35.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $r36 = virtualinvoke r107.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.message.Request createAck(long)>($l8);

        virtualinvoke r107.<gov.nist.javax.sip.stack.SIPDialog: void sendAck(javax.sip.message.Request)>($r36);

     label25:
        goto label27;

     label26:
        $r95 := @caughtexception;

        $r96 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r97 = virtualinvoke $r96.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r97.<gov.nist.core.StackLogger: void logError(java.lang.String,java.lang.Exception)>("Error creating ack", $r95);

     label27:
        return;

     label28:
        z24 = 0;

        $z2 = virtualinvoke r107.<gov.nist.javax.sip.stack.SIPDialog: boolean isAckSeen()>();

        if $z2 == 0 goto label29;

        z24 = 0;

        $r25 = virtualinvoke r107.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest getLastAckSent()>();

        if $r25 == null goto label29;

        z24 = 0;

        $r26 = virtualinvoke r107.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest getLastAckSent()>();

        $r27 = virtualinvoke $r26.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $l3 = interfaceinvoke $r27.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $r28 = virtualinvoke r98.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $l4 = interfaceinvoke $r28.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $b5 = $l3 cmp $l4;

        if $b5 != 0 goto label29;

        z24 = 0;

        $r29 = virtualinvoke r98.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getDialogId(boolean)>(0);

        $r30 = virtualinvoke r107.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest getLastAckSent()>();

        $r31 = virtualinvoke $r30.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getDialogId(boolean)>(0);

        $z5 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>($r31);

        if $z5 == 0 goto label29;

        z24 = 1;

     label29:
        r114 = r107;

        if z24 == 0 goto label34;

        r114 = r107;

        $r19 = virtualinvoke r98.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $r20 = interfaceinvoke $r19.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $r21 = virtualinvoke r107.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getMethod()>();

        $z3 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>($r21);

        if $z3 == 0 goto label34;

     label30:
        $r22 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z4 = virtualinvoke $r22.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z4 == 0 goto label31;

        $r23 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r24 = virtualinvoke $r23.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r24.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("resending ACK");

     label31:
        virtualinvoke r107.<gov.nist.javax.sip.stack.SIPDialog: void resendAck()>();

     label32:
        return;

     label33:
        $r94 := @caughtexception;

        r114 = r107;

     label34:
        $r120 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z25 = virtualinvoke $r120.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z25 == 0 goto label35;

        $r13 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r14 = virtualinvoke $r13.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r14.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("sending response to TU for processing ");

     label35:
        if r114 == null goto label36;

        $i0 = virtualinvoke r98.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        if $i0 == 100 goto label36;

        $r11 = virtualinvoke r98.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.ToHeader getTo()>();

        $r12 = interfaceinvoke $r11.<javax.sip.header.ToHeader: java.lang.String getTag()>();

        if $r12 == null goto label36;

        virtualinvoke r114.<gov.nist.javax.sip.stack.SIPDialog: void setLastResponse(gov.nist.javax.sip.stack.SIPTransaction,gov.nist.javax.sip.message.SIPResponse)>(r106, r98);

     label36:
        $r121 = new gov.nist.javax.sip.ResponseEventExt;

        specialinvoke $r121.<gov.nist.javax.sip.ResponseEventExt: void <init>(java.lang.Object,gov.nist.javax.sip.ClientTransactionExt,javax.sip.Dialog,javax.sip.message.Response)>(r1, r106, r114, r98);

        $r123 = virtualinvoke r98.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $r124 = interfaceinvoke $r123.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $z26 = virtualinvoke $r124.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z26 == 0 goto label37;

        $r8 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r9 = virtualinvoke r98.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getTransactionId()>();

        $r10 = virtualinvoke $r8.<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.stack.SIPClientTransaction getForkedTransaction(java.lang.String)>($r9);

        virtualinvoke $r121.<gov.nist.javax.sip.ResponseEventExt: void setOriginalTransaction(gov.nist.javax.sip.ClientTransactionExt)>($r10);

     label37:
        virtualinvoke r1.<gov.nist.javax.sip.SipProviderImpl: void handleEvent(java.util.EventObject,gov.nist.javax.sip.stack.SIPTransaction)>($r121, r106);

        return;

        catch java.lang.Exception from label24 to label25 with label26;
        catch javax.sip.SipException from label30 to label31 with label33;
        catch javax.sip.SipException from label31 to label32 with label33;
    }

    public void processResponse(gov.nist.javax.sip.message.SIPResponse, gov.nist.javax.sip.stack.MessageChannel, gov.nist.javax.sip.stack.SIPDialog)
    {
        gov.nist.javax.sip.DialogFilter r0;
        gov.nist.javax.sip.message.SIPResponse r1;
        gov.nist.javax.sip.SipStackImpl $r2, $r4, $r8, $r13, $r19, $r22, $r32, $r33, $r39, $r40, $r42, $r43, $r49, $r50, $r52, $r53, $r56, $r57, $r59, $r60, $r62, $r69, r77, $r81;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, z16, $z17;
        gov.nist.javax.sip.ListeningPointImpl $r3, $r5;
        javax.sip.SipListener $r6;
        gov.nist.javax.sip.stack.SIPTransaction $r7;
        javax.sip.header.CSeqHeader $r10, $r17, $r29, $r37, $r38;
        java.lang.String $r11, $r12, $r14, $r18, $r20, $r26, $r30, $r31, $r48, $r65, $r67;
        int $i0, $i1, $i2;
        gov.nist.javax.sip.stack.SIPClientTransaction $r15, $r21, r76;
        javax.sip.DialogState $r27, $r28;
        gov.nist.core.StackLogger $r34, $r41, $r44, $r51, $r54, $r58, $r61, $r70, r73, r78, r82;
        gov.nist.javax.sip.message.SIPRequest $r35, $r36;
        long $l3, $l4;
        byte $b5;
        gov.nist.javax.sip.Utils $r55;
        java.lang.Throwable $r68;
        gov.nist.javax.sip.stack.MessageChannel r71;
        gov.nist.javax.sip.stack.SIPDialog r72;
        gov.nist.javax.sip.SipProviderImpl r75;
        java.lang.StringBuilder r86, r87, r88;
        gov.nist.javax.sip.ResponseEventExt r89, r90;
        java.lang.Exception r91;

        r0 := @this: gov.nist.javax.sip.DialogFilter;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPResponse;

        r71 := @parameter1: gov.nist.javax.sip.stack.MessageChannel;

        r72 := @parameter2: gov.nist.javax.sip.stack.SIPDialog;

        $r2 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z1 = virtualinvoke $r2.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label01;

        $r62 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        r73 = virtualinvoke $r62.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r86 = new java.lang.StringBuilder;

        specialinvoke r86.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PROCESSING INCOMING RESPONSE");

        $r65 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPResponse: java.lang.String encodeMessage()>();

        virtualinvoke r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        $r67 = virtualinvoke r86.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r73.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r67);

     label01:
        $r3 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.ListeningPointImpl listeningPoint>;

        if $r3 != null goto label03;

        $r59 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z15 = virtualinvoke $r59.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z15 == 0 goto label02;

        $r60 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r61 = virtualinvoke $r60.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r61.<gov.nist.core.StackLogger: void logError(java.lang.String)>("Dropping message: No listening point registered!");

     label02:
        return;

     label03:
        $r4 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z2 = virtualinvoke $r4.<gov.nist.javax.sip.SipStackImpl: boolean checkBranchId()>();

        if $z2 == 0 goto label05;

        $r55 = staticinvoke <gov.nist.javax.sip.Utils: gov.nist.javax.sip.Utils getInstance()>();

        $z13 = virtualinvoke $r55.<gov.nist.javax.sip.Utils: boolean responseBelongsToUs(gov.nist.javax.sip.message.SIPResponse)>(r1);

        if $z13 != 0 goto label05;

        $r56 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z14 = virtualinvoke $r56.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z14 == 0 goto label04;

        $r57 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r58 = virtualinvoke $r57.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r58.<gov.nist.core.StackLogger: void logError(java.lang.String)>("Dropping response - topmost VIA header does not originate from this stack");

     label04:
        return;

     label05:
        $r5 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.ListeningPointImpl listeningPoint>;

        r75 = virtualinvoke $r5.<gov.nist.javax.sip.ListeningPointImpl: gov.nist.javax.sip.SipProviderImpl getProvider()>();

        if r75 != null goto label07;

        $r52 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z12 = virtualinvoke $r52.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z12 == 0 goto label06;

        $r53 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r54 = virtualinvoke $r53.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r54.<gov.nist.core.StackLogger: void logError(java.lang.String)>("Dropping message:  no provider");

     label06:
        return;

     label07:
        $r6 = virtualinvoke r75.<gov.nist.javax.sip.SipProviderImpl: javax.sip.SipListener getSipListener()>();

        if $r6 != null goto label09;

        $r49 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z11 = virtualinvoke $r49.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z11 == 0 goto label08;

        $r50 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r51 = virtualinvoke $r50.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r51.<gov.nist.core.StackLogger: void logError(java.lang.String)>("No listener -- dropping response!");

     label08:
        return;

     label09:
        $r7 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.stack.SIPTransaction transactionChannel>;

        r76 = (gov.nist.javax.sip.stack.SIPClientTransaction) $r7;

        r77 = r75.<gov.nist.javax.sip.SipProviderImpl: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r8 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z3 = virtualinvoke $r8.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z3 == 0 goto label10;

        r78 = virtualinvoke r77.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r87 = new java.lang.StringBuilder;

        specialinvoke r87.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Transaction = ");

        virtualinvoke r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r76);

        $r48 = virtualinvoke r87.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r78.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r48);

     label10:
        if r76 != null goto label23;

        if r72 == null goto label20;

        $i1 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        $i2 = $i1 / 100;

        if $i2 == 2 goto label12;

        $r42 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z10 = virtualinvoke $r42.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z10 == 0 goto label11;

        $r43 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r44 = virtualinvoke $r43.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r44.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Response is not a final response and dialog is found for response -- dropping response!");

     label11:
        return;

     label12:
        $r27 = virtualinvoke r72.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r28 = <javax.sip.DialogState: javax.sip.DialogState TERMINATED>;

        if $r27 != $r28 goto label14;

        $r39 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z9 = virtualinvoke $r39.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z9 == 0 goto label13;

        $r40 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r41 = virtualinvoke $r40.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r41.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Dialog is terminated -- dropping response!");

     label13:
        return;

     label14:
        z16 = 0;

        $z6 = virtualinvoke r72.<gov.nist.javax.sip.stack.SIPDialog: boolean isAckSeen()>();

        if $z6 == 0 goto label15;

        z16 = 0;

        $r35 = virtualinvoke r72.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest getLastAckSent()>();

        if $r35 == null goto label15;

        z16 = 0;

        $r36 = virtualinvoke r72.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest getLastAckSent()>();

        $r37 = virtualinvoke $r36.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $l3 = interfaceinvoke $r37.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $r38 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $l4 = interfaceinvoke $r38.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $b5 = $l3 cmp $l4;

        if $b5 != 0 goto label15;

        z16 = 1;

     label15:
        if z16 == 0 goto label20;

        $r29 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $r30 = interfaceinvoke $r29.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $r31 = virtualinvoke r72.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getMethod()>();

        $z7 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>($r31);

        if $z7 == 0 goto label20;

     label16:
        $r32 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z8 = virtualinvoke $r32.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z8 == 0 goto label17;

        $r33 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r34 = virtualinvoke $r33.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r34.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Retransmission of OK detected: Resending last ACK");

     label17:
        virtualinvoke r72.<gov.nist.javax.sip.stack.SIPDialog: void resendAck()>();

     label18:
        return;

     label19:
        $r68 := @caughtexception;

        $r69 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r70 = virtualinvoke $r69.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r91 = (java.lang.Exception) $r68;

        interfaceinvoke $r70.<gov.nist.core.StackLogger: void logError(java.lang.String,java.lang.Exception)>("could not resend ack", r91);

     label20:
        $r81 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z17 = virtualinvoke $r81.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z17 == 0 goto label21;

        $r22 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        r82 = virtualinvoke $r22.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r88 = new java.lang.StringBuilder;

        specialinvoke r88.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not find tx, handling statelessly Dialog =  ");

        virtualinvoke r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r72);

        $r26 = virtualinvoke r88.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r82.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r26);

     label21:
        r89 = new gov.nist.javax.sip.ResponseEventExt;

        specialinvoke r89.<gov.nist.javax.sip.ResponseEventExt: void <init>(java.lang.Object,gov.nist.javax.sip.ClientTransactionExt,javax.sip.Dialog,javax.sip.message.Response)>(r75, r76, r72, r1);

        $r17 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeqHeader()>();

        $r18 = interfaceinvoke $r17.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $z5 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z5 == 0 goto label22;

        $r19 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r20 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getTransactionId()>();

        $r21 = virtualinvoke $r19.<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.stack.SIPClientTransaction getForkedTransaction(java.lang.String)>($r20);

        virtualinvoke r89.<gov.nist.javax.sip.ResponseEventExt: void setOriginalTransaction(gov.nist.javax.sip.ClientTransactionExt)>($r21);

     label22:
        virtualinvoke r75.<gov.nist.javax.sip.SipProviderImpl: void handleEvent(java.util.EventObject,gov.nist.javax.sip.stack.SIPTransaction)>(r89, r76);

        return;

     label23:
        r90 = new gov.nist.javax.sip.ResponseEventExt;

        specialinvoke r90.<gov.nist.javax.sip.ResponseEventExt: void <init>(java.lang.Object,gov.nist.javax.sip.ClientTransactionExt,javax.sip.Dialog,javax.sip.message.Response)>(r75, r76, r72, r1);

        $r10 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeqHeader()>();

        $r11 = interfaceinvoke $r10.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $z4 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z4 == 0 goto label24;

        $r13 = r0.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r14 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getTransactionId()>();

        $r15 = virtualinvoke $r13.<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.stack.SIPClientTransaction getForkedTransaction(java.lang.String)>($r14);

        virtualinvoke r90.<gov.nist.javax.sip.ResponseEventExt: void setOriginalTransaction(gov.nist.javax.sip.ClientTransactionExt)>($r15);

     label24:
        if r72 == null goto label25;

        $i0 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        if $i0 == 100 goto label25;

        virtualinvoke r72.<gov.nist.javax.sip.stack.SIPDialog: void setLastResponse(gov.nist.javax.sip.stack.SIPTransaction,gov.nist.javax.sip.message.SIPResponse)>(r76, r1);

        $r12 = virtualinvoke r72.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getDialogId()>();

        virtualinvoke r76.<gov.nist.javax.sip.stack.SIPClientTransaction: void setDialog(gov.nist.javax.sip.stack.SIPDialog,java.lang.String)>(r72, $r12);

     label25:
        virtualinvoke r75.<gov.nist.javax.sip.SipProviderImpl: void handleEvent(java.util.EventObject,gov.nist.javax.sip.stack.SIPTransaction)>(r90, r76);

        return;

        catch javax.sip.SipException from label16 to label17 with label19;
        catch javax.sip.SipException from label17 to label18 with label19;
    }
}
