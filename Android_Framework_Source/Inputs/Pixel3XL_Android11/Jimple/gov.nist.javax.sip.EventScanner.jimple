class gov.nist.javax.sip.EventScanner extends java.lang.Object implements java.lang.Runnable
{
    private int[] eventMutex;
    private boolean isStopped;
    private java.util.LinkedList pendingEvents;
    private int refCount;
    private gov.nist.javax.sip.SipStackImpl sipStack;

    public void <init>(gov.nist.javax.sip.SipStackImpl)
    {
        gov.nist.javax.sip.EventScanner r0;
        gov.nist.javax.sip.SipStackImpl r1;
        java.util.LinkedList $r3, $r5;
        int[] $r4;
        java.lang.Thread $r6;

        r0 := @this: gov.nist.javax.sip.EventScanner;

        r1 := @parameter0: gov.nist.javax.sip.SipStackImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        r0.<gov.nist.javax.sip.EventScanner: java.util.LinkedList pendingEvents> = $r3;

        $r4 = newarray (int)[1];

        $r4[0] = 0;

        r0.<gov.nist.javax.sip.EventScanner: int[] eventMutex> = $r4;

        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

        r0.<gov.nist.javax.sip.EventScanner: java.util.LinkedList pendingEvents> = $r5;

        $r6 = new java.lang.Thread;

        specialinvoke $r6.<java.lang.Thread: void <init>(java.lang.Runnable)>(r0);

        virtualinvoke $r6.<java.lang.Thread: void setDaemon(boolean)>(0);

        r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack> = r1;

        virtualinvoke $r6.<java.lang.Thread: void setName(java.lang.String)>("EventScannerThread");

        virtualinvoke $r6.<java.lang.Thread: void start()>();

        return;
    }

    public void addEvent(gov.nist.javax.sip.EventWrapper)
    {
        gov.nist.javax.sip.EventScanner r0;
        gov.nist.core.StackLogger r1;
        gov.nist.javax.sip.SipStackImpl $r2, $r5;
        boolean $z0;
        java.util.LinkedList $r3;
        int[] $r4, r13;
        java.lang.StringBuilder $r6;
        java.lang.String $r9;
        java.lang.Throwable $r10;
        gov.nist.javax.sip.EventWrapper r11;

        r0 := @this: gov.nist.javax.sip.EventScanner;

        r11 := @parameter0: gov.nist.javax.sip.EventWrapper;

        $r2 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z0 = virtualinvoke $r2.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        r1 = virtualinvoke $r5.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addEvent ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r9);

     label1:
        r13 = r0.<gov.nist.javax.sip.EventScanner: int[] eventMutex>;

        entermonitor r13;

     label2:
        $r3 = r0.<gov.nist.javax.sip.EventScanner: java.util.LinkedList pendingEvents>;

        virtualinvoke $r3.<java.util.LinkedList: boolean add(java.lang.Object)>(r11);

        $r4 = r0.<gov.nist.javax.sip.EventScanner: int[] eventMutex>;

        virtualinvoke $r4.<java.lang.Object: void notify()>();

        exitmonitor r13;

     label3:
        return;

     label4:
        $r10 := @caughtexception;

     label5:
        exitmonitor r13;

     label6:
        throw $r10;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label5 to label6 with label4;
    }

    public void deliverEvent(gov.nist.javax.sip.EventWrapper)
    {
        gov.nist.javax.sip.EventScanner r0;
        gov.nist.core.StackLogger r1, $r13, $r51, $r137, $r169, $r196, $r199, $r202, $r205, $r236, $r239, $r242, $r246, $r249, r252, r256, r260, r262, r265, r271, r273, r275, r279, r283, r293, r302, r304, r310;
        gov.nist.javax.sip.SipStackImpl $r2, $r3, $r4, $r10, $r12, $r14, $r20, $r32, $r41, $r43, $r49, $r50, $r55, $r62, $r63, $r65, $r68, $r69, $r71, $r80, $r85, $r96, $r102, $r107, $r112, $r113, $r122, $r127, $r136, $r139, $r148, $r153, $r162, $r167, $r168, $r170, $r171, $r185, $r194, $r195, $r198, $r201, $r204, $r207, $r216, $r221, $r235, $r238, $r241, $r244, $r245, $r248, $r259, $r270;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42;
        java.lang.StringBuilder $r5, $r86, $r128, $r154, $r186, $r222, r257, r261, r272, r274, r276, r289, r294, r303, r305;
        java.lang.String $r8, $r19, $r25, $r40, $r47, $r57, $r59, $r75, $r91, $r93, $r98, $r100, $r104, $r106, $r111, $r117, $r133, $r135, $r138, $r143, $r159, $r161, $r165, $r173, $r182, $r192, $r211, $r227, $r229, $r292;
        javax.sip.DialogTerminatedEvent $r9;
        javax.sip.TransactionTerminatedEvent $r11, $r16, $r22;
        javax.sip.ClientTransaction $r17;
        javax.sip.ServerTransaction $r23, $r180;
        javax.sip.IOExceptionEvent $r26;
        gov.nist.javax.sip.DialogTimeoutEvent $r27;
        gov.nist.javax.sip.SipListenerExt $r28;
        javax.sip.TimeoutEvent $r29;
        javax.sip.message.Response $r30;
        javax.sip.Dialog $r31, $r95;
        gov.nist.javax.sip.stack.SIPTransaction $r33, $r34, $r35, $r64, $r67, $r70, $r72, $r73, $r77, $r78, $r81, $r83, $r94, $r109, $r114, $r115, $r119, $r120, $r123, $r125, $r140, $r141, $r145, $r146, $r149, $r151, $r176, $r208, $r209, $r213, $r214, $r217, $r219, $r231, $r232, $r233, $r264, $r267, $r269, $r281, $r285, r290, $r297;
        javax.sip.TransactionState $r36, $r37, $r76, $r118, $r144, $r212;
        gov.nist.javax.sip.message.SIPRequest $r38, $r39, $r74, $r90, $r116, $r132, $r142, $r158, $r210, $r226, r255;
        int $i0, $i2, $i3, $i4, $i5;
        javax.sip.header.CSeqHeader $r42, $r291;
        long $l1;
        javax.sip.DialogState $r45, $r48, $r52, $r53;
        javax.sip.ResponseEvent $r54, r286;
        javax.sip.RequestEvent $r60, $r88, $r101, $r130, $r156, $r179, $r224;
        javax.sip.message.Request $r61, $r89, $r131, $r157, $r225;
        gov.nist.javax.sip.stack.SIPServerTransaction $r66, $r79, $r82, $r84, $r121, $r124, $r126, $r147, $r150, $r152, $r215, $r218, $r220, r258, r268;
        gov.nist.javax.sip.message.SIPResponse $r166, r287;
        java.lang.Object $r183, $r190;
        gov.nist.javax.sip.SipProviderImpl $r184;
        java.lang.AbstractMethodError $r193, $r243;
        java.lang.Exception $r197, $r200, $r203, $r234, $r237, $r240, $r247;
        java.lang.Throwable $r206, $r230;
        gov.nist.javax.sip.EventWrapper r250;
        java.util.EventObject r251;
        javax.sip.SipListener r254;
        gov.nist.javax.sip.stack.SIPDialog r277, r288;
        gov.nist.javax.sip.stack.SIPClientTransaction r296;

        r0 := @this: gov.nist.javax.sip.EventScanner;

        r250 := @parameter0: gov.nist.javax.sip.EventWrapper;

        r251 = r250.<gov.nist.javax.sip.EventWrapper: java.util.EventObject sipEvent>;

        $r2 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z0 = virtualinvoke $r2.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label001;

        $r185 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        r252 = virtualinvoke $r185.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r186 = new java.lang.StringBuilder;

        specialinvoke $r186.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r186.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sipEvent = ");

        virtualinvoke $r186.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r251);

        virtualinvoke $r186.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("source = ");

        $r190 = virtualinvoke r251.<java.util.EventObject: java.lang.Object getSource()>();

        virtualinvoke $r186.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r190);

        $r192 = virtualinvoke $r186.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r252.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r192);

     label001:
        $z1 = r251 instanceof javax.sip.IOExceptionEvent;

        if $z1 != 0 goto label002;

        $r183 = virtualinvoke r251.<java.util.EventObject: java.lang.Object getSource()>();

        $r184 = (gov.nist.javax.sip.SipProviderImpl) $r183;

        r254 = virtualinvoke $r184.<gov.nist.javax.sip.SipProviderImpl: javax.sip.SipListener getSipListener()>();

        goto label003;

     label002:
        $r3 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        r254 = virtualinvoke $r3.<gov.nist.javax.sip.SipStackImpl: javax.sip.SipListener getSipListener()>();

     label003:
        $z2 = r251 instanceof javax.sip.RequestEvent;

        if $z2 == 0 goto label044;

     label004:
        $r60 = (javax.sip.RequestEvent) r251;

        $r61 = virtualinvoke $r60.<javax.sip.RequestEvent: javax.sip.message.Request getRequest()>();

        r255 = (gov.nist.javax.sip.message.SIPRequest) $r61;

        $r62 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z17 = virtualinvoke $r62.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z17 == 0 goto label005;

        $r171 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        r256 = virtualinvoke $r171.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r257 = new java.lang.StringBuilder;

        specialinvoke r257.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r257.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("deliverEvent : ");

        $r173 = virtualinvoke r255.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()>();

        virtualinvoke r257.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r173);

        virtualinvoke r257.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" transaction ");

        $r176 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        virtualinvoke r257.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r176);

        virtualinvoke r257.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sipEvent.serverTx = ");

        $r179 = (javax.sip.RequestEvent) r251;

        $r180 = virtualinvoke $r179.<javax.sip.RequestEvent: javax.sip.ServerTransaction getServerTransaction()>();

        virtualinvoke r257.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r180);

        $r182 = virtualinvoke r257.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r256.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r182);

     label005:
        $r63 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r64 = virtualinvoke $r63.<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.stack.SIPTransaction findTransaction(gov.nist.javax.sip.message.SIPMessage,boolean)>(r255, 1);

        r258 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r64;

     label006:
        if r258 == null goto label016;

     label007:
        $z26 = virtualinvoke r258.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean passToListener()>();

        if $z26 != 0 goto label016;

        $r138 = virtualinvoke r255.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z27 = virtualinvoke $r138.<java.lang.String: boolean equals(java.lang.Object)>("ACK");

        if $z27 == 0 goto label010;

        $z31 = virtualinvoke r258.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isInviteTransaction()>();

        if $z31 == 0 goto label010;

        $r166 = virtualinvoke r258.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse getLastResponse()>();

        $i4 = virtualinvoke $r166.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        $i5 = $i4 / 100;

        if $i5 == 2 goto label008;

        $r170 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z33 = virtualinvoke $r170.<gov.nist.javax.sip.SipStackImpl: boolean isNon2XXAckPassedToListener()>();

        if $z33 == 0 goto label010;

     label008:
        $r167 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z32 = virtualinvoke $r167.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z32 == 0 goto label023;

        $r168 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r169 = virtualinvoke $r168.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r169.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Detected broken client sending ACK with same branch! Passing...");

     label009:
        goto label023;

     label010:
        $r259 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z40 = virtualinvoke $r259.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z40 == 0 goto label011;

        $r162 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        r260 = virtualinvoke $r162.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r261 = new java.lang.StringBuilder;

        specialinvoke r261.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r261.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("transaction already exists! ");

        virtualinvoke r261.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r258);

        $r165 = virtualinvoke r261.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r260.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r165);

     label011:
        $r139 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z28 = virtualinvoke $r139.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z28 == 0 goto label012;

        $r153 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        r262 = virtualinvoke $r153.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r154 = new java.lang.StringBuilder;

        specialinvoke $r154.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Done processing Message ");

        $r156 = (javax.sip.RequestEvent) r251;

        $r157 = virtualinvoke $r156.<javax.sip.RequestEvent: javax.sip.message.Request getRequest()>();

        $r158 = (gov.nist.javax.sip.message.SIPRequest) $r157;

        $r159 = virtualinvoke $r158.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()>();

        virtualinvoke $r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r159);

        $r161 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r262.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r161);

     label012:
        $r140 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        if $r140 == null goto label013;

        $r149 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r150 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r149;

        $z30 = virtualinvoke $r150.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean passToListener()>();

        if $z30 == 0 goto label013;

        $r151 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r152 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r151;

        virtualinvoke $r152.<gov.nist.javax.sip.stack.SIPServerTransaction: void releaseSem()>();

     label013:
        $r264 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        if $r264 == null goto label014;

        $r148 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r146 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r147 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r146;

        virtualinvoke $r148.<gov.nist.javax.sip.SipStackImpl: void removePendingTransaction(gov.nist.javax.sip.stack.SIPServerTransaction)>($r147);

     label014:
        $r141 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r142 = virtualinvoke $r141.<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r143 = virtualinvoke $r142.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z29 = virtualinvoke $r143.<java.lang.String: boolean equals(java.lang.Object)>("ACK");

        if $z29 == 0 goto label015;

        $r145 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r144 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke $r145.<gov.nist.javax.sip.stack.SIPTransaction: void setState(javax.sip.TransactionState)>($r144);

     label015:
        return;

     label016:
        $r65 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r66 = virtualinvoke $r65.<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.stack.SIPServerTransaction findPendingTransaction(gov.nist.javax.sip.message.SIPRequest)>(r255);

        if $r66 == null goto label022;

        $r112 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z22 = virtualinvoke $r112.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z22 == 0 goto label017;

        $r136 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r137 = virtualinvoke $r136.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r137.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("transaction already exists!!");

     label017:
        $r113 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z23 = virtualinvoke $r113.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z23 == 0 goto label018;

        $r127 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        r265 = virtualinvoke $r127.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r128 = new java.lang.StringBuilder;

        specialinvoke $r128.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Done processing Message ");

        $r130 = (javax.sip.RequestEvent) r251;

        $r131 = virtualinvoke $r130.<javax.sip.RequestEvent: javax.sip.message.Request getRequest()>();

        $r132 = (gov.nist.javax.sip.message.SIPRequest) $r131;

        $r133 = virtualinvoke $r132.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()>();

        virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r133);

        $r135 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r265.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r135);

     label018:
        $r114 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        if $r114 == null goto label019;

        $r123 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r124 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r123;

        $z25 = virtualinvoke $r124.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean passToListener()>();

        if $z25 == 0 goto label019;

        $r125 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r126 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r125;

        virtualinvoke $r126.<gov.nist.javax.sip.stack.SIPServerTransaction: void releaseSem()>();

     label019:
        $r267 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        if $r267 == null goto label020;

        $r122 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r120 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r121 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r120;

        virtualinvoke $r122.<gov.nist.javax.sip.SipStackImpl: void removePendingTransaction(gov.nist.javax.sip.stack.SIPServerTransaction)>($r121);

     label020:
        $r115 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r116 = virtualinvoke $r115.<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r117 = virtualinvoke $r116.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z24 = virtualinvoke $r117.<java.lang.String: boolean equals(java.lang.Object)>("ACK");

        if $z24 == 0 goto label021;

        $r119 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r118 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke $r119.<gov.nist.javax.sip.stack.SIPTransaction: void setState(javax.sip.TransactionState)>($r118);

     label021:
        return;

     label022:
        $r67 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        r268 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r67;

        $r68 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        virtualinvoke $r68.<gov.nist.javax.sip.SipStackImpl: void putPendingTransaction(gov.nist.javax.sip.stack.SIPServerTransaction)>(r268);

     label023:
        $r269 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        virtualinvoke r255.<gov.nist.javax.sip.message.SIPRequest: void setTransaction(java.lang.Object)>($r269);

     label024:
        $r270 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z41 = virtualinvoke $r270.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z41 == 0 goto label025;

        $r102 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        r271 = virtualinvoke $r102.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r272 = new java.lang.StringBuilder;

        specialinvoke r272.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r272.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling listener ");

        $r104 = virtualinvoke r255.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()>();

        virtualinvoke r272.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r104);

        $r106 = virtualinvoke r272.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r271.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r106);

        $r107 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        r273 = virtualinvoke $r107.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r274 = new java.lang.StringBuilder;

        specialinvoke r274.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r274.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling listener ");

        $r109 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        virtualinvoke r274.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r109);

        $r111 = virtualinvoke r274.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r273.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r111);

     label025:
        if r254 == null goto label027;

     label026:
        $r101 = (javax.sip.RequestEvent) r251;

        interfaceinvoke r254.<javax.sip.SipListener: void processRequest(javax.sip.RequestEvent)>($r101);

     label027:
        $r69 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z18 = virtualinvoke $r69.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z18 == 0 goto label028;

        $r96 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        r275 = virtualinvoke $r96.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r276 = new java.lang.StringBuilder;

        specialinvoke r276.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r276.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Done processing Message ");

        $r98 = virtualinvoke r255.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()>();

        virtualinvoke r276.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r98);

        $r100 = virtualinvoke r276.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r275.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r100);

     label028:
        $r70 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        if $r70 == null goto label031;

        $r94 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r95 = virtualinvoke $r94.<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.Dialog getDialog()>();

        r277 = (gov.nist.javax.sip.stack.SIPDialog) $r95;

     label029:
        if r277 == null goto label031;

     label030:
        virtualinvoke r277.<gov.nist.javax.sip.stack.SIPDialog: void requestConsumed()>();

     label031:
        goto label034;

     label032:
        $r247 := @caughtexception;

     label033:
        $r248 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r249 = virtualinvoke $r248.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r249.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>($r247);

     label034:
        $r71 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z19 = virtualinvoke $r71.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z19 == 0 goto label035;

        $r85 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        r279 = virtualinvoke $r85.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r86 = new java.lang.StringBuilder;

        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Done processing Message ");

        $r88 = (javax.sip.RequestEvent) r251;

        $r89 = virtualinvoke $r88.<javax.sip.RequestEvent: javax.sip.message.Request getRequest()>();

        $r90 = (gov.nist.javax.sip.message.SIPRequest) $r89;

        $r91 = virtualinvoke $r90.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()>();

        virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r91);

        $r93 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r279.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r93);

     label035:
        $r72 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        if $r72 == null goto label036;

        $r81 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r82 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r81;

        $z21 = virtualinvoke $r82.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean passToListener()>();

        if $z21 == 0 goto label036;

        $r83 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r84 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r83;

        virtualinvoke $r84.<gov.nist.javax.sip.stack.SIPServerTransaction: void releaseSem()>();

     label036:
        $r281 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        if $r281 == null goto label037;

        $r80 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r78 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r79 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r78;

        virtualinvoke $r80.<gov.nist.javax.sip.SipStackImpl: void removePendingTransaction(gov.nist.javax.sip.stack.SIPServerTransaction)>($r79);

     label037:
        $r73 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r74 = virtualinvoke $r73.<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r75 = virtualinvoke $r74.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z20 = virtualinvoke $r75.<java.lang.String: boolean equals(java.lang.Object)>("ACK");

        if $z20 == 0 goto label038;

        $r77 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r76 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke $r77.<gov.nist.javax.sip.stack.SIPTransaction: void setState(javax.sip.TransactionState)>($r76);

     label038:
        goto label102;

     label039:
        $r206 := @caughtexception;

        $r207 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z35 = virtualinvoke $r207.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z35 == 0 goto label040;

        $r221 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        r283 = virtualinvoke $r221.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r222 = new java.lang.StringBuilder;

        specialinvoke $r222.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r222.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Done processing Message ");

        $r224 = (javax.sip.RequestEvent) r251;

        $r225 = virtualinvoke $r224.<javax.sip.RequestEvent: javax.sip.message.Request getRequest()>();

        $r226 = (gov.nist.javax.sip.message.SIPRequest) $r225;

        $r227 = virtualinvoke $r226.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()>();

        virtualinvoke $r222.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r227);

        $r229 = virtualinvoke $r222.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r283.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r229);

     label040:
        $r208 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        if $r208 == null goto label041;

        $r217 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r218 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r217;

        $z37 = virtualinvoke $r218.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean passToListener()>();

        if $z37 == 0 goto label041;

        $r219 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r220 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r219;

        virtualinvoke $r220.<gov.nist.javax.sip.stack.SIPServerTransaction: void releaseSem()>();

     label041:
        $r285 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        if $r285 == null goto label042;

        $r216 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r214 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r215 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r214;

        virtualinvoke $r216.<gov.nist.javax.sip.SipStackImpl: void removePendingTransaction(gov.nist.javax.sip.stack.SIPServerTransaction)>($r215);

     label042:
        $r209 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r210 = virtualinvoke $r209.<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r211 = virtualinvoke $r210.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z36 = virtualinvoke $r211.<java.lang.String: boolean equals(java.lang.Object)>("ACK");

        if $z36 == 0 goto label043;

        $r213 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r212 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke $r213.<gov.nist.javax.sip.stack.SIPTransaction: void setState(javax.sip.TransactionState)>($r212);

     label043:
        throw $r206;

     label044:
        $z3 = r251 instanceof javax.sip.ResponseEvent;

        if $z3 == 0 goto label072;

     label045:
        r286 = (javax.sip.ResponseEvent) r251;

     label046:
        $r30 = virtualinvoke r286.<javax.sip.ResponseEvent: javax.sip.message.Response getResponse()>();

        r287 = (gov.nist.javax.sip.message.SIPResponse) $r30;

        $r31 = virtualinvoke r286.<javax.sip.ResponseEvent: javax.sip.Dialog getDialog()>();

        r288 = (gov.nist.javax.sip.stack.SIPDialog) $r31;

     label047:
        $r32 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z11 = virtualinvoke $r32.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z11 == 0 goto label048;

        $r55 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        r1 = virtualinvoke $r55.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r289 = new java.lang.StringBuilder;

        specialinvoke r289.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r289.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling listener for ");

        $r57 = virtualinvoke r287.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getFirstLine()>();

        virtualinvoke r289.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r59 = virtualinvoke r289.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r59);

     label048:
        if r254 == null goto label053;

     label049:
        r290 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

     label050:
        if r290 == null goto label052;

     label051:
        virtualinvoke r290.<gov.nist.javax.sip.stack.SIPTransaction: void setPassToListener()>();

     label052:
        $r54 = (javax.sip.ResponseEvent) r251;

        interfaceinvoke r254.<javax.sip.SipListener: void processResponse(javax.sip.ResponseEvent)>($r54);

     label053:
        if r288 == null goto label058;

     label054:
        $r48 = virtualinvoke r288.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        if $r48 == null goto label055;

        $r52 = virtualinvoke r288.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r53 = <javax.sip.DialogState: javax.sip.DialogState TERMINATED>;

        $z16 = virtualinvoke $r52.<javax.sip.DialogState: boolean equals(java.lang.Object)>($r53);

        if $z16 != 0 goto label058;

     label055:
        $i2 = virtualinvoke r287.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        if $i2 == 481 goto label056;

        $i3 = virtualinvoke r287.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        if $i3 != 408 goto label058;

     label056:
        $r49 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z15 = virtualinvoke $r49.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z15 == 0 goto label057;

        $r50 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r51 = virtualinvoke $r50.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r51.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Removing dialog on 408 or 481 response");

     label057:
        virtualinvoke r288.<gov.nist.javax.sip.stack.SIPDialog: void doDeferredDelete()>();

     label058:
        $r291 = virtualinvoke r287.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $r292 = interfaceinvoke $r291.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $z42 = virtualinvoke $r292.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z42 == 0 goto label062;

     label059:
        if r288 == null goto label062;

     label060:
        $i0 = virtualinvoke r287.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        if $i0 != 200 goto label062;

        $r41 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z14 = virtualinvoke $r41.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z14 == 0 goto label061;

        $r43 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        r293 = virtualinvoke $r43.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r294 = new java.lang.StringBuilder;

        specialinvoke r294.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r294.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Warning! unacknowledged dialog. ");

        $r45 = virtualinvoke r288.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        virtualinvoke r294.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r45);

        $r47 = virtualinvoke r294.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r293.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r47);

     label061:
        $r42 = virtualinvoke r287.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $l1 = interfaceinvoke $r42.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        virtualinvoke r288.<gov.nist.javax.sip.stack.SIPDialog: void doDeferredDeleteIfNoAckSent(long)>($l1);

     label062:
        goto label065;

     label063:
        $r237 := @caughtexception;

     label064:
        $r238 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r239 = virtualinvoke $r238.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r239.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>($r237);

     label065:
        $r33 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        r296 = (gov.nist.javax.sip.stack.SIPClientTransaction) $r33;

     label066:
        if r296 == null goto label068;

     label067:
        $r36 = <javax.sip.TransactionState: javax.sip.TransactionState COMPLETED>;

        $r37 = virtualinvoke r296.<gov.nist.javax.sip.stack.SIPClientTransaction: javax.sip.TransactionState getState()>();

        if $r36 != $r37 goto label068;

        $r38 = virtualinvoke r296.<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        if $r38 == null goto label068;

        $r39 = virtualinvoke r296.<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r40 = virtualinvoke $r39.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z13 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z13 != 0 goto label068;

        virtualinvoke r296.<gov.nist.javax.sip.stack.SIPClientTransaction: void clearState()>();

     label068:
        $r297 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        if $r297 == null goto label069;

        $r34 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $z12 = virtualinvoke $r34.<gov.nist.javax.sip.stack.SIPTransaction: boolean passToListener()>();

        if $z12 == 0 goto label069;

        $r35 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        virtualinvoke $r35.<gov.nist.javax.sip.stack.SIPTransaction: void releaseSem()>();

     label069:
        goto label102;

     label070:
        $r230 := @caughtexception;

        $r231 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        if $r231 == null goto label071;

        $r232 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $z38 = virtualinvoke $r232.<gov.nist.javax.sip.stack.SIPTransaction: boolean passToListener()>();

        if $z38 == 0 goto label071;

        $r233 = r250.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        virtualinvoke $r233.<gov.nist.javax.sip.stack.SIPTransaction: void releaseSem()>();

     label071:
        throw $r230;

     label072:
        $z4 = r251 instanceof javax.sip.TimeoutEvent;

        if $z4 == 0 goto label077;

        if r254 == null goto label076;

     label073:
        $r29 = (javax.sip.TimeoutEvent) r251;

        interfaceinvoke r254.<javax.sip.SipListener: void processTimeout(javax.sip.TimeoutEvent)>($r29);

     label074:
        goto label076;

     label075:
        $r240 := @caughtexception;

        $r241 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r242 = virtualinvoke $r241.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r242.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>($r240);

     label076:
        goto label102;

     label077:
        $z5 = r251 instanceof gov.nist.javax.sip.DialogTimeoutEvent;

        if $z5 == 0 goto label082;

        if r254 == null goto label081;

     label078:
        $z10 = r254 instanceof gov.nist.javax.sip.SipListenerExt;

        if $z10 == 0 goto label081;

        $r28 = (gov.nist.javax.sip.SipListenerExt) r254;

        $r27 = (gov.nist.javax.sip.DialogTimeoutEvent) r251;

        interfaceinvoke $r28.<gov.nist.javax.sip.SipListenerExt: void processDialogTimeout(gov.nist.javax.sip.DialogTimeoutEvent)>($r27);

     label079:
        goto label081;

     label080:
        $r203 := @caughtexception;

        $r204 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r205 = virtualinvoke $r204.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r205.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>($r203);

     label081:
        goto label102;

     label082:
        $z6 = r251 instanceof javax.sip.IOExceptionEvent;

        if $z6 == 0 goto label087;

        if r254 == null goto label086;

     label083:
        $r26 = (javax.sip.IOExceptionEvent) r251;

        interfaceinvoke r254.<javax.sip.SipListener: void processIOException(javax.sip.IOExceptionEvent)>($r26);

     label084:
        goto label086;

     label085:
        $r200 := @caughtexception;

        $r201 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r202 = virtualinvoke $r201.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r202.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>($r200);

     label086:
        goto label102;

     label087:
        $z7 = r251 instanceof javax.sip.TransactionTerminatedEvent;

        if $z7 == 0 goto label095;

     label088:
        $r10 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z9 = virtualinvoke $r10.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z9 == 0 goto label089;

        $r12 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r13 = virtualinvoke $r12.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r13.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("About to deliver transactionTerminatedEvent");

        $r14 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        r302 = virtualinvoke $r14.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r303 = new java.lang.StringBuilder;

        specialinvoke r303.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r303.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tx = ");

        $r16 = (javax.sip.TransactionTerminatedEvent) r251;

        $r17 = virtualinvoke $r16.<javax.sip.TransactionTerminatedEvent: javax.sip.ClientTransaction getClientTransaction()>();

        virtualinvoke r303.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke r303.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r302.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r19);

        $r20 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        r304 = virtualinvoke $r20.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r305 = new java.lang.StringBuilder;

        specialinvoke r305.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r305.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tx = ");

        $r22 = (javax.sip.TransactionTerminatedEvent) r251;

        $r23 = virtualinvoke $r22.<javax.sip.TransactionTerminatedEvent: javax.sip.ServerTransaction getServerTransaction()>();

        virtualinvoke r305.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r25 = virtualinvoke r305.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r304.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r25);

     label089:
        if r254 == null goto label093;

     label090:
        $r11 = (javax.sip.TransactionTerminatedEvent) r251;

        interfaceinvoke r254.<javax.sip.SipListener: void processTransactionTerminated(javax.sip.TransactionTerminatedEvent)>($r11);

     label091:
        goto label093;

     label092:
        $r234 := @caughtexception;

        $r235 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r236 = virtualinvoke $r235.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r236.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>($r234);

     label093:
        goto label102;

     label094:
        $r193 := @caughtexception;

        $r194 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z34 = virtualinvoke $r194.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z34 == 0 goto label093;

        $r195 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r196 = virtualinvoke $r195.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r196.<gov.nist.core.StackLogger: void logWarning(java.lang.String)>("Unable to call sipListener.processTransactionTerminated");

        goto label093;

     label095:
        $z8 = r251 instanceof javax.sip.DialogTerminatedEvent;

        if $z8 == 0 goto label101;

        if r254 == null goto label100;

     label096:
        $r9 = (javax.sip.DialogTerminatedEvent) r251;

        interfaceinvoke r254.<javax.sip.SipListener: void processDialogTerminated(javax.sip.DialogTerminatedEvent)>($r9);

     label097:
        goto label100;

     label098:
        $r197 := @caughtexception;

        $r198 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r199 = virtualinvoke $r198.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r199.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>($r197);

        goto label100;

     label099:
        $r243 := @caughtexception;

        $r244 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z39 = virtualinvoke $r244.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z39 == 0 goto label100;

        $r245 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r246 = virtualinvoke $r245.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r246.<gov.nist.core.StackLogger: void logWarning(java.lang.String)>("Unable to call sipListener.processDialogTerminated");

     label100:
        goto label102;

     label101:
        $r4 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        r310 = virtualinvoke $r4.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad event");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r251);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r310.<gov.nist.core.StackLogger: void logFatalError(java.lang.String)>($r8);

     label102:
        return;

        catch java.lang.Throwable from label004 to label005 with label039;
        catch java.lang.Throwable from label005 to label006 with label039;
        catch java.lang.Throwable from label007 to label008 with label039;
        catch java.lang.Throwable from label008 to label009 with label039;
        catch java.lang.Throwable from label010 to label011 with label039;
        catch java.lang.Throwable from label016 to label017 with label039;
        catch java.lang.Throwable from label022 to label023 with label039;
        catch java.lang.Throwable from label023 to label024 with label039;
        catch java.lang.Exception from label024 to label025 with label032;
        catch java.lang.Throwable from label024 to label025 with label039;
        catch java.lang.Exception from label026 to label027 with label032;
        catch java.lang.Throwable from label026 to label027 with label039;
        catch java.lang.Exception from label027 to label028 with label032;
        catch java.lang.Throwable from label027 to label028 with label039;
        catch java.lang.Exception from label028 to label029 with label032;
        catch java.lang.Throwable from label028 to label029 with label039;
        catch java.lang.Exception from label030 to label031 with label032;
        catch java.lang.Throwable from label030 to label031 with label039;
        catch java.lang.Throwable from label033 to label034 with label039;
        catch java.lang.Throwable from label045 to label046 with label070;
        catch java.lang.Throwable from label046 to label047 with label070;
        catch java.lang.Exception from label047 to label048 with label063;
        catch java.lang.Throwable from label047 to label048 with label070;
        catch java.lang.Exception from label049 to label050 with label063;
        catch java.lang.Throwable from label049 to label050 with label070;
        catch java.lang.Exception from label051 to label052 with label063;
        catch java.lang.Throwable from label051 to label052 with label070;
        catch java.lang.Exception from label052 to label053 with label063;
        catch java.lang.Throwable from label052 to label053 with label070;
        catch java.lang.Exception from label054 to label055 with label063;
        catch java.lang.Throwable from label054 to label055 with label070;
        catch java.lang.Exception from label055 to label056 with label063;
        catch java.lang.Throwable from label055 to label056 with label070;
        catch java.lang.Exception from label056 to label057 with label063;
        catch java.lang.Throwable from label056 to label057 with label070;
        catch java.lang.Exception from label057 to label058 with label063;
        catch java.lang.Throwable from label057 to label058 with label070;
        catch java.lang.Exception from label058 to label059 with label063;
        catch java.lang.Throwable from label058 to label059 with label070;
        catch java.lang.Exception from label060 to label061 with label063;
        catch java.lang.Throwable from label060 to label061 with label070;
        catch java.lang.Exception from label061 to label062 with label063;
        catch java.lang.Throwable from label061 to label062 with label070;
        catch java.lang.Throwable from label064 to label065 with label070;
        catch java.lang.Throwable from label065 to label066 with label070;
        catch java.lang.Throwable from label067 to label068 with label070;
        catch java.lang.Exception from label073 to label074 with label075;
        catch java.lang.Exception from label078 to label079 with label080;
        catch java.lang.Exception from label083 to label084 with label085;
        catch java.lang.AbstractMethodError from label088 to label089 with label094;
        catch java.lang.Exception from label088 to label089 with label092;
        catch java.lang.AbstractMethodError from label090 to label091 with label094;
        catch java.lang.Exception from label090 to label091 with label092;
        catch java.lang.AbstractMethodError from label096 to label097 with label099;
        catch java.lang.Exception from label096 to label097 with label098;
    }

    public void forceStop()
    {
        gov.nist.javax.sip.EventScanner r0;
        int[] r1, $r3;
        java.lang.Throwable $r4;

        r0 := @this: gov.nist.javax.sip.EventScanner;

        r1 = r0.<gov.nist.javax.sip.EventScanner: int[] eventMutex>;

        entermonitor r1;

     label1:
        r0.<gov.nist.javax.sip.EventScanner: boolean isStopped> = 1;

        r0.<gov.nist.javax.sip.EventScanner: int refCount> = 0;

        $r3 = r0.<gov.nist.javax.sip.EventScanner: int[] eventMutex>;

        virtualinvoke $r3.<java.lang.Object: void notify()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r4 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void incrementRefcount()
    {
        gov.nist.javax.sip.EventScanner r0;
        int[] r1;
        int $i0, $i1;
        java.lang.Throwable $r3;

        r0 := @this: gov.nist.javax.sip.EventScanner;

        r1 = r0.<gov.nist.javax.sip.EventScanner: int[] eventMutex>;

        entermonitor r1;

     label1:
        $i0 = r0.<gov.nist.javax.sip.EventScanner: int refCount>;

        $i1 = $i0 + 1;

        r0.<gov.nist.javax.sip.EventScanner: int refCount> = $i1;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r3 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public void run()
    {
        gov.nist.javax.sip.EventScanner r0;
        gov.nist.core.ThreadAuditor$ThreadHandle r1;
        gov.nist.javax.sip.EventWrapper r2;
        java.lang.StringBuilder r3;
        gov.nist.javax.sip.SipStackImpl $r4, $r7, $r8, $r15, $r16, $r17, $r19, $r23, $r24, $r25, $r27, $r30, $r31, $r34, $r35;
        gov.nist.core.ThreadAuditor $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.lang.Object $r6;
        int $i0;
        java.lang.String $r13;
        int[] $r14, r37;
        long $l1;
        gov.nist.core.StackLogger $r18, $r20, $r26, $r28, $r32, $r36, r43;
        java.lang.Throwable $r21, $r22, $r29;
        java.lang.Exception $r33;
        java.util.LinkedList $r38, r40, r41;
        java.util.ListIterator r42;

        r0 := @this: gov.nist.javax.sip.EventScanner;

     label01:
        $r4 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r5 = virtualinvoke $r4.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.ThreadAuditor getThreadAuditor()>();

        r1 = virtualinvoke $r5.<gov.nist.core.ThreadAuditor: gov.nist.core.ThreadAuditor$ThreadHandle addCurrentThread()>();

     label02:
        r37 = r0.<gov.nist.javax.sip.EventScanner: int[] eventMutex>;

        entermonitor r37;

     label03:
        $r38 = r0.<gov.nist.javax.sip.EventScanner: java.util.LinkedList pendingEvents>;

        $z12 = virtualinvoke $r38.<java.util.LinkedList: boolean isEmpty()>();

        if $z12 == 0 goto label14;

        $z2 = r0.<gov.nist.javax.sip.EventScanner: boolean isStopped>;

        if $z2 == 0 goto label07;

        $r15 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z3 = virtualinvoke $r15.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z3 == 0 goto label04;

        $r19 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r20 = virtualinvoke $r19.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r20.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Stopped event scanner!!");

     label04:
        exitmonitor r37;

     label05:
        $r16 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z4 = virtualinvoke $r16.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z4 == 0 goto label06;

        $z5 = r0.<gov.nist.javax.sip.EventScanner: boolean isStopped>;

        if $z5 != 0 goto label06;

        $r17 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r18 = virtualinvoke $r17.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r18.<gov.nist.core.StackLogger: void logFatalError(java.lang.String)>("Event scanner exited abnormally");

     label06:
        return;

     label07:
        virtualinvoke r1.<gov.nist.core.ThreadAuditor$ThreadHandle: void ping()>();

        $r14 = r0.<gov.nist.javax.sip.EventScanner: int[] eventMutex>;

        $l1 = virtualinvoke r1.<gov.nist.core.ThreadAuditor$ThreadHandle: long getPingIntervalInMillisecs()>();

        virtualinvoke $r14.<java.lang.Object: void wait(long)>($l1);

     label08:
        goto label03;

     label09:
        $r22 := @caughtexception;

     label10:
        $r23 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z6 = virtualinvoke $r23.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z6 == 0 goto label11;

        $r27 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r28 = virtualinvoke $r27.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r28.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Interrupted!");

     label11:
        exitmonitor r37;

     label12:
        $r24 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z7 = virtualinvoke $r24.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z7 == 0 goto label13;

        $z8 = r0.<gov.nist.javax.sip.EventScanner: boolean isStopped>;

        if $z8 != 0 goto label13;

        $r25 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r26 = virtualinvoke $r25.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r26.<gov.nist.core.StackLogger: void logFatalError(java.lang.String)>("Event scanner exited abnormally");

     label13:
        return;

     label14:
        r40 = r0.<gov.nist.javax.sip.EventScanner: java.util.LinkedList pendingEvents>;

        r41 = new java.util.LinkedList;

        specialinvoke r41.<java.util.LinkedList: void <init>()>();

        r0.<gov.nist.javax.sip.EventScanner: java.util.LinkedList pendingEvents> = r41;

        exitmonitor r37;

     label15:
        r42 = virtualinvoke r40.<java.util.LinkedList: java.util.ListIterator listIterator()>();

     label16:
        $z0 = interfaceinvoke r42.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label22;

        $r6 = interfaceinvoke r42.<java.util.ListIterator: java.lang.Object next()>();

        r2 = (gov.nist.javax.sip.EventWrapper) $r6;

        $r7 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z1 = virtualinvoke $r7.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label17;

        $r8 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        r43 = virtualinvoke $r8.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Processing ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nevents ");

        $i0 = virtualinvoke r40.<java.util.LinkedList: int size()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r13 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r43.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r13);

     label17:
        virtualinvoke r0.<gov.nist.javax.sip.EventScanner: void deliverEvent(gov.nist.javax.sip.EventWrapper)>(r2);

     label18:
        goto label16;

     label19:
        $r33 := @caughtexception;

     label20:
        $r34 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z11 = virtualinvoke $r34.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z11 == 0 goto label18;

        $r35 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r36 = virtualinvoke $r35.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r36.<gov.nist.core.StackLogger: void logError(java.lang.String,java.lang.Exception)>("Unexpected exception caught while delivering event -- carrying on bravely", $r33);

     label21:
        goto label18;

     label22:
        goto label02;

     label23:
        $r21 := @caughtexception;

     label24:
        exitmonitor r37;

     label25:
        throw $r21;

     label26:
        $r29 := @caughtexception;

        $r30 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z9 = virtualinvoke $r30.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z9 == 0 goto label27;

        $z10 = r0.<gov.nist.javax.sip.EventScanner: boolean isStopped>;

        if $z10 != 0 goto label27;

        $r31 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r32 = virtualinvoke $r31.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r32.<gov.nist.core.StackLogger: void logFatalError(java.lang.String)>("Event scanner exited abnormally");

     label27:
        throw $r29;

        catch java.lang.Throwable from label01 to label02 with label26;
        catch java.lang.Throwable from label02 to label03 with label26;
        catch java.lang.Throwable from label03 to label04 with label23;
        catch java.lang.Throwable from label04 to label05 with label23;
        catch java.lang.InterruptedException from label07 to label08 with label09;
        catch java.lang.Throwable from label07 to label08 with label23;
        catch java.lang.Throwable from label10 to label11 with label23;
        catch java.lang.Throwable from label11 to label12 with label23;
        catch java.lang.Throwable from label14 to label15 with label23;
        catch java.lang.Throwable from label15 to label16 with label26;
        catch java.lang.Throwable from label16 to label17 with label26;
        catch java.lang.Exception from label17 to label18 with label19;
        catch java.lang.Throwable from label17 to label18 with label26;
        catch java.lang.Throwable from label20 to label21 with label26;
        catch java.lang.Throwable from label24 to label25 with label23;
        catch java.lang.Throwable from label25 to label26 with label26;
    }

    public void stop()
    {
        gov.nist.javax.sip.EventScanner r0;
        int[] r1, $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.Throwable $r4;

        r0 := @this: gov.nist.javax.sip.EventScanner;

        r1 = r0.<gov.nist.javax.sip.EventScanner: int[] eventMutex>;

        entermonitor r1;

     label1:
        $i0 = r0.<gov.nist.javax.sip.EventScanner: int refCount>;

        if $i0 <= 0 goto label2;

        $i2 = r0.<gov.nist.javax.sip.EventScanner: int refCount>;

        $i3 = $i2 - 1;

        r0.<gov.nist.javax.sip.EventScanner: int refCount> = $i3;

     label2:
        $i1 = r0.<gov.nist.javax.sip.EventScanner: int refCount>;

        if $i1 != 0 goto label3;

        r0.<gov.nist.javax.sip.EventScanner: boolean isStopped> = 1;

        $r3 = r0.<gov.nist.javax.sip.EventScanner: int[] eventMutex>;

        virtualinvoke $r3.<java.lang.Object: void notify()>();

     label3:
        exitmonitor r1;

     label4:
        return;

     label5:
        $r4 := @caughtexception;

     label6:
        exitmonitor r1;

     label7:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label6 to label7 with label5;
    }
}
