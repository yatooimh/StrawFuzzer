class gov.nist.javax.sip.NistSipMessageFactoryImpl extends java.lang.Object implements gov.nist.javax.sip.stack.StackMessageFactory
{
    private gov.nist.javax.sip.SipStackImpl sipStack;

    public void <init>(gov.nist.javax.sip.SipStackImpl)
    {
        gov.nist.javax.sip.NistSipMessageFactoryImpl r0;
        gov.nist.javax.sip.SipStackImpl r1;

        r0 := @this: gov.nist.javax.sip.NistSipMessageFactoryImpl;

        r1 := @parameter0: gov.nist.javax.sip.SipStackImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<gov.nist.javax.sip.NistSipMessageFactoryImpl: gov.nist.javax.sip.SipStackImpl sipStack> = r1;

        return;
    }

    public gov.nist.javax.sip.stack.ServerRequestInterface newSIPServerRequest(gov.nist.javax.sip.message.SIPRequest, gov.nist.javax.sip.stack.MessageChannel)
    {
        gov.nist.javax.sip.NistSipMessageFactoryImpl r0;
        gov.nist.javax.sip.message.SIPRequest r1;
        gov.nist.javax.sip.stack.MessageChannel r2;
        gov.nist.core.StackLogger r4;
        java.lang.IllegalArgumentException $r6;
        gov.nist.javax.sip.DialogFilter $r7;
        gov.nist.javax.sip.stack.SIPTransactionStack $r8;
        gov.nist.javax.sip.SipStackImpl $r9, $r13, $r14;
        boolean $z0, $z1;
        gov.nist.javax.sip.stack.MessageProcessor $r10;
        gov.nist.javax.sip.ListeningPointImpl $r11, $r12;
        java.lang.StringBuilder $r15;
        java.lang.String $r17, $r23;
        gov.nist.javax.sip.stack.SIPTransaction $r24;

        r0 := @this: gov.nist.javax.sip.NistSipMessageFactoryImpl;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPRequest;

        r2 := @parameter1: gov.nist.javax.sip.stack.MessageChannel;

        if r2 == null goto label4;

        if r1 == null goto label4;

        $r7 = new gov.nist.javax.sip.DialogFilter;

        $r8 = virtualinvoke r2.<gov.nist.javax.sip.stack.MessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()>();

        $r9 = (gov.nist.javax.sip.SipStackImpl) $r8;

        specialinvoke $r7.<gov.nist.javax.sip.DialogFilter: void <init>(gov.nist.javax.sip.SipStackImpl)>($r9);

        $z0 = r2 instanceof gov.nist.javax.sip.stack.SIPTransaction;

        if $z0 == 0 goto label1;

        $r24 = (gov.nist.javax.sip.stack.SIPTransaction) r2;

        $r7.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.stack.SIPTransaction transactionChannel> = $r24;

     label1:
        $r10 = virtualinvoke r2.<gov.nist.javax.sip.stack.MessageChannel: gov.nist.javax.sip.stack.MessageProcessor getMessageProcessor()>();

        $r11 = virtualinvoke $r10.<gov.nist.javax.sip.stack.MessageProcessor: gov.nist.javax.sip.ListeningPointImpl getListeningPoint()>();

        $r7.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.ListeningPointImpl listeningPoint> = $r11;

        $r12 = $r7.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.ListeningPointImpl listeningPoint>;

        if $r12 != null goto label2;

        return null;

     label2:
        $r13 = r0.<gov.nist.javax.sip.NistSipMessageFactoryImpl: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z1 = virtualinvoke $r13.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label3;

        $r14 = r0.<gov.nist.javax.sip.NistSipMessageFactoryImpl: gov.nist.javax.sip.SipStackImpl sipStack>;

        r4 = virtualinvoke $r14.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Returning request interface for ");

        $r17 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" messageChannel = ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r23 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r23);

     label3:
        return $r7;

     label4:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null Arg!");

        throw $r6;
    }

    public gov.nist.javax.sip.stack.ServerResponseInterface newSIPServerResponse(gov.nist.javax.sip.message.SIPResponse, gov.nist.javax.sip.stack.MessageChannel)
    {
        gov.nist.javax.sip.NistSipMessageFactoryImpl r0;
        gov.nist.core.StackLogger r1, $r15, r27;
        gov.nist.javax.sip.SipStackImpl $r3, $r7, $r8, $r13, $r14, $r16, $r30;
        boolean $z0, $z1, $z2;
        javax.sip.TransactionState $r4, $r5, $r6;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r9, $r17;
        java.lang.String $r12, $r22;
        gov.nist.javax.sip.message.SIPResponse r23;
        gov.nist.javax.sip.stack.MessageChannel r24;
        gov.nist.javax.sip.stack.SIPTransactionStack r25;
        gov.nist.javax.sip.stack.SIPTransaction r26;
        gov.nist.javax.sip.DialogFilter $r29;
        gov.nist.javax.sip.stack.MessageProcessor $r32;
        gov.nist.javax.sip.ListeningPointImpl $r33;

        r0 := @this: gov.nist.javax.sip.NistSipMessageFactoryImpl;

        r23 := @parameter0: gov.nist.javax.sip.message.SIPResponse;

        r24 := @parameter1: gov.nist.javax.sip.stack.MessageChannel;

        r25 = virtualinvoke r24.<gov.nist.javax.sip.stack.MessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()>();

        r26 = virtualinvoke r25.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.SIPTransaction findTransaction(gov.nist.javax.sip.message.SIPMessage,boolean)>(r23, 0);

        $r3 = r0.<gov.nist.javax.sip.NistSipMessageFactoryImpl: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z0 = virtualinvoke $r3.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r16 = r0.<gov.nist.javax.sip.NistSipMessageFactoryImpl: gov.nist.javax.sip.SipStackImpl sipStack>;

        r1 = virtualinvoke $r16.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found Transaction ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r26);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);

        $r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r22);

     label1:
        if r26 == null goto label5;

        $r4 = virtualinvoke r26.<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.TransactionState getState()>();

        if $r4 != null goto label3;

        $r13 = r0.<gov.nist.javax.sip.NistSipMessageFactoryImpl: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z2 = virtualinvoke $r13.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z2 == 0 goto label2;

        $r14 = r0.<gov.nist.javax.sip.NistSipMessageFactoryImpl: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r15 = virtualinvoke $r14.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r15.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Dropping response - null transaction state");

     label2:
        return null;

     label3:
        $r5 = <javax.sip.TransactionState: javax.sip.TransactionState COMPLETED>;

        $r6 = virtualinvoke r26.<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.TransactionState getState()>();

        if $r5 != $r6 goto label5;

        $i0 = virtualinvoke r23.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        $i1 = $i0 / 100;

        if $i1 != 1 goto label5;

        $r7 = r0.<gov.nist.javax.sip.NistSipMessageFactoryImpl: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z1 = virtualinvoke $r7.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label4;

        $r8 = r0.<gov.nist.javax.sip.NistSipMessageFactoryImpl: gov.nist.javax.sip.SipStackImpl sipStack>;

        r27 = virtualinvoke $r8.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dropping response - late arriving ");

        $i2 = virtualinvoke r23.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r27.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r12);

     label4:
        return null;

     label5:
        $r29 = new gov.nist.javax.sip.DialogFilter;

        $r30 = r0.<gov.nist.javax.sip.NistSipMessageFactoryImpl: gov.nist.javax.sip.SipStackImpl sipStack>;

        specialinvoke $r29.<gov.nist.javax.sip.DialogFilter: void <init>(gov.nist.javax.sip.SipStackImpl)>($r30);

        $r29.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.stack.SIPTransaction transactionChannel> = r26;

        $r32 = virtualinvoke r24.<gov.nist.javax.sip.stack.MessageChannel: gov.nist.javax.sip.stack.MessageProcessor getMessageProcessor()>();

        $r33 = virtualinvoke $r32.<gov.nist.javax.sip.stack.MessageProcessor: gov.nist.javax.sip.ListeningPointImpl getListeningPoint()>();

        $r29.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.ListeningPointImpl listeningPoint> = $r33;

        return $r29;
    }
}
