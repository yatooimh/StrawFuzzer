public class gov.nist.javax.sip.Utils extends java.lang.Object implements gov.nist.javax.sip.UtilsExt
{
    private static int callIDCounter;
    private static long counter;
    private static java.security.MessageDigest digester;
    private static gov.nist.javax.sip.Utils instance;
    private static java.util.Random rand;
    private static java.lang.String signature;
    private static final char[] toHex;

    static void <clinit>()
    {
        gov.nist.javax.sip.Utils $r0;
        char[] $r1;
        java.security.MessageDigest $r2;
        java.util.Random $r3;
        int $i0, $i1, $i2;
        java.lang.String $r4, $r6;
        byte[] $r5;
        java.lang.Exception $r7;
        java.lang.RuntimeException $r8;

        <gov.nist.javax.sip.Utils: long counter> = 0L;

        $r0 = new gov.nist.javax.sip.Utils;

        specialinvoke $r0.<gov.nist.javax.sip.Utils: void <init>()>();

        <gov.nist.javax.sip.Utils: gov.nist.javax.sip.Utils instance> = $r0;

        $r1 = newarray (char)[16];

        $r1[0] = 48;

        $r1[1] = 49;

        $r1[2] = 50;

        $r1[3] = 51;

        $r1[4] = 52;

        $r1[5] = 53;

        $r1[6] = 54;

        $r1[7] = 55;

        $r1[8] = 56;

        $r1[9] = 57;

        $r1[10] = 97;

        $r1[11] = 98;

        $r1[12] = 99;

        $r1[13] = 100;

        $r1[14] = 101;

        $r1[15] = 102;

        <gov.nist.javax.sip.Utils: char[] toHex> = $r1;

     label1:
        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        <gov.nist.javax.sip.Utils: java.security.MessageDigest digester> = $r2;

     label2:
        $r3 = new java.util.Random;

        specialinvoke $r3.<java.util.Random: void <init>()>();

        <gov.nist.javax.sip.Utils: java.util.Random rand> = $r3;

        $i0 = virtualinvoke $r3.<java.util.Random: int nextInt()>();

        $i1 = $i0 % 1000;

        $i2 = staticinvoke <java.lang.Math: int abs(int)>($i1);

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>();

        $r6 = staticinvoke <gov.nist.javax.sip.Utils: java.lang.String toHexString(byte[])>($r5);

        <gov.nist.javax.sip.Utils: java.lang.String signature> = $r6;

        return;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Could not intialize Digester ", $r7);

        throw $r8;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void <init>()
    {
        gov.nist.javax.sip.Utils r0;

        r0 := @this: gov.nist.javax.sip.Utils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static gov.nist.javax.sip.Utils getInstance()
    {
        gov.nist.javax.sip.Utils $r0;

        $r0 = <gov.nist.javax.sip.Utils: gov.nist.javax.sip.Utils instance>;

        return $r0;
    }

    public static java.lang.String getQuotedString(java.lang.String)
    {
        java.lang.String r0, $r4, $r7;
        java.lang.StringBuilder $r2;

        r0 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\"", "\\\"");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public static java.lang.String getSignature()
    {
        java.lang.String $r0;

        $r0 = <gov.nist.javax.sip.Utils: java.lang.String signature>;

        return $r0;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String r0;
        java.util.HashSet $r1;
        java.io.PrintStream $r2;
        gov.nist.javax.sip.Utils $r3;
        boolean $z0;
        java.lang.RuntimeException $r4;
        java.lang.String[] r5;
        int i0;

        r5 := @parameter0: java.lang.String[];

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        i0 = 0;

     label1:
        if i0 >= 100000 goto label3;

        $r3 = staticinvoke <gov.nist.javax.sip.Utils: gov.nist.javax.sip.Utils getInstance()>();

        r0 = virtualinvoke $r3.<gov.nist.javax.sip.Utils: java.lang.String generateBranchId()>();

        $z0 = virtualinvoke $r1.<java.util.HashSet: boolean contains(java.lang.Object)>(r0);

        if $z0 != 0 goto label2;

        virtualinvoke $r1.<java.util.HashSet: boolean add(java.lang.Object)>(r0);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Duplicate Branch ID");

        throw $r4;

     label3:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Done!!");

        return;
    }

    protected static java.lang.String reduceString(java.lang.String)
    {
        java.lang.String r0, r4, r5, r6;
        int i0, i4;
        char $c1, $c2, $c3;
        java.lang.StringBuilder $r1;

        r4 := @parameter0: java.lang.String;

        r0 = virtualinvoke r4.<java.lang.String: java.lang.String toLowerCase()>();

        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        r5 = "";

        i4 = 0;

     label1:
        if i4 >= i0 goto label4;

        r6 = r5;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        if $c1 == 32 goto label3;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        if $c2 != 9 goto label2;

        r6 = r5;

        goto label3;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        i4 = i4 + 1;

        r5 = r6;

        goto label1;

     label4:
        return r5;
    }

    public static java.lang.String toHexString(byte[])
    {
        byte[] r0;
        char[] r1, r2;
        int i0, $i1, $i2, $i3, i13, i14;
        java.lang.String $r3;
        byte $b4, $b5, $b6, $b9, $b10;
        char $c7, $c8, $c11, $c12;

        r0 := @parameter0: byte[];

        i13 = 0;

        $i1 = lengthof r0;

        $i2 = $i1 * 2;

        r1 = newarray (char)[$i2];

        i14 = 0;

     label1:
        $i3 = lengthof r0;

        if i14 >= $i3 goto label2;

        i0 = i13 + 1;

        r2 = <gov.nist.javax.sip.Utils: char[] toHex>;

        $b4 = r0[i14];

        $b5 = $b4 >> 4;

        $b6 = $b5 & 15;

        $c7 = r2[$b6];

        $c8 = (char) $c7;

        r1[i13] = $c8;

        i13 = i0 + 1;

        $b9 = r0[i14];

        $b10 = $b9 & 15;

        $c11 = r2[$b10];

        $c12 = (char) $c11;

        r1[i0] = $c12;

        i14 = i14 + 1;

        goto label1;

     label2:
        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(char[])>(r1);

        return $r3;
    }

    public java.lang.String generateBranchId()
    {
        gov.nist.javax.sip.Utils r0;
        long l0, l1, l2, $l3, $l4, $l5;
        java.lang.StringBuilder r1;
        java.util.Random $r2;
        java.security.MessageDigest $r3;
        java.lang.String $r4, $r7, $r9, r13;
        byte[] $r5, r12;
        java.lang.Throwable $r11;

        r0 := @this: gov.nist.javax.sip.Utils;

        entermonitor r0;

     label1:
        $r2 = <gov.nist.javax.sip.Utils: java.util.Random rand>;

        l0 = virtualinvoke $r2.<java.util.Random: long nextLong()>();

        l1 = <gov.nist.javax.sip.Utils: long counter>;

        $l3 = 1L + l1;

        <gov.nist.javax.sip.Utils: long counter> = $l3;

        l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r3 = <gov.nist.javax.sip.Utils: java.security.MessageDigest digester>;

        $l4 = l0 + l1;

        $l5 = $l4 + l2;

        $r4 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l5);

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>();

        r12 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r5);

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("z9hG4bK");

        $r7 = staticinvoke <gov.nist.javax.sip.Utils: java.lang.String toHexString(byte[])>(r12);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = <gov.nist.javax.sip.Utils: java.lang.String signature>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        r13 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        exitmonitor r0;

        return r13;

     label3:
        $r11 := @caughtexception;

        exitmonitor r0;

        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String generateCallIdentifier(java.lang.String)
    {
        gov.nist.javax.sip.Utils r0;
        long l0, $l3, $l4, $l5, $l6;
        int i1, $i2;
        java.lang.StringBuilder r1;
        java.util.Random $r2;
        java.security.MessageDigest $r3;
        byte[] $r4, $r5;
        java.lang.Throwable $r9;
        java.lang.String r10, r11, r12, r13;

        r0 := @this: gov.nist.javax.sip.Utils;

        r10 := @parameter0: java.lang.String;

        entermonitor r0;

     label1:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        i1 = <gov.nist.javax.sip.Utils: int callIDCounter>;

        $i2 = i1 + 1;

        <gov.nist.javax.sip.Utils: int callIDCounter> = $i2;

        $l3 = (long) i1;

        $l4 = l0 + $l3;

        $r2 = <gov.nist.javax.sip.Utils: java.util.Random rand>;

        $l5 = virtualinvoke $r2.<java.util.Random: long nextLong()>();

        $l6 = $l4 + $l5;

        r11 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l6);

        $r3 = <gov.nist.javax.sip.Utils: java.security.MessageDigest digester>;

        $r4 = virtualinvoke r11.<java.lang.String: byte[] getBytes()>();

        $r5 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4);

        r12 = staticinvoke <gov.nist.javax.sip.Utils: java.lang.String toHexString(byte[])>($r5);

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        r13 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        exitmonitor r0;

        return r13;

     label3:
        $r9 := @caughtexception;

        exitmonitor r0;

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String generateTag()
    {
        gov.nist.javax.sip.Utils r0;
        java.util.Random $r1;
        int $i0;
        java.lang.Throwable $r2;
        java.lang.String r3;

        r0 := @this: gov.nist.javax.sip.Utils;

        entermonitor r0;

     label1:
        $r1 = <gov.nist.javax.sip.Utils: java.util.Random rand>;

        $i0 = virtualinvoke $r1.<java.util.Random: int nextInt()>();

        r3 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

     label2:
        exitmonitor r0;

        return r3;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public boolean responseBelongsToUs(gov.nist.javax.sip.message.SIPResponse)
    {
        gov.nist.javax.sip.Utils r0;
        gov.nist.javax.sip.header.Via $r1;
        java.lang.String $r2, r4;
        boolean $z0, z1;
        gov.nist.javax.sip.message.SIPResponse r3;

        r0 := @this: gov.nist.javax.sip.Utils;

        r3 := @parameter0: gov.nist.javax.sip.message.SIPResponse;

        $r1 = virtualinvoke r3.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.Via getTopmostVia()>();

        r4 = virtualinvoke $r1.<gov.nist.javax.sip.header.Via: java.lang.String getBranch()>();

        if r4 == null goto label1;

        $r2 = <gov.nist.javax.sip.Utils: java.lang.String signature>;

        $z0 = virtualinvoke r4.<java.lang.String: boolean endsWith(java.lang.String)>($r2);

        if $z0 == 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        return z1;
    }
}
