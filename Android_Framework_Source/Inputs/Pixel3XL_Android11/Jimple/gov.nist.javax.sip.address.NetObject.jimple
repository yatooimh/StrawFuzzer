public abstract class gov.nist.javax.sip.address.NetObject extends gov.nist.core.GenericObject
{
    protected static final java.lang.String CORE_PACKAGE;
    protected static final java.lang.String GRUU;
    protected static final java.lang.String LR;
    protected static final java.lang.String MADDR;
    protected static final java.lang.String METHOD;
    protected static final java.lang.String NET_PACKAGE;
    protected static final java.lang.String PARSER_PACKAGE;
    protected static final java.lang.String PHONE;
    protected static final java.lang.String SIP;
    protected static final java.lang.String SIPS;
    protected static final java.lang.String TCP;
    protected static final java.lang.String TLS;
    protected static final java.lang.String TRANSPORT;
    protected static final java.lang.String TTL;
    protected static final java.lang.String UDP;
    protected static final java.lang.String USER;
    protected static final long serialVersionUID;

    public void <init>()
    {
        gov.nist.javax.sip.address.NetObject r0;

        r0 := @this: gov.nist.javax.sip.address.NetObject;

        specialinvoke r0.<gov.nist.core.GenericObject: void <init>()>();

        return;
    }

    public java.lang.String debugDump()
    {
        gov.nist.javax.sip.address.NetObject r0;
        java.lang.String r1, $r2, $r3, $r7, $r11, $r14, $r17, $r20, $r23, $r27, $r31, $r34, r41;
        boolean z0, $z1, $z2, $z3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i19, i20;
        java.lang.StringBuilder $r4, r42, r43, r44;
        java.lang.Class $r8, $r9, $r19, r36, r39;
        java.lang.Object $r10, $r15, $r16, $r18, $r24, $r25, $r28, $r29;
        gov.nist.core.GenericObjectList $r26;
        gov.nist.core.GenericObject $r30;
        float $f0;
        double $d0;
        long $l16;
        char $c17;
        short $s18;
        java.lang.Throwable $r35;
        java.lang.reflect.Field[] r37;
        java.lang.reflect.Field r38;

        r0 := @this: gov.nist.javax.sip.address.NetObject;

        r0.<gov.nist.javax.sip.address.NetObject: java.lang.String stringRepresentation> = "";

        r36 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke r36.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>($r2);

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>("{");

        r37 = virtualinvoke r36.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        i20 = 0;

     label01:
        $i0 = lengthof r37;

        if i20 >= $i0 goto label42;

        r38 = r37[i20];

        $i1 = virtualinvoke r38.<java.lang.reflect.Field: int getModifiers()>();

        $i2 = $i1 & 2;

        if $i2 != 2 goto label02;

        goto label41;

     label02:
        r39 = virtualinvoke r38.<java.lang.reflect.Field: java.lang.Class getType()>();

        r1 = virtualinvoke r38.<java.lang.reflect.Field: java.lang.String getName()>();

        $i3 = virtualinvoke r1.<java.lang.String: int compareTo(java.lang.String)>("stringRepresentation");

        if $i3 != 0 goto label03;

        goto label41;

     label03:
        $i4 = virtualinvoke r1.<java.lang.String: int compareTo(java.lang.String)>("indentation");

        if $i4 != 0 goto label04;

        goto label41;

     label04:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>($r7);

     label05:
        $z1 = virtualinvoke r39.<java.lang.Class: boolean isPrimitive()>();

        if $z1 == 0 goto label20;

        r41 = virtualinvoke r39.<java.lang.Class: java.lang.String toString()>();

        r42 = new java.lang.StringBuilder;

        specialinvoke r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r34 = virtualinvoke r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>($r34);

        $i9 = virtualinvoke r41.<java.lang.String: int compareTo(java.lang.String)>("int");

        if $i9 != 0 goto label07;

        $i19 = virtualinvoke r38.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(int)>($i19);

     label06:
        goto label19;

     label07:
        $i10 = virtualinvoke r41.<java.lang.String: int compareTo(java.lang.String)>("short");

        if $i10 != 0 goto label09;

        $s18 = virtualinvoke r38.<java.lang.reflect.Field: short getShort(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(short)>($s18);

     label08:
        goto label19;

     label09:
        $i11 = virtualinvoke r41.<java.lang.String: int compareTo(java.lang.String)>("char");

        if $i11 != 0 goto label11;

        $c17 = virtualinvoke r38.<java.lang.reflect.Field: char getChar(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(char)>($c17);

     label10:
        goto label19;

     label11:
        $i12 = virtualinvoke r41.<java.lang.String: int compareTo(java.lang.String)>("long");

        if $i12 != 0 goto label13;

        $l16 = virtualinvoke r38.<java.lang.reflect.Field: long getLong(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(long)>($l16);

     label12:
        goto label19;

     label13:
        $i13 = virtualinvoke r41.<java.lang.String: int compareTo(java.lang.String)>("boolean");

        if $i13 != 0 goto label15;

        $z3 = virtualinvoke r38.<java.lang.reflect.Field: boolean getBoolean(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(boolean)>($z3);

     label14:
        goto label19;

     label15:
        $i14 = virtualinvoke r41.<java.lang.String: int compareTo(java.lang.String)>("double");

        if $i14 != 0 goto label17;

        $d0 = virtualinvoke r38.<java.lang.reflect.Field: double getDouble(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(double)>($d0);

     label16:
        goto label19;

     label17:
        $i15 = virtualinvoke r41.<java.lang.String: int compareTo(java.lang.String)>("float");

        if $i15 != 0 goto label19;

        $f0 = virtualinvoke r38.<java.lang.reflect.Field: float getFloat(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(float)>($f0);

     label18:
        goto label19;

     label19:
        goto label39;

     label20:
        $r8 = class "Lgov/nist/core/GenericObject;";

        z0 = virtualinvoke $r8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r39);

     label21:
        if z0 == 0 goto label27;

     label22:
        $r28 = virtualinvoke r38.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r28 == null goto label25;

     label23:
        $r29 = virtualinvoke r38.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r30 = (gov.nist.core.GenericObject) $r29;

        $i7 = r0.<gov.nist.javax.sip.address.NetObject: int indentation>;

        $i8 = $i7 + 1;

        $r31 = virtualinvoke $r30.<gov.nist.core.GenericObject: java.lang.String debugDump(int)>($i8);

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>($r31);

     label24:
        goto label39;

     label25:
        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>("<null>");

     label26:
        goto label39;

     label27:
        $r9 = class "Lgov/nist/core/GenericObjectList;";

        $z2 = virtualinvoke $r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r39);

        if $z2 == 0 goto label32;

        $r24 = virtualinvoke r38.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r24 == null goto label30;

     label28:
        $r25 = virtualinvoke r38.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r26 = (gov.nist.core.GenericObjectList) $r25;

        $i5 = r0.<gov.nist.javax.sip.address.NetObject: int indentation>;

        $i6 = $i5 + 1;

        $r27 = virtualinvoke $r26.<gov.nist.core.GenericObjectList: java.lang.String debugDump(int)>($i6);

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>($r27);

     label29:
        goto label39;

     label30:
        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>("<null>");

     label31:
        goto label39;

     label32:
        $r10 = virtualinvoke r38.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r10 == null goto label34;

        r43 = new java.lang.StringBuilder;

        specialinvoke r43.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke r38.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r19 = virtualinvoke $r18.<java.lang.Object: java.lang.Class getClass()>();

        $r20 = virtualinvoke $r19.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        virtualinvoke r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r23 = virtualinvoke r43.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>($r23);

     label33:
        goto label35;

     label34:
        r44 = new java.lang.StringBuilder;

        specialinvoke r44.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke r39.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r14 = virtualinvoke r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>($r14);

     label35:
        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>("{");

        $r15 = virtualinvoke r38.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r15 == null goto label37;

        $r16 = virtualinvoke r38.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r17 = virtualinvoke $r16.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>($r17);

     label36:
        goto label38;

     label37:
        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>("<null>");

     label38:
        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>("}");

     label39:
        goto label41;

     label40:
        $r35 := @caughtexception;

     label41:
        i20 = i20 + 1;

        goto label01;

     label42:
        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>("}");

        $r3 = r0.<gov.nist.javax.sip.address.NetObject: java.lang.String stringRepresentation>;

        return $r3;

        catch java.lang.IllegalAccessException from label05 to label06 with label40;
        catch java.lang.IllegalAccessException from label07 to label08 with label40;
        catch java.lang.IllegalAccessException from label09 to label10 with label40;
        catch java.lang.IllegalAccessException from label11 to label12 with label40;
        catch java.lang.IllegalAccessException from label13 to label14 with label40;
        catch java.lang.IllegalAccessException from label15 to label16 with label40;
        catch java.lang.IllegalAccessException from label17 to label18 with label40;
        catch java.lang.IllegalAccessException from label20 to label21 with label40;
        catch java.lang.IllegalAccessException from label22 to label23 with label40;
        catch java.lang.IllegalAccessException from label23 to label24 with label40;
        catch java.lang.IllegalAccessException from label25 to label26 with label40;
        catch java.lang.IllegalAccessException from label27 to label28 with label40;
        catch java.lang.IllegalAccessException from label28 to label29 with label40;
        catch java.lang.IllegalAccessException from label30 to label31 with label40;
        catch java.lang.IllegalAccessException from label32 to label33 with label40;
        catch java.lang.IllegalAccessException from label34 to label35 with label40;
        catch java.lang.IllegalAccessException from label35 to label36 with label40;
        catch java.lang.IllegalAccessException from label37 to label38 with label40;
        catch java.lang.IllegalAccessException from label38 to label39 with label40;
    }

    public java.lang.String debugDump(int)
    {
        gov.nist.javax.sip.address.NetObject r0;
        int i0, i1;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.address.NetObject;

        i0 := @parameter0: int;

        i1 = r0.<gov.nist.javax.sip.address.NetObject: int indentation>;

        r0.<gov.nist.javax.sip.address.NetObject: int indentation> = i0;

        r1 = virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: java.lang.String debugDump()>();

        r0.<gov.nist.javax.sip.address.NetObject: int indentation> = i1;

        return r1;
    }

    public boolean equals(java.lang.Object)
    {
        gov.nist.javax.sip.address.NetObject r0;
        java.lang.Object r1, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        java.lang.reflect.Field[] r2, r3;
        java.lang.reflect.Field r4, r19;
        java.lang.Class r5, $r6, $r7, r17, r18;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i20, $i21, i22, $i23;
        float $f0, $f1;
        byte $b11, $b12, $b15;
        double $d0, $d1;
        long $l13, $l14;
        char $c16, $c17;
        short $s18, $s19;
        java.lang.Throwable $r16;
        java.lang.String r20, r21;
        java.lang.Exception r23;

        r0 := @this: gov.nist.javax.sip.address.NetObject;

        r1 := @parameter0: java.lang.Object;

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z1 != 0 goto label01;

        return 0;

     label01:
        r17 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r18 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

     label02:
        r2 = virtualinvoke r17.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        r3 = virtualinvoke r18.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        i22 = 0;

     label03:
        $i23 = lengthof r2;

        if i22 >= $i23 goto label32;

        r19 = r2[i22];

        r4 = r3[i22];

        $i0 = virtualinvoke r19.<java.lang.reflect.Field: int getModifiers()>();

        $i1 = $i0 & 2;

        if $i1 != 2 goto label04;

        goto label31;

     label04:
        r5 = virtualinvoke r19.<java.lang.reflect.Field: java.lang.Class getType()>();

        r20 = virtualinvoke r19.<java.lang.reflect.Field: java.lang.String getName()>();

        $i2 = virtualinvoke r20.<java.lang.String: int compareTo(java.lang.String)>("stringRepresentation");

        if $i2 != 0 goto label05;

        goto label31;

     label05:
        $i3 = virtualinvoke r20.<java.lang.String: int compareTo(java.lang.String)>("indentation");

        if $i3 != 0 goto label06;

        goto label31;

     label06:
        $z3 = virtualinvoke r5.<java.lang.Class: boolean isPrimitive()>();

        if $z3 == 0 goto label21;

        r21 = virtualinvoke r5.<java.lang.Class: java.lang.String toString()>();

        $i4 = virtualinvoke r21.<java.lang.String: int compareTo(java.lang.String)>("int");

        if $i4 != 0 goto label08;

        $i20 = virtualinvoke r19.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r0);

        $i21 = virtualinvoke r4.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r1);

        if $i20 == $i21 goto label20;

     label07:
        return 0;

     label08:
        $i5 = virtualinvoke r21.<java.lang.String: int compareTo(java.lang.String)>("short");

        if $i5 != 0 goto label10;

        $s18 = virtualinvoke r19.<java.lang.reflect.Field: short getShort(java.lang.Object)>(r0);

        $s19 = virtualinvoke r4.<java.lang.reflect.Field: short getShort(java.lang.Object)>(r1);

        if $s18 == $s19 goto label20;

     label09:
        return 0;

     label10:
        $i6 = virtualinvoke r21.<java.lang.String: int compareTo(java.lang.String)>("char");

        if $i6 != 0 goto label12;

        $c16 = virtualinvoke r19.<java.lang.reflect.Field: char getChar(java.lang.Object)>(r0);

        $c17 = virtualinvoke r4.<java.lang.reflect.Field: char getChar(java.lang.Object)>(r1);

        if $c16 == $c17 goto label20;

     label11:
        return 0;

     label12:
        $i7 = virtualinvoke r21.<java.lang.String: int compareTo(java.lang.String)>("long");

        if $i7 != 0 goto label14;

        $l13 = virtualinvoke r19.<java.lang.reflect.Field: long getLong(java.lang.Object)>(r0);

        $l14 = virtualinvoke r4.<java.lang.reflect.Field: long getLong(java.lang.Object)>(r1);

        $b15 = $l13 cmp $l14;

        if $b15 == 0 goto label20;

     label13:
        return 0;

     label14:
        $i8 = virtualinvoke r21.<java.lang.String: int compareTo(java.lang.String)>("boolean");

        if $i8 != 0 goto label16;

        $z4 = virtualinvoke r19.<java.lang.reflect.Field: boolean getBoolean(java.lang.Object)>(r0);

        $z5 = virtualinvoke r4.<java.lang.reflect.Field: boolean getBoolean(java.lang.Object)>(r1);

        if $z4 == $z5 goto label20;

     label15:
        return 0;

     label16:
        $i9 = virtualinvoke r21.<java.lang.String: int compareTo(java.lang.String)>("double");

        if $i9 != 0 goto label18;

        $d0 = virtualinvoke r19.<java.lang.reflect.Field: double getDouble(java.lang.Object)>(r0);

        $d1 = virtualinvoke r4.<java.lang.reflect.Field: double getDouble(java.lang.Object)>(r1);

        $b12 = $d0 cmpl $d1;

        if $b12 == 0 goto label20;

     label17:
        return 0;

     label18:
        $i10 = virtualinvoke r21.<java.lang.String: int compareTo(java.lang.String)>("float");

        if $i10 != 0 goto label20;

        $f0 = virtualinvoke r19.<java.lang.reflect.Field: float getFloat(java.lang.Object)>(r0);

        $f1 = virtualinvoke r4.<java.lang.reflect.Field: float getFloat(java.lang.Object)>(r1);

        $b11 = $f0 cmpl $f1;

        if $b11 == 0 goto label20;

     label19:
        return 0;

     label20:
        goto label29;

     label21:
        $r8 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r1);

        $r9 = virtualinvoke r19.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r8 != $r9 goto label23;

     label22:
        goto label31;

     label23:
        $r10 = virtualinvoke r19.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r10 != null goto label25;

        $r15 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r1);

        if $r15 == null goto label25;

     label24:
        return 0;

     label25:
        $r11 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r1);

        if $r11 != null goto label27;

        $r14 = virtualinvoke r19.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r1);

        if $r14 == null goto label27;

     label26:
        return 0;

     label27:
        $r12 = virtualinvoke r19.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r13 = virtualinvoke r4.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r1);

        z0 = virtualinvoke $r12.<java.lang.Object: boolean equals(java.lang.Object)>($r13);

     label28:
        if z0 != 0 goto label29;

        return 0;

     label29:
        goto label31;

     label30:
        $r16 := @caughtexception;

        r23 = (java.lang.Exception) $r16;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r23);

     label31:
        i22 = i22 + 1;

        goto label03;

     label32:
        $z2 = virtualinvoke r17.<java.lang.Object: boolean equals(java.lang.Object)>(class "Lgov/nist/javax/sip/address/NetObject;");

        if $z2 == 0 goto label33;

        return 1;

     label33:
        r17 = virtualinvoke r17.<java.lang.Class: java.lang.Class getSuperclass()>();

        r18 = virtualinvoke r18.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label02;

        catch java.lang.IllegalAccessException from label06 to label07 with label30;
        catch java.lang.IllegalAccessException from label08 to label09 with label30;
        catch java.lang.IllegalAccessException from label10 to label11 with label30;
        catch java.lang.IllegalAccessException from label12 to label13 with label30;
        catch java.lang.IllegalAccessException from label14 to label15 with label30;
        catch java.lang.IllegalAccessException from label16 to label17 with label30;
        catch java.lang.IllegalAccessException from label18 to label19 with label30;
        catch java.lang.IllegalAccessException from label21 to label22 with label30;
        catch java.lang.IllegalAccessException from label23 to label24 with label30;
        catch java.lang.IllegalAccessException from label25 to label26 with label30;
        catch java.lang.IllegalAccessException from label27 to label28 with label30;
    }

    public boolean match(java.lang.Object)
    {
        gov.nist.javax.sip.address.NetObject r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z15, z16;
        gov.nist.core.GenericObject r1, $r10, $r14, $r16, $r17;
        java.lang.reflect.Field[] r2, r3;
        java.lang.Class r4, $r5, $r6, $r7, $r8, $r11, $r12, $r13, r24, r25, $r34;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i21, $i22, i23, $i24;
        gov.nist.core.GenericObjectList $r9;
        gov.nist.core.Match $r15, $r18;
        java.lang.String $r19, $r20, r28, r29, r32, r33;
        float $f0, $f1;
        byte $b12, $b13, $b16;
        double $d0, $d1;
        long $l14, $l15;
        char $c17, $c18;
        short $s19, $s20;
        java.lang.Throwable $r21, $r22, r35;
        java.lang.Object r23, r30, r31;
        java.lang.reflect.Field r26, r27;
        java.lang.Exception r36;

        r0 := @this: gov.nist.javax.sip.address.NetObject;

        r23 := @parameter0: java.lang.Object;

        if r23 != null goto label01;

        return 1;

     label01:
        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke r23.<java.lang.Object: java.lang.Class getClass()>();

        z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if z0 != 0 goto label02;

        return 0;

     label02:
        r1 = (gov.nist.core.GenericObject) r23;

        r24 = virtualinvoke r23.<java.lang.Object: java.lang.Class getClass()>();

        r25 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

     label03:
        r2 = virtualinvoke r25.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        r3 = virtualinvoke r24.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        i23 = 0;

     label04:
        $i24 = lengthof r2;

        if i23 >= $i24 goto label45;

        r26 = r2[i23];

        r27 = r3[i23];

        $i0 = virtualinvoke r26.<java.lang.reflect.Field: int getModifiers()>();

        $i1 = $i0 & 2;

        if $i1 != 2 goto label05;

        goto label44;

     label05:
        r4 = virtualinvoke r26.<java.lang.reflect.Field: java.lang.Class getType()>();

        r28 = virtualinvoke r26.<java.lang.reflect.Field: java.lang.String getName()>();

        $i2 = virtualinvoke r28.<java.lang.String: int compareTo(java.lang.String)>("stringRepresentation");

        if $i2 != 0 goto label06;

        goto label44;

     label06:
        $i3 = virtualinvoke r28.<java.lang.String: int compareTo(java.lang.String)>("indentation");

        if $i3 != 0 goto label07;

        goto label44;

     label07:
        $z2 = virtualinvoke r4.<java.lang.Class: boolean isPrimitive()>();

        if $z2 == 0 goto label22;

        r29 = virtualinvoke r4.<java.lang.Class: java.lang.String toString()>();

        $i5 = virtualinvoke r29.<java.lang.String: int compareTo(java.lang.String)>("int");

        if $i5 != 0 goto label09;

        $i21 = virtualinvoke r26.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r0);

        $i22 = virtualinvoke r27.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r1);

        if $i21 == $i22 goto label21;

     label08:
        return 0;

     label09:
        $i6 = virtualinvoke r29.<java.lang.String: int compareTo(java.lang.String)>("short");

        if $i6 != 0 goto label11;

        $s19 = virtualinvoke r26.<java.lang.reflect.Field: short getShort(java.lang.Object)>(r0);

        $s20 = virtualinvoke r27.<java.lang.reflect.Field: short getShort(java.lang.Object)>(r1);

        if $s19 == $s20 goto label21;

     label10:
        return 0;

     label11:
        $i7 = virtualinvoke r29.<java.lang.String: int compareTo(java.lang.String)>("char");

        if $i7 != 0 goto label13;

        $c17 = virtualinvoke r26.<java.lang.reflect.Field: char getChar(java.lang.Object)>(r0);

        $c18 = virtualinvoke r27.<java.lang.reflect.Field: char getChar(java.lang.Object)>(r1);

        if $c17 == $c18 goto label21;

     label12:
        return 0;

     label13:
        $i8 = virtualinvoke r29.<java.lang.String: int compareTo(java.lang.String)>("long");

        if $i8 != 0 goto label15;

        $l14 = virtualinvoke r26.<java.lang.reflect.Field: long getLong(java.lang.Object)>(r0);

        $l15 = virtualinvoke r27.<java.lang.reflect.Field: long getLong(java.lang.Object)>(r1);

        $b16 = $l14 cmp $l15;

        if $b16 == 0 goto label21;

     label14:
        return 0;

     label15:
        $i9 = virtualinvoke r29.<java.lang.String: int compareTo(java.lang.String)>("boolean");

        if $i9 != 0 goto label17;

        $z12 = virtualinvoke r26.<java.lang.reflect.Field: boolean getBoolean(java.lang.Object)>(r0);

        $z13 = virtualinvoke r27.<java.lang.reflect.Field: boolean getBoolean(java.lang.Object)>(r1);

        if $z12 == $z13 goto label21;

     label16:
        return 0;

     label17:
        $i10 = virtualinvoke r29.<java.lang.String: int compareTo(java.lang.String)>("double");

        if $i10 != 0 goto label19;

        $d0 = virtualinvoke r26.<java.lang.reflect.Field: double getDouble(java.lang.Object)>(r0);

        $d1 = virtualinvoke r27.<java.lang.reflect.Field: double getDouble(java.lang.Object)>(r1);

        $b13 = $d0 cmpl $d1;

        if $b13 == 0 goto label21;

     label18:
        return 0;

     label19:
        $i11 = virtualinvoke r29.<java.lang.String: int compareTo(java.lang.String)>("float");

        if $i11 != 0 goto label21;

        $f0 = virtualinvoke r26.<java.lang.reflect.Field: float getFloat(java.lang.Object)>(r0);

        $f1 = virtualinvoke r27.<java.lang.reflect.Field: float getFloat(java.lang.Object)>(r1);

        $b12 = $f0 cmpl $f1;

        if $b12 == 0 goto label21;

     label20:
        return 0;

     label21:
        goto label40;

     label22:
        r30 = virtualinvoke r26.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        r31 = virtualinvoke r27.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r1);

     label23:
        if r31 == null goto label24;

        if r30 != null goto label24;

        return 0;

     label24:
        if r31 != null goto label25;

        if r30 == null goto label25;

        goto label44;

     label25:
        if r31 != null goto label26;

        if r30 != null goto label26;

        goto label44;

     label26:
        $z3 = r31 instanceof java.lang.String;

        if $z3 == 0 goto label32;

        $z10 = r30 instanceof java.lang.String;

        if $z10 == 0 goto label32;

        r32 = (java.lang.String) r31;

     label27:
        $z11 = virtualinvoke r32.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z11 == 0 goto label29;

     label28:
        goto label44;

     label29:
        $r20 = (java.lang.String) r30;

        $r19 = (java.lang.String) r31;

        $i4 = virtualinvoke $r20.<java.lang.String: int compareToIgnoreCase(java.lang.String)>($r19);

        if $i4 == 0 goto label31;

     label30:
        return 0;

     label31:
        goto label40;

     label32:
        $r7 = virtualinvoke r30.<java.lang.Object: java.lang.Class getClass()>();

        $z4 = staticinvoke <gov.nist.core.GenericObject: boolean isMySubclass(java.lang.Class)>($r7);

        if $z4 == 0 goto label35;

        $r11 = virtualinvoke r31.<java.lang.Object: java.lang.Class getClass()>();

        $z7 = staticinvoke <gov.nist.core.GenericObject: boolean isMySubclass(java.lang.Class)>($r11);

        if $z7 == 0 goto label35;

        $r12 = virtualinvoke r30.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke r31.<java.lang.Object: java.lang.Class getClass()>();

        $z8 = virtualinvoke $r12.<java.lang.Object: boolean equals(java.lang.Object)>($r13);

        if $z8 == 0 goto label35;

        $r14 = (gov.nist.core.GenericObject) r31;

        $r15 = virtualinvoke $r14.<gov.nist.core.GenericObject: gov.nist.core.Match getMatcher()>();

        if $r15 == null goto label35;

        $r16 = (gov.nist.core.GenericObject) r30;

        r33 = virtualinvoke $r16.<gov.nist.core.GenericObject: java.lang.String encode()>();

        $r17 = (gov.nist.core.GenericObject) r31;

        $r18 = virtualinvoke $r17.<gov.nist.core.GenericObject: gov.nist.core.Match getMatcher()>();

        $z9 = interfaceinvoke $r18.<gov.nist.core.Match: boolean match(java.lang.String)>(r33);

        if $z9 != 0 goto label34;

     label33:
        return 0;

     label34:
        goto label40;

     label35:
        $r34 = virtualinvoke r30.<java.lang.Object: java.lang.Class getClass()>();

        $z15 = staticinvoke <gov.nist.core.GenericObject: boolean isMySubclass(java.lang.Class)>($r34);

        if $z15 == 0 goto label37;

        $r10 = (gov.nist.core.GenericObject) r30;

        $z6 = virtualinvoke $r10.<gov.nist.core.GenericObject: boolean match(java.lang.Object)>(r31);

        if $z6 != 0 goto label37;

     label36:
        return 0;

     label37:
        $r8 = virtualinvoke r30.<java.lang.Object: java.lang.Class getClass()>();

        $z5 = staticinvoke <gov.nist.core.GenericObjectList: boolean isMySubclass(java.lang.Class)>($r8);

        if $z5 == 0 goto label40;

        $r9 = (gov.nist.core.GenericObjectList) r30;

        z16 = virtualinvoke $r9.<gov.nist.core.GenericObjectList: boolean match(java.lang.Object)>(r31);

     label38:
        if z16 != 0 goto label39;

        return 0;

     label39:
        goto label40;

     label40:
        goto label44;

     label41:
        $r22 := @caughtexception;

        r35 = $r22;

        goto label43;

     label42:
        $r21 := @caughtexception;

        r35 = $r21;

     label43:
        r36 = (java.lang.Exception) r35;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r36);

     label44:
        i23 = i23 + 1;

        goto label04;

     label45:
        $z1 = virtualinvoke r25.<java.lang.Object: boolean equals(java.lang.Object)>(class "Lgov/nist/javax/sip/address/NetObject;");

        if $z1 == 0 goto label46;

        return 1;

     label46:
        r25 = virtualinvoke r25.<java.lang.Class: java.lang.Class getSuperclass()>();

        r24 = virtualinvoke r24.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label03;

        catch java.lang.IllegalAccessException from label07 to label08 with label42;
        catch java.lang.IllegalAccessException from label09 to label10 with label42;
        catch java.lang.IllegalAccessException from label11 to label12 with label42;
        catch java.lang.IllegalAccessException from label13 to label14 with label42;
        catch java.lang.IllegalAccessException from label15 to label16 with label42;
        catch java.lang.IllegalAccessException from label17 to label18 with label42;
        catch java.lang.IllegalAccessException from label19 to label20 with label42;
        catch java.lang.IllegalAccessException from label22 to label23 with label42;
        catch java.lang.IllegalAccessException from label26 to label27 with label42;
        catch java.lang.IllegalAccessException from label27 to label28 with label41;
        catch java.lang.IllegalAccessException from label29 to label30 with label41;
        catch java.lang.IllegalAccessException from label32 to label33 with label41;
        catch java.lang.IllegalAccessException from label35 to label36 with label41;
        catch java.lang.IllegalAccessException from label37 to label38 with label41;
    }

    public java.lang.String toString()
    {
        gov.nist.javax.sip.address.NetObject r0;
        java.lang.String $r1;

        r0 := @this: gov.nist.javax.sip.address.NetObject;

        $r1 = virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: java.lang.String encode()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <gov.nist.javax.sip.address.NetObject: long serialVersionUID> = 6149926203633320729L;

        <gov.nist.javax.sip.address.NetObject: java.lang.String USER> = "user";

        <gov.nist.javax.sip.address.NetObject: java.lang.String UDP> = "udp";

        <gov.nist.javax.sip.address.NetObject: java.lang.String TTL> = "ttl";

        <gov.nist.javax.sip.address.NetObject: java.lang.String TRANSPORT> = "transport";

        <gov.nist.javax.sip.address.NetObject: java.lang.String TLS> = "tls";

        <gov.nist.javax.sip.address.NetObject: java.lang.String TCP> = "tcp";

        <gov.nist.javax.sip.address.NetObject: java.lang.String SIPS> = "sips";

        <gov.nist.javax.sip.address.NetObject: java.lang.String SIP> = "sip";

        <gov.nist.javax.sip.address.NetObject: java.lang.String PHONE> = "phone";

        <gov.nist.javax.sip.address.NetObject: java.lang.String PARSER_PACKAGE> = "gov.nist.javax.sip.parser";

        <gov.nist.javax.sip.address.NetObject: java.lang.String NET_PACKAGE> = "gov.nist.javax.sip.address";

        <gov.nist.javax.sip.address.NetObject: java.lang.String METHOD> = "method";

        <gov.nist.javax.sip.address.NetObject: java.lang.String MADDR> = "maddr";

        <gov.nist.javax.sip.address.NetObject: java.lang.String LR> = "lr";

        <gov.nist.javax.sip.address.NetObject: java.lang.String GRUU> = "gr";

        <gov.nist.javax.sip.address.NetObject: java.lang.String CORE_PACKAGE> = "gov.nist.core";

        return;
    }
}
