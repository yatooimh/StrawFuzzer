public class gov.nist.javax.sip.header.AllowEventsList extends gov.nist.javax.sip.header.SIPHeaderList
{
    private static final long serialVersionUID;

    public void <init>()
    {
        gov.nist.javax.sip.header.AllowEventsList r0;

        r0 := @this: gov.nist.javax.sip.header.AllowEventsList;

        specialinvoke r0.<gov.nist.javax.sip.header.SIPHeaderList: void <init>(java.lang.Class,java.lang.String)>(class "Lgov/nist/javax/sip/header/AllowEvents;", "Allow-Events");

        return;
    }

    public java.lang.Object clone()
    {
        gov.nist.javax.sip.header.AllowEventsList r0, $r2;
        java.util.List $r3;

        r0 := @this: gov.nist.javax.sip.header.AllowEventsList;

        $r2 = new gov.nist.javax.sip.header.AllowEventsList;

        specialinvoke $r2.<gov.nist.javax.sip.header.AllowEventsList: void <init>()>();

        $r3 = r0.<gov.nist.javax.sip.header.AllowEventsList: java.util.List hlist>;

        virtualinvoke $r2.<gov.nist.javax.sip.header.AllowEventsList: gov.nist.javax.sip.header.SIPHeaderList clonehlist(java.util.List)>($r3);

        return $r2;
    }

    public java.util.ListIterator getMethods()
    {
        gov.nist.javax.sip.header.AllowEventsList r0;
        java.util.ListIterator r1, $r5;
        java.util.List $r3;
        java.util.LinkedList $r4;
        boolean $z0;
        java.lang.Object $r6;
        gov.nist.javax.sip.header.AllowEvents $r7;
        java.lang.String $r8;

        r0 := @this: gov.nist.javax.sip.header.AllowEventsList;

        $r3 = r0.<gov.nist.javax.sip.header.SIPHeaderList: java.util.List hlist>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.ListIterator listIterator()>();

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r1.<java.util.ListIterator: java.lang.Object next()>();

        $r7 = (gov.nist.javax.sip.header.AllowEvents) $r6;

        $r8 = virtualinvoke $r7.<gov.nist.javax.sip.header.AllowEvents: java.lang.String getEventType()>();

        virtualinvoke $r4.<java.util.LinkedList: boolean add(java.lang.Object)>($r8);

        goto label1;

     label2:
        $r5 = virtualinvoke $r4.<java.util.LinkedList: java.util.ListIterator listIterator()>();

        return $r5;
    }

    public void setMethods(java.util.List) throws java.text.ParseException
    {
        gov.nist.javax.sip.header.AllowEventsList r0;
        boolean $z0;
        gov.nist.javax.sip.header.AllowEvents $r2;
        java.lang.Object $r3;
        java.lang.String $r4;
        java.util.List r5;
        java.util.ListIterator r6;

        r0 := @this: gov.nist.javax.sip.header.AllowEventsList;

        r5 := @parameter0: java.util.List;

        r6 = interfaceinvoke r5.<java.util.List: java.util.ListIterator listIterator()>();

     label1:
        $z0 = interfaceinvoke r6.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = new gov.nist.javax.sip.header.AllowEvents;

        specialinvoke $r2.<gov.nist.javax.sip.header.AllowEvents: void <init>()>();

        $r3 = interfaceinvoke r6.<java.util.ListIterator: java.lang.Object next()>();

        $r4 = (java.lang.String) $r3;

        virtualinvoke $r2.<gov.nist.javax.sip.header.AllowEvents: void setEventType(java.lang.String)>($r4);

        virtualinvoke r0.<gov.nist.javax.sip.header.AllowEventsList: boolean add(gov.nist.javax.sip.header.SIPHeader)>($r2);

        goto label1;

     label2:
        return;
    }

    public static void <clinit>()
    {
        <gov.nist.javax.sip.header.AllowEventsList: long serialVersionUID> = -684763195336212992L;

        return;
    }
}
