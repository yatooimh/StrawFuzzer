public class gov.nist.javax.sip.header.ims.PChargingFunctionAddresses extends gov.nist.javax.sip.header.ParametersHeader implements gov.nist.javax.sip.header.ims.PChargingFunctionAddressesHeader, gov.nist.javax.sip.header.ims.SIPHeaderNamesIms, javax.sip.header.ExtensionHeader
{

    public void <init>()
    {
        gov.nist.javax.sip.header.ims.PChargingFunctionAddresses r0;

        r0 := @this: gov.nist.javax.sip.header.ims.PChargingFunctionAddresses;

        specialinvoke r0.<gov.nist.javax.sip.header.ParametersHeader: void <init>(java.lang.String)>("P-Charging-Function-Addresses");

        return;
    }

    public void addChargingCollectionFunctionAddress(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.header.ims.PChargingFunctionAddresses r0;
        java.lang.String r1;
        java.lang.NullPointerException $r2;
        gov.nist.core.NameValueList $r3;

        r0 := @this: gov.nist.javax.sip.header.ims.PChargingFunctionAddresses;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $r3 = r0.<gov.nist.javax.sip.header.ims.PChargingFunctionAddresses: gov.nist.core.NameValueList parameters>;

        virtualinvoke $r3.<gov.nist.core.NameValueList: void set(java.lang.String,java.lang.Object)>("ccf", r1);

        return;

     label1:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("JAIN-SIP Exception, P-Charging-Function-Addresses, setChargingCollectionFunctionAddress(), the ccfAddress parameter is null.");

        throw $r2;
    }

    public void addEventChargingFunctionAddress(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.header.ims.PChargingFunctionAddresses r0;
        java.lang.String r1;
        java.lang.NullPointerException $r2;
        gov.nist.core.NameValueList $r3;

        r0 := @this: gov.nist.javax.sip.header.ims.PChargingFunctionAddresses;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $r3 = r0.<gov.nist.javax.sip.header.ims.PChargingFunctionAddresses: gov.nist.core.NameValueList parameters>;

        virtualinvoke $r3.<gov.nist.core.NameValueList: void set(java.lang.String,java.lang.Object)>("ecf", r1);

        return;

     label1:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("JAIN-SIP Exception, P-Charging-Function-Addresses, setEventChargingFunctionAddress(), the ecfAddress parameter is null.");

        throw $r2;
    }

    public boolean delete(java.lang.String, java.lang.String)
    {
        gov.nist.javax.sip.header.ims.PChargingFunctionAddresses r0;
        java.lang.String r1, r2, $r8, $r9;
        java.util.Iterator r3;
        gov.nist.core.NameValue r4;
        gov.nist.core.NameValueList $r5;
        java.lang.Object $r6, $r7;
        boolean $z0, $z1, z2, $z3;

        r0 := @this: gov.nist.javax.sip.header.ims.PChargingFunctionAddresses;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r5 = r0.<gov.nist.javax.sip.header.ims.PChargingFunctionAddresses: gov.nist.core.NameValueList parameters>;

        r3 = virtualinvoke $r5.<gov.nist.core.NameValueList: java.util.Iterator iterator()>();

        z2 = 0;

     label1:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (gov.nist.core.NameValue) $r6;

        $r7 = virtualinvoke r4.<gov.nist.core.NameValue: java.lang.Object getValueAsObject()>();

        $r8 = (java.lang.String) $r7;

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $r9 = virtualinvoke r4.<gov.nist.core.NameValue: java.lang.String getName()>();

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z1 == 0 goto label1;

        interfaceinvoke r3.<java.util.Iterator: void remove()>();

        z2 = 1;

        goto label1;

     label2:
        return z2;
    }

    protected java.lang.String encodeBody()
    {
        gov.nist.javax.sip.header.ims.PChargingFunctionAddresses r0;
        java.lang.StringBuffer $r2;
        gov.nist.core.DuplicateNameValueList $r3, $r5;
        boolean $z0;
        java.lang.String $r4, $r6;

        r0 := @this: gov.nist.javax.sip.header.ims.PChargingFunctionAddresses;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<gov.nist.javax.sip.header.ims.PChargingFunctionAddresses: gov.nist.core.DuplicateNameValueList duplicates>;

        $z0 = virtualinvoke $r3.<gov.nist.core.DuplicateNameValueList: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r5 = r0.<gov.nist.javax.sip.header.ims.PChargingFunctionAddresses: gov.nist.core.DuplicateNameValueList duplicates>;

        $r6 = virtualinvoke $r5.<gov.nist.core.DuplicateNameValueList: java.lang.String encode()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

     label1:
        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    public java.util.ListIterator getChargingCollectionFunctionAddresses()
    {
        gov.nist.javax.sip.header.ims.PChargingFunctionAddresses r0;
        java.util.Iterator r1;
        gov.nist.core.NameValue r3, $r10;
        gov.nist.core.NameValueList $r5;
        java.util.LinkedList $r6;
        java.util.ListIterator $r7;
        java.lang.Object $r8, $r12;
        java.lang.String $r9, $r11;
        boolean $z0, $z2;

        r0 := @this: gov.nist.javax.sip.header.ims.PChargingFunctionAddresses;

        $r5 = r0.<gov.nist.javax.sip.header.ims.PChargingFunctionAddresses: gov.nist.core.NameValueList parameters>;

        r1 = virtualinvoke $r5.<gov.nist.core.NameValueList: java.util.Iterator iterator()>();

        $r6 = new java.util.LinkedList;

        specialinvoke $r6.<java.util.LinkedList: void <init>()>();

     label1:
        $z2 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r8 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (gov.nist.core.NameValue) $r8;

        $r9 = virtualinvoke r3.<gov.nist.core.NameValue: java.lang.String getName()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("ccf");

        if $z0 == 0 goto label1;

        $r10 = new gov.nist.core.NameValue;

        specialinvoke $r10.<gov.nist.core.NameValue: void <init>()>();

        $r11 = virtualinvoke r3.<gov.nist.core.NameValue: java.lang.String getName()>();

        virtualinvoke $r10.<gov.nist.core.NameValue: void setName(java.lang.String)>($r11);

        $r12 = virtualinvoke r3.<gov.nist.core.NameValue: java.lang.Object getValueAsObject()>();

        virtualinvoke $r10.<gov.nist.core.NameValue: void setValueAsObject(java.lang.Object)>($r12);

        virtualinvoke $r6.<java.util.LinkedList: boolean add(java.lang.Object)>($r10);

        goto label1;

     label2:
        $r7 = virtualinvoke $r6.<java.util.LinkedList: java.util.ListIterator listIterator()>();

        return $r7;
    }

    public java.util.ListIterator getEventChargingFunctionAddresses()
    {
        gov.nist.javax.sip.header.ims.PChargingFunctionAddresses r0;
        java.util.Iterator r1;
        java.util.ListIterator r2;
        java.util.LinkedList $r4;
        gov.nist.core.NameValueList $r5;
        java.lang.Object $r6, $r10;
        java.lang.String $r7, $r9;
        boolean $z0, $z1;
        gov.nist.core.NameValue $r8, r12;

        r0 := @this: gov.nist.javax.sip.header.ims.PChargingFunctionAddresses;

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        $r5 = r0.<gov.nist.javax.sip.header.ims.PChargingFunctionAddresses: gov.nist.core.NameValueList parameters>;

        r1 = virtualinvoke $r5.<gov.nist.core.NameValueList: java.util.Iterator iterator()>();

        r2 = virtualinvoke $r4.<java.util.LinkedList: java.util.ListIterator listIterator()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r12 = (gov.nist.core.NameValue) $r6;

        $r7 = virtualinvoke r12.<gov.nist.core.NameValue: java.lang.String getName()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("ecf");

        if $z0 == 0 goto label1;

        $r8 = new gov.nist.core.NameValue;

        specialinvoke $r8.<gov.nist.core.NameValue: void <init>()>();

        $r9 = virtualinvoke r12.<gov.nist.core.NameValue: java.lang.String getName()>();

        virtualinvoke $r8.<gov.nist.core.NameValue: void setName(java.lang.String)>($r9);

        $r10 = virtualinvoke r12.<gov.nist.core.NameValue: java.lang.Object getValueAsObject()>();

        virtualinvoke $r8.<gov.nist.core.NameValue: void setValueAsObject(java.lang.Object)>($r10);

        interfaceinvoke r2.<java.util.ListIterator: void add(java.lang.Object)>($r8);

        goto label1;

     label2:
        return r2;
    }

    public void removeChargingCollectionFunctionAddress(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.header.ims.PChargingFunctionAddresses r0;
        java.lang.String r1;
        java.lang.NullPointerException $r2;
        boolean $z0;
        java.text.ParseException $r3;

        r0 := @this: gov.nist.javax.sip.header.ims.PChargingFunctionAddresses;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label2;

        $z0 = virtualinvoke r0.<gov.nist.javax.sip.header.ims.PChargingFunctionAddresses: boolean delete(java.lang.String,java.lang.String)>(r1, "ccf");

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = new java.text.ParseException;

        specialinvoke $r3.<java.text.ParseException: void <init>(java.lang.String,int)>("CCF Address Not Removed", 0);

        throw $r3;

     label2:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("JAIN-SIP Exception, P-Charging-Function-Addresses, setChargingCollectionFunctionAddress(), the ccfAddress parameter is null.");

        throw $r2;
    }

    public void removeEventChargingFunctionAddress(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.header.ims.PChargingFunctionAddresses r0;
        java.lang.String r1;
        java.lang.NullPointerException $r2;
        boolean $z0;
        java.text.ParseException $r3;

        r0 := @this: gov.nist.javax.sip.header.ims.PChargingFunctionAddresses;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label2;

        $z0 = virtualinvoke r0.<gov.nist.javax.sip.header.ims.PChargingFunctionAddresses: boolean delete(java.lang.String,java.lang.String)>(r1, "ecf");

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = new java.text.ParseException;

        specialinvoke $r3.<java.text.ParseException: void <init>(java.lang.String,int)>("ECF Address Not Removed", 0);

        throw $r3;

     label2:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("JAIN-SIP Exception, P-Charging-Function-Addresses, setEventChargingFunctionAddress(), the ecfAddress parameter is null.");

        throw $r2;
    }

    public void setChargingCollectionFunctionAddress(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.header.ims.PChargingFunctionAddresses r0;
        java.lang.String r1;
        java.lang.NullPointerException $r2;

        r0 := @this: gov.nist.javax.sip.header.ims.PChargingFunctionAddresses;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.header.ims.PChargingFunctionAddresses: void setMultiParameter(java.lang.String,java.lang.String)>("ccf", r1);

        return;

     label1:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("JAIN-SIP Exception, P-Charging-Function-Addresses, setChargingCollectionFunctionAddress(), the ccfAddress parameter is null.");

        throw $r2;
    }

    public void setEventChargingFunctionAddress(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.header.ims.PChargingFunctionAddresses r0;
        java.lang.String r1;
        java.lang.NullPointerException $r2;

        r0 := @this: gov.nist.javax.sip.header.ims.PChargingFunctionAddresses;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.header.ims.PChargingFunctionAddresses: void setMultiParameter(java.lang.String,java.lang.String)>("ecf", r1);

        return;

     label1:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("JAIN-SIP Exception, P-Charging-Function-Addresses, setEventChargingFunctionAddress(), the ecfAddress parameter is null.");

        throw $r2;
    }

    public void setValue(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.header.ims.PChargingFunctionAddresses r0;
        java.lang.String r1;
        java.text.ParseException $r2;

        r0 := @this: gov.nist.javax.sip.header.ims.PChargingFunctionAddresses;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.text.ParseException;

        specialinvoke $r2.<java.text.ParseException: void <init>(java.lang.String,int)>(r1, 0);

        throw $r2;
    }
}
