public class gov.nist.javax.sip.message.MultipartMimeContentImpl extends java.lang.Object implements gov.nist.javax.sip.message.MultipartMimeContent
{
    public static java.lang.String BOUNDARY;
    private java.lang.String boundary;
    private java.util.List contentList;
    private javax.sip.header.ContentTypeHeader multipartMimeContentTypeHeader;

    static void <clinit>()
    {
        <gov.nist.javax.sip.message.MultipartMimeContentImpl: java.lang.String BOUNDARY> = "boundary";

        return;
    }

    public void <init>(javax.sip.header.ContentTypeHeader)
    {
        gov.nist.javax.sip.message.MultipartMimeContentImpl r0;
        javax.sip.header.ContentTypeHeader r1;
        java.util.LinkedList $r2;
        java.lang.String $r3, $r4;

        r0 := @this: gov.nist.javax.sip.message.MultipartMimeContentImpl;

        r1 := @parameter0: javax.sip.header.ContentTypeHeader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.List contentList> = $r2;

        r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: javax.sip.header.ContentTypeHeader multipartMimeContentTypeHeader> = r1;

        $r3 = <gov.nist.javax.sip.message.MultipartMimeContentImpl: java.lang.String BOUNDARY>;

        $r4 = interfaceinvoke r1.<javax.sip.header.ContentTypeHeader: java.lang.String getParameter(java.lang.String)>($r3);

        r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.lang.String boundary> = $r4;

        return;
    }

    public boolean add(gov.nist.javax.sip.message.Content)
    {
        gov.nist.javax.sip.message.MultipartMimeContentImpl r0;
        gov.nist.javax.sip.message.Content r1;
        gov.nist.javax.sip.message.ContentImpl $r2;
        java.util.List $r3;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.message.MultipartMimeContentImpl;

        r1 := @parameter0: gov.nist.javax.sip.message.Content;

        $r3 = r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.List contentList>;

        $r2 = (gov.nist.javax.sip.message.ContentImpl) r1;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

        return $z0;
    }

    public void addContent(gov.nist.javax.sip.message.Content)
    {
        gov.nist.javax.sip.message.MultipartMimeContentImpl r0;
        gov.nist.javax.sip.message.Content r1;

        r0 := @this: gov.nist.javax.sip.message.MultipartMimeContentImpl;

        r1 := @parameter0: gov.nist.javax.sip.message.Content;

        virtualinvoke r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: boolean add(gov.nist.javax.sip.message.Content)>(r1);

        return;
    }

    public void createContentList(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.message.MultipartMimeContentImpl r0;
        int i0, i1, $i2, $i3, $i4, i7, i9, i10, i11;
        javax.sip.header.ContentTypeHeader $r1, $r22, $r24;
        java.lang.String $r2, $r6, $r9, $r13, $r14, $r15, $r17, $r19, r28, r31, r37, r39, r40, r41;
        boolean $z0, $z1;
        javax.sip.header.ContentDispositionHeader $r20;
        java.util.List $r21, $r25;
        char $c5, $c6;
        java.lang.Throwable $r26;
        java.text.ParseException $r27, r45, r47, r49;
        gov.nist.javax.sip.header.HeaderFactoryImpl r30;
        java.util.LinkedList r32;
        gov.nist.javax.sip.message.ContentImpl r33, r42;
        java.lang.StringBuilder r34, r46, r48, r50;
        java.lang.String[] r35, r43;
        java.lang.StringBuffer r38;
        byte b8;
        javax.sip.header.Header r44;

        r0 := @this: gov.nist.javax.sip.message.MultipartMimeContentImpl;

        r28 := @parameter0: java.lang.String;

     label01:
        r30 = new gov.nist.javax.sip.header.HeaderFactoryImpl;

        specialinvoke r30.<gov.nist.javax.sip.header.HeaderFactoryImpl: void <init>()>();

        $r1 = virtualinvoke r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: javax.sip.header.ContentTypeHeader getContentTypeHeader()>();

        $r2 = <gov.nist.javax.sip.message.MultipartMimeContentImpl: java.lang.String BOUNDARY>;

        r31 = interfaceinvoke $r1.<javax.sip.header.ContentTypeHeader: java.lang.String getParameter(java.lang.String)>($r2);

     label02:
        if r31 != null goto label05;

     label03:
        r32 = new java.util.LinkedList;

        specialinvoke r32.<java.util.LinkedList: void <init>()>();

        r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.List contentList> = r32;

        r33 = new gov.nist.javax.sip.message.ContentImpl;

        specialinvoke r33.<gov.nist.javax.sip.message.ContentImpl: void <init>(java.lang.String,java.lang.String)>(r28, r31);

        $r24 = virtualinvoke r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: javax.sip.header.ContentTypeHeader getContentTypeHeader()>();

        virtualinvoke r33.<gov.nist.javax.sip.message.ContentImpl: void setContentTypeHeader(javax.sip.header.ContentTypeHeader)>($r24);

        $r25 = r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.List contentList>;

        interfaceinvoke $r25.<java.util.List: boolean add(java.lang.Object)>(r33);

     label04:
        return;

     label05:
        r34 = new java.lang.StringBuilder;

        specialinvoke r34.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        virtualinvoke r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r6 = virtualinvoke r34.<java.lang.StringBuilder: java.lang.String toString()>();

        r35 = virtualinvoke r28.<java.lang.String: java.lang.String[] split(java.lang.String)>($r6);

        i0 = lengthof r35;

     label06:
        i7 = 0;

     label07:
        if i7 >= i0 goto label33;

        r37 = r35[i7];

        if r37 != null goto label08;

        return;

     label08:
        r38 = new java.lang.StringBuffer;

        specialinvoke r38.<java.lang.StringBuffer: void <init>(java.lang.String)>(r37);

     label09:
        $i2 = virtualinvoke r38.<java.lang.StringBuffer: int length()>();

        if $i2 <= 0 goto label12;

        $c5 = virtualinvoke r38.<java.lang.StringBuffer: char charAt(int)>(0);

        if $c5 == 13 goto label10;

        $c6 = virtualinvoke r38.<java.lang.StringBuffer: char charAt(int)>(0);

        if $c6 != 10 goto label12;

     label10:
        virtualinvoke r38.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>(0);

     label11:
        goto label09;

     label12:
        $i3 = virtualinvoke r38.<java.lang.StringBuffer: int length()>();

        if $i3 != 0 goto label14;

     label13:
        goto label30;

     label14:
        r39 = virtualinvoke r38.<java.lang.StringBuffer: java.lang.String toString()>();

        i1 = virtualinvoke r39.<java.lang.String: int indexOf(java.lang.String)>("\r\n\r\n");

     label15:
        b8 = 4;

        i9 = i1;

        if i1 != -1 goto label18;

     label16:
        i9 = virtualinvoke r39.<java.lang.String: int indexOf(java.lang.String)>("\n");

     label17:
        b8 = 2;

     label18:
        if i9 == -1 goto label32;

     label19:
        $i4 = i9 + b8;

        r40 = virtualinvoke r39.<java.lang.String: java.lang.String substring(int)>($i4);

     label20:
        if r40 == null goto label31;

     label21:
        r41 = virtualinvoke r39.<java.lang.String: java.lang.String substring(int,int)>(0, i9);

        r42 = new gov.nist.javax.sip.message.ContentImpl;

        $r14 = r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.lang.String boundary>;

        specialinvoke r42.<gov.nist.javax.sip.message.ContentImpl: void <init>(java.lang.String,java.lang.String)>(r40, $r14);

        r43 = virtualinvoke r41.<java.lang.String: java.lang.String[] split(java.lang.String)>("\r\n");

        i10 = lengthof r43;

     label22:
        i11 = 0;

     label23:
        if i11 >= i10 goto label30;

     label24:
        $r15 = r43[i11];

        r44 = interfaceinvoke r30.<gov.nist.javax.sip.header.HeaderFactoryExt: javax.sip.header.Header createHeader(java.lang.String)>($r15);

        $z0 = r44 instanceof javax.sip.header.ContentTypeHeader;

        if $z0 == 0 goto label26;

        $r22 = (javax.sip.header.ContentTypeHeader) r44;

        virtualinvoke r42.<gov.nist.javax.sip.message.ContentImpl: void setContentTypeHeader(javax.sip.header.ContentTypeHeader)>($r22);

     label25:
        goto label27;

     label26:
        $z1 = r44 instanceof javax.sip.header.ContentDispositionHeader;

        if $z1 == 0 goto label29;

        $r20 = (javax.sip.header.ContentDispositionHeader) r44;

        virtualinvoke r42.<gov.nist.javax.sip.message.ContentImpl: void setContentDispositionHeader(javax.sip.header.ContentDispositionHeader)>($r20);

     label27:
        $r21 = r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.List contentList>;

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>(r42);

     label28:
        i11 = i11 + 1;

        goto label23;

     label29:
        r45 = new java.text.ParseException;

        r46 = new java.lang.StringBuilder;

        specialinvoke r46.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected header type ");

        $r17 = interfaceinvoke r44.<javax.sip.header.Header: java.lang.String getName()>();

        virtualinvoke r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke r46.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r45.<java.text.ParseException: void <init>(java.lang.String,int)>($r19, 0);

        throw r45;

     label30:
        i7 = i7 + 1;

        goto label07;

     label31:
        r47 = new java.text.ParseException;

        r48 = new java.lang.StringBuilder;

        specialinvoke r48.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No content [");

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);

        virtualinvoke r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r13 = virtualinvoke r48.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r47.<java.text.ParseException: void <init>(java.lang.String,int)>($r13, 0);

        throw r47;

     label32:
        r49 = new java.text.ParseException;

        r50 = new java.lang.StringBuilder;

        specialinvoke r50.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no content type header found in ");

        virtualinvoke r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r39);

        $r9 = virtualinvoke r50.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r49.<java.text.ParseException: void <init>(java.lang.String,int)>($r9, 0);

        throw r49;

     label33:
        return;

     label34:
        $r26 := @caughtexception;

        $r27 = new java.text.ParseException;

        specialinvoke $r27.<java.text.ParseException: void <init>(java.lang.String,int)>("Invalid Multipart mime format", 0);

        throw $r27;

        catch java.lang.StringIndexOutOfBoundsException from label01 to label02 with label34;
        catch java.lang.StringIndexOutOfBoundsException from label03 to label04 with label34;
        catch java.lang.StringIndexOutOfBoundsException from label05 to label06 with label34;
        catch java.lang.StringIndexOutOfBoundsException from label08 to label09 with label34;
        catch java.lang.StringIndexOutOfBoundsException from label09 to label10 with label34;
        catch java.lang.StringIndexOutOfBoundsException from label10 to label11 with label34;
        catch java.lang.StringIndexOutOfBoundsException from label12 to label13 with label34;
        catch java.lang.StringIndexOutOfBoundsException from label14 to label15 with label34;
        catch java.lang.StringIndexOutOfBoundsException from label16 to label17 with label34;
        catch java.lang.StringIndexOutOfBoundsException from label19 to label20 with label34;
        catch java.lang.StringIndexOutOfBoundsException from label21 to label22 with label34;
        catch java.lang.StringIndexOutOfBoundsException from label24 to label25 with label34;
        catch java.lang.StringIndexOutOfBoundsException from label26 to label27 with label34;
        catch java.lang.StringIndexOutOfBoundsException from label27 to label28 with label34;
        catch java.lang.StringIndexOutOfBoundsException from label29 to label30 with label34;
        catch java.lang.StringIndexOutOfBoundsException from label31 to label32 with label34;
        catch java.lang.StringIndexOutOfBoundsException from label32 to label33 with label34;
    }

    public gov.nist.javax.sip.message.Content getContentByType(java.lang.String, java.lang.String)
    {
        gov.nist.javax.sip.message.MultipartMimeContentImpl r0;
        java.lang.String r1, r2, $r6, $r8;
        java.util.Iterator r3;
        boolean $z0, $z1, $z2;
        java.lang.Object $r4;
        javax.sip.header.ContentTypeHeader $r5, $r7;
        java.util.List r9;
        gov.nist.javax.sip.message.Content r10;

        r0 := @this: gov.nist.javax.sip.message.MultipartMimeContentImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r9 = r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.List contentList>;

        if r9 != null goto label1;

        return null;

     label1:
        r3 = interfaceinvoke r9.<java.util.List: java.util.Iterator iterator()>();

     label2:
        r10 = null;

        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r10 = (gov.nist.javax.sip.message.Content) $r4;

        $r5 = interfaceinvoke r10.<gov.nist.javax.sip.message.Content: javax.sip.header.ContentTypeHeader getContentTypeHeader()>();

        $r6 = interfaceinvoke $r5.<javax.sip.header.ContentTypeHeader: java.lang.String getContentType()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z1 == 0 goto label3;

        $r7 = interfaceinvoke r10.<gov.nist.javax.sip.message.Content: javax.sip.header.ContentTypeHeader getContentTypeHeader()>();

        $r8 = interfaceinvoke $r7.<javax.sip.header.ContentTypeHeader: java.lang.String getContentSubType()>();

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z2 == 0 goto label3;

        goto label4;

     label3:
        goto label2;

     label4:
        return r10;
    }

    public int getContentCount()
    {
        gov.nist.javax.sip.message.MultipartMimeContentImpl r0;
        java.util.List $r1;
        int $i0;

        r0 := @this: gov.nist.javax.sip.message.MultipartMimeContentImpl;

        $r1 = r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.List contentList>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public javax.sip.header.ContentTypeHeader getContentTypeHeader()
    {
        gov.nist.javax.sip.message.MultipartMimeContentImpl r0;
        javax.sip.header.ContentTypeHeader $r1;

        r0 := @this: gov.nist.javax.sip.message.MultipartMimeContentImpl;

        $r1 = r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: javax.sip.header.ContentTypeHeader multipartMimeContentTypeHeader>;

        return $r1;
    }

    public java.util.Iterator getContents()
    {
        gov.nist.javax.sip.message.MultipartMimeContentImpl r0;
        java.util.List $r1;
        java.util.Iterator $r2;

        r0 := @this: gov.nist.javax.sip.message.MultipartMimeContentImpl;

        $r1 = r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.List contentList>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }

    public java.lang.String toString()
    {
        gov.nist.javax.sip.message.MultipartMimeContentImpl r0;
        java.util.Iterator r2;
        java.lang.StringBuffer $r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.String $r5, $r8;
        java.lang.Object $r6;
        gov.nist.javax.sip.message.Content $r7;

        r0 := @this: gov.nist.javax.sip.message.MultipartMimeContentImpl;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.List contentList>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (gov.nist.javax.sip.message.Content) $r6;

        $r8 = interfaceinvoke $r7.<gov.nist.javax.sip.message.Content: java.lang.String toString()>();

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        goto label1;

     label2:
        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }
}
