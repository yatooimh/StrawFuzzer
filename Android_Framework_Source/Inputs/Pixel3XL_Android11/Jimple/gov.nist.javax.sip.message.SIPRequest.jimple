public final class gov.nist.javax.sip.message.SIPRequest extends gov.nist.javax.sip.message.SIPMessage implements javax.sip.message.Request, gov.nist.javax.sip.message.RequestExt
{
    private static final java.lang.String DEFAULT_TRANSPORT;
    private static final java.lang.String DEFAULT_USER;
    private static final java.util.Hashtable nameTable;
    private static final long serialVersionUID;
    private static final java.util.Set targetRefreshMethods;
    private transient java.lang.Object inviteTransaction;
    private transient java.lang.Object messageChannel;
    private gov.nist.javax.sip.header.RequestLine requestLine;
    private transient java.lang.Object transactionPointer;

    static void <clinit>()
    {
        java.util.HashSet $r0;
        java.util.Hashtable $r1;
        java.util.Set $r2, $r3, $r4, $r5, $r6;

        <gov.nist.javax.sip.message.SIPRequest: long serialVersionUID> = 3360720013577322927L;

        <gov.nist.javax.sip.message.SIPRequest: java.lang.String DEFAULT_USER> = "ip";

        <gov.nist.javax.sip.message.SIPRequest: java.lang.String DEFAULT_TRANSPORT> = "udp";

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        <gov.nist.javax.sip.message.SIPRequest: java.util.Set targetRefreshMethods> = $r0;

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        <gov.nist.javax.sip.message.SIPRequest: java.util.Hashtable nameTable> = $r1;

        $r2 = <gov.nist.javax.sip.message.SIPRequest: java.util.Set targetRefreshMethods>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>("INVITE");

        $r3 = <gov.nist.javax.sip.message.SIPRequest: java.util.Set targetRefreshMethods>;

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>("UPDATE");

        $r4 = <gov.nist.javax.sip.message.SIPRequest: java.util.Set targetRefreshMethods>;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>("SUBSCRIBE");

        $r5 = <gov.nist.javax.sip.message.SIPRequest: java.util.Set targetRefreshMethods>;

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>("NOTIFY");

        $r6 = <gov.nist.javax.sip.message.SIPRequest: java.util.Set targetRefreshMethods>;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>("REFER");

        staticinvoke <gov.nist.javax.sip.message.SIPRequest: void putName(java.lang.String)>("INVITE");

        staticinvoke <gov.nist.javax.sip.message.SIPRequest: void putName(java.lang.String)>("BYE");

        staticinvoke <gov.nist.javax.sip.message.SIPRequest: void putName(java.lang.String)>("CANCEL");

        staticinvoke <gov.nist.javax.sip.message.SIPRequest: void putName(java.lang.String)>("ACK");

        staticinvoke <gov.nist.javax.sip.message.SIPRequest: void putName(java.lang.String)>("PRACK");

        staticinvoke <gov.nist.javax.sip.message.SIPRequest: void putName(java.lang.String)>("INFO");

        staticinvoke <gov.nist.javax.sip.message.SIPRequest: void putName(java.lang.String)>("MESSAGE");

        staticinvoke <gov.nist.javax.sip.message.SIPRequest: void putName(java.lang.String)>("NOTIFY");

        staticinvoke <gov.nist.javax.sip.message.SIPRequest: void putName(java.lang.String)>("OPTIONS");

        staticinvoke <gov.nist.javax.sip.message.SIPRequest: void putName(java.lang.String)>("PRACK");

        staticinvoke <gov.nist.javax.sip.message.SIPRequest: void putName(java.lang.String)>("PUBLISH");

        staticinvoke <gov.nist.javax.sip.message.SIPRequest: void putName(java.lang.String)>("REFER");

        staticinvoke <gov.nist.javax.sip.message.SIPRequest: void putName(java.lang.String)>("REGISTER");

        staticinvoke <gov.nist.javax.sip.message.SIPRequest: void putName(java.lang.String)>("SUBSCRIBE");

        staticinvoke <gov.nist.javax.sip.message.SIPRequest: void putName(java.lang.String)>("UPDATE");

        return;
    }

    public void <init>()
    {
        gov.nist.javax.sip.message.SIPRequest r0;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void <init>()>();

        return;
    }

    public static java.lang.String getCannonicalName(java.lang.String)
    {
        java.lang.String r0, $r4;
        java.util.Hashtable $r1, $r2;
        boolean $z0;
        java.lang.Object $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = <gov.nist.javax.sip.message.SIPRequest: java.util.Hashtable nameTable>;

        $z0 = virtualinvoke $r1.<java.util.Hashtable: boolean containsKey(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r2 = <gov.nist.javax.sip.message.SIPRequest: java.util.Hashtable nameTable>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r0);

        $r4 = (java.lang.String) $r3;

        return $r4;

     label1:
        return r0;
    }

    public static boolean isDialogCreating(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <gov.nist.javax.sip.stack.SIPTransactionStack: boolean isDialogCreated(java.lang.String)>(r0);

        return $z0;
    }

    public static boolean isTargetRefresh(java.lang.String)
    {
        java.lang.String r0;
        java.util.Set $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = <gov.nist.javax.sip.message.SIPRequest: java.util.Set targetRefreshMethods>;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>(r0);

        return $z0;
    }

    private final boolean mustCopyRR(int)
    {
        gov.nist.javax.sip.message.SIPRequest r0;
        int i0;
        java.lang.String $r1, $r2;
        boolean $z1, z2;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        i0 := @parameter0: int;

        if i0 <= 100 goto label2;

        if i0 >= 300 goto label2;

        z2 = 0;

        $r1 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z1 = staticinvoke <gov.nist.javax.sip.message.SIPRequest: boolean isDialogCreating(java.lang.String)>($r1);

        if $z1 == 0 goto label1;

        z2 = 0;

        $r2 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getToTag()>();

        if $r2 != null goto label1;

        z2 = 1;

     label1:
        return z2;

     label2:
        return 0;
    }

    private static void putName(java.lang.String)
    {
        java.lang.String r0;
        java.util.Hashtable $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = <gov.nist.javax.sip.message.SIPRequest: java.util.Hashtable nameTable>;

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r0);

        return;
    }

    public void checkHeaders() throws java.text.ParseException
    {
        gov.nist.javax.sip.message.SIPRequest r0;
        gov.nist.javax.sip.address.SipUri r1, $r53;
        javax.sip.header.CSeqHeader $r2, $r40, $r44;
        java.lang.StringBuilder $r3, $r9, $r22, $r28, $r59, $r65, $r75, $r81, $r87, $r105;
        java.text.ParseException $r6, $r12, $r25, $r31, $r34, $r46, $r62, $r68, $r78, $r84, $r90, $r101, $r107;
        java.lang.String $r7, $r13, $r18, $r20, $r26, $r32, $r35, $r36, $r39, $r41, $r43, $r45, $r47, $r48, $r49, $r51, $r54, $r58, $r63, $r64, $r69, $r71, $r73, $r79, $r85, $r91, $r96, $r108;
        javax.sip.header.ToHeader $r8;
        gov.nist.javax.sip.header.CallID $r14, $r17, $r19;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        javax.sip.header.FromHeader $r21;
        gov.nist.javax.sip.header.ViaList $r27;
        gov.nist.javax.sip.header.Via $r33;
        gov.nist.javax.sip.header.RequestLine $r37, $r42, $r50, $r70, $r72, $r95, r102;
        gov.nist.javax.sip.address.GenericURI $r38, $r52;
        int $i0;
        gov.nist.javax.sip.header.Contact $r55, $r97, $r100;
        javax.sip.address.Address $r56;
        javax.sip.address.URI $r57;
        javax.sip.header.Header $r74, $r80, $r86;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        $r2 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        if $r2 == null goto label20;

        $r8 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.ToHeader getTo()>();

        if $r8 == null goto label19;

        $r14 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.CallID callIdHeader>;

        if $r14 == null goto label18;

        $r17 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.CallID callIdHeader>;

        $r18 = virtualinvoke $r17.<gov.nist.javax.sip.header.CallID: java.lang.String getCallId()>();

        if $r18 == null goto label18;

        $r19 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.CallID callIdHeader>;

        $r20 = virtualinvoke $r19.<gov.nist.javax.sip.header.CallID: java.lang.String getCallId()>();

        $z0 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label18;

        $r21 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.FromHeader getFrom()>();

        if $r21 == null goto label17;

        $r27 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.ViaList getViaHeaders()>();

        if $r27 == null goto label16;

        $r33 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.Via getTopmostVia()>();

        if $r33 == null goto label15;

        $r35 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z1 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>("NOTIFY");

        if $z1 == 0 goto label03;

        $r80 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.Header getHeader(java.lang.String)>("Subscription-State");

        if $r80 == null goto label02;

        $r86 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.Header getHeader(java.lang.String)>("Event");

        if $r86 == null goto label01;

        goto label05;

     label01:
        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing a required header : ");

        virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Event");

        $r90 = new java.text.ParseException;

        $r91 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r90.<java.text.ParseException: void <init>(java.lang.String,int)>($r91, 0);

        throw $r90;

     label02:
        $r81 = new java.lang.StringBuilder;

        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing a required header : ");

        virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Subscription-State");

        $r84 = new java.text.ParseException;

        $r85 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r84.<java.text.ParseException: void <init>(java.lang.String,int)>($r85, 0);

        throw $r84;

     label03:
        $r36 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z2 = virtualinvoke $r36.<java.lang.String: boolean equals(java.lang.Object)>("PUBLISH");

        if $z2 == 0 goto label05;

        $r74 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.Header getHeader(java.lang.String)>("Event");

        if $r74 == null goto label04;

        goto label05;

     label04:
        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing a required header : ");

        virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Event");

        $r78 = new java.text.ParseException;

        $r79 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r78.<java.text.ParseException: void <init>(java.lang.String,int)>($r79, 0);

        throw $r78;

     label05:
        $r95 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        $r96 = virtualinvoke $r95.<gov.nist.javax.sip.header.RequestLine: java.lang.String getMethod()>();

        $z11 = virtualinvoke $r96.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z11 != 0 goto label06;

        $r70 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        $r71 = virtualinvoke $r70.<gov.nist.javax.sip.header.RequestLine: java.lang.String getMethod()>();

        $z9 = virtualinvoke $r71.<java.lang.String: boolean equals(java.lang.Object)>("SUBSCRIBE");

        if $z9 != 0 goto label06;

        $r72 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        $r73 = virtualinvoke $r72.<gov.nist.javax.sip.header.RequestLine: java.lang.String getMethod()>();

        $z10 = virtualinvoke $r73.<java.lang.String: boolean equals(java.lang.Object)>("REFER");

        if $z10 == 0 goto label10;

     label06:
        $r97 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.Contact getContactHeader()>();

        if $r97 != null goto label08;

        $r64 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getToTag()>();

        if $r64 == null goto label07;

        goto label08;

     label07:
        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing a required header : ");

        virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Contact");

        $r68 = new java.text.ParseException;

        $r69 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r68.<java.text.ParseException: void <init>(java.lang.String,int)>($r69, 0);

        throw $r68;

     label08:
        $r37 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        $r38 = virtualinvoke $r37.<gov.nist.javax.sip.header.RequestLine: gov.nist.javax.sip.address.GenericURI getUri()>();

        $z3 = $r38 instanceof gov.nist.javax.sip.address.SipUri;

        if $z3 == 0 goto label10;

        $r51 = "sips";

        $r50 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        $r52 = virtualinvoke $r50.<gov.nist.javax.sip.header.RequestLine: gov.nist.javax.sip.address.GenericURI getUri()>();

        $r53 = (gov.nist.javax.sip.address.SipUri) $r52;

        $r54 = virtualinvoke $r53.<gov.nist.javax.sip.address.SipUri: java.lang.String getScheme()>();

        $z7 = virtualinvoke $r51.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r54);

        if $z7 == 0 goto label10;

        $r55 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.Contact getContactHeader()>();

        $r56 = virtualinvoke $r55.<gov.nist.javax.sip.header.Contact: javax.sip.address.Address getAddress()>();

        $r57 = interfaceinvoke $r56.<javax.sip.address.Address: javax.sip.address.URI getURI()>();

        r1 = (gov.nist.javax.sip.address.SipUri) $r57;

        $r58 = virtualinvoke r1.<gov.nist.javax.sip.address.SipUri: java.lang.String getScheme()>();

        $z8 = virtualinvoke $r58.<java.lang.String: boolean equals(java.lang.Object)>("sips");

        if $z8 == 0 goto label09;

        goto label10;

     label09:
        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scheme for contact should be sips:");

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r62 = new java.text.ParseException;

        $r63 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r62.<java.text.ParseException: void <init>(java.lang.String,int)>($r63, 0);

        throw $r62;

     label10:
        $r100 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.Contact getContactHeader()>();

        if $r100 != null goto label12;

        $r47 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z4 = virtualinvoke $r47.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z4 != 0 goto label11;

        $r48 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z5 = virtualinvoke $r48.<java.lang.String: boolean equals(java.lang.Object)>("REFER");

        if $z5 != 0 goto label11;

        $r49 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z6 = virtualinvoke $r49.<java.lang.String: boolean equals(java.lang.Object)>("SUBSCRIBE");

        if $z6 != 0 goto label11;

        goto label12;

     label11:
        $r101 = new java.text.ParseException;

        specialinvoke $r101.<java.text.ParseException: void <init>(java.lang.String,int)>("Contact Header is Mandatory for a SIP INVITE", 0);

        throw $r101;

     label12:
        r102 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        if r102 == null goto label14;

        $r39 = virtualinvoke r102.<gov.nist.javax.sip.header.RequestLine: java.lang.String getMethod()>();

        if $r39 == null goto label14;

        $r40 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $r41 = interfaceinvoke $r40.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        if $r41 == null goto label14;

        $r42 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        $r43 = virtualinvoke $r42.<gov.nist.javax.sip.header.RequestLine: java.lang.String getMethod()>();

        $r44 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $r45 = interfaceinvoke $r44.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $i0 = virtualinvoke $r43.<java.lang.String: int compareTo(java.lang.String)>($r45);

        if $i0 != 0 goto label13;

        goto label14;

     label13:
        $r46 = new java.text.ParseException;

        specialinvoke $r46.<java.text.ParseException: void <init>(java.lang.String,int)>("CSEQ method mismatch with  Request-Line ", 0);

        throw $r46;

     label14:
        return;

     label15:
        $r34 = new java.text.ParseException;

        specialinvoke $r34.<java.text.ParseException: void <init>(java.lang.String,int)>("No via header in request! ", 0);

        throw $r34;

     label16:
        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing a required header : ");

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Via");

        $r31 = new java.text.ParseException;

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<java.text.ParseException: void <init>(java.lang.String,int)>($r32, 0);

        throw $r31;

     label17:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing a required header : ");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("From");

        $r25 = new java.text.ParseException;

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<java.text.ParseException: void <init>(java.lang.String,int)>($r26, 0);

        throw $r25;

     label18:
        $r105 = new java.lang.StringBuilder;

        specialinvoke $r105.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing a required header : ");

        virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Call-ID");

        $r107 = new java.text.ParseException;

        $r108 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r107.<java.text.ParseException: void <init>(java.lang.String,int)>($r108, 0);

        throw $r107;

     label19:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing a required header : ");

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("To");

        $r12 = new java.text.ParseException;

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.text.ParseException: void <init>(java.lang.String,int)>($r13, 0);

        throw $r12;

     label20:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing a required header : ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CSeq");

        $r6 = new java.text.ParseException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.text.ParseException: void <init>(java.lang.String,int)>($r7, 0);

        throw $r6;
    }

    public java.lang.Object clone()
    {
        gov.nist.javax.sip.message.SIPRequest r0, r1;
        gov.nist.javax.sip.header.RequestLine r2, $r5;
        java.lang.Object $r3, $r4;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        $r3 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.Object clone()>();

        r1 = (gov.nist.javax.sip.message.SIPRequest) $r3;

        r1.<gov.nist.javax.sip.message.SIPRequest: java.lang.Object transactionPointer> = null;

        r2 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        if r2 == null goto label1;

        $r4 = virtualinvoke r2.<gov.nist.javax.sip.header.RequestLine: java.lang.Object clone()>();

        $r5 = (gov.nist.javax.sip.header.RequestLine) $r4;

        r1.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine> = $r5;

     label1:
        return r1;
    }

    public gov.nist.javax.sip.message.SIPRequest createACKRequest()
    {
        gov.nist.javax.sip.message.SIPRequest r0, $r4;
        gov.nist.javax.sip.header.RequestLine r1, $r2;
        java.lang.Object $r3;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        $r2 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        $r3 = virtualinvoke $r2.<gov.nist.javax.sip.header.RequestLine: java.lang.Object clone()>();

        r1 = (gov.nist.javax.sip.header.RequestLine) $r3;

        virtualinvoke r1.<gov.nist.javax.sip.header.RequestLine: void setMethod(java.lang.String)>("ACK");

        $r4 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPRequest createSIPRequest(gov.nist.javax.sip.header.RequestLine,boolean)>(r1, 0);

        return $r4;
    }

    public gov.nist.javax.sip.message.SIPRequest createAckRequest(gov.nist.javax.sip.header.To)
    {
        gov.nist.javax.sip.message.SIPRequest r0, r27;
        gov.nist.javax.sip.header.To r1;
        java.util.Iterator r3;
        gov.nist.javax.sip.header.RequestLine $r5, $r7;
        java.lang.Object $r6, $r10, $r11, $r14, $r15, $r16, $r17;
        javax.sip.header.UserAgentHeader $r8, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        gov.nist.javax.sip.header.ViaList $r12;
        javax.sip.header.Header $r13;
        gov.nist.javax.sip.header.ContentLength $r18;
        gov.nist.javax.sip.message.SIPDuplicateHeaderException $r19;
        java.lang.Throwable $r20, $r21;
        gov.nist.javax.sip.header.SIPHeader r22, r23;
        gov.nist.javax.sip.header.CSeq r28;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        r1 := @parameter0: gov.nist.javax.sip.header.To;

        r27 = new gov.nist.javax.sip.message.SIPRequest;

        specialinvoke r27.<gov.nist.javax.sip.message.SIPRequest: void <init>()>();

        $r5 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        $r6 = virtualinvoke $r5.<gov.nist.javax.sip.header.RequestLine: java.lang.Object clone()>();

        $r7 = (gov.nist.javax.sip.header.RequestLine) $r6;

        virtualinvoke r27.<gov.nist.javax.sip.message.SIPRequest: void setRequestLine(gov.nist.javax.sip.header.RequestLine)>($r7);

        virtualinvoke r27.<gov.nist.javax.sip.message.SIPRequest: void setMethod(java.lang.String)>("ACK");

        r3 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: java.util.Iterator getHeaders()>();

     label01:
        $z9 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label22;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r22 = (gov.nist.javax.sip.header.SIPHeader) $r10;

        $z0 = r22 instanceof gov.nist.javax.sip.header.RouteList;

        if $z0 == 0 goto label02;

        goto label01;

     label02:
        $z1 = r22 instanceof gov.nist.javax.sip.header.ProxyAuthorization;

        if $z1 == 0 goto label03;

        goto label01;

     label03:
        $z2 = r22 instanceof gov.nist.javax.sip.header.ContentLength;

        if $z2 == 0 goto label08;

        $r17 = virtualinvoke r22.<gov.nist.javax.sip.header.SIPHeader: java.lang.Object clone()>();

        r23 = (gov.nist.javax.sip.header.SIPHeader) $r17;

     label04:
        $r18 = (gov.nist.javax.sip.header.ContentLength) r23;

        virtualinvoke $r18.<gov.nist.javax.sip.header.ContentLength: void setContentLength(int)>(0);

     label05:
        goto label07;

     label06:
        $r21 := @caughtexception;

     label07:
        goto label19;

     label08:
        $z3 = r22 instanceof gov.nist.javax.sip.header.ContentType;

        if $z3 == 0 goto label09;

        goto label01;

     label09:
        $z4 = r22 instanceof gov.nist.javax.sip.header.CSeq;

        if $z4 == 0 goto label14;

        $r16 = virtualinvoke r22.<gov.nist.javax.sip.header.SIPHeader: java.lang.Object clone()>();

        r23 = (gov.nist.javax.sip.header.CSeq) $r16;

     label10:
        r28 = (gov.nist.javax.sip.header.CSeq) r23;

        virtualinvoke r28.<gov.nist.javax.sip.header.CSeq: void setMethod(java.lang.String)>("ACK");

     label11:
        goto label13;

     label12:
        $r20 := @caughtexception;

     label13:
        goto label19;

     label14:
        $z5 = r22 instanceof gov.nist.javax.sip.header.To;

        if $z5 == 0 goto label16;

        if r1 == null goto label15;

        r23 = r1;

        goto label19;

     label15:
        $r15 = virtualinvoke r22.<gov.nist.javax.sip.header.SIPHeader: java.lang.Object clone()>();

        r23 = (gov.nist.javax.sip.header.SIPHeader) $r15;

        goto label19;

     label16:
        $z6 = r22 instanceof gov.nist.javax.sip.header.ContactList;

        if $z6 != 0 goto label01;

        $z7 = r22 instanceof gov.nist.javax.sip.header.Expires;

        if $z7 == 0 goto label17;

        goto label01;

     label17:
        $z8 = r22 instanceof gov.nist.javax.sip.header.ViaList;

        if $z8 == 0 goto label18;

        $r12 = (gov.nist.javax.sip.header.ViaList) r22;

        $r13 = virtualinvoke $r12.<gov.nist.javax.sip.header.ViaList: javax.sip.header.Header getFirst()>();

        $r14 = interfaceinvoke $r13.<javax.sip.header.Header: java.lang.Object clone()>();

        r23 = (gov.nist.javax.sip.header.SIPHeader) $r14;

        goto label19;

     label18:
        $r11 = virtualinvoke r22.<gov.nist.javax.sip.header.SIPHeader: java.lang.Object clone()>();

        r23 = (gov.nist.javax.sip.header.SIPHeader) $r11;

     label19:
        virtualinvoke r27.<gov.nist.javax.sip.message.SIPRequest: void attachHeader(gov.nist.javax.sip.header.SIPHeader,boolean)>(r23, 0);

     label20:
        goto label01;

     label21:
        $r19 := @caughtexception;

        virtualinvoke $r19.<gov.nist.javax.sip.message.SIPDuplicateHeaderException: void printStackTrace()>();

        goto label20;

     label22:
        $r8 = staticinvoke <gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.UserAgentHeader getDefaultUserAgentHeader()>();

        if $r8 == null goto label23;

        $r9 = staticinvoke <gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.UserAgentHeader getDefaultUserAgentHeader()>();

        virtualinvoke r27.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>($r9);

     label23:
        return r27;

        catch javax.sip.InvalidArgumentException from label04 to label05 with label06;
        catch java.text.ParseException from label10 to label11 with label12;
        catch gov.nist.javax.sip.message.SIPDuplicateHeaderException from label19 to label20 with label21;
    }

    public gov.nist.javax.sip.message.SIPRequest createBYERequest(boolean)
    {
        gov.nist.javax.sip.message.SIPRequest r0, $r4;
        boolean z0;
        gov.nist.javax.sip.header.RequestLine r1, $r2;
        java.lang.Object $r3;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        z0 := @parameter0: boolean;

        $r2 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        $r3 = virtualinvoke $r2.<gov.nist.javax.sip.header.RequestLine: java.lang.Object clone()>();

        r1 = (gov.nist.javax.sip.header.RequestLine) $r3;

        virtualinvoke r1.<gov.nist.javax.sip.header.RequestLine: void setMethod(java.lang.String)>("BYE");

        $r4 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPRequest createSIPRequest(gov.nist.javax.sip.header.RequestLine,boolean)>(r1, z0);

        return $r4;
    }

    public gov.nist.javax.sip.message.SIPRequest createCancelRequest() throws javax.sip.SipException
    {
        gov.nist.javax.sip.message.SIPRequest r0, r41;
        java.lang.String $r2, $r5, $r8;
        boolean $z0;
        gov.nist.javax.sip.header.RequestLine $r10, $r12;
        java.lang.Object $r11, $r14, $r17, $r20, $r24, $r27, $r30, $r36;
        gov.nist.javax.sip.header.CallID $r13;
        javax.sip.header.Header $r15, $r18, $r21, $r25, $r28, $r31;
        gov.nist.javax.sip.header.To $r16;
        gov.nist.javax.sip.header.CSeq $r19;
        javax.sip.header.CSeqHeader $r22;
        gov.nist.javax.sip.header.From $r23;
        gov.nist.javax.sip.header.Via $r26;
        gov.nist.javax.sip.header.MaxForwards $r29;
        gov.nist.javax.sip.header.RouteList $r32, $r35;
        javax.sip.header.UserAgentHeader $r33, $r34;
        gov.nist.javax.sip.header.SIPHeaderList $r37;
        java.lang.Throwable $r38;
        java.lang.StringBuilder r42;
        javax.sip.SipException r43;
        java.text.ParseException r44;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        $r2 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z0 == 0 goto label7;

        r41 = new gov.nist.javax.sip.message.SIPRequest;

        specialinvoke r41.<gov.nist.javax.sip.message.SIPRequest: void <init>()>();

        $r10 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        $r11 = virtualinvoke $r10.<gov.nist.javax.sip.header.RequestLine: java.lang.Object clone()>();

        $r12 = (gov.nist.javax.sip.header.RequestLine) $r11;

        virtualinvoke r41.<gov.nist.javax.sip.message.SIPRequest: void setRequestLine(gov.nist.javax.sip.header.RequestLine)>($r12);

        virtualinvoke r41.<gov.nist.javax.sip.message.SIPRequest: void setMethod(java.lang.String)>("CANCEL");

        $r13 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.CallID callIdHeader>;

        $r14 = virtualinvoke $r13.<gov.nist.javax.sip.header.CallID: java.lang.Object clone()>();

        $r15 = (javax.sip.header.Header) $r14;

        virtualinvoke r41.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>($r15);

        $r16 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.To toHeader>;

        $r17 = virtualinvoke $r16.<gov.nist.javax.sip.header.To: java.lang.Object clone()>();

        $r18 = (javax.sip.header.Header) $r17;

        virtualinvoke r41.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>($r18);

        $r19 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.CSeq cSeqHeader>;

        $r20 = virtualinvoke $r19.<gov.nist.javax.sip.header.CSeq: java.lang.Object clone()>();

        $r21 = (javax.sip.header.Header) $r20;

        virtualinvoke r41.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>($r21);

     label1:
        $r22 = virtualinvoke r41.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        interfaceinvoke $r22.<javax.sip.header.CSeqHeader: void setMethod(java.lang.String)>("CANCEL");

     label2:
        goto label4;

     label3:
        $r38 := @caughtexception;

        r44 = (java.text.ParseException) $r38;

        virtualinvoke r44.<java.text.ParseException: void printStackTrace()>();

     label4:
        $r23 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.From fromHeader>;

        $r24 = virtualinvoke $r23.<gov.nist.javax.sip.header.From: java.lang.Object clone()>();

        $r25 = (javax.sip.header.Header) $r24;

        virtualinvoke r41.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>($r25);

        $r26 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.Via getTopmostVia()>();

        $r27 = virtualinvoke $r26.<gov.nist.javax.sip.header.Via: java.lang.Object clone()>();

        $r28 = (javax.sip.header.Header) $r27;

        virtualinvoke r41.<gov.nist.javax.sip.message.SIPRequest: void addFirst(javax.sip.header.Header)>($r28);

        $r29 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.MaxForwards maxForwardsHeader>;

        $r30 = virtualinvoke $r29.<gov.nist.javax.sip.header.MaxForwards: java.lang.Object clone()>();

        $r31 = (javax.sip.header.Header) $r30;

        virtualinvoke r41.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>($r31);

        $r32 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RouteList getRouteHeaders()>();

        if $r32 == null goto label5;

        $r35 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RouteList getRouteHeaders()>();

        $r36 = virtualinvoke $r35.<gov.nist.javax.sip.header.RouteList: java.lang.Object clone()>();

        $r37 = (gov.nist.javax.sip.header.SIPHeaderList) $r36;

        virtualinvoke r41.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>($r37);

     label5:
        $r33 = staticinvoke <gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.UserAgentHeader getDefaultUserAgentHeader()>();

        if $r33 == null goto label6;

        $r34 = staticinvoke <gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.UserAgentHeader getDefaultUserAgentHeader()>();

        virtualinvoke r41.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>($r34);

     label6:
        return r41;

     label7:
        r42 = new java.lang.StringBuilder;

        specialinvoke r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to create CANCEL for ");

        $r5 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        r43 = new javax.sip.SipException;

        $r8 = virtualinvoke r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r43.<javax.sip.SipException: void <init>(java.lang.String)>($r8);

        throw r43;

        catch java.text.ParseException from label1 to label2 with label3;
    }

    public final gov.nist.javax.sip.message.SIPRequest createErrorAck(gov.nist.javax.sip.header.To) throws javax.sip.SipException, java.text.ParseException
    {
        gov.nist.javax.sip.message.SIPRequest r0, $r3;
        gov.nist.javax.sip.header.To r1;
        gov.nist.javax.sip.header.RequestLine $r4, $r6;
        java.lang.Object $r5, $r8, $r11, $r14, $r16, $r19, $r22, $r29;
        gov.nist.javax.sip.header.CallID $r7;
        javax.sip.header.Header $r9, $r12, $r15, $r17, $r20, $r23;
        gov.nist.javax.sip.header.MaxForwards $r10;
        gov.nist.javax.sip.header.From $r13;
        gov.nist.javax.sip.header.Via $r18;
        gov.nist.javax.sip.header.CSeq $r21;
        javax.sip.header.CSeqHeader $r24;
        gov.nist.javax.sip.header.RouteList $r25, $r28;
        javax.sip.header.UserAgentHeader $r26, $r27;
        gov.nist.javax.sip.header.SIPHeaderList $r30;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        r1 := @parameter0: gov.nist.javax.sip.header.To;

        $r3 = new gov.nist.javax.sip.message.SIPRequest;

        specialinvoke $r3.<gov.nist.javax.sip.message.SIPRequest: void <init>()>();

        $r4 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        $r5 = virtualinvoke $r4.<gov.nist.javax.sip.header.RequestLine: java.lang.Object clone()>();

        $r6 = (gov.nist.javax.sip.header.RequestLine) $r5;

        virtualinvoke $r3.<gov.nist.javax.sip.message.SIPRequest: void setRequestLine(gov.nist.javax.sip.header.RequestLine)>($r6);

        virtualinvoke $r3.<gov.nist.javax.sip.message.SIPRequest: void setMethod(java.lang.String)>("ACK");

        $r7 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.CallID callIdHeader>;

        $r8 = virtualinvoke $r7.<gov.nist.javax.sip.header.CallID: java.lang.Object clone()>();

        $r9 = (javax.sip.header.Header) $r8;

        virtualinvoke $r3.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>($r9);

        $r10 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.MaxForwards maxForwardsHeader>;

        $r11 = virtualinvoke $r10.<gov.nist.javax.sip.header.MaxForwards: java.lang.Object clone()>();

        $r12 = (javax.sip.header.Header) $r11;

        virtualinvoke $r3.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>($r12);

        $r13 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.From fromHeader>;

        $r14 = virtualinvoke $r13.<gov.nist.javax.sip.header.From: java.lang.Object clone()>();

        $r15 = (javax.sip.header.Header) $r14;

        virtualinvoke $r3.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>($r15);

        $r16 = virtualinvoke r1.<gov.nist.javax.sip.header.To: java.lang.Object clone()>();

        $r17 = (javax.sip.header.Header) $r16;

        virtualinvoke $r3.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>($r17);

        $r18 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.Via getTopmostVia()>();

        $r19 = virtualinvoke $r18.<gov.nist.javax.sip.header.Via: java.lang.Object clone()>();

        $r20 = (javax.sip.header.Header) $r19;

        virtualinvoke $r3.<gov.nist.javax.sip.message.SIPRequest: void addFirst(javax.sip.header.Header)>($r20);

        $r21 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.CSeq cSeqHeader>;

        $r22 = virtualinvoke $r21.<gov.nist.javax.sip.header.CSeq: java.lang.Object clone()>();

        $r23 = (javax.sip.header.Header) $r22;

        virtualinvoke $r3.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>($r23);

        $r24 = virtualinvoke $r3.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        interfaceinvoke $r24.<javax.sip.header.CSeqHeader: void setMethod(java.lang.String)>("ACK");

        $r25 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RouteList getRouteHeaders()>();

        if $r25 == null goto label1;

        $r28 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RouteList getRouteHeaders()>();

        $r29 = virtualinvoke $r28.<gov.nist.javax.sip.header.RouteList: java.lang.Object clone()>();

        $r30 = (gov.nist.javax.sip.header.SIPHeaderList) $r29;

        virtualinvoke $r3.<gov.nist.javax.sip.message.SIPRequest: void setHeader(gov.nist.javax.sip.header.SIPHeaderList)>($r30);

     label1:
        $r26 = staticinvoke <gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.UserAgentHeader getDefaultUserAgentHeader()>();

        if $r26 == null goto label2;

        $r27 = staticinvoke <gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.UserAgentHeader getDefaultUserAgentHeader()>();

        virtualinvoke $r3.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>($r27);

     label2:
        return $r3;
    }

    public gov.nist.javax.sip.message.SIPResponse createResponse(int)
    {
        gov.nist.javax.sip.message.SIPRequest r0;
        int i0;
        java.lang.String $r1;
        gov.nist.javax.sip.message.SIPResponse $r2;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        i0 := @parameter0: int;

        $r1 = staticinvoke <gov.nist.javax.sip.message.SIPResponse: java.lang.String getReasonPhrase(int)>(i0);

        $r2 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPResponse createResponse(int,java.lang.String)>(i0, $r1);

        return $r2;
    }

    public gov.nist.javax.sip.message.SIPResponse createResponse(int, java.lang.String)
    {
        gov.nist.javax.sip.message.SIPRequest r0;
        int i0, $i1;
        gov.nist.javax.sip.message.SIPResponse $r2;
        java.lang.String $r3, $r14, r15;
        javax.sip.header.ServerHeader $r4, $r6, r21;
        javax.sip.header.ToHeader $r5;
        java.lang.Object $r7, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        gov.nist.javax.sip.message.SIPDuplicateHeaderException $r8;
        java.lang.Throwable $r9;
        java.lang.StringBuilder $r10;
        java.lang.IllegalArgumentException $r13;
        java.util.Iterator r16;
        gov.nist.javax.sip.header.SIPHeader r17, $r19;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        i0 := @parameter0: int;

        r15 := @parameter1: java.lang.String;

        $r2 = new gov.nist.javax.sip.message.SIPResponse;

        specialinvoke $r2.<gov.nist.javax.sip.message.SIPResponse: void <init>()>();

     label01:
        virtualinvoke $r2.<gov.nist.javax.sip.message.SIPResponse: void setStatusCode(int)>(i0);

     label02:
        if r15 == null goto label03;

        virtualinvoke $r2.<gov.nist.javax.sip.message.SIPResponse: void setReasonPhrase(java.lang.String)>(r15);

        goto label04;

     label03:
        $r3 = staticinvoke <gov.nist.javax.sip.message.SIPResponse: java.lang.String getReasonPhrase(int)>(i0);

        virtualinvoke $r2.<gov.nist.javax.sip.message.SIPResponse: void setReasonPhrase(java.lang.String)>($r3);

     label04:
        r16 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: java.util.Iterator getHeaders()>();

     label05:
        $z8 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label11;

        $r7 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r17 = (gov.nist.javax.sip.header.SIPHeader) $r7;

        $z0 = r17 instanceof gov.nist.javax.sip.header.From;

        if $z0 != 0 goto label07;

        $z1 = r17 instanceof gov.nist.javax.sip.header.To;

        if $z1 != 0 goto label07;

        $z2 = r17 instanceof gov.nist.javax.sip.header.ViaList;

        if $z2 != 0 goto label07;

        $z3 = r17 instanceof gov.nist.javax.sip.header.CallID;

        if $z3 != 0 goto label07;

        $z4 = r17 instanceof gov.nist.javax.sip.header.RecordRouteList;

        if $z4 == 0 goto label06;

        $z7 = specialinvoke r0.<gov.nist.javax.sip.message.SIPRequest: boolean mustCopyRR(int)>(i0);

        if $z7 != 0 goto label07;

     label06:
        $z5 = r17 instanceof gov.nist.javax.sip.header.CSeq;

        if $z5 != 0 goto label07;

        $z6 = r17 instanceof gov.nist.javax.sip.header.TimeStamp;

        if $z6 == 0 goto label05;

     label07:
        $r18 = virtualinvoke r17.<gov.nist.javax.sip.header.SIPHeader: java.lang.Object clone()>();

        $r19 = (gov.nist.javax.sip.header.SIPHeader) $r18;

        virtualinvoke $r2.<gov.nist.javax.sip.message.SIPResponse: void attachHeader(gov.nist.javax.sip.header.SIPHeader,boolean)>($r19, 0);

     label08:
        goto label10;

     label09:
        $r8 := @caughtexception;

        virtualinvoke $r8.<gov.nist.javax.sip.message.SIPDuplicateHeaderException: void printStackTrace()>();

     label10:
        goto label05;

     label11:
        $r4 = staticinvoke <gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.ServerHeader getDefaultServerHeader()>();

        if $r4 == null goto label12;

        $r6 = staticinvoke <gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.ServerHeader getDefaultServerHeader()>();

        virtualinvoke $r2.<gov.nist.javax.sip.message.SIPResponse: void setHeader(javax.sip.header.Header)>($r6);

     label12:
        $i1 = virtualinvoke $r2.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        if $i1 != 100 goto label13;

        $r5 = virtualinvoke $r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.ToHeader getTo()>();

        interfaceinvoke $r5.<javax.sip.header.ToHeader: void removeParameter(java.lang.String)>("tag");

     label13:
        r21 = staticinvoke <gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.ServerHeader getDefaultServerHeader()>();

        if r21 == null goto label14;

        virtualinvoke $r2.<gov.nist.javax.sip.message.SIPResponse: void setHeader(javax.sip.header.Header)>(r21);

     label14:
        return $r2;

     label15:
        $r9 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad code ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = new java.lang.IllegalArgumentException;

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r13;

        catch java.text.ParseException from label01 to label02 with label15;
        catch gov.nist.javax.sip.message.SIPDuplicateHeaderException from label07 to label08 with label09;
    }

    public gov.nist.javax.sip.message.SIPRequest createSIPRequest(gov.nist.javax.sip.header.RequestLine, boolean)
    {
        gov.nist.javax.sip.message.SIPRequest r0, r33;
        gov.nist.javax.sip.header.RequestLine r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.util.Iterator r3;
        javax.sip.header.UserAgentHeader $r5, $r6;
        java.lang.Object $r7, $r8, $r9, $r13, $r19, $r20;
        gov.nist.javax.sip.header.From $r10, $r16, r30, r34;
        gov.nist.javax.sip.header.To $r12, $r14, r29, r35;
        gov.nist.javax.sip.header.ViaList $r17;
        javax.sip.header.Header $r18;
        java.lang.String $r21;
        gov.nist.javax.sip.message.SIPDuplicateHeaderException $r22;
        java.lang.Throwable $r23, $r24;
        gov.nist.javax.sip.header.SIPHeader r25, r27;
        gov.nist.javax.sip.header.CSeq r26;
        gov.nist.javax.sip.header.Via r36;
        gov.nist.javax.sip.header.ContentLength r37;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        r1 := @parameter0: gov.nist.javax.sip.header.RequestLine;

        z0 := @parameter1: boolean;

        r33 = new gov.nist.javax.sip.message.SIPRequest;

        specialinvoke r33.<gov.nist.javax.sip.message.SIPRequest: void <init>()>();

        r33.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine> = r1;

        r3 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: java.util.Iterator getHeaders()>();

     label01:
        $z8 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label23;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r25 = (gov.nist.javax.sip.header.SIPHeader) $r7;

        $z1 = r25 instanceof gov.nist.javax.sip.header.CSeq;

        if $z1 == 0 goto label06;

        $r20 = virtualinvoke r25.<gov.nist.javax.sip.header.SIPHeader: java.lang.Object clone()>();

        r26 = (gov.nist.javax.sip.header.CSeq) $r20;

        r27 = r26;

     label02:
        $r21 = virtualinvoke r1.<gov.nist.javax.sip.header.RequestLine: java.lang.String getMethod()>();

        virtualinvoke r26.<gov.nist.javax.sip.header.CSeq: void setMethod(java.lang.String)>($r21);

     label03:
        goto label05;

     label04:
        $r23 := @caughtexception;

     label05:
        goto label19;

     label06:
        $z2 = r25 instanceof gov.nist.javax.sip.header.ViaList;

        if $z2 == 0 goto label07;

        $r17 = (gov.nist.javax.sip.header.ViaList) r25;

        $r18 = virtualinvoke $r17.<gov.nist.javax.sip.header.ViaList: javax.sip.header.Header getFirst()>();

        $r19 = interfaceinvoke $r18.<javax.sip.header.Header: java.lang.Object clone()>();

        r27 = (gov.nist.javax.sip.header.Via) $r19;

        r36 = (gov.nist.javax.sip.header.Via) r27;

        virtualinvoke r36.<gov.nist.javax.sip.header.Via: void removeParameter(java.lang.String)>("branch");

        goto label19;

     label07:
        $z3 = r25 instanceof gov.nist.javax.sip.header.To;

        if $z3 == 0 goto label10;

        r29 = (gov.nist.javax.sip.header.To) r25;

        if z0 == 0 goto label08;

        r34 = new gov.nist.javax.sip.header.From;

        specialinvoke r34.<gov.nist.javax.sip.header.From: void <init>(gov.nist.javax.sip.header.To)>(r29);

        r27 = r34;

        $r16 = (gov.nist.javax.sip.header.From) r34;

        virtualinvoke $r16.<gov.nist.javax.sip.header.From: void removeTag()>();

        goto label09;

     label08:
        $r13 = virtualinvoke r29.<gov.nist.javax.sip.header.To: java.lang.Object clone()>();

        r27 = (gov.nist.javax.sip.header.SIPHeader) $r13;

        $r14 = (gov.nist.javax.sip.header.To) r27;

        virtualinvoke $r14.<gov.nist.javax.sip.header.To: void removeTag()>();

     label09:
        goto label19;

     label10:
        $z4 = r25 instanceof gov.nist.javax.sip.header.From;

        if $z4 == 0 goto label13;

        r30 = (gov.nist.javax.sip.header.From) r25;

        if z0 == 0 goto label11;

        r35 = new gov.nist.javax.sip.header.To;

        specialinvoke r35.<gov.nist.javax.sip.header.To: void <init>(gov.nist.javax.sip.header.From)>(r30);

        r27 = r35;

        $r12 = (gov.nist.javax.sip.header.To) r35;

        virtualinvoke $r12.<gov.nist.javax.sip.header.To: void removeTag()>();

        goto label12;

     label11:
        $r9 = virtualinvoke r30.<gov.nist.javax.sip.header.From: java.lang.Object clone()>();

        r27 = (gov.nist.javax.sip.header.SIPHeader) $r9;

        $r10 = (gov.nist.javax.sip.header.From) r27;

        virtualinvoke $r10.<gov.nist.javax.sip.header.From: void removeTag()>();

     label12:
        goto label19;

     label13:
        $z5 = r25 instanceof gov.nist.javax.sip.header.ContentLength;

        if $z5 == 0 goto label18;

        $r8 = virtualinvoke r25.<gov.nist.javax.sip.header.SIPHeader: java.lang.Object clone()>();

        r27 = (gov.nist.javax.sip.header.ContentLength) $r8;

     label14:
        r37 = (gov.nist.javax.sip.header.ContentLength) r27;

        virtualinvoke r37.<gov.nist.javax.sip.header.ContentLength: void setContentLength(int)>(0);

     label15:
        goto label17;

     label16:
        $r24 := @caughtexception;

     label17:
        goto label19;

     label18:
        r27 = r25;

        $z6 = r25 instanceof gov.nist.javax.sip.header.CallID;

        if $z6 != 0 goto label17;

        r27 = r25;

        $z7 = r25 instanceof gov.nist.javax.sip.header.MaxForwards;

        if $z7 != 0 goto label17;

        goto label01;

     label19:
        virtualinvoke r33.<gov.nist.javax.sip.message.SIPRequest: void attachHeader(gov.nist.javax.sip.header.SIPHeader,boolean)>(r27, 0);

     label20:
        goto label22;

     label21:
        $r22 := @caughtexception;

        virtualinvoke $r22.<gov.nist.javax.sip.message.SIPDuplicateHeaderException: void printStackTrace()>();

     label22:
        goto label01;

     label23:
        $r5 = staticinvoke <gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.UserAgentHeader getDefaultUserAgentHeader()>();

        if $r5 == null goto label24;

        $r6 = staticinvoke <gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.UserAgentHeader getDefaultUserAgentHeader()>();

        virtualinvoke r33.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>($r6);

     label24:
        return r33;

        catch java.text.ParseException from label02 to label03 with label04;
        catch javax.sip.InvalidArgumentException from label14 to label15 with label16;
        catch gov.nist.javax.sip.message.SIPDuplicateHeaderException from label19 to label20 with label21;
    }

    public java.lang.String debugDump()
    {
        gov.nist.javax.sip.message.SIPRequest r0;
        java.lang.String r1, $r4, $r5, $r6;
        gov.nist.javax.sip.header.RequestLine r2;
        java.lang.Class $r3;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        r1 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String debugDump()>();

        r0.<gov.nist.javax.sip.message.SIPRequest: java.lang.String stringRepresentation> = "";

        $r3 = class "Lgov/nist/javax/sip/message/SIPRequest;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: void sprint(java.lang.String)>($r4);

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: void sprint(java.lang.String)>("{");

        r2 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        if r2 == null goto label1;

        $r6 = virtualinvoke r2.<gov.nist.javax.sip.header.RequestLine: java.lang.String debugDump()>();

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: void sprint(java.lang.String)>($r6);

     label1:
        virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: void sprint(java.lang.String)>(r1);

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: void sprint(java.lang.String)>("}");

        $r5 = r0.<gov.nist.javax.sip.message.SIPRequest: java.lang.String stringRepresentation>;

        return $r5;
    }

    public java.lang.String encode()
    {
        gov.nist.javax.sip.message.SIPRequest r0;
        gov.nist.javax.sip.header.RequestLine $r1, $r3;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r6, r9;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        $r1 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        if $r1 == null goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: void setRequestLineDefaults()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        $r4 = virtualinvoke $r3.<gov.nist.javax.sip.header.RequestLine: java.lang.String encode()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String encode()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label1:
        $z0 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: boolean isNullRequest()>();

        if $z0 == 0 goto label2;

        r9 = "\r\n\r\n";

        goto label3;

     label2:
        r9 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String encode()>();

     label3:
        return r9;
    }

    public byte[] encodeAsBytes(java.lang.String)
    {
        gov.nist.javax.sip.message.SIPRequest r0;
        gov.nist.javax.sip.header.RequestLine r1;
        boolean $z0;
        java.lang.String $r2, $r4, r7;
        byte[] $r3, $r5, r8, r10, r11;
        java.lang.Throwable $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Exception r12;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        r7 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: boolean isNullRequest()>();

        if $z0 == 0 goto label1;

        $r4 = "\r\n\r\n";

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>();

        return $r5;

     label1:
        r1 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        if r1 != null goto label2;

        $r3 = newarray (byte)[0];

        return $r3;

     label2:
        r8 = null;

        if r1 == null goto label6;

     label3:
        $r2 = virtualinvoke r1.<gov.nist.javax.sip.header.RequestLine: java.lang.String encode()>();

        r8 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label4:
        goto label6;

     label5:
        $r6 := @caughtexception;

        r12 = (java.lang.Exception) $r6;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r12);

        r8 = null;

     label6:
        r10 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: byte[] encodeAsBytes(java.lang.String)>(r7);

        $i0 = lengthof r8;

        $i1 = lengthof r10;

        $i2 = $i0 + $i1;

        r11 = newarray (byte)[$i2];

        $i3 = lengthof r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r8, 0, r11, 0, $i3);

        $i4 = lengthof r8;

        $i5 = lengthof r10;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r10, 0, r11, $i4, $i5);

        return r11;

        catch java.io.UnsupportedEncodingException from label3 to label4 with label5;
    }

    public java.lang.String encodeMessage()
    {
        gov.nist.javax.sip.message.SIPRequest r0;
        gov.nist.javax.sip.header.RequestLine $r1, $r3;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r6, r9;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        $r1 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        if $r1 == null goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: void setRequestLineDefaults()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        $r4 = virtualinvoke $r3.<gov.nist.javax.sip.header.RequestLine: java.lang.String encode()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String encodeSIPHeaders()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label1:
        $z0 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: boolean isNullRequest()>();

        if $z0 == 0 goto label2;

        r9 = "\r\n\r\n";

        goto label3;

     label2:
        r9 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String encodeSIPHeaders()>();

     label3:
        return r9;
    }

    public boolean equals(java.lang.Object)
    {
        gov.nist.javax.sip.message.SIPRequest r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        gov.nist.javax.sip.header.RequestLine $r5, $r6;
        boolean $z1, $z2, z3, z4;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        r1 := @parameter0: java.lang.Object;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        z3 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if z3 != 0 goto label1;

        return 0;

     label1:
        r2 = (gov.nist.javax.sip.message.SIPRequest) r1;

        z4 = 0;

        $r6 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        $r5 = r2.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        $z1 = virtualinvoke $r6.<gov.nist.javax.sip.header.RequestLine: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label2;

        z4 = 0;

        $z2 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label2;

        z4 = 1;

     label2:
        return z4;
    }

    public java.lang.String getDialogId(boolean)
    {
        gov.nist.javax.sip.message.SIPRequest r0;
        boolean z0;
        gov.nist.javax.sip.header.From r2;
        gov.nist.javax.sip.header.To r3;
        java.lang.StringBuffer $r4;
        javax.sip.header.CallIdHeader $r5;
        gov.nist.javax.sip.header.CallID $r6;
        java.lang.String $r7, $r10, $r11, $r13, $r16, $r18, $r19, $r21, $r24, $r26, $r27;
        javax.sip.header.FromHeader $r8;
        javax.sip.header.ToHeader $r9;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        z0 := @parameter0: boolean;

        $r4 = new java.lang.StringBuffer;

        $r5 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CallIdHeader getCallId()>();

        $r6 = (gov.nist.javax.sip.header.CallID) $r5;

        $r7 = virtualinvoke $r6.<gov.nist.javax.sip.header.CallID: java.lang.String getCallId()>();

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>($r7);

        $r8 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.FromHeader getFrom()>();

        r2 = (gov.nist.javax.sip.header.From) $r8;

        $r9 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.ToHeader getTo()>();

        r3 = (gov.nist.javax.sip.header.To) $r9;

        if z0 != 0 goto label2;

        $r18 = virtualinvoke r2.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

        if $r18 == null goto label1;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r24 = virtualinvoke r2.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

     label1:
        $r19 = virtualinvoke r3.<gov.nist.javax.sip.header.To: java.lang.String getTag()>();

        if $r19 == null goto label4;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r21 = virtualinvoke r3.<gov.nist.javax.sip.header.To: java.lang.String getTag()>();

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        goto label4;

     label2:
        $r10 = virtualinvoke r3.<gov.nist.javax.sip.header.To: java.lang.String getTag()>();

        if $r10 == null goto label3;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r16 = virtualinvoke r3.<gov.nist.javax.sip.header.To: java.lang.String getTag()>();

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

     label3:
        $r11 = virtualinvoke r2.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

        if $r11 == null goto label4;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r13 = virtualinvoke r2.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

     label4:
        $r26 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r27 = virtualinvoke $r26.<java.lang.String: java.lang.String toLowerCase()>();

        return $r27;
    }

    public java.lang.String getDialogId(boolean, java.lang.String)
    {
        gov.nist.javax.sip.message.SIPRequest r0;
        boolean z0;
        java.lang.String r1, $r8, $r9, $r11, $r15, $r19, $r21, $r22;
        gov.nist.javax.sip.header.From r2;
        javax.sip.header.FromHeader $r4;
        java.lang.StringBuffer $r5;
        javax.sip.header.CallIdHeader $r6;
        gov.nist.javax.sip.header.CallID $r7;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        $r4 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.FromHeader getFrom()>();

        r2 = (gov.nist.javax.sip.header.From) $r4;

        $r5 = new java.lang.StringBuffer;

        $r6 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CallIdHeader getCallId()>();

        $r7 = (gov.nist.javax.sip.header.CallID) $r6;

        $r8 = virtualinvoke $r7.<gov.nist.javax.sip.header.CallID: java.lang.String getCallId()>();

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(java.lang.String)>($r8);

        if z0 != 0 goto label2;

        $r15 = virtualinvoke r2.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

        if $r15 == null goto label1;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r19 = virtualinvoke r2.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

     label1:
        if r1 == null goto label4;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        goto label4;

     label2:
        if r1 == null goto label3;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

     label3:
        $r9 = virtualinvoke r2.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

        if $r9 == null goto label4;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r11 = virtualinvoke r2.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

     label4:
        $r21 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r22 = virtualinvoke $r21.<java.lang.String: java.lang.String toLowerCase()>();

        return $r22;
    }

    public java.lang.String getFirstLine()
    {
        gov.nist.javax.sip.message.SIPRequest r0;
        gov.nist.javax.sip.header.RequestLine r1;
        java.lang.String $r2;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        r1 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r1.<gov.nist.javax.sip.header.RequestLine: java.lang.String encode()>();

        return $r2;
    }

    public java.lang.Object getInviteTransaction()
    {
        gov.nist.javax.sip.message.SIPRequest r0;
        java.lang.Object $r1;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        $r1 = r0.<gov.nist.javax.sip.message.SIPRequest: java.lang.Object inviteTransaction>;

        return $r1;
    }

    public java.lang.String getMergeId()
    {
        gov.nist.javax.sip.message.SIPRequest r0;
        java.lang.String r1, r2, r3, r4, $r17;
        gov.nist.javax.sip.header.CSeq $r6;
        gov.nist.javax.sip.header.CallID $r7;
        javax.sip.address.URI $r8;
        java.lang.StringBuffer $r9;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        r1 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFromTag()>();

        $r6 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.CSeq cSeqHeader>;

        r2 = virtualinvoke $r6.<gov.nist.javax.sip.header.CSeq: java.lang.String toString()>();

        $r7 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.CallID callIdHeader>;

        r3 = virtualinvoke $r7.<gov.nist.javax.sip.header.CallID: java.lang.String getCallId()>();

        $r8 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: javax.sip.address.URI getRequestURI()>();

        r4 = interfaceinvoke $r8.<javax.sip.address.URI: java.lang.String toString()>();

        if r1 == null goto label1;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r17 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r17;

     label1:
        return null;
    }

    public java.util.LinkedList getMessageAsEncodedStrings()
    {
        gov.nist.javax.sip.message.SIPRequest r0;
        java.util.LinkedList r1;
        gov.nist.javax.sip.header.RequestLine $r2, $r3;
        java.lang.String $r4;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        r1 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.util.LinkedList getMessageAsEncodedStrings()>();

        $r2 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        if $r2 == null goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: void setRequestLineDefaults()>();

        $r3 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        $r4 = virtualinvoke $r3.<gov.nist.javax.sip.header.RequestLine: java.lang.String encode()>();

        virtualinvoke r1.<java.util.LinkedList: void addFirst(java.lang.Object)>($r4);

     label1:
        return r1;
    }

    public java.lang.Object getMessageChannel()
    {
        gov.nist.javax.sip.message.SIPRequest r0;
        java.lang.Object $r1;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        $r1 = r0.<gov.nist.javax.sip.message.SIPRequest: java.lang.Object messageChannel>;

        return $r1;
    }

    public java.lang.String getMethod()
    {
        gov.nist.javax.sip.message.SIPRequest r0;
        gov.nist.javax.sip.header.RequestLine r1;
        java.lang.String $r2;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        r1 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r1.<gov.nist.javax.sip.header.RequestLine: java.lang.String getMethod()>();

        return $r2;
    }

    public gov.nist.javax.sip.header.RequestLine getRequestLine()
    {
        gov.nist.javax.sip.message.SIPRequest r0;
        gov.nist.javax.sip.header.RequestLine $r1;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        $r1 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        return $r1;
    }

    public javax.sip.address.URI getRequestURI()
    {
        gov.nist.javax.sip.message.SIPRequest r0;
        gov.nist.javax.sip.header.RequestLine r1;
        gov.nist.javax.sip.address.GenericURI $r2;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        r1 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r1.<gov.nist.javax.sip.header.RequestLine: gov.nist.javax.sip.address.GenericURI getUri()>();

        return $r2;
    }

    public java.lang.String getSIPVersion()
    {
        gov.nist.javax.sip.message.SIPRequest r0;
        gov.nist.javax.sip.header.RequestLine $r1;
        java.lang.String $r2;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        $r1 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        $r2 = virtualinvoke $r1.<gov.nist.javax.sip.header.RequestLine: java.lang.String getSipVersion()>();

        return $r2;
    }

    public java.lang.Object getTransaction()
    {
        gov.nist.javax.sip.message.SIPRequest r0;
        java.lang.Object $r1;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        $r1 = r0.<gov.nist.javax.sip.message.SIPRequest: java.lang.Object transactionPointer>;

        return $r1;
    }

    public java.lang.String getViaHost()
    {
        gov.nist.javax.sip.message.SIPRequest r0;
        gov.nist.javax.sip.header.ViaList $r1;
        javax.sip.header.Header $r2;
        gov.nist.javax.sip.header.Via $r3;
        java.lang.String $r4;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        $r1 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.ViaList getViaHeaders()>();

        $r2 = virtualinvoke $r1.<gov.nist.javax.sip.header.ViaList: javax.sip.header.Header getFirst()>();

        $r3 = (gov.nist.javax.sip.header.Via) $r2;

        $r4 = virtualinvoke $r3.<gov.nist.javax.sip.header.Via: java.lang.String getHost()>();

        return $r4;
    }

    public int getViaPort()
    {
        gov.nist.javax.sip.message.SIPRequest r0;
        gov.nist.javax.sip.header.Via r1;
        gov.nist.javax.sip.header.ViaList $r2;
        javax.sip.header.Header $r3;
        boolean $z0;
        int $i0;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        $r2 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.ViaList getViaHeaders()>();

        $r3 = virtualinvoke $r2.<gov.nist.javax.sip.header.ViaList: javax.sip.header.Header getFirst()>();

        r1 = (gov.nist.javax.sip.header.Via) $r3;

        $z0 = virtualinvoke r1.<gov.nist.javax.sip.header.Via: boolean hasPort()>();

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r1.<gov.nist.javax.sip.header.Via: int getPort()>();

        return $i0;

     label1:
        return 5060;
    }

    public boolean match(java.lang.Object)
    {
        gov.nist.javax.sip.message.SIPRequest r0, r2;
        java.lang.Object r1;
        gov.nist.javax.sip.header.RequestLine r3, r4, $r7, $r8;
        java.lang.Class $r5, $r6;
        boolean $z0, $z1, $z2, $z3, z4;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        r1 := @parameter0: java.lang.Object;

        z4 = 1;

        if r1 != null goto label1;

        return 1;

     label1:
        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        if r1 != r0 goto label3;

        return 1;

     label3:
        r2 = (gov.nist.javax.sip.message.SIPRequest) r1;

        r3 = r2.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        $r7 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        if $r7 != null goto label4;

        if r3 == null goto label4;

        return 0;

     label4:
        r4 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        if r4 != r3 goto label5;

        $z3 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: boolean match(java.lang.Object)>(r1);

        return $z3;

     label5:
        $r8 = r2.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        $z1 = virtualinvoke r4.<gov.nist.javax.sip.header.RequestLine: boolean match(java.lang.Object)>($r8);

        if $z1 == 0 goto label6;

        $z2 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: boolean match(java.lang.Object)>(r1);

        if $z2 == 0 goto label6;

        goto label7;

     label6:
        z4 = 0;

     label7:
        return z4;
    }

    protected void setDefaults()
    {
        gov.nist.javax.sip.message.SIPRequest r0;
        gov.nist.javax.sip.address.GenericURI r1;
        gov.nist.javax.sip.header.RequestLine $r2, r4;
        int $i0, $i1;
        boolean $z0;
        java.lang.Throwable $r3;
        java.lang.String r5;
        gov.nist.javax.sip.address.SipUri r6;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        r4 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        if r4 != null goto label1;

        return;

     label1:
        r5 = virtualinvoke r4.<gov.nist.javax.sip.header.RequestLine: java.lang.String getMethod()>();

        if r5 != null goto label2;

        return;

     label2:
        $r2 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        r1 = virtualinvoke $r2.<gov.nist.javax.sip.header.RequestLine: gov.nist.javax.sip.address.GenericURI getUri()>();

        if r1 != null goto label3;

        return;

     label3:
        $i0 = virtualinvoke r5.<java.lang.String: int compareTo(java.lang.String)>("REGISTER");

        if $i0 == 0 goto label4;

        $i1 = virtualinvoke r5.<java.lang.String: int compareTo(java.lang.String)>("INVITE");

        if $i1 != 0 goto label8;

     label4:
        $z0 = r1 instanceof gov.nist.javax.sip.address.SipUri;

        if $z0 == 0 goto label8;

        r6 = (gov.nist.javax.sip.address.SipUri) r1;

        virtualinvoke r6.<gov.nist.javax.sip.address.SipUri: void setUserParam(java.lang.String)>("ip");

     label5:
        virtualinvoke r6.<gov.nist.javax.sip.address.SipUri: void setTransportParam(java.lang.String)>("udp");

     label6:
        goto label8;

     label7:
        $r3 := @caughtexception;

     label8:
        return;

        catch java.text.ParseException from label5 to label6 with label7;
    }

    public void setInviteTransaction(java.lang.Object)
    {
        gov.nist.javax.sip.message.SIPRequest r0;
        java.lang.Object r1;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        r1 := @parameter0: java.lang.Object;

        r0.<gov.nist.javax.sip.message.SIPRequest: java.lang.Object inviteTransaction> = r1;

        return;
    }

    public void setMessageChannel(java.lang.Object)
    {
        gov.nist.javax.sip.message.SIPRequest r0;
        java.lang.Object r1;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        r1 := @parameter0: java.lang.Object;

        r0.<gov.nist.javax.sip.message.SIPRequest: java.lang.Object messageChannel> = r1;

        return;
    }

    public void setMethod(java.lang.String)
    {
        gov.nist.javax.sip.message.SIPRequest r0;
        java.lang.IllegalArgumentException $r1;
        gov.nist.javax.sip.header.RequestLine $r2, $r3, $r6;
        gov.nist.javax.sip.header.CSeq $r4, $r5;
        java.lang.Throwable $r7;
        java.lang.String r8, r9;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        r8 := @parameter0: java.lang.String;

        if r8 == null goto label6;

        $r2 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        if $r2 != null goto label1;

        $r6 = new gov.nist.javax.sip.header.RequestLine;

        specialinvoke $r6.<gov.nist.javax.sip.header.RequestLine: void <init>()>();

        r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine> = $r6;

     label1:
        r9 = staticinvoke <gov.nist.javax.sip.message.SIPRequest: java.lang.String getCannonicalName(java.lang.String)>(r8);

        $r3 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        virtualinvoke $r3.<gov.nist.javax.sip.header.RequestLine: void setMethod(java.lang.String)>(r9);

        $r4 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.CSeq cSeqHeader>;

        if $r4 == null goto label5;

     label2:
        $r5 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.CSeq cSeqHeader>;

        virtualinvoke $r5.<gov.nist.javax.sip.header.CSeq: void setMethod(java.lang.String)>(r9);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

     label5:
        return;

     label6:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null method");

        throw $r1;

        catch java.text.ParseException from label2 to label3 with label4;
    }

    public void setRequestLine(gov.nist.javax.sip.header.RequestLine)
    {
        gov.nist.javax.sip.message.SIPRequest r0;
        gov.nist.javax.sip.header.RequestLine r1;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        r1 := @parameter0: gov.nist.javax.sip.header.RequestLine;

        r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine> = r1;

        return;
    }

    protected void setRequestLineDefaults()
    {
        gov.nist.javax.sip.message.SIPRequest r0;
        gov.nist.javax.sip.header.RequestLine $r1, $r5;
        java.lang.String $r2, $r4, r7;
        javax.sip.header.CSeqHeader $r3;
        gov.nist.javax.sip.header.CSeq r6;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        $r1 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        $r2 = virtualinvoke $r1.<gov.nist.javax.sip.header.RequestLine: java.lang.String getMethod()>();

        if $r2 != null goto label1;

        $r3 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        r6 = (gov.nist.javax.sip.header.CSeq) $r3;

        if r6 == null goto label1;

        $r4 = virtualinvoke r6.<gov.nist.javax.sip.header.CSeq: java.lang.String getMethod()>();

        r7 = staticinvoke <gov.nist.javax.sip.message.SIPRequest: java.lang.String getCannonicalName(java.lang.String)>($r4);

        $r5 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        virtualinvoke $r5.<gov.nist.javax.sip.header.RequestLine: void setMethod(java.lang.String)>(r7);

     label1:
        return;
    }

    public void setRequestURI(javax.sip.address.URI)
    {
        gov.nist.javax.sip.message.SIPRequest r0;
        javax.sip.address.URI r1;
        java.lang.NullPointerException $r2;
        gov.nist.javax.sip.header.RequestLine $r3, $r5, $r6;
        gov.nist.javax.sip.address.GenericURI $r4;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        r1 := @parameter0: javax.sip.address.URI;

        if r1 == null goto label2;

        $r3 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        if $r3 != null goto label1;

        $r6 = new gov.nist.javax.sip.header.RequestLine;

        specialinvoke $r6.<gov.nist.javax.sip.header.RequestLine: void <init>()>();

        r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine> = $r6;

     label1:
        $r5 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        $r4 = (gov.nist.javax.sip.address.GenericURI) r1;

        virtualinvoke $r5.<gov.nist.javax.sip.header.RequestLine: void setUri(javax.sip.address.URI)>($r4);

        r0.<gov.nist.javax.sip.message.SIPRequest: boolean nullRequest> = 0;

        return;

     label2:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null request URI");

        throw $r2;
    }

    public void setSIPVersion(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.message.SIPRequest r0;
        java.lang.String r1;
        java.text.ParseException $r2;
        boolean $z0;
        gov.nist.javax.sip.header.RequestLine $r3;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("SIP/2.0");

        if $z0 == 0 goto label1;

        $r3 = r0.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine requestLine>;

        virtualinvoke $r3.<gov.nist.javax.sip.header.RequestLine: void setSipVersion(java.lang.String)>(r1);

        return;

     label1:
        $r2 = new java.text.ParseException;

        specialinvoke $r2.<java.text.ParseException: void <init>(java.lang.String,int)>("sipVersion", 0);

        throw $r2;
    }

    public void setTransaction(java.lang.Object)
    {
        gov.nist.javax.sip.message.SIPRequest r0;
        java.lang.Object r1;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        r1 := @parameter0: java.lang.Object;

        r0.<gov.nist.javax.sip.message.SIPRequest: java.lang.Object transactionPointer> = r1;

        return;
    }

    public java.lang.String toString()
    {
        gov.nist.javax.sip.message.SIPRequest r0;
        java.lang.String $r1;

        r0 := @this: gov.nist.javax.sip.message.SIPRequest;

        $r1 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPRequest: java.lang.String encode()>();

        return $r1;
    }
}
