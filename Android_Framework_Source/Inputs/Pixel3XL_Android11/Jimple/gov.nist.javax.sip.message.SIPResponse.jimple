public final class gov.nist.javax.sip.message.SIPResponse extends gov.nist.javax.sip.message.SIPMessage implements javax.sip.message.Response, gov.nist.javax.sip.message.ResponseExt
{
    protected gov.nist.javax.sip.header.StatusLine statusLine;

    public void <init>()
    {
        gov.nist.javax.sip.message.SIPResponse r0;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void <init>()>();

        return;
    }

    public static java.lang.String getReasonPhrase(int)
    {
        int i0;
        java.lang.String r0;

        i0 := @parameter0: int;

        if i0 == 420 goto label60;

        if i0 == 421 goto label59;

        if i0 == 603 goto label58;

        if i0 == 604 goto label57;

        lookupswitch(i0)
        {
            case 100: goto label56;
            case 200: goto label55;
            case 202: goto label54;
            case 305: goto label53;
            case 380: goto label52;
            case 410: goto label51;
            case 423: goto label50;
            case 491: goto label49;
            case 493: goto label48;
            case 513: goto label47;
            case 600: goto label46;
            case 606: goto label45;
            default: goto label01;
        };

     label01:
        tableswitch(i0)
        {
            case 180: goto label44;
            case 181: goto label43;
            case 182: goto label42;
            case 183: goto label41;
            default: goto label02;
        };

     label02:
        tableswitch(i0)
        {
            case 300: goto label40;
            case 301: goto label39;
            case 302: goto label38;
            default: goto label03;
        };

     label03:
        tableswitch(i0)
        {
            case 400: goto label37;
            case 401: goto label36;
            case 402: goto label35;
            case 403: goto label34;
            case 404: goto label33;
            case 405: goto label32;
            case 406: goto label31;
            case 407: goto label30;
            case 408: goto label29;
            default: goto label04;
        };

     label04:
        tableswitch(i0)
        {
            case 412: goto label28;
            case 413: goto label27;
            case 414: goto label26;
            case 415: goto label25;
            case 416: goto label24;
            default: goto label05;
        };

     label05:
        tableswitch(i0)
        {
            case 480: goto label23;
            case 481: goto label22;
            case 482: goto label21;
            case 483: goto label20;
            case 484: goto label19;
            case 485: goto label18;
            case 486: goto label17;
            case 487: goto label16;
            case 488: goto label15;
            case 489: goto label14;
            default: goto label06;
        };

     label06:
        tableswitch(i0)
        {
            case 500: goto label13;
            case 501: goto label12;
            case 502: goto label11;
            case 503: goto label10;
            case 504: goto label09;
            case 505: goto label08;
            default: goto label07;
        };

     label07:
        r0 = "Unknown Status";

        goto label61;

     label08:
        r0 = "SIP version not supported";

        goto label61;

     label09:
        r0 = "Gateway timeout";

        goto label61;

     label10:
        r0 = "Service unavailable";

        goto label61;

     label11:
        r0 = "Bad gateway";

        goto label61;

     label12:
        r0 = "Not implemented";

        goto label61;

     label13:
        r0 = "Server Internal Error";

        goto label61;

     label14:
        r0 = "Bad Event";

        goto label61;

     label15:
        r0 = "Not Acceptable here";

        goto label61;

     label16:
        r0 = "Request Terminated";

        goto label61;

     label17:
        r0 = "Busy here";

        goto label61;

     label18:
        r0 = "Ambiguous";

        goto label61;

     label19:
        r0 = "Address incomplete";

        goto label61;

     label20:
        r0 = "Too many hops";

        goto label61;

     label21:
        r0 = "Loop detected";

        goto label61;

     label22:
        r0 = "Call leg/Transaction does not exist";

        goto label61;

     label23:
        r0 = "Temporarily Unavailable";

        goto label61;

     label24:
        r0 = "Unsupported URI Scheme";

        goto label61;

     label25:
        r0 = "Unsupported media type";

        goto label61;

     label26:
        r0 = "Request-URI too large";

        goto label61;

     label27:
        r0 = "Request entity too large";

        goto label61;

     label28:
        r0 = "Conditional request failed";

        goto label61;

     label29:
        r0 = "Request timeout";

        goto label61;

     label30:
        r0 = "Proxy Authentication required";

        goto label61;

     label31:
        r0 = "Not acceptable";

        goto label61;

     label32:
        r0 = "Method not allowed";

        goto label61;

     label33:
        r0 = "Not found";

        goto label61;

     label34:
        r0 = "Forbidden";

        goto label61;

     label35:
        r0 = "Payment required";

        goto label61;

     label36:
        r0 = "Unauthorized";

        goto label61;

     label37:
        r0 = "Bad request";

        goto label61;

     label38:
        r0 = "Moved Temporarily";

        goto label61;

     label39:
        r0 = "Moved permanently";

        goto label61;

     label40:
        r0 = "Multiple choices";

        goto label61;

     label41:
        r0 = "Session progress";

        goto label61;

     label42:
        r0 = "Queued";

        goto label61;

     label43:
        r0 = "Call is being forwarded";

        goto label61;

     label44:
        r0 = "Ringing";

        goto label61;

     label45:
        r0 = "Session Not acceptable";

        goto label61;

     label46:
        r0 = "Busy everywhere";

        goto label61;

     label47:
        r0 = "Message Too Large";

        goto label61;

     label48:
        r0 = "Undecipherable";

        goto label61;

     label49:
        r0 = "Request Pending";

        goto label61;

     label50:
        r0 = "Interval too brief";

        goto label61;

     label51:
        r0 = "Gone";

        goto label61;

     label52:
        r0 = "Alternative service";

        goto label61;

     label53:
        r0 = "Use proxy";

        goto label61;

     label54:
        r0 = "Accepted";

        goto label61;

     label55:
        r0 = "OK";

        goto label61;

     label56:
        r0 = "Trying";

        goto label61;

     label57:
        r0 = "Does not exist anywhere";

        goto label61;

     label58:
        r0 = "Decline";

        goto label61;

     label59:
        r0 = "Etension Required";

        goto label61;

     label60:
        r0 = "Bad extension";

     label61:
        return r0;
    }

    public static boolean isFinalResponse(int)
    {
        int i0;
        boolean z0;

        i0 := @parameter0: int;

        if i0 < 200 goto label1;

        if i0 >= 700 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private final void setBranch(gov.nist.javax.sip.header.Via, java.lang.String)
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        boolean $z0, $z1;
        gov.nist.javax.sip.header.Via $r1, $r4, r6;
        gov.nist.javax.sip.header.StatusLine $r2;
        int $i0;
        gov.nist.javax.sip.Utils $r3;
        java.lang.Throwable $r5;
        java.lang.String r7, r8;
        java.text.ParseException r10;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        r6 := @parameter0: gov.nist.javax.sip.header.Via;

        r7 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("ACK");

        if $z0 == 0 goto label2;

        $r2 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        $i0 = virtualinvoke $r2.<gov.nist.javax.sip.header.StatusLine: int getStatusCode()>();

        if $i0 < 300 goto label1;

        $r4 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.Via getTopmostVia()>();

        r8 = virtualinvoke $r4.<gov.nist.javax.sip.header.Via: java.lang.String getBranch()>();

        goto label3;

     label1:
        $r3 = staticinvoke <gov.nist.javax.sip.Utils: gov.nist.javax.sip.Utils getInstance()>();

        r8 = virtualinvoke $r3.<gov.nist.javax.sip.Utils: java.lang.String generateBranchId()>();

        goto label3;

     label2:
        $z1 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("CANCEL");

        if $z1 == 0 goto label7;

        $r1 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.Via getTopmostVia()>();

        r8 = virtualinvoke $r1.<gov.nist.javax.sip.header.Via: java.lang.String getBranch()>();

     label3:
        virtualinvoke r6.<gov.nist.javax.sip.header.Via: void setBranch(java.lang.String)>(r8);

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

        r10 = (java.text.ParseException) $r5;

        virtualinvoke r10.<java.text.ParseException: void printStackTrace()>();

     label6:
        return;

     label7:
        return;

        catch java.text.ParseException from label3 to label4 with label5;
    }

    public void checkHeaders() throws java.text.ParseException
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        javax.sip.header.CSeqHeader $r2;
        java.text.ParseException $r3, $r5, $r7, $r9, $r11, $r15;
        javax.sip.header.ToHeader $r4;
        javax.sip.header.FromHeader $r6;
        gov.nist.javax.sip.header.ViaList $r8;
        javax.sip.header.CallIdHeader $r10;
        int $i0, $i1;
        java.lang.StringBuilder $r12;
        java.lang.String $r16;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        $r2 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        if $r2 == null goto label6;

        $r4 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.ToHeader getTo()>();

        if $r4 == null goto label5;

        $r6 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.FromHeader getFrom()>();

        if $r6 == null goto label4;

        $r8 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.ViaList getViaHeaders()>();

        if $r8 == null goto label3;

        $r10 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CallIdHeader getCallId()>();

        if $r10 == null goto label2;

        $i0 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        if $i0 > 699 goto label1;

        return;

     label1:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown error code!");

        $i1 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r15 = new java.text.ParseException;

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.text.ParseException: void <init>(java.lang.String,int)>($r16, 0);

        throw $r15;

     label2:
        $r11 = new java.text.ParseException;

        specialinvoke $r11.<java.text.ParseException: void <init>(java.lang.String,int)>("Call-ID Is missing ", 0);

        throw $r11;

     label3:
        $r9 = new java.text.ParseException;

        specialinvoke $r9.<java.text.ParseException: void <init>(java.lang.String,int)>("Via Is missing ", 0);

        throw $r9;

     label4:
        $r7 = new java.text.ParseException;

        specialinvoke $r7.<java.text.ParseException: void <init>(java.lang.String,int)>("From Is missing ", 0);

        throw $r7;

     label5:
        $r5 = new java.text.ParseException;

        specialinvoke $r5.<java.text.ParseException: void <init>(java.lang.String,int)>("To Is missing ", 0);

        throw $r5;

     label6:
        $r3 = new java.text.ParseException;

        specialinvoke $r3.<java.text.ParseException: void <init>(java.lang.String,int)>("CSeq Is missing ", 0);

        throw $r3;
    }

    public java.lang.Object clone()
    {
        gov.nist.javax.sip.message.SIPResponse r0, r1;
        gov.nist.javax.sip.header.StatusLine r2, $r5;
        java.lang.Object $r3, $r4;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        $r3 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.Object clone()>();

        r1 = (gov.nist.javax.sip.message.SIPResponse) $r3;

        r2 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        if r2 == null goto label1;

        $r4 = virtualinvoke r2.<gov.nist.javax.sip.header.StatusLine: java.lang.Object clone()>();

        $r5 = (gov.nist.javax.sip.header.StatusLine) $r4;

        r1.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine> = $r5;

     label1:
        return r1;
    }

    public gov.nist.javax.sip.message.SIPRequest createRequest(gov.nist.javax.sip.address.SipUri, gov.nist.javax.sip.header.Via, gov.nist.javax.sip.header.CSeq, gov.nist.javax.sip.header.From, gov.nist.javax.sip.header.To)
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        gov.nist.javax.sip.header.From r1;
        gov.nist.javax.sip.header.To r2;
        java.lang.String r4;
        gov.nist.javax.sip.message.SIPRequest $r5;
        javax.sip.header.UserAgentHeader $r6, $r7;
        java.lang.Object $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        java.lang.Exception $r9;
        gov.nist.javax.sip.message.SIPDuplicateHeaderException $r10;
        gov.nist.javax.sip.address.SipUri r11;
        gov.nist.javax.sip.header.Via r12;
        gov.nist.javax.sip.header.CSeq r13;
        java.util.Iterator r14;
        gov.nist.javax.sip.header.SIPHeader r15, r16;
        gov.nist.javax.sip.header.MaxForwards r18;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        r11 := @parameter0: gov.nist.javax.sip.address.SipUri;

        r12 := @parameter1: gov.nist.javax.sip.header.Via;

        r13 := @parameter2: gov.nist.javax.sip.header.CSeq;

        r1 := @parameter3: gov.nist.javax.sip.header.From;

        r2 := @parameter4: gov.nist.javax.sip.header.To;

        $r5 = new gov.nist.javax.sip.message.SIPRequest;

        specialinvoke $r5.<gov.nist.javax.sip.message.SIPRequest: void <init>()>();

        r4 = virtualinvoke r13.<gov.nist.javax.sip.header.CSeq: java.lang.String getMethod()>();

        virtualinvoke $r5.<gov.nist.javax.sip.message.SIPRequest: void setMethod(java.lang.String)>(r4);

        virtualinvoke $r5.<gov.nist.javax.sip.message.SIPRequest: void setRequestURI(javax.sip.address.URI)>(r11);

        specialinvoke r0.<gov.nist.javax.sip.message.SIPResponse: void setBranch(gov.nist.javax.sip.header.Via,java.lang.String)>(r12, r4);

        virtualinvoke $r5.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>(r12);

        virtualinvoke $r5.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>(r13);

        r14 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: java.util.Iterator getHeaders()>();

     label01:
        $z15 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z15 == 0 goto label08;

        $r8 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r15 = (gov.nist.javax.sip.header.SIPHeader) $r8;

        $z0 = staticinvoke <gov.nist.javax.sip.message.SIPMessage: boolean isResponseHeader(gov.nist.javax.sip.header.SIPHeader)>(r15);

        if $z0 != 0 goto label01;

        $z1 = r15 instanceof gov.nist.javax.sip.header.ViaList;

        if $z1 != 0 goto label01;

        $z2 = r15 instanceof gov.nist.javax.sip.header.CSeq;

        if $z2 != 0 goto label01;

        $z3 = r15 instanceof gov.nist.javax.sip.header.ContentType;

        if $z3 != 0 goto label01;

        $z4 = r15 instanceof gov.nist.javax.sip.header.ContentLength;

        if $z4 != 0 goto label01;

        $z5 = r15 instanceof gov.nist.javax.sip.header.RecordRouteList;

        if $z5 != 0 goto label01;

        $z6 = r15 instanceof gov.nist.javax.sip.header.RequireList;

        if $z6 != 0 goto label01;

        $z7 = r15 instanceof gov.nist.javax.sip.header.ContactList;

        if $z7 != 0 goto label01;

        $z8 = r15 instanceof gov.nist.javax.sip.header.ContentLength;

        if $z8 != 0 goto label01;

        $z9 = r15 instanceof javax.sip.header.ServerHeader;

        if $z9 != 0 goto label01;

        $z10 = r15 instanceof javax.sip.header.ReasonHeader;

        if $z10 != 0 goto label01;

        $z11 = r15 instanceof gov.nist.javax.sip.header.extensions.SessionExpires;

        if $z11 != 0 goto label01;

        $z12 = r15 instanceof gov.nist.javax.sip.header.ReasonList;

        if $z12 == 0 goto label02;

        goto label01;

     label02:
        $z13 = r15 instanceof gov.nist.javax.sip.header.To;

        if $z13 == 0 goto label03;

        r16 = r2;

        goto label04;

     label03:
        r16 = r15;

        $z14 = r15 instanceof gov.nist.javax.sip.header.From;

        if $z14 == 0 goto label04;

        r16 = r1;

     label04:
        virtualinvoke $r5.<gov.nist.javax.sip.message.SIPRequest: void attachHeader(gov.nist.javax.sip.header.SIPHeader,boolean)>(r16, 0);

     label05:
        goto label07;

     label06:
        $r10 := @caughtexception;

        virtualinvoke $r10.<gov.nist.javax.sip.message.SIPDuplicateHeaderException: void printStackTrace()>();

     label07:
        goto label01;

     label08:
        r18 = new gov.nist.javax.sip.header.MaxForwards;

        specialinvoke r18.<gov.nist.javax.sip.header.MaxForwards: void <init>(int)>(70);

        virtualinvoke $r5.<gov.nist.javax.sip.message.SIPRequest: void attachHeader(gov.nist.javax.sip.header.SIPHeader,boolean)>(r18, 0);

     label09:
        goto label11;

     label10:
        $r9 := @caughtexception;

     label11:
        $r6 = staticinvoke <gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.UserAgentHeader getDefaultUserAgentHeader()>();

        if $r6 == null goto label12;

        $r7 = staticinvoke <gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.UserAgentHeader getDefaultUserAgentHeader()>();

        virtualinvoke $r5.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>($r7);

     label12:
        return $r5;

        catch gov.nist.javax.sip.message.SIPDuplicateHeaderException from label04 to label05 with label06;
        catch java.lang.Exception from label08 to label09 with label10;
    }

    public java.lang.String debugDump()
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        java.lang.String r1, $r4, $r5, $r6;
        gov.nist.javax.sip.header.StatusLine r2;
        java.lang.Class $r3;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        r1 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String debugDump()>();

        r0.<gov.nist.javax.sip.message.SIPResponse: java.lang.String stringRepresentation> = "";

        $r3 = class "Lgov/nist/javax/sip/message/SIPResponse;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getCanonicalName()>();

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: void sprint(java.lang.String)>($r4);

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: void sprint(java.lang.String)>("{");

        r2 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        if r2 == null goto label1;

        $r6 = virtualinvoke r2.<gov.nist.javax.sip.header.StatusLine: java.lang.String debugDump()>();

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: void sprint(java.lang.String)>($r6);

     label1:
        virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: void sprint(java.lang.String)>(r1);

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: void sprint(java.lang.String)>("}");

        $r5 = r0.<gov.nist.javax.sip.message.SIPResponse: java.lang.String stringRepresentation>;

        return $r5;
    }

    public java.lang.String encode()
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        gov.nist.javax.sip.header.StatusLine $r1, $r3;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r6, r9;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        $r1 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        if $r1 == null goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        $r4 = virtualinvoke $r3.<gov.nist.javax.sip.header.StatusLine: java.lang.String encode()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String encode()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        r9 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String encode()>();

     label2:
        return r9;
    }

    public byte[] encodeAsBytes(java.lang.String)
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        gov.nist.javax.sip.header.StatusLine r1;
        java.lang.String $r2, r4;
        java.lang.Throwable $r3;
        byte[] r5, r7, r8;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Exception r9;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        r4 := @parameter0: java.lang.String;

        r1 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        r5 = null;

        if r1 == null goto label4;

     label1:
        $r2 = virtualinvoke r1.<gov.nist.javax.sip.header.StatusLine: java.lang.String encode()>();

        r5 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r9 = (java.lang.Exception) $r3;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r9);

        r5 = null;

     label4:
        r7 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: byte[] encodeAsBytes(java.lang.String)>(r4);

        $i0 = lengthof r5;

        $i1 = lengthof r7;

        $i2 = $i0 + $i1;

        r8 = newarray (byte)[$i2];

        $i3 = lengthof r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, 0, r8, 0, $i3);

        $i4 = lengthof r5;

        $i5 = lengthof r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, 0, r8, $i4, $i5);

        return r8;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public java.lang.String encodeMessage()
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        gov.nist.javax.sip.header.StatusLine $r1, $r3;
        java.lang.StringBuilder $r2;
        java.lang.String $r4, $r6, r9;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        $r1 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        if $r1 == null goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        $r4 = virtualinvoke $r3.<gov.nist.javax.sip.header.StatusLine: java.lang.String encode()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String encodeSIPHeaders()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        r9 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String encodeSIPHeaders()>();

     label2:
        return r9;
    }

    public boolean equals(java.lang.Object)
    {
        gov.nist.javax.sip.message.SIPResponse r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        gov.nist.javax.sip.header.StatusLine $r5, $r6;
        boolean $z1, $z2, z3, z4;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        r1 := @parameter0: java.lang.Object;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        z3 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if z3 != 0 goto label1;

        return 0;

     label1:
        r2 = (gov.nist.javax.sip.message.SIPResponse) r1;

        z4 = 0;

        $r6 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        $r5 = r2.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        $z1 = virtualinvoke $r6.<gov.nist.javax.sip.header.StatusLine: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label2;

        z4 = 0;

        $z2 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label2;

        z4 = 1;

     label2:
        return z4;
    }

    public java.lang.String getDialogId(boolean)
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        boolean z0;
        gov.nist.javax.sip.header.From r1;
        gov.nist.javax.sip.header.To r2;
        javax.sip.header.CallIdHeader $r3;
        javax.sip.header.FromHeader $r4;
        javax.sip.header.ToHeader $r5;
        java.lang.StringBuffer $r6;
        java.lang.String $r7, $r8, $r9, $r11, $r14, $r16, $r17, $r19, $r22, $r26, $r27;
        gov.nist.javax.sip.header.CallID r24;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        z0 := @parameter0: boolean;

        $r3 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CallIdHeader getCallId()>();

        r24 = (gov.nist.javax.sip.header.CallID) $r3;

        $r4 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.FromHeader getFrom()>();

        r1 = (gov.nist.javax.sip.header.From) $r4;

        $r5 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.ToHeader getTo()>();

        r2 = (gov.nist.javax.sip.header.To) $r5;

        $r6 = new java.lang.StringBuffer;

        $r7 = virtualinvoke r24.<gov.nist.javax.sip.header.CallID: java.lang.String getCallId()>();

        specialinvoke $r6.<java.lang.StringBuffer: void <init>(java.lang.String)>($r7);

        if z0 != 0 goto label2;

        $r16 = virtualinvoke r1.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

        if $r16 == null goto label1;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r22 = virtualinvoke r1.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

     label1:
        $r17 = virtualinvoke r2.<gov.nist.javax.sip.header.To: java.lang.String getTag()>();

        if $r17 == null goto label4;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r19 = virtualinvoke r2.<gov.nist.javax.sip.header.To: java.lang.String getTag()>();

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        goto label4;

     label2:
        $r8 = virtualinvoke r2.<gov.nist.javax.sip.header.To: java.lang.String getTag()>();

        if $r8 == null goto label3;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r14 = virtualinvoke r2.<gov.nist.javax.sip.header.To: java.lang.String getTag()>();

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

     label3:
        $r9 = virtualinvoke r1.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

        if $r9 == null goto label4;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r11 = virtualinvoke r1.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

     label4:
        $r26 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        $r27 = virtualinvoke $r26.<java.lang.String: java.lang.String toLowerCase()>();

        return $r27;
    }

    public java.lang.String getDialogId(boolean, java.lang.String)
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        boolean z0;
        java.lang.String r1, $r6, $r7, $r9, $r13, $r17, $r21, $r22;
        gov.nist.javax.sip.header.From r2;
        javax.sip.header.CallIdHeader $r3;
        javax.sip.header.FromHeader $r4;
        java.lang.StringBuffer $r5;
        gov.nist.javax.sip.header.CallID r19;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CallIdHeader getCallId()>();

        r19 = (gov.nist.javax.sip.header.CallID) $r3;

        $r4 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.FromHeader getFrom()>();

        r2 = (gov.nist.javax.sip.header.From) $r4;

        $r5 = new java.lang.StringBuffer;

        $r6 = virtualinvoke r19.<gov.nist.javax.sip.header.CallID: java.lang.String getCallId()>();

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(java.lang.String)>($r6);

        if z0 != 0 goto label2;

        $r13 = virtualinvoke r2.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

        if $r13 == null goto label1;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r17 = virtualinvoke r2.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

     label1:
        if r1 == null goto label4;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        goto label4;

     label2:
        if r1 == null goto label3;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

     label3:
        $r7 = virtualinvoke r2.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

        if $r7 == null goto label4;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r9 = virtualinvoke r2.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

     label4:
        $r21 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r22 = virtualinvoke $r21.<java.lang.String: java.lang.String toLowerCase()>();

        return $r22;
    }

    public java.lang.String getFirstLine()
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        gov.nist.javax.sip.header.StatusLine r1;
        java.lang.String $r2;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        r1 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r1.<gov.nist.javax.sip.header.StatusLine: java.lang.String encode()>();

        return $r2;
    }

    public java.util.LinkedList getMessageAsEncodedStrings()
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        java.util.LinkedList r1;
        gov.nist.javax.sip.header.StatusLine r2;
        java.lang.String $r3;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        r1 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.util.LinkedList getMessageAsEncodedStrings()>();

        r2 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<gov.nist.javax.sip.header.StatusLine: java.lang.String encode()>();

        virtualinvoke r1.<java.util.LinkedList: void addFirst(java.lang.Object)>($r3);

     label1:
        return r1;
    }

    public java.lang.String getReasonPhrase()
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        gov.nist.javax.sip.header.StatusLine r1, $r3;
        java.lang.String $r2, $r4;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        r1 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        if r1 == null goto label2;

        $r2 = virtualinvoke r1.<gov.nist.javax.sip.header.StatusLine: java.lang.String getReasonPhrase()>();

        if $r2 != null goto label1;

        goto label2;

     label1:
        $r3 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        $r4 = virtualinvoke $r3.<gov.nist.javax.sip.header.StatusLine: java.lang.String getReasonPhrase()>();

        return $r4;

     label2:
        return "";
    }

    public java.lang.String getSIPVersion()
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        gov.nist.javax.sip.header.StatusLine $r1;
        java.lang.String $r2;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        $r1 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        $r2 = virtualinvoke $r1.<gov.nist.javax.sip.header.StatusLine: java.lang.String getSipVersion()>();

        return $r2;
    }

    public int getStatusCode()
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        gov.nist.javax.sip.header.StatusLine $r1;
        int $i0;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        $r1 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        $i0 = virtualinvoke $r1.<gov.nist.javax.sip.header.StatusLine: int getStatusCode()>();

        return $i0;
    }

    public gov.nist.javax.sip.header.StatusLine getStatusLine()
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        gov.nist.javax.sip.header.StatusLine $r1;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        $r1 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        return $r1;
    }

    public boolean isFinalResponse()
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        gov.nist.javax.sip.header.StatusLine $r1;
        int $i0;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        $r1 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        $i0 = virtualinvoke $r1.<gov.nist.javax.sip.header.StatusLine: int getStatusCode()>();

        $z0 = staticinvoke <gov.nist.javax.sip.message.SIPResponse: boolean isFinalResponse(int)>($i0);

        return $z0;
    }

    public boolean match(java.lang.Object)
    {
        gov.nist.javax.sip.message.SIPResponse r0, r2;
        java.lang.Object r1;
        gov.nist.javax.sip.header.StatusLine r3, r4, $r7, $r8;
        java.lang.Class $r5, $r6;
        boolean $z0, $z1, $z2, $z3, z4;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        r1 := @parameter0: java.lang.Object;

        z4 = 1;

        if r1 != null goto label1;

        return 1;

     label1:
        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        if r1 != r0 goto label3;

        return 1;

     label3:
        r2 = (gov.nist.javax.sip.message.SIPResponse) r1;

        r3 = r2.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        $r7 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        if $r7 != null goto label4;

        if r3 == null goto label4;

        return 0;

     label4:
        r4 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        if r4 != r3 goto label5;

        $z3 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: boolean match(java.lang.Object)>(r1);

        return $z3;

     label5:
        $r8 = r2.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        $z1 = virtualinvoke r4.<gov.nist.javax.sip.header.StatusLine: boolean match(java.lang.Object)>($r8);

        if $z1 == 0 goto label6;

        $z2 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: boolean match(java.lang.Object)>(r1);

        if $z2 == 0 goto label6;

        goto label7;

     label6:
        z4 = 0;

     label7:
        return z4;
    }

    public void setReasonPhrase(java.lang.String)
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r2;
        gov.nist.javax.sip.header.StatusLine $r3, $r4, $r5;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label2;

        $r3 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        if $r3 != null goto label1;

        $r5 = new gov.nist.javax.sip.header.StatusLine;

        specialinvoke $r5.<gov.nist.javax.sip.header.StatusLine: void <init>()>();

        r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine> = $r5;

     label1:
        $r4 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        virtualinvoke $r4.<gov.nist.javax.sip.header.StatusLine: void setReasonPhrase(java.lang.String)>(r1);

        return;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Bad reason phrase");

        throw $r2;
    }

    public void setSIPVersion(java.lang.String)
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        java.lang.String r1;
        gov.nist.javax.sip.header.StatusLine $r2;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        virtualinvoke $r2.<gov.nist.javax.sip.header.StatusLine: void setSipVersion(java.lang.String)>(r1);

        return;
    }

    public void setStatusCode(int) throws java.text.ParseException
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        int i0;
        java.text.ParseException $r1;
        gov.nist.javax.sip.header.StatusLine $r2, $r3, $r4;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        i0 := @parameter0: int;

        if i0 < 100 goto label2;

        if i0 > 699 goto label2;

        $r2 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        if $r2 != null goto label1;

        $r4 = new gov.nist.javax.sip.header.StatusLine;

        specialinvoke $r4.<gov.nist.javax.sip.header.StatusLine: void <init>()>();

        r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine> = $r4;

     label1:
        $r3 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        virtualinvoke $r3.<gov.nist.javax.sip.header.StatusLine: void setStatusCode(int)>(i0);

        return;

     label2:
        $r1 = new java.text.ParseException;

        specialinvoke $r1.<java.text.ParseException: void <init>(java.lang.String,int)>("bad status code", 0);

        throw $r1;
    }

    public void setStatusLine(gov.nist.javax.sip.header.StatusLine)
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        gov.nist.javax.sip.header.StatusLine r1;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        r1 := @parameter0: gov.nist.javax.sip.header.StatusLine;

        r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine> = r1;

        return;
    }

    public java.lang.String toString()
    {
        gov.nist.javax.sip.message.SIPResponse r0;
        gov.nist.javax.sip.header.StatusLine $r2, $r4;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r7, $r9;

        r0 := @this: gov.nist.javax.sip.message.SIPResponse;

        $r2 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        if $r2 != null goto label1;

        return "";

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.StatusLine statusLine>;

        $r5 = virtualinvoke $r4.<gov.nist.javax.sip.header.StatusLine: java.lang.String encode()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String encode()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }
}
