public class gov.nist.javax.sip.parser.CallInfoParser extends gov.nist.javax.sip.parser.ParametersParser
{

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.CallInfoParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.CallInfoParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.CallInfoParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.CallInfoParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void <init>(java.lang.String)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.CallInfoParser r0;
        boolean $z0, $z1, $z4;
        gov.nist.javax.sip.header.CallInfoList $r1;
        gov.nist.core.LexerCore $r2, $r3, $r5, $r8, $r10, $r11, $r12, $r14, $r15, $r16, $r18, $r21, $r23, $r26;
        gov.nist.javax.sip.parser.Lexer $r6, $r19;
        gov.nist.javax.sip.address.GenericURI $r7, $r20;
        char $c0, $c1;
        java.lang.Throwable $r24;
        gov.nist.javax.sip.header.CallInfo r27, r29;
        gov.nist.javax.sip.parser.URLParser r28, r30;

        r0 := @this: gov.nist.javax.sip.parser.CallInfoParser;

        $z0 = <gov.nist.javax.sip.parser.CallInfoParser: boolean debug>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.CallInfoParser: void dbg_enter(java.lang.String)>("CallInfoParser.parse");

     label01:
        $r1 = new gov.nist.javax.sip.header.CallInfoList;

        specialinvoke $r1.<gov.nist.javax.sip.header.CallInfoList: void <init>()>();

     label02:
        virtualinvoke r0.<gov.nist.javax.sip.parser.CallInfoParser: void headerName(int)>(2099);

     label03:
        $r26 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        $c1 = virtualinvoke $r26.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c1 == 10 goto label07;

        r27 = new gov.nist.javax.sip.header.CallInfo;

        specialinvoke r27.<gov.nist.javax.sip.header.CallInfo: void <init>()>();

        virtualinvoke r27.<gov.nist.javax.sip.header.CallInfo: void setHeaderName(java.lang.String)>("Call-Info");

        $r2 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r2.<gov.nist.core.LexerCore: void SPorHT()>();

        $r3 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r3.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(60);

        r28 = new gov.nist.javax.sip.parser.URLParser;

        $r5 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        $r6 = (gov.nist.javax.sip.parser.Lexer) $r5;

        specialinvoke r28.<gov.nist.javax.sip.parser.URLParser: void <init>(gov.nist.javax.sip.parser.Lexer)>($r6);

        $r7 = virtualinvoke r28.<gov.nist.javax.sip.parser.URLParser: gov.nist.javax.sip.address.GenericURI uriReference(boolean)>(1);

        virtualinvoke r27.<gov.nist.javax.sip.header.CallInfo: void setInfo(javax.sip.address.URI)>($r7);

        $r8 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r8.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(62);

        $r10 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r10.<gov.nist.core.LexerCore: void SPorHT()>();

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void parse(gov.nist.javax.sip.header.ParametersHeader)>(r27);

        virtualinvoke $r1.<gov.nist.javax.sip.header.CallInfoList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r27);

     label04:
        $r11 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        $c0 = virtualinvoke $r11.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c0 != 44 goto label06;

        $r12 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r12.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(44);

        $r14 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r14.<gov.nist.core.LexerCore: void SPorHT()>();

        r29 = new gov.nist.javax.sip.header.CallInfo;

        specialinvoke r29.<gov.nist.javax.sip.header.CallInfo: void <init>()>();

        $r15 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r15.<gov.nist.core.LexerCore: void SPorHT()>();

        $r16 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r16.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(60);

        r30 = new gov.nist.javax.sip.parser.URLParser;

        $r18 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        $r19 = (gov.nist.javax.sip.parser.Lexer) $r18;

        specialinvoke r30.<gov.nist.javax.sip.parser.URLParser: void <init>(gov.nist.javax.sip.parser.Lexer)>($r19);

        $r20 = virtualinvoke r30.<gov.nist.javax.sip.parser.URLParser: gov.nist.javax.sip.address.GenericURI uriReference(boolean)>(1);

        virtualinvoke r29.<gov.nist.javax.sip.header.CallInfo: void setInfo(javax.sip.address.URI)>($r20);

        $r21 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r21.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(62);

        $r23 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r23.<gov.nist.core.LexerCore: void SPorHT()>();

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void parse(gov.nist.javax.sip.header.ParametersHeader)>(r29);

        virtualinvoke $r1.<gov.nist.javax.sip.header.CallInfoList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r29);

     label05:
        goto label04;

     label06:
        goto label03;

     label07:
        $z1 = <gov.nist.javax.sip.parser.CallInfoParser: boolean debug>;

        if $z1 == 0 goto label08;

        virtualinvoke r0.<gov.nist.javax.sip.parser.CallInfoParser: void dbg_leave(java.lang.String)>("CallInfoParser.parse");

     label08:
        return $r1;

     label09:
        $r24 := @caughtexception;

        $z4 = <gov.nist.javax.sip.parser.CallInfoParser: boolean debug>;

        if $z4 == 0 goto label10;

        virtualinvoke r0.<gov.nist.javax.sip.parser.CallInfoParser: void dbg_leave(java.lang.String)>("CallInfoParser.parse");

     label10:
        throw $r24;

        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
    }
}
