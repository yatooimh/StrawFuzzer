public abstract class gov.nist.javax.sip.parser.ChallengeParser extends gov.nist.javax.sip.parser.HeaderParser
{

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.ChallengeParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.ChallengeParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    protected void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.ChallengeParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.ChallengeParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(java.lang.String)>(r1);

        return;
    }

    public void parse(gov.nist.javax.sip.header.AuthenticationHeader) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.ChallengeParser r0;
        gov.nist.core.Token r1;
        char c0, $c1;
        gov.nist.core.LexerCore $r2, $r3, $r5, $r6, $r8, $r9, $r10, $r11, $r13;
        java.lang.String $r7;
        java.lang.Throwable $r14;
        gov.nist.javax.sip.header.AuthenticationHeader r15;

        r0 := @this: gov.nist.javax.sip.parser.ChallengeParser;

        r15 := @parameter0: gov.nist.javax.sip.header.AuthenticationHeader;

        $r2 = r0.<gov.nist.javax.sip.parser.ChallengeParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r2.<gov.nist.core.LexerCore: void SPorHT()>();

        $r3 = r0.<gov.nist.javax.sip.parser.ChallengeParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r3.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r5 = r0.<gov.nist.javax.sip.parser.ChallengeParser: gov.nist.core.LexerCore lexer>;

        r1 = virtualinvoke $r5.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r6 = r0.<gov.nist.javax.sip.parser.ChallengeParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r6.<gov.nist.core.LexerCore: void SPorHT()>();

        $r7 = virtualinvoke r1.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r15.<gov.nist.javax.sip.header.AuthenticationHeader: void setScheme(java.lang.String)>($r7);

     label1:
        $r8 = r0.<gov.nist.javax.sip.parser.ChallengeParser: gov.nist.core.LexerCore lexer>;

        $c1 = virtualinvoke $r8.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c1 == 10 goto label5;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ChallengeParser: void parseParameter(gov.nist.javax.sip.header.AuthenticationHeader)>(r15);

        $r9 = r0.<gov.nist.javax.sip.parser.ChallengeParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r9.<gov.nist.core.LexerCore: void SPorHT()>();

        $r10 = r0.<gov.nist.javax.sip.parser.ChallengeParser: gov.nist.core.LexerCore lexer>;

        c0 = virtualinvoke $r10.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

     label2:
        if c0 == 10 goto label5;

        if c0 != 0 goto label3;

        goto label5;

     label3:
        $r11 = r0.<gov.nist.javax.sip.parser.ChallengeParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r11.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(44);

        $r13 = r0.<gov.nist.javax.sip.parser.ChallengeParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r13.<gov.nist.core.LexerCore: void SPorHT()>();

     label4:
        goto label1;

     label5:
        return;

     label6:
        $r14 := @caughtexception;

        throw $r14;

        catch java.text.ParseException from label1 to label2 with label6;
        catch java.text.ParseException from label3 to label4 with label6;
    }

    protected void parseParameter(gov.nist.javax.sip.header.AuthenticationHeader) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.ChallengeParser r0;
        boolean $z0, $z1, $z2;
        gov.nist.core.NameValue $r1;
        java.lang.Throwable $r2;
        gov.nist.javax.sip.header.AuthenticationHeader r3;

        r0 := @this: gov.nist.javax.sip.parser.ChallengeParser;

        r3 := @parameter0: gov.nist.javax.sip.header.AuthenticationHeader;

        $z0 = <gov.nist.javax.sip.parser.ChallengeParser: boolean debug>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ChallengeParser: void dbg_enter(java.lang.String)>("parseParameter");

     label1:
        $r1 = virtualinvoke r0.<gov.nist.javax.sip.parser.ChallengeParser: gov.nist.core.NameValue nameValue(char)>(61);

        virtualinvoke r3.<gov.nist.javax.sip.header.AuthenticationHeader: void setParameter(gov.nist.core.NameValue)>($r1);

     label2:
        $z1 = <gov.nist.javax.sip.parser.ChallengeParser: boolean debug>;

        if $z1 == 0 goto label3;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ChallengeParser: void dbg_leave(java.lang.String)>("parseParameter");

     label3:
        return;

     label4:
        $r2 := @caughtexception;

        $z2 = <gov.nist.javax.sip.parser.ChallengeParser: boolean debug>;

        if $z2 == 0 goto label5;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ChallengeParser: void dbg_leave(java.lang.String)>("parseParameter");

     label5:
        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
}
