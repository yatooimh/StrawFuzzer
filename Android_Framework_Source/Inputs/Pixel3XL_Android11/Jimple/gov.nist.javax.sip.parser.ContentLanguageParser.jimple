public class gov.nist.javax.sip.parser.ContentLanguageParser extends gov.nist.javax.sip.parser.HeaderParser
{

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.ContentLanguageParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.ContentLanguageParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.ContentLanguageParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.ContentLanguageParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(java.lang.String)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.ContentLanguageParser r0;
        boolean $z0, $z1, $z4;
        gov.nist.core.LexerCore $r2, $r3, $r5, $r7, $r8, $r9, $r11, $r12, $r14, $r15, $r17, $r23;
        java.lang.String $r6, $r16, $r20;
        char $c0, $c1;
        java.lang.Throwable $r18, $r19;
        java.text.ParseException $r21, r33;
        gov.nist.core.Token r24, r26;
        gov.nist.javax.sip.header.ContentLanguageList r30;
        gov.nist.javax.sip.header.ContentLanguage r31, r32;

        r0 := @this: gov.nist.javax.sip.parser.ContentLanguageParser;

        $z0 = <gov.nist.javax.sip.parser.ContentLanguageParser: boolean debug>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ContentLanguageParser: void dbg_enter(java.lang.String)>("ContentLanguageParser.parse");

     label01:
        r30 = new gov.nist.javax.sip.header.ContentLanguageList;

        specialinvoke r30.<gov.nist.javax.sip.header.ContentLanguageList: void <init>()>();

     label02:
        virtualinvoke r0.<gov.nist.javax.sip.parser.ContentLanguageParser: void headerName(int)>(2075);

     label03:
        $r23 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        $c1 = virtualinvoke $r23.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c1 == 10 goto label07;

        $r2 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r2.<gov.nist.core.LexerCore: void SPorHT()>();

        $r3 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r3.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r5 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        r24 = virtualinvoke $r5.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        r31 = new gov.nist.javax.sip.header.ContentLanguage;

        $r6 = virtualinvoke r24.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        specialinvoke r31.<gov.nist.javax.sip.header.ContentLanguage: void <init>(java.lang.String)>($r6);

        $r7 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r7.<gov.nist.core.LexerCore: void SPorHT()>();

        virtualinvoke r30.<gov.nist.javax.sip.header.ContentLanguageList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r31);

     label04:
        $r8 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        $c0 = virtualinvoke $r8.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c0 != 44 goto label06;

        $r9 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r9.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(44);

        $r11 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r11.<gov.nist.core.LexerCore: void SPorHT()>();

        $r12 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r12.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r14 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r14.<gov.nist.core.LexerCore: void SPorHT()>();

        $r15 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        r26 = virtualinvoke $r15.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        r32 = new gov.nist.javax.sip.header.ContentLanguage;

        $r16 = virtualinvoke r26.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        specialinvoke r32.<gov.nist.javax.sip.header.ContentLanguage: void <init>(java.lang.String)>($r16);

        $r17 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r17.<gov.nist.core.LexerCore: void SPorHT()>();

        virtualinvoke r30.<gov.nist.javax.sip.header.ContentLanguageList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r32);

     label05:
        goto label04;

     label06:
        goto label03;

     label07:
        $z1 = <gov.nist.javax.sip.parser.ContentLanguageParser: boolean debug>;

        if $z1 == 0 goto label08;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ContentLanguageParser: void dbg_leave(java.lang.String)>("ContentLanguageParser.parse");

     label08:
        return r30;

     label09:
        $r18 := @caughtexception;

        goto label12;

     label10:
        $r19 := @caughtexception;

     label11:
        r33 = (java.text.ParseException) $r19;

        $r20 = virtualinvoke r33.<java.text.ParseException: java.lang.String getMessage()>();

        $r21 = virtualinvoke r0.<gov.nist.javax.sip.parser.ContentLanguageParser: java.text.ParseException createParseException(java.lang.String)>($r20);

        throw $r21;

     label12:
        $z4 = <gov.nist.javax.sip.parser.ContentLanguageParser: boolean debug>;

        if $z4 == 0 goto label13;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ContentLanguageParser: void dbg_leave(java.lang.String)>("ContentLanguageParser.parse");

     label13:
        throw $r18;

        catch java.text.ParseException from label02 to label03 with label10;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.text.ParseException from label03 to label04 with label10;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.text.ParseException from label04 to label05 with label10;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label11 to label12 with label09;
    }
}
