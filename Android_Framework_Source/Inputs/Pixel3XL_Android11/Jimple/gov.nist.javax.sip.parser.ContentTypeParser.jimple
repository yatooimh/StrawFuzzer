public class gov.nist.javax.sip.parser.ContentTypeParser extends gov.nist.javax.sip.parser.ParametersParser
{

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.ContentTypeParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.ContentTypeParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.ContentTypeParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.ContentTypeParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void <init>(java.lang.String)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.ContentTypeParser r0;
        gov.nist.javax.sip.header.ContentType $r1;
        boolean $z0, $z1, $z2;
        gov.nist.core.LexerCore $r2, $r4, $r5, $r7, $r9, $r11, $r12, $r14;
        java.lang.String $r6, $r13;
        java.lang.Throwable $r16;
        gov.nist.core.Token r18, r19;

        r0 := @this: gov.nist.javax.sip.parser.ContentTypeParser;

        $r1 = new gov.nist.javax.sip.header.ContentType;

        specialinvoke $r1.<gov.nist.javax.sip.header.ContentType: void <init>()>();

        $z0 = <gov.nist.javax.sip.parser.ContentTypeParser: boolean debug>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ContentTypeParser: void dbg_enter(java.lang.String)>("ContentTypeParser.parse");

     label1:
        virtualinvoke r0.<gov.nist.javax.sip.parser.ContentTypeParser: void headerName(int)>(2086);

        $r2 = r0.<gov.nist.javax.sip.parser.ContentTypeParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r2.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r4 = r0.<gov.nist.javax.sip.parser.ContentTypeParser: gov.nist.core.LexerCore lexer>;

        r18 = virtualinvoke $r4.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r5 = r0.<gov.nist.javax.sip.parser.ContentTypeParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r5.<gov.nist.core.LexerCore: void SPorHT()>();

        $r6 = virtualinvoke r18.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke $r1.<gov.nist.javax.sip.header.ContentType: void setContentType(java.lang.String)>($r6);

        $r7 = r0.<gov.nist.javax.sip.parser.ContentTypeParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r7.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(47);

        $r9 = r0.<gov.nist.javax.sip.parser.ContentTypeParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r9.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r11 = r0.<gov.nist.javax.sip.parser.ContentTypeParser: gov.nist.core.LexerCore lexer>;

        r19 = virtualinvoke $r11.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r12 = r0.<gov.nist.javax.sip.parser.ContentTypeParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r12.<gov.nist.core.LexerCore: void SPorHT()>();

        $r13 = virtualinvoke r19.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke $r1.<gov.nist.javax.sip.header.ContentType: void setContentSubType(java.lang.String)>($r13);

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void parse(gov.nist.javax.sip.header.ParametersHeader)>($r1);

        $r14 = r0.<gov.nist.javax.sip.parser.ContentTypeParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r14.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(10);

     label2:
        $z1 = <gov.nist.javax.sip.parser.ContentTypeParser: boolean debug>;

        if $z1 == 0 goto label3;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ContentTypeParser: void dbg_leave(java.lang.String)>("ContentTypeParser.parse");

     label3:
        return $r1;

     label4:
        $r16 := @caughtexception;

        $z2 = <gov.nist.javax.sip.parser.ContentTypeParser: boolean debug>;

        if $z2 == 0 goto label5;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ContentTypeParser: void dbg_leave(java.lang.String)>("ContentTypeParser.parse");

     label5:
        throw $r16;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
}
