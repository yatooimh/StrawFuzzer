public class gov.nist.javax.sip.parser.ErrorInfoParser extends gov.nist.javax.sip.parser.ParametersParser
{

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.ErrorInfoParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.ErrorInfoParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.ErrorInfoParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.ErrorInfoParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void <init>(java.lang.String)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.ErrorInfoParser r0;
        gov.nist.javax.sip.parser.URLParser r2;
        boolean $z0, $z1, $z3;
        gov.nist.javax.sip.header.ErrorInfoList $r3;
        gov.nist.core.LexerCore $r4, $r5, $r7, $r10, $r12, $r13, $r14, $r17;
        gov.nist.javax.sip.parser.Lexer $r8;
        gov.nist.javax.sip.address.GenericURI $r9;
        char $c0, $c1;
        java.lang.Throwable $r16;
        gov.nist.javax.sip.header.ErrorInfo r18;

        r0 := @this: gov.nist.javax.sip.parser.ErrorInfoParser;

        $z0 = <gov.nist.javax.sip.parser.ErrorInfoParser: boolean debug>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ErrorInfoParser: void dbg_enter(java.lang.String)>("ErrorInfoParser.parse");

     label1:
        $r3 = new gov.nist.javax.sip.header.ErrorInfoList;

        specialinvoke $r3.<gov.nist.javax.sip.header.ErrorInfoList: void <init>()>();

     label2:
        virtualinvoke r0.<gov.nist.javax.sip.parser.ErrorInfoParser: void headerName(int)>(2058);

     label3:
        $r17 = r0.<gov.nist.javax.sip.parser.ErrorInfoParser: gov.nist.core.LexerCore lexer>;

        $c1 = virtualinvoke $r17.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c1 == 10 goto label6;

     label4:
        r18 = new gov.nist.javax.sip.header.ErrorInfo;

        specialinvoke r18.<gov.nist.javax.sip.header.ErrorInfo: void <init>()>();

        virtualinvoke r18.<gov.nist.javax.sip.header.ErrorInfo: void setHeaderName(java.lang.String)>("Error-Info");

        $r4 = r0.<gov.nist.javax.sip.parser.ErrorInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r4.<gov.nist.core.LexerCore: void SPorHT()>();

        $r5 = r0.<gov.nist.javax.sip.parser.ErrorInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r5.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(60);

        r2 = new gov.nist.javax.sip.parser.URLParser;

        $r7 = r0.<gov.nist.javax.sip.parser.ErrorInfoParser: gov.nist.core.LexerCore lexer>;

        $r8 = (gov.nist.javax.sip.parser.Lexer) $r7;

        specialinvoke r2.<gov.nist.javax.sip.parser.URLParser: void <init>(gov.nist.javax.sip.parser.Lexer)>($r8);

        $r9 = virtualinvoke r2.<gov.nist.javax.sip.parser.URLParser: gov.nist.javax.sip.address.GenericURI uriReference(boolean)>(1);

        virtualinvoke r18.<gov.nist.javax.sip.header.ErrorInfo: void setErrorInfo(javax.sip.address.URI)>($r9);

        $r10 = r0.<gov.nist.javax.sip.parser.ErrorInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r10.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(62);

        $r12 = r0.<gov.nist.javax.sip.parser.ErrorInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r12.<gov.nist.core.LexerCore: void SPorHT()>();

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void parse(gov.nist.javax.sip.header.ParametersHeader)>(r18);

        virtualinvoke $r3.<gov.nist.javax.sip.header.ErrorInfoList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r18);

        $r13 = r0.<gov.nist.javax.sip.parser.ErrorInfoParser: gov.nist.core.LexerCore lexer>;

        $c0 = virtualinvoke $r13.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c0 != 44 goto label3;

        $r14 = r0.<gov.nist.javax.sip.parser.ErrorInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r14.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(44);

     label5:
        goto label4;

     label6:
        $z1 = <gov.nist.javax.sip.parser.ErrorInfoParser: boolean debug>;

        if $z1 == 0 goto label7;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ErrorInfoParser: void dbg_leave(java.lang.String)>("ErrorInfoParser.parse");

     label7:
        return $r3;

     label8:
        $r16 := @caughtexception;

        $z3 = <gov.nist.javax.sip.parser.ErrorInfoParser: boolean debug>;

        if $z3 == 0 goto label9;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ErrorInfoParser: void dbg_leave(java.lang.String)>("ErrorInfoParser.parse");

     label9:
        throw $r16;

        catch java.lang.Throwable from label2 to label3 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
    }
}
