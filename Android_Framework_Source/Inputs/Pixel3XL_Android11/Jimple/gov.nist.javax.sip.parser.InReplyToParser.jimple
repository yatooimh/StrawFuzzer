public class gov.nist.javax.sip.parser.InReplyToParser extends gov.nist.javax.sip.parser.HeaderParser
{

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.InReplyToParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.InReplyToParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.InReplyToParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.InReplyToParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(java.lang.String)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.InReplyToParser r0;
        char c0, $c1, $c2, $c3;
        boolean $z0, $z1, $z4;
        gov.nist.javax.sip.header.InReplyToList $r1;
        gov.nist.core.LexerCore $r2, $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14, $r16, $r18, $r20, $r27, $r29, $r31, $r40, $r45;
        java.lang.String $r6, $r15, $r21, $r24, $r26, $r32, $r35, $r37;
        java.lang.Throwable $r38;
        gov.nist.javax.sip.header.InReplyTo r41, r46;
        gov.nist.core.Token r42, r43, r47, r48;
        java.lang.StringBuilder r44, r49;

        r0 := @this: gov.nist.javax.sip.parser.InReplyToParser;

        $z0 = <gov.nist.javax.sip.parser.InReplyToParser: boolean debug>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.InReplyToParser: void dbg_enter(java.lang.String)>("InReplyToParser.parse");

     label01:
        $r1 = new gov.nist.javax.sip.header.InReplyToList;

        specialinvoke $r1.<gov.nist.javax.sip.header.InReplyToList: void <init>()>();

     label02:
        virtualinvoke r0.<gov.nist.javax.sip.parser.InReplyToParser: void headerName(int)>(2059);

     label03:
        $r40 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        $c2 = virtualinvoke $r40.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c2 == 10 goto label15;

        r41 = new gov.nist.javax.sip.header.InReplyTo;

        specialinvoke r41.<gov.nist.javax.sip.header.InReplyTo: void <init>()>();

        virtualinvoke r41.<gov.nist.javax.sip.header.InReplyTo: void setHeaderName(java.lang.String)>("In-Reply-To");

        $r2 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r2.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r4 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        r42 = virtualinvoke $r4.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r5 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        c0 = virtualinvoke $r5.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

     label04:
        if c0 != 64 goto label07;

     label05:
        $r27 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r27.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(64);

        $r29 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r29.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r31 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        r43 = virtualinvoke $r31.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        r44 = new java.lang.StringBuilder;

        specialinvoke r44.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke r42.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r35 = virtualinvoke r43.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r41.<gov.nist.javax.sip.header.InReplyTo: void setCallId(java.lang.String)>($r37);

     label06:
        goto label08;

     label07:
        $r6 = virtualinvoke r42.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r41.<gov.nist.javax.sip.header.InReplyTo: void setCallId(java.lang.String)>($r6);

     label08:
        $r7 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r7.<gov.nist.core.LexerCore: void SPorHT()>();

        virtualinvoke $r1.<gov.nist.javax.sip.header.InReplyToList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r41);

     label09:
        $r45 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        $c3 = virtualinvoke $r45.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c3 != 44 goto label14;

        $r8 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r8.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(44);

        $r10 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r10.<gov.nist.core.LexerCore: void SPorHT()>();

        r46 = new gov.nist.javax.sip.header.InReplyTo;

        specialinvoke r46.<gov.nist.javax.sip.header.InReplyTo: void <init>()>();

        $r11 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r11.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r13 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        r47 = virtualinvoke $r13.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r14 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        $c1 = virtualinvoke $r14.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c1 != 64 goto label11;

        $r16 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r16.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(64);

        $r18 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r18.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r20 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        r48 = virtualinvoke $r20.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        r49 = new java.lang.StringBuilder;

        specialinvoke r49.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke r47.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r24 = virtualinvoke r48.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r46.<gov.nist.javax.sip.header.InReplyTo: void setCallId(java.lang.String)>($r26);

     label10:
        goto label12;

     label11:
        $r15 = virtualinvoke r47.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r46.<gov.nist.javax.sip.header.InReplyTo: void setCallId(java.lang.String)>($r15);

     label12:
        virtualinvoke $r1.<gov.nist.javax.sip.header.InReplyToList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r46);

     label13:
        goto label09;

     label14:
        goto label03;

     label15:
        $z1 = <gov.nist.javax.sip.parser.InReplyToParser: boolean debug>;

        if $z1 == 0 goto label16;

        virtualinvoke r0.<gov.nist.javax.sip.parser.InReplyToParser: void dbg_leave(java.lang.String)>("InReplyToParser.parse");

     label16:
        return $r1;

     label17:
        $r38 := @caughtexception;

        $z4 = <gov.nist.javax.sip.parser.InReplyToParser: boolean debug>;

        if $z4 == 0 goto label18;

        virtualinvoke r0.<gov.nist.javax.sip.parser.InReplyToParser: void dbg_leave(java.lang.String)>("InReplyToParser.parse");

     label18:
        throw $r38;

        catch java.lang.Throwable from label02 to label03 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label08 to label09 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
    }
}
