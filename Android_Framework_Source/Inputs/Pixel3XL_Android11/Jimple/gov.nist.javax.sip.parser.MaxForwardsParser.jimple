public class gov.nist.javax.sip.parser.MaxForwardsParser extends gov.nist.javax.sip.parser.HeaderParser
{

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.MaxForwardsParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.MaxForwardsParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.MaxForwardsParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.MaxForwardsParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(java.lang.String)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.MaxForwardsParser r0;
        boolean $z0, $z1, $z2;
        gov.nist.core.LexerCore $r1, $r3, $r4;
        java.lang.String $r2, $r8, $r11;
        int $i0;
        java.lang.Throwable $r6, $r7, $r10;
        java.text.ParseException $r9, $r12;
        gov.nist.javax.sip.header.MaxForwards r17;
        java.lang.NumberFormatException r18;
        javax.sip.InvalidArgumentException r19;

        r0 := @this: gov.nist.javax.sip.parser.MaxForwardsParser;

        $z0 = <gov.nist.javax.sip.parser.MaxForwardsParser: boolean debug>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.MaxForwardsParser: void dbg_enter(java.lang.String)>("MaxForwardsParser.enter");

     label01:
        r17 = new gov.nist.javax.sip.header.MaxForwards;

        specialinvoke r17.<gov.nist.javax.sip.header.MaxForwards: void <init>()>();

        virtualinvoke r0.<gov.nist.javax.sip.parser.MaxForwardsParser: void headerName(int)>(2079);

        $r1 = r0.<gov.nist.javax.sip.parser.MaxForwardsParser: gov.nist.core.LexerCore lexer>;

        $r2 = virtualinvoke $r1.<gov.nist.core.LexerCore: java.lang.String number()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        virtualinvoke r17.<gov.nist.javax.sip.header.MaxForwards: void setMaxForwards(int)>($i0);

        $r3 = r0.<gov.nist.javax.sip.parser.MaxForwardsParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r3.<gov.nist.core.LexerCore: void SPorHT()>();

        $r4 = r0.<gov.nist.javax.sip.parser.MaxForwardsParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r4.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(10);

     label02:
        $z1 = <gov.nist.javax.sip.parser.MaxForwardsParser: boolean debug>;

        if $z1 == 0 goto label03;

        virtualinvoke r0.<gov.nist.javax.sip.parser.MaxForwardsParser: void dbg_leave(java.lang.String)>("MaxForwardsParser.leave");

     label03:
        return r17;

     label04:
        $r6 := @caughtexception;

        goto label09;

     label05:
        $r7 := @caughtexception;

     label06:
        r18 = (java.lang.NumberFormatException) $r7;

        $r8 = virtualinvoke r18.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        $r9 = virtualinvoke r0.<gov.nist.javax.sip.parser.MaxForwardsParser: java.text.ParseException createParseException(java.lang.String)>($r8);

        throw $r9;

     label07:
        $r10 := @caughtexception;

     label08:
        r19 = (javax.sip.InvalidArgumentException) $r10;

        $r11 = virtualinvoke r19.<javax.sip.InvalidArgumentException: java.lang.String getMessage()>();

        $r12 = virtualinvoke r0.<gov.nist.javax.sip.parser.MaxForwardsParser: java.text.ParseException createParseException(java.lang.String)>($r11);

        throw $r12;

     label09:
        $z2 = <gov.nist.javax.sip.parser.MaxForwardsParser: boolean debug>;

        if $z2 == 0 goto label10;

        virtualinvoke r0.<gov.nist.javax.sip.parser.MaxForwardsParser: void dbg_leave(java.lang.String)>("MaxForwardsParser.leave");

     label10:
        throw $r6;

        catch javax.sip.InvalidArgumentException from label01 to label02 with label07;
        catch java.lang.NumberFormatException from label01 to label02 with label05;
        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label06 to label07 with label04;
        catch java.lang.Throwable from label08 to label09 with label04;
    }
}
