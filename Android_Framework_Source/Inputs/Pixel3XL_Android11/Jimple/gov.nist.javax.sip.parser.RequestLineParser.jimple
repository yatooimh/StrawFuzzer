public class gov.nist.javax.sip.parser.RequestLineParser extends gov.nist.javax.sip.parser.Parser
{

    public void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.RequestLineParser r0;
        gov.nist.javax.sip.parser.Lexer r1;
        gov.nist.core.LexerCore $r2;

        r0 := @this: gov.nist.javax.sip.parser.RequestLineParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.Parser: void <init>()>();

        r0.<gov.nist.javax.sip.parser.RequestLineParser: gov.nist.core.LexerCore lexer> = r1;

        $r2 = r0.<gov.nist.javax.sip.parser.RequestLineParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r2.<gov.nist.core.LexerCore: void selectLexer(java.lang.String)>("method_keywordLexer");

        return;
    }

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.RequestLineParser r0;
        java.lang.String r1;
        gov.nist.javax.sip.parser.Lexer $r2;

        r0 := @this: gov.nist.javax.sip.parser.RequestLineParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.Parser: void <init>()>();

        $r2 = new gov.nist.javax.sip.parser.Lexer;

        specialinvoke $r2.<gov.nist.javax.sip.parser.Lexer: void <init>(java.lang.String,java.lang.String)>("method_keywordLexer", r1);

        r0.<gov.nist.javax.sip.parser.RequestLineParser: gov.nist.core.LexerCore lexer> = $r2;

        return;
    }

    public static void main(java.lang.String[]) throws java.text.ParseException
    {
        java.lang.String[] r0, r10;
        java.io.PrintStream r1;
        int $i0, i1;
        gov.nist.javax.sip.parser.RequestLineParser $r3;
        java.lang.String $r4, $r7, $r9;
        java.lang.StringBuilder $r5;
        gov.nist.javax.sip.header.RequestLine r11;

        r10 := @parameter0: java.lang.String[];

        r0 = newarray (java.lang.String)[9];

        r0[0] = "REGISTER sip:192.168.0.68 SIP/2.0\n";

        r0[1] = "REGISTER sip:company.com SIP/2.0\n";

        r0[2] = "INVITE sip:3660@166.35.231.140 SIP/2.0\n";

        r0[3] = "INVITE sip:user@company.com SIP/2.0\n";

        r0[4] = "REGISTER sip:[2001::1]:5060;transport=tcp SIP/2.0\n";

        r0[5] = "REGISTER sip:[2002:800:700:600:30:4:6:1]:5060;transport=udp SIP/2.0\n";

        r0[6] = "REGISTER sip:[3ffe:800:700::30:4:6:1]:5060;transport=tls SIP/2.0\n";

        r0[7] = "REGISTER sip:[2001:720:1710:0:201:29ff:fe21:f403]:5060;transport=udp SIP/2.0\n";

        r0[8] = "OPTIONS sip:135.180.130.133 SIP/2.0\n";

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label2;

        $r3 = new gov.nist.javax.sip.parser.RequestLineParser;

        $r4 = r0[i1];

        specialinvoke $r3.<gov.nist.javax.sip.parser.RequestLineParser: void <init>(java.lang.String)>($r4);

        r11 = virtualinvoke $r3.<gov.nist.javax.sip.parser.RequestLineParser: gov.nist.javax.sip.header.RequestLine parse()>();

        r1 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("encoded = ");

        $r7 = virtualinvoke r11.<gov.nist.javax.sip.header.RequestLine: java.lang.String encode()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintStream: void println(java.lang.String)>($r9);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public gov.nist.javax.sip.header.RequestLine parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.RequestLineParser r0;
        boolean $z0, $z1, $z2;
        gov.nist.core.LexerCore $r1, $r2, $r4, $r5, $r7, $r8;
        gov.nist.javax.sip.parser.Lexer $r3;
        java.lang.String $r6, r12;
        java.lang.Throwable $r10;
        gov.nist.javax.sip.header.RequestLine r11;
        gov.nist.javax.sip.parser.URLParser r13;
        gov.nist.javax.sip.address.GenericURI r14;

        r0 := @this: gov.nist.javax.sip.parser.RequestLineParser;

        $z0 = <gov.nist.javax.sip.parser.RequestLineParser: boolean debug>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.parser.RequestLineParser: void dbg_enter(java.lang.String)>("parse");

     label1:
        r11 = new gov.nist.javax.sip.header.RequestLine;

        specialinvoke r11.<gov.nist.javax.sip.header.RequestLine: void <init>()>();

        r12 = virtualinvoke r0.<gov.nist.javax.sip.parser.RequestLineParser: java.lang.String method()>();

        $r1 = r0.<gov.nist.javax.sip.parser.RequestLineParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r1.<gov.nist.core.LexerCore: void SPorHT()>();

        virtualinvoke r11.<gov.nist.javax.sip.header.RequestLine: void setMethod(java.lang.String)>(r12);

        $r2 = r0.<gov.nist.javax.sip.parser.RequestLineParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r2.<gov.nist.core.LexerCore: void selectLexer(java.lang.String)>("sip_urlLexer");

        r13 = new gov.nist.javax.sip.parser.URLParser;

        $r3 = virtualinvoke r0.<gov.nist.javax.sip.parser.RequestLineParser: gov.nist.javax.sip.parser.Lexer getLexer()>();

        specialinvoke r13.<gov.nist.javax.sip.parser.URLParser: void <init>(gov.nist.javax.sip.parser.Lexer)>($r3);

        r14 = virtualinvoke r13.<gov.nist.javax.sip.parser.URLParser: gov.nist.javax.sip.address.GenericURI uriReference(boolean)>(1);

        $r4 = r0.<gov.nist.javax.sip.parser.RequestLineParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r4.<gov.nist.core.LexerCore: void SPorHT()>();

        virtualinvoke r11.<gov.nist.javax.sip.header.RequestLine: void setUri(javax.sip.address.URI)>(r14);

        $r5 = r0.<gov.nist.javax.sip.parser.RequestLineParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r5.<gov.nist.core.LexerCore: void selectLexer(java.lang.String)>("request_lineLexer");

        $r6 = virtualinvoke r0.<gov.nist.javax.sip.parser.RequestLineParser: java.lang.String sipVersion()>();

        virtualinvoke r11.<gov.nist.javax.sip.header.RequestLine: void setSipVersion(java.lang.String)>($r6);

        $r7 = r0.<gov.nist.javax.sip.parser.RequestLineParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r7.<gov.nist.core.LexerCore: void SPorHT()>();

        $r8 = r0.<gov.nist.javax.sip.parser.RequestLineParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r8.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(10);

     label2:
        $z1 = <gov.nist.javax.sip.parser.RequestLineParser: boolean debug>;

        if $z1 == 0 goto label3;

        virtualinvoke r0.<gov.nist.javax.sip.parser.RequestLineParser: void dbg_leave(java.lang.String)>("parse");

     label3:
        return r11;

     label4:
        $r10 := @caughtexception;

        $z2 = <gov.nist.javax.sip.parser.RequestLineParser: boolean debug>;

        if $z2 == 0 goto label5;

        virtualinvoke r0.<gov.nist.javax.sip.parser.RequestLineParser: void dbg_leave(java.lang.String)>("parse");

     label5:
        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label4;
    }
}
