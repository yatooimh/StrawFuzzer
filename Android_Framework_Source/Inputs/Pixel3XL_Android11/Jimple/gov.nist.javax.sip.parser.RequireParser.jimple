public class gov.nist.javax.sip.parser.RequireParser extends gov.nist.javax.sip.parser.HeaderParser
{

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.RequireParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.RequireParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.RequireParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.RequireParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(java.lang.String)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.RequireParser r0;
        gov.nist.javax.sip.header.RequireList $r1;
        boolean $z0, $z1, $z4;
        gov.nist.core.LexerCore $r2, $r4, $r7, $r8, $r9, $r11, $r12, $r14, $r17, $r20;
        gov.nist.core.Token $r5, $r15;
        java.lang.String $r6, $r16;
        char $c0, $c1;
        java.lang.Throwable $r18;
        gov.nist.javax.sip.header.Require r21, r22;

        r0 := @this: gov.nist.javax.sip.parser.RequireParser;

        $r1 = new gov.nist.javax.sip.header.RequireList;

        specialinvoke $r1.<gov.nist.javax.sip.header.RequireList: void <init>()>();

        $z0 = <gov.nist.javax.sip.parser.RequireParser: boolean debug>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.parser.RequireParser: void dbg_enter(java.lang.String)>("RequireParser.parse");

     label1:
        virtualinvoke r0.<gov.nist.javax.sip.parser.RequireParser: void headerName(int)>(2089);

     label2:
        $r20 = r0.<gov.nist.javax.sip.parser.RequireParser: gov.nist.core.LexerCore lexer>;

        $c1 = virtualinvoke $r20.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c1 == 10 goto label6;

        r21 = new gov.nist.javax.sip.header.Require;

        specialinvoke r21.<gov.nist.javax.sip.header.Require: void <init>()>();

        virtualinvoke r21.<gov.nist.javax.sip.header.Require: void setHeaderName(java.lang.String)>("Require");

        $r2 = r0.<gov.nist.javax.sip.parser.RequireParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r2.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r4 = r0.<gov.nist.javax.sip.parser.RequireParser: gov.nist.core.LexerCore lexer>;

        $r5 = virtualinvoke $r4.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r6 = virtualinvoke $r5.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r21.<gov.nist.javax.sip.header.Require: void setOptionTag(java.lang.String)>($r6);

        $r7 = r0.<gov.nist.javax.sip.parser.RequireParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r7.<gov.nist.core.LexerCore: void SPorHT()>();

        virtualinvoke $r1.<gov.nist.javax.sip.header.RequireList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r21);

     label3:
        $r8 = r0.<gov.nist.javax.sip.parser.RequireParser: gov.nist.core.LexerCore lexer>;

        $c0 = virtualinvoke $r8.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c0 != 44 goto label5;

        $r9 = r0.<gov.nist.javax.sip.parser.RequireParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r9.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(44);

        $r11 = r0.<gov.nist.javax.sip.parser.RequireParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r11.<gov.nist.core.LexerCore: void SPorHT()>();

        r22 = new gov.nist.javax.sip.header.Require;

        specialinvoke r22.<gov.nist.javax.sip.header.Require: void <init>()>();

        $r12 = r0.<gov.nist.javax.sip.parser.RequireParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r12.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r14 = r0.<gov.nist.javax.sip.parser.RequireParser: gov.nist.core.LexerCore lexer>;

        $r15 = virtualinvoke $r14.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r16 = virtualinvoke $r15.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r22.<gov.nist.javax.sip.header.Require: void setOptionTag(java.lang.String)>($r16);

        $r17 = r0.<gov.nist.javax.sip.parser.RequireParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r17.<gov.nist.core.LexerCore: void SPorHT()>();

        virtualinvoke $r1.<gov.nist.javax.sip.header.RequireList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r22);

     label4:
        goto label3;

     label5:
        goto label2;

     label6:
        $z1 = <gov.nist.javax.sip.parser.RequireParser: boolean debug>;

        if $z1 == 0 goto label7;

        virtualinvoke r0.<gov.nist.javax.sip.parser.RequireParser: void dbg_leave(java.lang.String)>("RequireParser.parse");

     label7:
        return $r1;

     label8:
        $r18 := @caughtexception;

        $z4 = <gov.nist.javax.sip.parser.RequireParser: boolean debug>;

        if $z4 == 0 goto label9;

        virtualinvoke r0.<gov.nist.javax.sip.parser.RequireParser: void dbg_leave(java.lang.String)>("RequireParser.parse");

     label9:
        throw $r18;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label2 to label3 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
    }
}
