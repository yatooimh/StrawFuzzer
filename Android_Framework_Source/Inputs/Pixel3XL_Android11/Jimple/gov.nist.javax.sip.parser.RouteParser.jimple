public class gov.nist.javax.sip.parser.RouteParser extends gov.nist.javax.sip.parser.AddressParametersParser
{

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.RouteParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.RouteParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.AddressParametersParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.RouteParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.RouteParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.AddressParametersParser: void <init>(java.lang.String)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.RouteParser r0;
        char c0;
        gov.nist.javax.sip.header.RouteList $r2;
        boolean $z0, $z2, $z3;
        gov.nist.core.LexerCore $r3, $r5, $r6, $r8, $r10, $r12, $r15, $r16;
        java.text.ParseException $r9;
        java.lang.Throwable $r13;
        gov.nist.javax.sip.header.Route r14;

        r0 := @this: gov.nist.javax.sip.parser.RouteParser;

        $r2 = new gov.nist.javax.sip.header.RouteList;

        specialinvoke $r2.<gov.nist.javax.sip.header.RouteList: void <init>()>();

        $z0 = <gov.nist.javax.sip.parser.RouteParser: boolean debug>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.RouteParser: void dbg_enter(java.lang.String)>("parse");

     label01:
        $r3 = r0.<gov.nist.javax.sip.parser.RouteParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r3.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(2070);

        $r5 = r0.<gov.nist.javax.sip.parser.RouteParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r5.<gov.nist.core.LexerCore: void SPorHT()>();

        $r6 = r0.<gov.nist.javax.sip.parser.RouteParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r6.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(58);

        $r8 = r0.<gov.nist.javax.sip.parser.RouteParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r8.<gov.nist.core.LexerCore: void SPorHT()>();

     label02:
        r14 = new gov.nist.javax.sip.header.Route;

        specialinvoke r14.<gov.nist.javax.sip.header.Route: void <init>()>();

        specialinvoke r0.<gov.nist.javax.sip.parser.AddressParametersParser: void parse(gov.nist.javax.sip.header.AddressParametersHeader)>(r14);

        virtualinvoke $r2.<gov.nist.javax.sip.header.RouteList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r14);

        $r15 = r0.<gov.nist.javax.sip.parser.RouteParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r15.<gov.nist.core.LexerCore: void SPorHT()>();

        $r16 = r0.<gov.nist.javax.sip.parser.RouteParser: gov.nist.core.LexerCore lexer>;

        c0 = virtualinvoke $r16.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

     label03:
        if c0 != 44 goto label06;

     label04:
        $r10 = r0.<gov.nist.javax.sip.parser.RouteParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r10.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(44);

        $r12 = r0.<gov.nist.javax.sip.parser.RouteParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r12.<gov.nist.core.LexerCore: void SPorHT()>();

     label05:
        goto label02;

     label06:
        if c0 != 10 goto label08;

        $z2 = <gov.nist.javax.sip.parser.RouteParser: boolean debug>;

        if $z2 == 0 goto label07;

        virtualinvoke r0.<gov.nist.javax.sip.parser.RouteParser: void dbg_leave(java.lang.String)>("parse");

     label07:
        return $r2;

     label08:
        $r9 = virtualinvoke r0.<gov.nist.javax.sip.parser.RouteParser: java.text.ParseException createParseException(java.lang.String)>("unexpected char");

        throw $r9;

     label09:
        $r13 := @caughtexception;

        $z3 = <gov.nist.javax.sip.parser.RouteParser: boolean debug>;

        if $z3 == 0 goto label10;

        virtualinvoke r0.<gov.nist.javax.sip.parser.RouteParser: void dbg_leave(java.lang.String)>("parse");

     label10:
        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label02 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label08 to label09 with label09;
    }
}
