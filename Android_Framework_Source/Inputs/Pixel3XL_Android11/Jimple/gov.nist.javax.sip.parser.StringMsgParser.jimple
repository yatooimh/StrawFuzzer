public class gov.nist.javax.sip.parser.StringMsgParser extends java.lang.Object
{
    private static boolean computeContentLengthFromMessage;
    private gov.nist.javax.sip.parser.ParseExceptionListener parseExceptionListener;
    private java.lang.String rawStringMessage;
    protected boolean readBody;
    private boolean strict;

    static void <clinit>()
    {
        <gov.nist.javax.sip.parser.StringMsgParser: boolean computeContentLengthFromMessage> = 0;

        return;
    }

    public void <init>()
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<gov.nist.javax.sip.parser.StringMsgParser: boolean readBody> = 1;

        return;
    }

    public void <init>(gov.nist.javax.sip.parser.ParseExceptionListener)
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        gov.nist.javax.sip.parser.ParseExceptionListener r1;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.ParseExceptionListener;

        specialinvoke r0.<gov.nist.javax.sip.parser.StringMsgParser: void <init>()>();

        r0.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.parser.ParseExceptionListener parseExceptionListener> = r1;

        return;
    }

    public static void main(java.lang.String[]) throws java.text.ParseException
    {
        java.lang.String[] r0, $r3;
        java.lang.Thread $r1;
        gov.nist.javax.sip.parser.StringMsgParser$1ParserThread $r2;
        int i0;

        r0 := @parameter0: java.lang.String[];

        i0 = 0;

     label1:
        if i0 >= 20 goto label2;

        $r1 = new java.lang.Thread;

        $r2 = new gov.nist.javax.sip.parser.StringMsgParser$1ParserThread;

        $r3 = newarray (java.lang.String)[3];

        $r3[0] = "SIP/2.0 200 OK\r\nTo: \"The Little Blister\" <sip:LittleGuy@there.com>;tag=469bc066\r\nFrom: \"The Master Blaster\" <sip:BigGuy@here.com>;tag=11\r\nVia: SIP/2.0/UDP 139.10.134.246:5060;branch=z9hG4bK8b0a86f6_1030c7d18e0_17;received=139.10.134.246\r\nCall-ID: 1030c7d18ae_a97b0b_b@8b0a86f6\r\nCSeq: 1 SUBSCRIBE\r\nContact: <sip:172.16.11.162:5070>\r\nContent-Length: 0\r\n\r\n";

        $r3[1] = "SIP/2.0 180 Ringing\r\nVia: SIP/2.0/UDP 172.18.1.29:5060;branch=z9hG4bK43fc10fb4446d55fc5c8f969607991f4\r\nTo: \"0440\" <sip:0440@212.209.220.131>;tag=2600\r\nFrom: \"Andreas\" <sip:andreas@e-horizon.se>;tag=8524\r\nCall-ID: f51a1851c5f570606140f14c8eb64fd3@172.18.1.29\r\nCSeq: 1 INVITE\r\nMax-Forwards: 70\r\nRecord-Route: <sip:212.209.220.131:5060>\r\nContent-Length: 0\r\n\r\n";

        $r3[2] = "REGISTER sip:nist.gov SIP/2.0\r\nVia: SIP/2.0/UDP 129.6.55.182:14826\r\nMax-Forwards: 70\r\nFrom: <sip:mranga@nist.gov>;tag=6fcd5c7ace8b4a45acf0f0cd539b168b;epid=0d4c418ddf\r\nTo: <sip:mranga@nist.gov>\r\nCall-ID: c5679907eb954a8da9f9dceb282d7230@129.6.55.182\r\nCSeq: 1 REGISTER\r\nContact: <sip:129.6.55.182:14826>;methods=\"INVITE, MESSAGE, INFO, SUBSCRIBE, OPTIONS, BYE, CANCEL, NOTIFY, ACK, REFER\"\r\nUser-Agent: RTC/(Microsoft RTC)\r\nEvent:  registration\r\nAllow-Events: presence\r\nContent-Length: 0\r\n\r\nINVITE sip:littleguy@there.com:5060 SIP/2.0\r\nVia: SIP/2.0/UDP 65.243.118.100:5050\r\nFrom: M. Ranganathan  <sip:M.Ranganathan@sipbakeoff.com>;tag=1234\r\nTo: \"littleguy@there.com\" <sip:littleguy@there.com:5060> \r\nCall-ID: Q2AboBsaGn9!?x6@sipbakeoff.com \r\nCSeq: 1 INVITE \r\nContent-Length: 247\r\n\r\nv=0\r\no=4855 13760799956958020 13760799956958020 IN IP4  129.6.55.78\r\ns=mysession session\r\np=+46 8 52018010\r\nc=IN IP4  129.6.55.78\r\nt=0 0\r\nm=audio 6022 RTP/AVP 0 4 18\r\na=rtpmap:0 PCMU/8000\r\na=rtpmap:4 G723/8000\r\na=rtpmap:18 G729A/8000\r\na=ptime:20\r\n";

        specialinvoke $r2.<gov.nist.javax.sip.parser.StringMsgParser$1ParserThread: void <init>(java.lang.String[])>($r3);

        specialinvoke $r1.<java.lang.Thread: void <init>(java.lang.Runnable)>($r2);

        virtualinvoke $r1.<java.lang.Thread: void start()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    private gov.nist.javax.sip.message.SIPMessage processFirstLine(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        boolean $z0;
        java.lang.String $r4, $r9, $r12, $r14, r15;
        gov.nist.javax.sip.message.SIPResponse $r5, r32;
        gov.nist.javax.sip.message.SIPRequest $r10, r29;
        java.lang.Throwable $r11, $r13;
        gov.nist.javax.sip.header.RequestLine r19;
        gov.nist.javax.sip.parser.ParseExceptionListener r21, r28;
        gov.nist.javax.sip.message.SIPMessage r22;
        gov.nist.javax.sip.header.StatusLine r26;
        java.lang.StringBuilder r30, r33;
        gov.nist.javax.sip.parser.RequestLineParser r31;
        gov.nist.javax.sip.parser.StatusLineParser r34;
        java.text.ParseException r35, r36;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r15 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r15.<java.lang.String: boolean startsWith(java.lang.String)>("SIP/2.0");

        if $z0 != 0 goto label06;

        r29 = new gov.nist.javax.sip.message.SIPRequest;

        specialinvoke r29.<gov.nist.javax.sip.message.SIPRequest: void <init>()>();

     label01:
        r31 = new gov.nist.javax.sip.parser.RequestLineParser;

        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r9 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r31.<gov.nist.javax.sip.parser.RequestLineParser: void <init>(java.lang.String)>($r9);

        r19 = virtualinvoke r31.<gov.nist.javax.sip.parser.RequestLineParser: gov.nist.javax.sip.header.RequestLine parse()>();

        $r10 = (gov.nist.javax.sip.message.SIPRequest) r29;

        virtualinvoke $r10.<gov.nist.javax.sip.message.SIPRequest: void setRequestLine(gov.nist.javax.sip.header.RequestLine)>(r19);

     label02:
        goto label04;

     label03:
        $r13 := @caughtexception;

        r21 = r0.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.parser.ParseExceptionListener parseExceptionListener>;

        if r21 == null goto label05;

        $r14 = r0.<gov.nist.javax.sip.parser.StringMsgParser: java.lang.String rawStringMessage>;

        r35 = (java.text.ParseException) $r13;

        interfaceinvoke r21.<gov.nist.javax.sip.parser.ParseExceptionListener: void handleException(java.text.ParseException,gov.nist.javax.sip.message.SIPMessage,java.lang.Class,java.lang.String,java.lang.String)>(r35, r29, class "Lgov/nist/javax/sip/header/RequestLine;", r15, $r14);

     label04:
        r22 = r29;

        goto label10;

     label05:
        throw $r13;

     label06:
        r32 = new gov.nist.javax.sip.message.SIPResponse;

        specialinvoke r32.<gov.nist.javax.sip.message.SIPResponse: void <init>()>();

     label07:
        r34 = new gov.nist.javax.sip.parser.StatusLineParser;

        r33 = new java.lang.StringBuilder;

        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r4 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r34.<gov.nist.javax.sip.parser.StatusLineParser: void <init>(java.lang.String)>($r4);

        r26 = virtualinvoke r34.<gov.nist.javax.sip.parser.StatusLineParser: gov.nist.javax.sip.header.StatusLine parse()>();

        $r5 = (gov.nist.javax.sip.message.SIPResponse) r32;

        virtualinvoke $r5.<gov.nist.javax.sip.message.SIPResponse: void setStatusLine(gov.nist.javax.sip.header.StatusLine)>(r26);

     label08:
        r22 = r32;

        goto label10;

     label09:
        $r11 := @caughtexception;

        r28 = r0.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.parser.ParseExceptionListener parseExceptionListener>;

        if r28 == null goto label11;

        $r12 = r0.<gov.nist.javax.sip.parser.StringMsgParser: java.lang.String rawStringMessage>;

        r36 = (java.text.ParseException) $r11;

        interfaceinvoke r28.<gov.nist.javax.sip.parser.ParseExceptionListener: void handleException(java.text.ParseException,gov.nist.javax.sip.message.SIPMessage,java.lang.Class,java.lang.String,java.lang.String)>(r36, r32, class "Lgov/nist/javax/sip/header/StatusLine;", r15, $r12);

        r22 = r32;

     label10:
        return r22;

     label11:
        throw $r11;

        catch java.text.ParseException from label01 to label02 with label03;
        catch java.text.ParseException from label07 to label08 with label09;
    }

    private void processHeader(java.lang.String, gov.nist.javax.sip.message.SIPMessage) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1, $r6, $r10, $r11, $r14;
        gov.nist.javax.sip.message.SIPMessage r2;
        int $i0;
        gov.nist.javax.sip.header.SIPHeader $r7;
        java.lang.Throwable $r8, $r13;
        gov.nist.javax.sip.parser.ParseExceptionListener $r9, $r12, $r15;
        gov.nist.javax.sip.parser.HeaderParser r17;
        java.lang.Class r18;
        java.lang.StringBuilder r20;
        java.text.ParseException r21, r22;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: gov.nist.javax.sip.message.SIPMessage;

        if r1 == null goto label8;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        goto label8;

     label1:
        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r6 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        r17 = staticinvoke <gov.nist.javax.sip.parser.ParserFactory: gov.nist.javax.sip.parser.HeaderParser createParser(java.lang.String)>($r6);

     label2:
        $r7 = virtualinvoke r17.<gov.nist.javax.sip.parser.HeaderParser: gov.nist.javax.sip.header.SIPHeader parse()>();

        virtualinvoke r2.<gov.nist.javax.sip.message.SIPMessage: void attachHeader(gov.nist.javax.sip.header.SIPHeader,boolean)>($r7, 0);

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        $r9 = r0.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.parser.ParseExceptionListener parseExceptionListener>;

        if $r9 == null goto label6;

        $r10 = staticinvoke <gov.nist.javax.sip.parser.Lexer: java.lang.String getHeaderName(java.lang.String)>(r1);

        r18 = staticinvoke <gov.nist.javax.sip.header.NameMap: java.lang.Class getClassFromName(java.lang.String)>($r10);

        if r18 != null goto label5;

        r18 = class "Lgov/nist/javax/sip/header/ExtensionHeaderImpl;";

        goto label5;

     label5:
        $r12 = r0.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.parser.ParseExceptionListener parseExceptionListener>;

        $r11 = r0.<gov.nist.javax.sip.parser.StringMsgParser: java.lang.String rawStringMessage>;

        r21 = (java.text.ParseException) $r8;

        interfaceinvoke $r12.<gov.nist.javax.sip.parser.ParseExceptionListener: void handleException(java.text.ParseException,gov.nist.javax.sip.message.SIPMessage,java.lang.Class,java.lang.String,java.lang.String)>(r21, r2, r18, r1, $r11);

     label6:
        return;

     label7:
        $r13 := @caughtexception;

        $r15 = r0.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.parser.ParseExceptionListener parseExceptionListener>;

        $r14 = r0.<gov.nist.javax.sip.parser.StringMsgParser: java.lang.String rawStringMessage>;

        r22 = (java.text.ParseException) $r13;

        interfaceinvoke $r15.<gov.nist.javax.sip.parser.ParseExceptionListener: void handleException(java.text.ParseException,gov.nist.javax.sip.message.SIPMessage,java.lang.Class,java.lang.String,java.lang.String)>(r22, r2, null, r1, $r14);

        return;

     label8:
        return;

        catch java.text.ParseException from label1 to label2 with label7;
        catch java.text.ParseException from label2 to label3 with label4;
    }

    public static void setComputeContentLengthFromMessage(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <gov.nist.javax.sip.parser.StringMsgParser: boolean computeContentLengthFromMessage> = z0;

        return;
    }

    private java.lang.String trimEndOfLine(java.lang.String)
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1, $r2;
        int $i0, $i1, $i2, $i3, i5;
        char $c4;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return r1;

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        i5 = $i0 - 1;

     label2:
        if i5 < 0 goto label3;

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i5);

        if $c4 > 32 goto label3;

        i5 = i5 + -1;

        goto label2;

     label3:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        if i5 != $i2 goto label4;

        return r1;

     label4:
        if i5 != -1 goto label5;

        return "";

     label5:
        $i3 = i5 + 1;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        return $r2;
    }

    public gov.nist.javax.sip.address.AddressImpl parseAddress(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1;
        gov.nist.javax.sip.parser.AddressParser $r2;
        gov.nist.javax.sip.address.AddressImpl $r3;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

        $r2 = new gov.nist.javax.sip.parser.AddressParser;

        specialinvoke $r2.<gov.nist.javax.sip.parser.AddressParser: void <init>(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<gov.nist.javax.sip.parser.AddressParser: gov.nist.javax.sip.address.AddressImpl address(boolean)>(1);

        return $r3;
    }

    public gov.nist.core.Host parseHost(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1;
        gov.nist.core.HostNameParser $r2;
        gov.nist.javax.sip.parser.Lexer $r3;
        gov.nist.core.Host $r4;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

        $r2 = new gov.nist.core.HostNameParser;

        $r3 = new gov.nist.javax.sip.parser.Lexer;

        specialinvoke $r3.<gov.nist.javax.sip.parser.Lexer: void <init>(java.lang.String,java.lang.String)>("charLexer", r1);

        specialinvoke $r2.<gov.nist.core.HostNameParser: void <init>(gov.nist.core.LexerCore)>($r3);

        $r4 = virtualinvoke $r2.<gov.nist.core.HostNameParser: gov.nist.core.Host host()>();

        return $r4;
    }

    public gov.nist.javax.sip.header.SIPHeader parseSIPHeader(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        char c0, $c2, c7;
        int $i1, $i3, i4, i5, i6, i9, i10, i11;
        java.lang.StringBuffer $r2;
        java.lang.String $r3, $r6, $r9, r14;
        java.text.ParseException $r7, $r13;
        gov.nist.javax.sip.header.SIPHeader $r8;
        java.lang.ArrayIndexOutOfBoundsException $r12;
        boolean z0, z1;
        gov.nist.javax.sip.parser.HeaderParser r15;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r14 := @parameter0: java.lang.String;

        i4 = 0;

        $i1 = virtualinvoke r14.<java.lang.String: int length()>();

        i5 = $i1 - 1;

     label01:
        i6 = i5;

     label02:
        $c2 = virtualinvoke r14.<java.lang.String: char charAt(int)>(i4);

        if $c2 > 32 goto label04;

     label03:
        i4 = i4 + 1;

        goto label01;

     label04:
        c7 = virtualinvoke r14.<java.lang.String: char charAt(int)>(i6);

     label05:
        if c7 > 32 goto label06;

        i6 = i6 + -1;

        goto label04;

     label06:
        $r2 = new java.lang.StringBuffer;

        $i3 = i6 + 1;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(int)>($i3);

        z0 = 0;

        i9 = i4;

        i10 = i4;

     label07:
        if i10 > i6 goto label13;

        c0 = virtualinvoke r14.<java.lang.String: char charAt(int)>(i10);

        if c0 == 13 goto label11;

        if c0 != 10 goto label08;

        goto label11;

     label08:
        i11 = i9;

        z1 = z0;

        if z0 == 0 goto label12;

        z1 = 0;

        if c0 == 32 goto label10;

        if c0 != 9 goto label09;

        goto label10;

     label09:
        i11 = i10;

        goto label12;

     label10:
        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        i11 = i10 + 1;

        goto label12;

     label11:
        i11 = i9;

        z1 = z0;

        if z0 != 0 goto label12;

        $r9 = virtualinvoke r14.<java.lang.String: java.lang.String substring(int,int)>(i9, i10);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        z1 = 1;

        i11 = i9;

     label12:
        i10 = i10 + 1;

        i9 = i11;

        z0 = z1;

        goto label07;

     label13:
        $r3 = virtualinvoke r14.<java.lang.String: java.lang.String substring(int,int)>(i9, i10);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r6 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        r15 = staticinvoke <gov.nist.javax.sip.parser.ParserFactory: gov.nist.javax.sip.parser.HeaderParser createParser(java.lang.String)>($r6);

        if r15 == null goto label14;

        $r8 = virtualinvoke r15.<gov.nist.javax.sip.parser.HeaderParser: gov.nist.javax.sip.header.SIPHeader parse()>();

        return $r8;

     label14:
        $r7 = new java.text.ParseException;

        specialinvoke $r7.<java.text.ParseException: void <init>(java.lang.String,int)>("could not create parser", 0);

        throw $r7;

     label15:
        $r12 := @caughtexception;

        $r13 = new java.text.ParseException;

        specialinvoke $r13.<java.text.ParseException: void <init>(java.lang.String,int)>("Empty header.", 0);

        throw $r13;

        catch java.lang.ArrayIndexOutOfBoundsException from label02 to label03 with label15;
        catch java.lang.ArrayIndexOutOfBoundsException from label04 to label05 with label15;
    }

    public gov.nist.javax.sip.message.SIPMessage parseSIPMessage(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        char c0, $c9, c11, c14, c15, c17, $c19;
        java.lang.String r1, $r2, $r6, $r12, r18, r19, r21;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i10, i12, i13, i16, i18, $i20;
        java.text.ParseException $r3, $r11;
        java.lang.StringBuilder $r4;
        javax.sip.header.ContentLengthHeader $r8, $r9, $r10, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, z5, $z6;
        java.lang.ArrayIndexOutOfBoundsException $r14, $r15;
        java.lang.Throwable $r16, $r17;
        gov.nist.javax.sip.message.SIPMessage r20, r22;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r18 := @parameter0: java.lang.String;

        if r18 == null goto label28;

        $i1 = virtualinvoke r18.<java.lang.String: int length()>();

        if $i1 != 0 goto label01;

        goto label28;

     label01:
        r0.<gov.nist.javax.sip.parser.StringMsgParser: java.lang.String rawStringMessage> = r18;

        i10 = 0;

     label02:
        c11 = virtualinvoke r18.<java.lang.String: char charAt(int)>(i10);

     label03:
        if c11 >= 32 goto label04;

        i10 = i10 + 1;

        goto label02;

     label04:
        r19 = null;

        z5 = 1;

        r20 = null;

     label05:
        i12 = i10;

        i13 = i10;

     label06:
        c14 = virtualinvoke r18.<java.lang.String: char charAt(int)>(i10);

     label07:
        c15 = c14;

        i16 = i10;

     label08:
        if c15 == 13 goto label11;

        if c15 == 10 goto label11;

        i16 = i16 + 1;

        i12 = i16;

        i13 = i16;

     label09:
        c0 = virtualinvoke r18.<java.lang.String: char charAt(int)>(i16);

     label10:
        c15 = c0;

        goto label08;

     label11:
        $r2 = virtualinvoke r18.<java.lang.String: java.lang.String substring(int,int)>(i10, i16);

        r1 = specialinvoke r0.<gov.nist.javax.sip.parser.StringMsgParser: java.lang.String trimEndOfLine(java.lang.String)>($r2);

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i2 != 0 goto label12;

        r21 = r19;

        r22 = r20;

        if r19 == null goto label17;

        specialinvoke r0.<gov.nist.javax.sip.parser.StringMsgParser: void processHeader(java.lang.String,gov.nist.javax.sip.message.SIPMessage)>(r19, r20);

        r21 = r19;

        r22 = r20;

        goto label17;

     label12:
        if z5 == 0 goto label13;

        r22 = specialinvoke r0.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.message.SIPMessage processFirstLine(java.lang.String)>(r1);

        r21 = r19;

        goto label17;

     label13:
        c17 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        if c17 == 9 goto label16;

        if c17 != 32 goto label14;

        goto label16;

     label14:
        if r19 == null goto label15;

        specialinvoke r0.<gov.nist.javax.sip.parser.StringMsgParser: void processHeader(java.lang.String,gov.nist.javax.sip.message.SIPMessage)>(r19, r20);

     label15:
        r21 = r1;

        r22 = r20;

        goto label17;

     label16:
        if r19 == null goto label19;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        r21 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r22 = r20;

     label17:
        i18 = i16;

        $c19 = virtualinvoke r18.<java.lang.String: char charAt(int)>(i16);

        if $c19 != 13 goto label18;

        i18 = i16;

        $i6 = virtualinvoke r18.<java.lang.String: int length()>();

        $i7 = i16 + 1;

        if $i6 <= $i7 goto label18;

        i18 = i16;

        $i8 = i16 + 1;

        $c9 = virtualinvoke r18.<java.lang.String: char charAt(int)>($i8);

        if $c9 != 10 goto label18;

        i18 = i16 + 1;

     label18:
        i13 = i18 + 1;

        z5 = 0;

        i10 = i13;

        r19 = r21;

        r20 = r22;

        $i20 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i20 > 0 goto label05;

        r20 = r22;

        goto label22;

     label19:
        $r3 = new java.text.ParseException;

        specialinvoke $r3.<java.text.ParseException: void <init>(java.lang.String,int)>("Bad header continuation.", 0);

        throw $r3;

     label20:
        $r16 := @caughtexception;

        i13 = i12;

        goto label22;

     label21:
        $r15 := @caughtexception;

     label22:
        virtualinvoke r20.<gov.nist.javax.sip.message.SIPMessage: void setSize(int)>(i13);

        $z6 = r0.<gov.nist.javax.sip.parser.StringMsgParser: boolean readBody>;

        if $z6 == 0 goto label25;

        $r8 = virtualinvoke r20.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLengthHeader getContentLength()>();

        if $r8 == null goto label25;

        $r9 = virtualinvoke r20.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLengthHeader getContentLength()>();

        $i3 = interfaceinvoke $r9.<javax.sip.header.ContentLengthHeader: int getContentLength()>();

        if $i3 == 0 goto label23;

        $r12 = virtualinvoke r18.<java.lang.String: java.lang.String substring(int)>(i13);

        $z3 = r0.<gov.nist.javax.sip.parser.StringMsgParser: boolean strict>;

        $z4 = <gov.nist.javax.sip.parser.StringMsgParser: boolean computeContentLengthFromMessage>;

        $r13 = virtualinvoke r20.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLengthHeader getContentLength()>();

        $i5 = interfaceinvoke $r13.<javax.sip.header.ContentLengthHeader: int getContentLength()>();

        virtualinvoke r20.<gov.nist.javax.sip.message.SIPMessage: void setMessageContent(java.lang.String,boolean,boolean,int)>($r12, $z3, $z4, $i5);

        goto label25;

     label23:
        $z0 = <gov.nist.javax.sip.parser.StringMsgParser: boolean computeContentLengthFromMessage>;

        if $z0 != 0 goto label25;

        $r10 = virtualinvoke r20.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLengthHeader getContentLength()>();

        $i4 = interfaceinvoke $r10.<javax.sip.header.ContentLengthHeader: int getContentLength()>();

        if $i4 != 0 goto label25;

        $z1 = virtualinvoke r18.<java.lang.String: boolean endsWith(java.lang.String)>("\r\n\r\n");

        if $z1 != 0 goto label25;

        $z2 = r0.<gov.nist.javax.sip.parser.StringMsgParser: boolean strict>;

        if $z2 != 0 goto label24;

        goto label25;

     label24:
        $r11 = new java.text.ParseException;

        specialinvoke $r11.<java.text.ParseException: void <init>(java.lang.String,int)>("Extraneous characters at the end of the message ", i13);

        throw $r11;

     label25:
        return r20;

     label26:
        $r17 := @caughtexception;

        return null;

     label27:
        $r14 := @caughtexception;

        return null;

     label28:
        return null;

        catch java.lang.ArrayIndexOutOfBoundsException from label02 to label03 with label27;
        catch java.lang.StringIndexOutOfBoundsException from label02 to label03 with label26;
        catch java.lang.ArrayIndexOutOfBoundsException from label06 to label07 with label21;
        catch java.lang.StringIndexOutOfBoundsException from label06 to label07 with label20;
        catch java.lang.ArrayIndexOutOfBoundsException from label09 to label10 with label21;
        catch java.lang.StringIndexOutOfBoundsException from label09 to label10 with label20;
    }

    public gov.nist.javax.sip.message.SIPMessage parseSIPMessage(byte[]) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        byte b0, $b10, b12, $b14, $b17;
        java.lang.String r1, $r2, $r6, r16, r18;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i11, i13, i16, $i18, i19;
        java.text.ParseException $r3, $r8, $r13;
        java.lang.StringBuilder $r4;
        boolean $z0, $z1, z2;
        javax.sip.header.ContentLengthHeader $r9, $r10, $r11;
        java.lang.Throwable $r12;
        byte[] r14, r22;
        gov.nist.javax.sip.message.SIPMessage r15, r19;
        char c15;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r14 := @parameter0: byte[];

        if r14 == null goto label21;

        $i1 = lengthof r14;

        if $i1 != 0 goto label01;

        goto label21;

     label01:
        i11 = 0;

     label02:
        b12 = r14[i11];

        if b12 >= 32 goto label03;

        i11 = i11 + 1;

        goto label02;

     label03:
        z2 = 1;

        r15 = null;

        r16 = null;

     label04:
        i13 = i11;

     label05:
        $b14 = r14[i13];

        if $b14 == 13 goto label06;

        b0 = r14[i13];

        if b0 == 10 goto label06;

        i13 = i13 + 1;

        goto label05;

     label06:
        $r2 = new java.lang.String;

        $i2 = i13 - i11;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r14, i11, $i2, "UTF-8");

     label07:
        r1 = specialinvoke r0.<gov.nist.javax.sip.parser.StringMsgParser: java.lang.String trimEndOfLine(java.lang.String)>($r2);

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i3 != 0 goto label08;

        r18 = r16;

        r19 = r15;

        if r16 == null goto label13;

        r18 = r16;

        r19 = r15;

        if r15 == null goto label13;

        specialinvoke r0.<gov.nist.javax.sip.parser.StringMsgParser: void processHeader(java.lang.String,gov.nist.javax.sip.message.SIPMessage)>(r16, r15);

        r18 = r16;

        r19 = r15;

        goto label13;

     label08:
        if z2 == 0 goto label09;

        r19 = specialinvoke r0.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.message.SIPMessage processFirstLine(java.lang.String)>(r1);

        r18 = r16;

        goto label13;

     label09:
        c15 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        if c15 == 9 goto label12;

        if c15 != 32 goto label10;

        goto label12;

     label10:
        if r16 == null goto label11;

        if r15 == null goto label11;

        specialinvoke r0.<gov.nist.javax.sip.parser.StringMsgParser: void processHeader(java.lang.String,gov.nist.javax.sip.message.SIPMessage)>(r16, r15);

     label11:
        r18 = r1;

        r19 = r15;

        goto label13;

     label12:
        if r16 == null goto label16;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        r18 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r19 = r15;

     label13:
        i16 = i13;

        $b17 = r14[i13];

        if $b17 != 13 goto label14;

        i16 = i13;

        $i8 = lengthof r14;

        $i7 = i13 + 1;

        if $i8 <= $i7 goto label14;

        i16 = i13;

        $i9 = i13 + 1;

        $b10 = r14[$i9];

        if $b10 != 10 goto label14;

        i16 = i13 + 1;

     label14:
        i11 = i16 + 1;

        z2 = 0;

        $i18 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i18 > 0 goto label15;

        goto label18;

     label15:
        r16 = r18;

        r15 = r19;

        goto label04;

     label16:
        $r3 = new java.text.ParseException;

        specialinvoke $r3.<java.text.ParseException: void <init>(java.lang.String,int)>("Bad header continuation.", 0);

        throw $r3;

     label17:
        $r12 := @caughtexception;

        $r13 = new java.text.ParseException;

        specialinvoke $r13.<java.text.ParseException: void <init>(java.lang.String,int)>("Bad message encoding!", 0);

        throw $r13;

     label18:
        if r19 == null goto label20;

        virtualinvoke r19.<gov.nist.javax.sip.message.SIPMessage: void setSize(int)>(i11);

        $z0 = r0.<gov.nist.javax.sip.parser.StringMsgParser: boolean readBody>;

        if $z0 == 0 goto label19;

        $r9 = virtualinvoke r19.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLengthHeader getContentLength()>();

        if $r9 == null goto label19;

        $r10 = virtualinvoke r19.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLengthHeader getContentLength()>();

        $i4 = interfaceinvoke $r10.<javax.sip.header.ContentLengthHeader: int getContentLength()>();

        if $i4 == 0 goto label19;

        $i5 = lengthof r14;

        i19 = $i5 - i11;

        r22 = newarray (byte)[i19];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r14, i11, r22, 0, i19);

        $z1 = <gov.nist.javax.sip.parser.StringMsgParser: boolean computeContentLengthFromMessage>;

        $r11 = virtualinvoke r19.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLengthHeader getContentLength()>();

        $i6 = interfaceinvoke $r11.<javax.sip.header.ContentLengthHeader: int getContentLength()>();

        virtualinvoke r19.<gov.nist.javax.sip.message.SIPMessage: void setMessageContent(byte[],boolean,int)>(r22, $z1, $i6);

     label19:
        return r19;

     label20:
        $r8 = new java.text.ParseException;

        specialinvoke $r8.<java.text.ParseException: void <init>(java.lang.String,int)>("Bad message", 0);

        throw $r8;

     label21:
        return null;

        catch java.io.UnsupportedEncodingException from label06 to label07 with label17;
    }

    public gov.nist.javax.sip.header.RequestLine parseSIPRequestLine(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1, $r7;
        java.lang.StringBuilder $r3;
        gov.nist.javax.sip.parser.RequestLineParser $r6;
        gov.nist.javax.sip.header.RequestLine $r8;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r6 = new gov.nist.javax.sip.parser.RequestLineParser;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<gov.nist.javax.sip.parser.RequestLineParser: void <init>(java.lang.String)>($r7);

        $r8 = virtualinvoke $r6.<gov.nist.javax.sip.parser.RequestLineParser: gov.nist.javax.sip.header.RequestLine parse()>();

        return $r8;
    }

    public gov.nist.javax.sip.header.StatusLine parseSIPStatusLine(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1, $r7;
        java.lang.StringBuilder $r3;
        gov.nist.javax.sip.parser.StatusLineParser $r6;
        gov.nist.javax.sip.header.StatusLine $r8;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r6 = new gov.nist.javax.sip.parser.StatusLineParser;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<gov.nist.javax.sip.parser.StatusLineParser: void <init>(java.lang.String)>($r7);

        $r8 = virtualinvoke $r6.<gov.nist.javax.sip.parser.StatusLineParser: gov.nist.javax.sip.header.StatusLine parse()>();

        return $r8;
    }

    public gov.nist.javax.sip.address.SipUri parseSIPUrl(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1, $r7;
        java.lang.ClassCastException $r2;
        java.lang.StringBuilder $r3;
        java.text.ParseException $r6;
        gov.nist.javax.sip.parser.URLParser r8;
        gov.nist.javax.sip.address.SipUri r9;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

     label1:
        r8 = new gov.nist.javax.sip.parser.URLParser;

        specialinvoke r8.<gov.nist.javax.sip.parser.URLParser: void <init>(java.lang.String)>(r1);

        r9 = virtualinvoke r8.<gov.nist.javax.sip.parser.URLParser: gov.nist.javax.sip.address.SipUri sipURL(boolean)>(1);

     label2:
        return r9;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Not a SIP URL ");

        $r6 = new java.text.ParseException;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.text.ParseException: void <init>(java.lang.String,int)>($r7, 0);

        throw $r6;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public gov.nist.javax.sip.address.TelephoneNumber parseTelephoneNumber(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1;
        gov.nist.javax.sip.parser.URLParser $r2;
        gov.nist.javax.sip.address.TelephoneNumber $r3;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

        $r2 = new gov.nist.javax.sip.parser.URLParser;

        specialinvoke $r2.<gov.nist.javax.sip.parser.URLParser: void <init>(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<gov.nist.javax.sip.parser.URLParser: gov.nist.javax.sip.address.TelephoneNumber parseTelephoneNumber(boolean)>(1);

        return $r3;
    }

    public gov.nist.javax.sip.address.GenericURI parseUrl(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1;
        gov.nist.javax.sip.parser.URLParser $r2;
        gov.nist.javax.sip.address.GenericURI $r3;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

        $r2 = new gov.nist.javax.sip.parser.URLParser;

        specialinvoke $r2.<gov.nist.javax.sip.parser.URLParser: void <init>(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<gov.nist.javax.sip.parser.URLParser: gov.nist.javax.sip.address.GenericURI parse()>();

        return $r3;
    }

    public void setParseExceptionListener(gov.nist.javax.sip.parser.ParseExceptionListener)
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        gov.nist.javax.sip.parser.ParseExceptionListener r1;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.ParseExceptionListener;

        r0.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.parser.ParseExceptionListener parseExceptionListener> = r1;

        return;
    }

    public void setStrict(boolean)
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        boolean z0;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        z0 := @parameter0: boolean;

        r0.<gov.nist.javax.sip.parser.StringMsgParser: boolean strict> = z0;

        return;
    }
}
