public class gov.nist.javax.sip.parser.UserAgentParser extends gov.nist.javax.sip.parser.HeaderParser
{

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.UserAgentParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.UserAgentParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.UserAgentParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.UserAgentParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(java.lang.String)>(r1);

        return;
    }

    public static void main(java.lang.String[]) throws java.text.ParseException
    {
        gov.nist.javax.sip.header.UserAgent r0;
        int $i0, i1;
        gov.nist.javax.sip.parser.UserAgentParser $r2;
        java.lang.String $r3, $r7, $r9;
        gov.nist.javax.sip.header.SIPHeader $r4;
        java.lang.StringBuilder $r5;
        java.lang.String[] r10, r11;
        java.io.PrintStream r13;

        r10 := @parameter0: java.lang.String[];

        r11 = newarray (java.lang.String)[6];

        r11[0] = "User-Agent: Softphone/Beta1.5 \n";

        r11[1] = "User-Agent:Nist/Beta1 (beta version) \n";

        r11[2] = "User-Agent: Nist UA (beta version)\n";

        r11[3] = "User-Agent: Nist1.0/Beta2 Ubi/vers.1.0 (very cool) \n";

        r11[4] = "User-Agent: SJphone/1.60.299a/L (SJ Labs)\n";

        r11[5] = "User-Agent: sipXecs/3.5.11 sipXecs/sipxbridge (Linux)\n";

        i1 = 0;

     label1:
        $i0 = lengthof r11;

        if i1 >= $i0 goto label2;

        $r2 = new gov.nist.javax.sip.parser.UserAgentParser;

        $r3 = r11[i1];

        specialinvoke $r2.<gov.nist.javax.sip.parser.UserAgentParser: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke $r2.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.javax.sip.header.SIPHeader parse()>();

        r0 = (gov.nist.javax.sip.header.UserAgent) $r4;

        r13 = <java.lang.System: java.io.PrintStream out>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("encoded = ");

        $r7 = virtualinvoke r0.<gov.nist.javax.sip.header.UserAgent: java.lang.String encode()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r13.<java.io.PrintStream: void println(java.lang.String)>($r9);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.UserAgentParser r0;
        boolean $z0, $z1, $z2;
        gov.nist.javax.sip.header.UserAgent $r1;
        gov.nist.core.LexerCore $r2, $r4, $r5, $r6, $r8, $r10, $r13, $r16, $r20, $r32;
        char $c0, $c1, $c2, $c3;
        java.text.ParseException $r3, $r9, $r17;
        gov.nist.javax.sip.parser.Lexer $r7, $r15;
        gov.nist.core.Token $r11;
        int $i4;
        java.lang.String $r12, $r24, r27, r29, r31;
        java.lang.Throwable $r25;
        java.lang.StringBuilder r28;
        java.lang.StringBuffer r30;

        r0 := @this: gov.nist.javax.sip.parser.UserAgentParser;

        $z0 = <gov.nist.javax.sip.parser.UserAgentParser: boolean debug>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.UserAgentParser: void dbg_enter(java.lang.String)>("UserAgentParser.parse");

     label01:
        $r1 = new gov.nist.javax.sip.header.UserAgent;

        specialinvoke $r1.<gov.nist.javax.sip.header.UserAgent: void <init>()>();

     label02:
        virtualinvoke r0.<gov.nist.javax.sip.parser.UserAgentParser: void headerName(int)>(2065);

        $r2 = r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.core.LexerCore lexer>;

        $c0 = virtualinvoke $r2.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c0 == 10 goto label18;

     label03:
        $r4 = r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.core.LexerCore lexer>;

        $c1 = virtualinvoke $r4.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c1 == 10 goto label16;

        $r5 = r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.core.LexerCore lexer>;

        $c2 = virtualinvoke $r5.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c2 == 0 goto label16;

        $r6 = r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.core.LexerCore lexer>;

        $c3 = virtualinvoke $r6.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c3 != 40 goto label05;

        $r20 = r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.core.LexerCore lexer>;

        r27 = virtualinvoke $r20.<gov.nist.core.LexerCore: java.lang.String comment()>();

        r28 = new java.lang.StringBuilder;

        specialinvoke r28.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r27);

        virtualinvoke r28.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r24 = virtualinvoke r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<gov.nist.javax.sip.header.UserAgent: void addProductToken(java.lang.String)>($r24);

     label04:
        goto label13;

     label05:
        $r7 = virtualinvoke r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.javax.sip.parser.Lexer getLexer()>();

        virtualinvoke $r7.<gov.nist.javax.sip.parser.Lexer: void SPorHT()>();

        $r8 = r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.core.LexerCore lexer>;

        r29 = virtualinvoke $r8.<gov.nist.core.LexerCore: java.lang.String byteStringNoSlash()>();

     label06:
        if r29 == null goto label15;

     label07:
        r30 = new java.lang.StringBuffer;

        specialinvoke r30.<java.lang.StringBuffer: void <init>(java.lang.String)>(r29);

        $r10 = r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.core.LexerCore lexer>;

        $r11 = virtualinvoke $r10.<gov.nist.core.LexerCore: gov.nist.core.Token peekNextToken()>();

        $i4 = virtualinvoke $r11.<gov.nist.core.Token: int getTokenType()>();

        if $i4 != 47 goto label12;

        $r13 = r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r13.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(47);

        $r15 = virtualinvoke r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.javax.sip.parser.Lexer getLexer()>();

        virtualinvoke $r15.<gov.nist.javax.sip.parser.Lexer: void SPorHT()>();

        $r16 = r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.core.LexerCore lexer>;

        r31 = virtualinvoke $r16.<gov.nist.core.LexerCore: java.lang.String byteStringNoSlash()>();

     label08:
        if r31 == null goto label11;

     label09:
        virtualinvoke r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        virtualinvoke r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r31);

     label10:
        goto label12;

     label11:
        $r17 = virtualinvoke r0.<gov.nist.javax.sip.parser.UserAgentParser: java.text.ParseException createParseException(java.lang.String)>("Expected product version");

        throw $r17;

     label12:
        $r12 = virtualinvoke r30.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<gov.nist.javax.sip.header.UserAgent: void addProductToken(java.lang.String)>($r12);

     label13:
        $r32 = r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r32.<gov.nist.core.LexerCore: void SPorHT()>();

     label14:
        goto label03;

     label15:
        $r9 = virtualinvoke r0.<gov.nist.javax.sip.parser.UserAgentParser: java.text.ParseException createParseException(java.lang.String)>("Expected product string");

        throw $r9;

     label16:
        $z1 = <gov.nist.javax.sip.parser.UserAgentParser: boolean debug>;

        if $z1 == 0 goto label17;

        virtualinvoke r0.<gov.nist.javax.sip.parser.UserAgentParser: void dbg_leave(java.lang.String)>("UserAgentParser.parse");

     label17:
        return $r1;

     label18:
        $r3 = virtualinvoke r0.<gov.nist.javax.sip.parser.UserAgentParser: java.text.ParseException createParseException(java.lang.String)>("empty header");

        throw $r3;

     label19:
        $r25 := @caughtexception;

        $z2 = <gov.nist.javax.sip.parser.UserAgentParser: boolean debug>;

        if $z2 == 0 goto label20;

        virtualinvoke r0.<gov.nist.javax.sip.parser.UserAgentParser: void dbg_leave(java.lang.String)>("UserAgentParser.parse");

     label20:
        throw $r25;

        catch java.lang.Throwable from label02 to label03 with label19;
        catch java.lang.Throwable from label03 to label04 with label19;
        catch java.lang.Throwable from label05 to label06 with label19;
        catch java.lang.Throwable from label07 to label08 with label19;
        catch java.lang.Throwable from label09 to label10 with label19;
        catch java.lang.Throwable from label11 to label12 with label19;
        catch java.lang.Throwable from label12 to label13 with label19;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label15 to label16 with label19;
        catch java.lang.Throwable from label18 to label19 with label19;
    }
}
