public class gov.nist.javax.sip.parser.WarningParser extends gov.nist.javax.sip.parser.HeaderParser
{

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.WarningParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.WarningParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.WarningParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.WarningParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(java.lang.String)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.WarningParser r0;
        char c0, $c3, $c4, $c5;
        boolean $z0, $z1, $z4;
        gov.nist.core.LexerCore $r2, $r4, $r6, $r7, $r9, $r10, $r12, $r13, $r15, $r16, $r18, $r19, $r21, $r23, $r24, $r26, $r27, $r29, $r30, $r32, $r33, $r35, $r37, $r44, $r46, $r48, $r69, $r75;
        java.lang.String $r5, $r11, $r14, $r22, $r28, $r31, $r38, $r41, $r43, $r49, $r52, $r54, $r56, $r59, $r63, $r66;
        int $i1, $i2;
        java.lang.Throwable $r55, $r58, $r61, $r62, $r65;
        java.text.ParseException $r57, $r60, $r64, $r67;
        gov.nist.core.Token r71, r72, r73, r77, r78, r79;
        gov.nist.javax.sip.header.WarningList r86;
        gov.nist.javax.sip.header.Warning r87, r89;
        java.lang.StringBuilder r88, r90;
        javax.sip.InvalidArgumentException r91, r93;
        java.lang.NumberFormatException r92, r94;

        r0 := @this: gov.nist.javax.sip.parser.WarningParser;

        r86 = new gov.nist.javax.sip.header.WarningList;

        specialinvoke r86.<gov.nist.javax.sip.header.WarningList: void <init>()>();

        $z0 = <gov.nist.javax.sip.parser.WarningParser: boolean debug>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.WarningParser: void dbg_enter(java.lang.String)>("WarningParser.parse");

     label01:
        virtualinvoke r0.<gov.nist.javax.sip.parser.WarningParser: void headerName(int)>(2078);

     label02:
        $r69 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        $c4 = virtualinvoke $r69.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c4 == 10 goto label26;

        r87 = new gov.nist.javax.sip.header.Warning;

        specialinvoke r87.<gov.nist.javax.sip.header.Warning: void <init>()>();

        virtualinvoke r87.<gov.nist.javax.sip.header.Warning: void setHeaderName(java.lang.String)>("Warning");

        $r2 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r2.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r4 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        r71 = virtualinvoke $r4.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

     label03:
        $r5 = virtualinvoke r71.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        virtualinvoke r87.<gov.nist.javax.sip.header.Warning: void setCode(int)>($i1);

     label04:
        $r6 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r6.<gov.nist.core.LexerCore: void SPorHT()>();

        $r7 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r7.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r9 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        r72 = virtualinvoke $r9.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r10 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        c0 = virtualinvoke $r10.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

     label05:
        if c0 != 58 goto label08;

     label06:
        $r44 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r44.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(58);

        $r46 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r46.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r48 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        r73 = virtualinvoke $r48.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        r88 = new java.lang.StringBuilder;

        specialinvoke r88.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke r72.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        virtualinvoke r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r52 = virtualinvoke r73.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r54 = virtualinvoke r88.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r87.<gov.nist.javax.sip.header.Warning: void setAgent(java.lang.String)>($r54);

     label07:
        goto label09;

     label08:
        $r11 = virtualinvoke r72.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r87.<gov.nist.javax.sip.header.Warning: void setAgent(java.lang.String)>($r11);

     label09:
        $r12 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r12.<gov.nist.core.LexerCore: void SPorHT()>();

        $r13 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        $r14 = virtualinvoke $r13.<gov.nist.core.LexerCore: java.lang.String quotedString()>();

        virtualinvoke r87.<gov.nist.javax.sip.header.Warning: void setText(java.lang.String)>($r14);

        $r15 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r15.<gov.nist.core.LexerCore: void SPorHT()>();

        virtualinvoke r86.<gov.nist.javax.sip.header.WarningList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r87);

     label10:
        $r75 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        $c5 = virtualinvoke $r75.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c5 != 44 goto label21;

        $r16 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r16.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(44);

        $r18 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r18.<gov.nist.core.LexerCore: void SPorHT()>();

        r89 = new gov.nist.javax.sip.header.Warning;

        specialinvoke r89.<gov.nist.javax.sip.header.Warning: void <init>()>();

        $r19 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r19.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r21 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        r77 = virtualinvoke $r21.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

     label11:
        $r22 = virtualinvoke r77.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r22);

        virtualinvoke r89.<gov.nist.javax.sip.header.Warning: void setCode(int)>($i2);

     label12:
        $r23 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r23.<gov.nist.core.LexerCore: void SPorHT()>();

        $r24 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r24.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r26 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        r78 = virtualinvoke $r26.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r27 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        $c3 = virtualinvoke $r27.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c3 != 58 goto label14;

        $r33 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r33.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(58);

        $r35 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r35.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r37 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        r79 = virtualinvoke $r37.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        r90 = new java.lang.StringBuilder;

        specialinvoke r90.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke r78.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        virtualinvoke r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r41 = virtualinvoke r79.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke r90.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r89.<gov.nist.javax.sip.header.Warning: void setAgent(java.lang.String)>($r43);

     label13:
        goto label15;

     label14:
        $r28 = virtualinvoke r78.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r89.<gov.nist.javax.sip.header.Warning: void setAgent(java.lang.String)>($r28);

     label15:
        $r29 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r29.<gov.nist.core.LexerCore: void SPorHT()>();

        $r30 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        $r31 = virtualinvoke $r30.<gov.nist.core.LexerCore: java.lang.String quotedString()>();

        virtualinvoke r89.<gov.nist.javax.sip.header.Warning: void setText(java.lang.String)>($r31);

        $r32 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r32.<gov.nist.core.LexerCore: void SPorHT()>();

        virtualinvoke r86.<gov.nist.javax.sip.header.WarningList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r89);

     label16:
        goto label10;

     label17:
        $r65 := @caughtexception;

     label18:
        r91 = (javax.sip.InvalidArgumentException) $r65;

        $r66 = virtualinvoke r91.<javax.sip.InvalidArgumentException: java.lang.String getMessage()>();

        $r67 = virtualinvoke r0.<gov.nist.javax.sip.parser.WarningParser: java.text.ParseException createParseException(java.lang.String)>($r66);

        throw $r67;

     label19:
        $r62 := @caughtexception;

     label20:
        r92 = (java.lang.NumberFormatException) $r62;

        $r63 = virtualinvoke r92.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        $r64 = virtualinvoke r0.<gov.nist.javax.sip.parser.WarningParser: java.text.ParseException createParseException(java.lang.String)>($r63);

        throw $r64;

     label21:
        goto label02;

     label22:
        $r55 := @caughtexception;

     label23:
        r93 = (javax.sip.InvalidArgumentException) $r55;

        $r56 = virtualinvoke r93.<javax.sip.InvalidArgumentException: java.lang.String getMessage()>();

        $r57 = virtualinvoke r0.<gov.nist.javax.sip.parser.WarningParser: java.text.ParseException createParseException(java.lang.String)>($r56);

        throw $r57;

     label24:
        $r58 := @caughtexception;

     label25:
        r94 = (java.lang.NumberFormatException) $r58;

        $r59 = virtualinvoke r94.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        $r60 = virtualinvoke r0.<gov.nist.javax.sip.parser.WarningParser: java.text.ParseException createParseException(java.lang.String)>($r59);

        throw $r60;

     label26:
        $z1 = <gov.nist.javax.sip.parser.WarningParser: boolean debug>;

        if $z1 == 0 goto label27;

        virtualinvoke r0.<gov.nist.javax.sip.parser.WarningParser: void dbg_leave(java.lang.String)>("WarningParser.parse");

     label27:
        return r86;

     label28:
        $r61 := @caughtexception;

        $z4 = <gov.nist.javax.sip.parser.WarningParser: boolean debug>;

        if $z4 == 0 goto label29;

        virtualinvoke r0.<gov.nist.javax.sip.parser.WarningParser: void dbg_leave(java.lang.String)>("WarningParser.parse");

     label29:
        throw $r61;

        catch java.lang.Throwable from label01 to label02 with label28;
        catch java.lang.Throwable from label02 to label03 with label28;
        catch java.lang.NumberFormatException from label03 to label04 with label24;
        catch javax.sip.InvalidArgumentException from label03 to label04 with label22;
        catch java.lang.Throwable from label03 to label04 with label28;
        catch java.lang.Throwable from label04 to label05 with label28;
        catch java.lang.Throwable from label06 to label07 with label28;
        catch java.lang.Throwable from label08 to label09 with label28;
        catch java.lang.Throwable from label09 to label10 with label28;
        catch java.lang.Throwable from label10 to label11 with label28;
        catch java.lang.NumberFormatException from label11 to label12 with label19;
        catch javax.sip.InvalidArgumentException from label11 to label12 with label17;
        catch java.lang.Throwable from label11 to label12 with label28;
        catch java.lang.Throwable from label12 to label13 with label28;
        catch java.lang.Throwable from label14 to label15 with label28;
        catch java.lang.Throwable from label15 to label16 with label28;
        catch java.lang.Throwable from label18 to label19 with label28;
        catch java.lang.Throwable from label20 to label21 with label28;
        catch java.lang.Throwable from label23 to label24 with label28;
        catch java.lang.Throwable from label25 to label26 with label28;
    }
}
