abstract class gov.nist.javax.sip.parser.ims.AddressHeaderParser extends gov.nist.javax.sip.parser.HeaderParser
{

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.ims.AddressHeaderParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.ims.AddressHeaderParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    protected void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.ims.AddressHeaderParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.ims.AddressHeaderParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(java.lang.String)>(r1);

        return;
    }

    protected void parse(gov.nist.javax.sip.header.ims.AddressHeaderIms) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.ims.AddressHeaderParser r0;
        gov.nist.javax.sip.parser.AddressParser r1;
        gov.nist.javax.sip.parser.Lexer $r2;
        gov.nist.javax.sip.address.AddressImpl $r3;
        java.lang.Throwable $r4, $r5;
        gov.nist.javax.sip.header.ims.AddressHeaderIms r6;

        r0 := @this: gov.nist.javax.sip.parser.ims.AddressHeaderParser;

        r6 := @parameter0: gov.nist.javax.sip.header.ims.AddressHeaderIms;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.AddressHeaderParser: void dbg_enter(java.lang.String)>("AddressHeaderParser.parse");

     label1:
        r1 = new gov.nist.javax.sip.parser.AddressParser;

        $r2 = virtualinvoke r0.<gov.nist.javax.sip.parser.ims.AddressHeaderParser: gov.nist.javax.sip.parser.Lexer getLexer()>();

        specialinvoke r1.<gov.nist.javax.sip.parser.AddressParser: void <init>(gov.nist.javax.sip.parser.Lexer)>($r2);

        $r3 = virtualinvoke r1.<gov.nist.javax.sip.parser.AddressParser: gov.nist.javax.sip.address.AddressImpl address(boolean)>(1);

        virtualinvoke r6.<gov.nist.javax.sip.header.ims.AddressHeaderIms: void setAddress(javax.sip.address.Address)>($r3);

     label2:
        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.AddressHeaderParser: void dbg_leave(java.lang.String)>("AddressParametersParser.parse");

        return;

     label3:
        $r4 := @caughtexception;

        goto label6;

     label4:
        $r5 := @caughtexception;

     label5:
        throw $r5;

     label6:
        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.AddressHeaderParser: void dbg_leave(java.lang.String)>("AddressParametersParser.parse");

        throw $r4;

        catch java.text.ParseException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label5 to label6 with label3;
    }
}
