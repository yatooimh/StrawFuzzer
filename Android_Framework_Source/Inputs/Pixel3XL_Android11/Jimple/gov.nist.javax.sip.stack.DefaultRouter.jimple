public class gov.nist.javax.sip.stack.DefaultRouter extends java.lang.Object implements javax.sip.address.Router
{
    private javax.sip.address.Hop defaultRoute;
    private gov.nist.javax.sip.SipStackImpl sipStack;

    private void <init>()
    {
        gov.nist.javax.sip.stack.DefaultRouter r0;

        r0 := @this: gov.nist.javax.sip.stack.DefaultRouter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(javax.sip.SipStack, java.lang.String)
    {
        gov.nist.javax.sip.stack.DefaultRouter r0;
        javax.sip.SipStack r1;
        gov.nist.core.net.AddressResolver r2;
        javax.sip.address.Hop $r3;
        java.lang.Throwable $r4;
        gov.nist.javax.sip.stack.SIPTransactionStack $r5;
        gov.nist.core.StackLogger $r6;
        java.lang.String r7;
        gov.nist.javax.sip.SipStackImpl r8;
        gov.nist.javax.sip.stack.HopImpl r9;

        r0 := @this: gov.nist.javax.sip.stack.DefaultRouter;

        r1 := @parameter0: javax.sip.SipStack;

        r7 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r8 = (gov.nist.javax.sip.SipStackImpl) r1;

        r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack> = r8;

        if r7 == null goto label4;

     label1:
        r2 = virtualinvoke r8.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.net.AddressResolver getAddressResolver()>();

        r9 = new gov.nist.javax.sip.stack.HopImpl;

        specialinvoke r9.<gov.nist.javax.sip.stack.HopImpl: void <init>(java.lang.String)>(r7);

        $r3 = interfaceinvoke r2.<gov.nist.core.net.AddressResolver: javax.sip.address.Hop resolveAddress(javax.sip.address.Hop)>(r9);

        r0.<gov.nist.javax.sip.stack.DefaultRouter: javax.sip.address.Hop defaultRoute> = $r3;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = (gov.nist.javax.sip.stack.SIPTransactionStack) r1;

        $r6 = virtualinvoke $r5.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r6.<gov.nist.core.StackLogger: void logError(java.lang.String)>("Invalid default route specification - need host:port/transport");

        throw $r4;

     label4:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    private final javax.sip.address.Hop createHop(javax.sip.address.SipURI, javax.sip.message.Request)
    {
        gov.nist.javax.sip.stack.DefaultRouter r0;
        javax.sip.message.Request r1;
        boolean $z0, $z1;
        int $i0, i1;
        gov.nist.javax.sip.SipStackImpl $r2;
        gov.nist.core.net.AddressResolver $r3;
        gov.nist.javax.sip.stack.HopImpl $r4;
        javax.sip.address.Hop $r5;
        javax.sip.header.Header $r6;
        javax.sip.header.ViaHeader $r7;
        javax.sip.address.SipURI r8;
        java.lang.String r9, r10, $r11, r12;

        r0 := @this: gov.nist.javax.sip.stack.DefaultRouter;

        r8 := @parameter0: javax.sip.address.SipURI;

        r1 := @parameter1: javax.sip.message.Request;

        $z0 = interfaceinvoke r8.<javax.sip.address.SipURI: boolean isSecure()>();

        if $z0 == 0 goto label1;

        r9 = "tls";

        goto label2;

     label1:
        r9 = interfaceinvoke r8.<javax.sip.address.SipURI: java.lang.String getTransportParam()>();

     label2:
        r10 = r9;

        if r9 != null goto label3;

        $r6 = interfaceinvoke r1.<javax.sip.message.Request: javax.sip.header.Header getHeader(java.lang.String)>("Via");

        $r7 = (javax.sip.header.ViaHeader) $r6;

        r10 = interfaceinvoke $r7.<javax.sip.header.ViaHeader: java.lang.String getTransport()>();

     label3:
        $i0 = interfaceinvoke r8.<javax.sip.address.SipURI: int getPort()>();

        if $i0 == -1 goto label4;

        i1 = interfaceinvoke r8.<javax.sip.address.SipURI: int getPort()>();

        goto label6;

     label4:
        $z1 = virtualinvoke r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("tls");

        if $z1 == 0 goto label5;

        i1 = 5061;

        goto label6;

     label5:
        i1 = 5060;

     label6:
        $r11 = interfaceinvoke r8.<javax.sip.address.SipURI: java.lang.String getMAddrParam()>();

        if $r11 == null goto label7;

        r12 = interfaceinvoke r8.<javax.sip.address.SipURI: java.lang.String getMAddrParam()>();

        goto label8;

     label7:
        r12 = interfaceinvoke r8.<javax.sip.address.SipURI: java.lang.String getHost()>();

     label8:
        $r2 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r3 = virtualinvoke $r2.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.net.AddressResolver getAddressResolver()>();

        $r4 = new gov.nist.javax.sip.stack.HopImpl;

        specialinvoke $r4.<gov.nist.javax.sip.stack.HopImpl: void <init>(java.lang.String,int,java.lang.String)>(r12, i1, r10);

        $r5 = interfaceinvoke $r3.<gov.nist.core.net.AddressResolver: javax.sip.address.Hop resolveAddress(javax.sip.address.Hop)>($r4);

        return $r5;
    }

    public void fixStrictRouting(gov.nist.javax.sip.message.SIPRequest)
    {
        gov.nist.javax.sip.stack.DefaultRouter r0;
        gov.nist.javax.sip.message.SIPRequest r1;
        gov.nist.javax.sip.address.SipUri r2;
        javax.sip.header.Header $r3;
        gov.nist.javax.sip.header.Route $r4, $r9;
        javax.sip.address.Address $r5;
        javax.sip.address.URI $r6, $r8;
        gov.nist.javax.sip.address.AddressImpl $r7;
        gov.nist.javax.sip.SipStackImpl $r10, $r11;
        boolean $z1;
        java.lang.StringBuilder $r12;
        java.lang.String $r15;
        gov.nist.javax.sip.header.RouteList r16;
        gov.nist.core.StackLogger r18;

        r0 := @this: gov.nist.javax.sip.stack.DefaultRouter;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPRequest;

        r16 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RouteList getRouteHeaders()>();

        $r3 = virtualinvoke r16.<gov.nist.javax.sip.header.RouteList: javax.sip.header.Header getFirst()>();

        $r4 = (gov.nist.javax.sip.header.Route) $r3;

        $r5 = virtualinvoke $r4.<gov.nist.javax.sip.header.Route: javax.sip.address.Address getAddress()>();

        $r6 = interfaceinvoke $r5.<javax.sip.address.Address: javax.sip.address.URI getURI()>();

        r2 = (gov.nist.javax.sip.address.SipUri) $r6;

        virtualinvoke r16.<gov.nist.javax.sip.header.RouteList: void removeFirst()>();

        $r7 = new gov.nist.javax.sip.address.AddressImpl;

        specialinvoke $r7.<gov.nist.javax.sip.address.AddressImpl: void <init>()>();

        $r8 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: javax.sip.address.URI getRequestURI()>();

        virtualinvoke $r7.<gov.nist.javax.sip.address.AddressImpl: void setAddess(javax.sip.address.URI)>($r8);

        $r9 = new gov.nist.javax.sip.header.Route;

        specialinvoke $r9.<gov.nist.javax.sip.header.Route: void <init>(gov.nist.javax.sip.address.AddressImpl)>($r7);

        virtualinvoke r16.<gov.nist.javax.sip.header.RouteList: boolean add(gov.nist.javax.sip.header.SIPHeader)>($r9);

        virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: void setRequestURI(javax.sip.address.URI)>(r2);

        $r10 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z1 = virtualinvoke $r10.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label1;

        $r11 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        r18 = virtualinvoke $r11.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("post: fixStrictRouting");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r18.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r15);

     label1:
        return;
    }

    public javax.sip.address.Hop getNextHop(javax.sip.message.Request) throws javax.sip.SipException
    {
        gov.nist.javax.sip.stack.DefaultRouter r0;
        gov.nist.javax.sip.header.RouteList r1;
        java.lang.IllegalArgumentException $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        javax.sip.address.Hop $r3, $r18, $r22, $r48, r55, r59, r64;
        gov.nist.javax.sip.SipStackImpl $r4, $r7, $r8, $r10, $r11, $r17, $r19, $r29, $r30, $r40, $r45, $r46, $r56;
        gov.nist.core.StackLogger $r5, $r9, $r47, r57, r60, r62, r65;
        javax.sip.address.SipURI $r6, $r26, $r28, r54;
        java.lang.StringBuilder $r12, $r20, $r31, $r41;
        java.lang.String $r14, $r16, $r23, $r25, $r27, $r33, $r35, $r44;
        javax.sip.header.Header $r36;
        gov.nist.javax.sip.header.Route $r37;
        javax.sip.address.Address $r38;
        javax.sip.SipException $r39;
        javax.sip.message.Request r49;
        gov.nist.javax.sip.message.SIPRequest r50;
        gov.nist.javax.sip.header.RequestLine r51;
        gov.nist.javax.sip.address.GenericURI r52;
        javax.sip.address.URI r53;

        r0 := @this: gov.nist.javax.sip.stack.DefaultRouter;

        r49 := @parameter0: javax.sip.message.Request;

        r50 = (gov.nist.javax.sip.message.SIPRequest) r49;

        r51 = virtualinvoke r50.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine getRequestLine()>();

        if r51 != null goto label01;

        $r48 = r0.<gov.nist.javax.sip.stack.DefaultRouter: javax.sip.address.Hop defaultRoute>;

        return $r48;

     label01:
        r52 = virtualinvoke r51.<gov.nist.javax.sip.header.RequestLine: gov.nist.javax.sip.address.GenericURI getUri()>();

        if r52 == null goto label13;

        r1 = virtualinvoke r50.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RouteList getRouteHeaders()>();

        if r1 == null goto label05;

        $r36 = virtualinvoke r1.<gov.nist.javax.sip.header.RouteList: javax.sip.header.Header getFirst()>();

        $r37 = (gov.nist.javax.sip.header.Route) $r36;

        $r38 = virtualinvoke $r37.<gov.nist.javax.sip.header.Route: javax.sip.address.Address getAddress()>();

        r53 = interfaceinvoke $r38.<javax.sip.address.Address: javax.sip.address.URI getURI()>();

        $z6 = interfaceinvoke r53.<javax.sip.address.URI: boolean isSipURI()>();

        if $z6 == 0 goto label04;

        r54 = (javax.sip.address.SipURI) r53;

        $z7 = interfaceinvoke r54.<javax.sip.address.SipURI: boolean hasLrParam()>();

        if $z7 != 0 goto label02;

        virtualinvoke r0.<gov.nist.javax.sip.stack.DefaultRouter: void fixStrictRouting(gov.nist.javax.sip.message.SIPRequest)>(r50);

        $r45 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z8 = virtualinvoke $r45.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z8 == 0 goto label02;

        $r46 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r47 = virtualinvoke $r46.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r47.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Route post processing fixed strict routing");

     label02:
        r55 = specialinvoke r0.<gov.nist.javax.sip.stack.DefaultRouter: javax.sip.address.Hop createHop(javax.sip.address.SipURI,javax.sip.message.Request)>(r54, r49);

        $r56 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z9 = virtualinvoke $r56.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z9 == 0 goto label03;

        $r40 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        r57 = virtualinvoke $r40.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NextHop based on Route:");

        virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r55);

        $r44 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r57.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r44);

     label03:
        return r55;

     label04:
        $r39 = new javax.sip.SipException;

        specialinvoke $r39.<javax.sip.SipException: void <init>(java.lang.String)>("First Route not a SIP URI");

        throw $r39;

     label05:
        $z0 = interfaceinvoke r52.<javax.sip.address.URI: boolean isSipURI()>();

        if $z0 == 0 goto label07;

        $r26 = (javax.sip.address.SipURI) r52;

        $r27 = interfaceinvoke $r26.<javax.sip.address.SipURI: java.lang.String getMAddrParam()>();

        if $r27 == null goto label07;

        $r28 = (javax.sip.address.SipURI) r52;

        r59 = specialinvoke r0.<gov.nist.javax.sip.stack.DefaultRouter: javax.sip.address.Hop createHop(javax.sip.address.SipURI,javax.sip.message.Request)>($r28, r49);

        $r29 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z5 = virtualinvoke $r29.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z5 == 0 goto label06;

        $r30 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        r60 = virtualinvoke $r30.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using request URI maddr to route the request = ");

        $r33 = interfaceinvoke r59.<javax.sip.address.Hop: java.lang.String toString()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r60.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r35);

     label06:
        return r59;

     label07:
        $r3 = r0.<gov.nist.javax.sip.stack.DefaultRouter: javax.sip.address.Hop defaultRoute>;

        if $r3 == null goto label09;

        $r17 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z4 = virtualinvoke $r17.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z4 == 0 goto label08;

        $r19 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        r62 = virtualinvoke $r19.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using outbound proxy to route the request = ");

        $r22 = r0.<gov.nist.javax.sip.stack.DefaultRouter: javax.sip.address.Hop defaultRoute>;

        $r23 = interfaceinvoke $r22.<javax.sip.address.Hop: java.lang.String toString()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r62.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r25);

     label08:
        $r18 = r0.<gov.nist.javax.sip.stack.DefaultRouter: javax.sip.address.Hop defaultRoute>;

        return $r18;

     label09:
        $z1 = interfaceinvoke r52.<javax.sip.address.URI: boolean isSipURI()>();

        if $z1 == 0 goto label12;

        $r6 = (javax.sip.address.SipURI) r52;

        r64 = specialinvoke r0.<gov.nist.javax.sip.stack.DefaultRouter: javax.sip.address.Hop createHop(javax.sip.address.SipURI,javax.sip.message.Request)>($r6, r49);

        if r64 == null goto label10;

        $r10 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z3 = virtualinvoke $r10.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z3 == 0 goto label10;

        $r11 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        r65 = virtualinvoke $r11.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Used request-URI for nextHop = ");

        $r14 = interfaceinvoke r64.<javax.sip.address.Hop: java.lang.String toString()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r65.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r16);

        goto label11;

     label10:
        $r7 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z2 = virtualinvoke $r7.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z2 == 0 goto label11;

        $r8 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r9 = virtualinvoke $r8.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r9.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("returning null hop -- loop detected");

     label11:
        return r64;

     label12:
        $r4 = r0.<gov.nist.javax.sip.stack.DefaultRouter: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r5 = virtualinvoke $r4.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.String,gov.nist.core.StackLogger)>("Unexpected non-sip URI", $r5);

        return null;

     label13:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Bad message: Null requestURI");

        throw $r2;
    }

    public java.util.ListIterator getNextHops(javax.sip.message.Request)
    {
        gov.nist.javax.sip.stack.DefaultRouter r0;
        java.util.LinkedList r1;
        javax.sip.address.Hop $r2;
        java.lang.Throwable $r3;
        javax.sip.message.Request r4;
        java.util.ListIterator r5;

        r0 := @this: gov.nist.javax.sip.stack.DefaultRouter;

        r4 := @parameter0: javax.sip.message.Request;

     label1:
        r1 = new java.util.LinkedList;

        specialinvoke r1.<java.util.LinkedList: void <init>()>();

        $r2 = virtualinvoke r0.<gov.nist.javax.sip.stack.DefaultRouter: javax.sip.address.Hop getNextHop(javax.sip.message.Request)>(r4);

        virtualinvoke r1.<java.util.LinkedList: boolean add(java.lang.Object)>($r2);

        r5 = virtualinvoke r1.<java.util.LinkedList: java.util.ListIterator listIterator()>();

     label2:
        return r5;

     label3:
        $r3 := @caughtexception;

        return null;

        catch javax.sip.SipException from label1 to label2 with label3;
    }

    public javax.sip.address.Hop getOutboundProxy()
    {
        gov.nist.javax.sip.stack.DefaultRouter r0;
        javax.sip.address.Hop $r1;

        r0 := @this: gov.nist.javax.sip.stack.DefaultRouter;

        $r1 = r0.<gov.nist.javax.sip.stack.DefaultRouter: javax.sip.address.Hop defaultRoute>;

        return $r1;
    }
}
