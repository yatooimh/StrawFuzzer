public final class gov.nist.javax.sip.stack.HopImpl extends java.lang.Object implements javax.sip.address.Hop, java.io.Serializable
{
    protected boolean defaultRoute;
    protected java.lang.String host;
    protected int port;
    protected java.lang.String transport;
    protected boolean uriRoute;

    void <init>(java.lang.String) throws java.lang.IllegalArgumentException
    {
        gov.nist.javax.sip.stack.HopImpl r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, i12;
        java.io.PrintStream r1;
        java.lang.IllegalArgumentException $r2, $r3, $r16, $r18, $r23;
        java.lang.String $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r13, $r15, $r17, $r19, $r20, $r21, r24, r25, r27, r28;
        java.lang.StringBuilder $r11;
        char $c6;
        boolean $z0;
        java.lang.Throwable $r22;
        short s13;

        r0 := @this: gov.nist.javax.sip.stack.HopImpl;

        r24 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r24 == null goto label14;

        i0 = virtualinvoke r24.<java.lang.String: int indexOf(int)>(93);

        i12 = virtualinvoke r24.<java.lang.String: int indexOf(int,int)>(58, i0);

        i1 = virtualinvoke r24.<java.lang.String: int indexOf(int,int)>(47, i12);

        if i12 <= 0 goto label05;

        $r20 = virtualinvoke r24.<java.lang.String: java.lang.String substring(int,int)>(0, i12);

        r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String host> = $r20;

        if i1 <= 0 goto label01;

        $i10 = i12 + 1;

        r25 = virtualinvoke r24.<java.lang.String: java.lang.String substring(int,int)>($i10, i1);

        $i11 = i1 + 1;

        $r21 = virtualinvoke r24.<java.lang.String: java.lang.String substring(int)>($i11);

        r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String transport> = $r21;

        goto label02;

     label01:
        $i8 = i12 + 1;

        r25 = virtualinvoke r24.<java.lang.String: java.lang.String substring(int)>($i8);

        r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String transport> = "UDP";

     label02:
        $i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r25);

        r0.<gov.nist.javax.sip.stack.HopImpl: int port> = $i9;

     label03:
        goto label08;

     label04:
        $r22 := @caughtexception;

        $r23 = new java.lang.IllegalArgumentException;

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Bad port spec");

        throw $r23;

     label05:
        s13 = 5060;

        if i1 <= 0 goto label07;

        $r19 = virtualinvoke r24.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

        r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String host> = $r19;

        $i7 = i1 + 1;

        r27 = virtualinvoke r24.<java.lang.String: java.lang.String substring(int)>($i7);

        r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String transport> = r27;

        $z0 = virtualinvoke r27.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("TLS");

        if $z0 == 0 goto label06;

        s13 = 5061;

     label06:
        r0.<gov.nist.javax.sip.stack.HopImpl: int port> = s13;

        goto label08;

     label07:
        r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String host> = r24;

        r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String transport> = "UDP";

        r0.<gov.nist.javax.sip.stack.HopImpl: int port> = 5060;

     label08:
        r28 = r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String host>;

        if r28 == null goto label13;

        $i2 = virtualinvoke r28.<java.lang.String: int length()>();

        if $i2 == 0 goto label13;

        $r4 = r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String host>;

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String host> = $r5;

        $r6 = r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String transport>;

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String transport> = $r7;

        if i0 <= 0 goto label10;

        $r17 = r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String host>;

        $c6 = virtualinvoke $r17.<java.lang.String: char charAt(int)>(0);

        if $c6 != 91 goto label09;

        goto label10;

     label09:
        $r18 = new java.lang.IllegalArgumentException;

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Bad IPv6 reference spec");

        throw $r18;

     label10:
        $r8 = r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String transport>;

        $i3 = virtualinvoke $r8.<java.lang.String: int compareToIgnoreCase(java.lang.String)>("UDP");

        if $i3 == 0 goto label12;

        $r9 = r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String transport>;

        $i4 = virtualinvoke $r9.<java.lang.String: int compareToIgnoreCase(java.lang.String)>("TLS");

        if $i4 == 0 goto label12;

        $r10 = r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String transport>;

        $i5 = virtualinvoke $r10.<java.lang.String: int compareToIgnoreCase(java.lang.String)>("TCP");

        if $i5 != 0 goto label11;

        goto label12;

     label11:
        r1 = <java.lang.System: java.io.PrintStream err>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad transport string ");

        $r13 = r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String transport>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintStream: void println(java.lang.String)>($r15);

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r24);

        throw $r16;

     label12:
        return;

     label13:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("no host!");

        throw $r3;

     label14:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null arg!");

        throw $r2;

        catch java.lang.NumberFormatException from label02 to label03 with label04;
    }

    public void <init>(java.lang.String, int, java.lang.String)
    {
        gov.nist.javax.sip.stack.HopImpl r0;
        int i0, $i1, $i2;
        java.lang.String r1, $r2, $r5, $r8, r9;
        java.lang.StringBuilder $r3;

        r0 := @this: gov.nist.javax.sip.stack.HopImpl;

        r9 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String host> = r9;

        $i1 = virtualinvoke r9.<java.lang.String: int indexOf(java.lang.String)>(":");

        if $i1 < 0 goto label1;

        $r2 = r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String host>;

        $i2 = virtualinvoke $r2.<java.lang.String: int indexOf(java.lang.String)>("[");

        if $i2 >= 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r5 = r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String host>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String host> = $r8;

     label1:
        r0.<gov.nist.javax.sip.stack.HopImpl: int port> = i0;

        r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String transport> = r1;

        return;
    }

    public java.lang.String getHost()
    {
        gov.nist.javax.sip.stack.HopImpl r0;
        java.lang.String $r1;

        r0 := @this: gov.nist.javax.sip.stack.HopImpl;

        $r1 = r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String host>;

        return $r1;
    }

    public int getPort()
    {
        gov.nist.javax.sip.stack.HopImpl r0;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.HopImpl;

        $i0 = r0.<gov.nist.javax.sip.stack.HopImpl: int port>;

        return $i0;
    }

    public java.lang.String getTransport()
    {
        gov.nist.javax.sip.stack.HopImpl r0;
        java.lang.String $r1;

        r0 := @this: gov.nist.javax.sip.stack.HopImpl;

        $r1 = r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String transport>;

        return $r1;
    }

    public boolean isURIRoute()
    {
        gov.nist.javax.sip.stack.HopImpl r0;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.stack.HopImpl;

        $z0 = r0.<gov.nist.javax.sip.stack.HopImpl: boolean uriRoute>;

        return $z0;
    }

    public void setURIRouteFlag()
    {
        gov.nist.javax.sip.stack.HopImpl r0;

        r0 := @this: gov.nist.javax.sip.stack.HopImpl;

        r0.<gov.nist.javax.sip.stack.HopImpl: boolean uriRoute> = 1;

        return;
    }

    public java.lang.String toString()
    {
        gov.nist.javax.sip.stack.HopImpl r0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3, $r8, $r10;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.HopImpl;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String host>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i0 = r0.<gov.nist.javax.sip.stack.HopImpl: int port>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r8 = r0.<gov.nist.javax.sip.stack.HopImpl: java.lang.String transport>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }
}
