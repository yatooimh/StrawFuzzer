public class gov.nist.javax.sip.stack.SIPClientTransaction$TransactionTimer extends gov.nist.javax.sip.stack.SIPStackTimerTask
{
    final gov.nist.javax.sip.stack.SIPClientTransaction this$0;

    public void <init>(gov.nist.javax.sip.stack.SIPClientTransaction)
    {
        gov.nist.javax.sip.stack.SIPClientTransaction$TransactionTimer r0;
        gov.nist.javax.sip.stack.SIPClientTransaction r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPClientTransaction$TransactionTimer;

        r1 := @parameter0: gov.nist.javax.sip.stack.SIPClientTransaction;

        r0.<gov.nist.javax.sip.stack.SIPClientTransaction$TransactionTimer: gov.nist.javax.sip.stack.SIPClientTransaction this$0> = r1;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPStackTimerTask: void <init>()>();

        return;
    }

    protected void runTask()
    {
        gov.nist.javax.sip.stack.SIPClientTransaction$TransactionTimer r0;
        gov.nist.core.StackLogger r1, r23;
        boolean $z0, $z1, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        gov.nist.javax.sip.stack.MessageChannel $r2, r21;
        java.lang.StringBuilder $r3, $r10;
        java.lang.String $r6, $r15;
        int $i0, i1, i2;
        gov.nist.javax.sip.stack.SIPTransaction$LingerTimer $r7;
        gov.nist.javax.sip.stack.SIPClientTransaction $r8, r17;
        java.util.Timer $r9;
        java.lang.Throwable $r16;
        gov.nist.javax.sip.stack.SIPTransactionStack r18;

        r0 := @this: gov.nist.javax.sip.stack.SIPClientTransaction$TransactionTimer;

        r17 = r0.<gov.nist.javax.sip.stack.SIPClientTransaction$TransactionTimer: gov.nist.javax.sip.stack.SIPClientTransaction this$0>;

        r18 = r17.<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke r17.<gov.nist.javax.sip.stack.SIPClientTransaction: boolean isTerminated()>();

        if $z0 == 0 goto label09;

        $z1 = virtualinvoke r18.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label01;

        r1 = virtualinvoke r18.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("removing  = ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r17);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isReliable ");

        $z8 = virtualinvoke r17.<gov.nist.javax.sip.stack.SIPClientTransaction: boolean isReliable()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z8);

        $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r15);

     label01:
        virtualinvoke r18.<gov.nist.javax.sip.stack.SIPTransactionStack: void removeTransaction(gov.nist.javax.sip.stack.SIPTransaction)>(r17);

     label02:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPClientTransaction$TransactionTimer: boolean cancel()>();

     label03:
        goto label05;

     label04:
        $r16 := @caughtexception;

        $z9 = virtualinvoke r18.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isAlive()>();

        if $z9 != 0 goto label05;

        return;

     label05:
        $z3 = r18.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean cacheClientConnections>;

        if $z3 != 0 goto label07;

        $z7 = virtualinvoke r17.<gov.nist.javax.sip.stack.SIPClientTransaction: boolean isReliable()>();

        if $z7 == 0 goto label07;

        r21 = virtualinvoke r17.<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.stack.MessageChannel getMessageChannel()>();

        $i0 = r21.<gov.nist.javax.sip.stack.MessageChannel: int useCount>;

        i1 = $i0 - 1;

        r21.<gov.nist.javax.sip.stack.MessageChannel: int useCount> = i1;

        if i1 > 0 goto label06;

        $r7 = new gov.nist.javax.sip.stack.SIPTransaction$LingerTimer;

        $r8 = r0.<gov.nist.javax.sip.stack.SIPClientTransaction$TransactionTimer: gov.nist.javax.sip.stack.SIPClientTransaction this$0>;

        specialinvoke $r7.<gov.nist.javax.sip.stack.SIPTransaction$LingerTimer: void <init>(gov.nist.javax.sip.stack.SIPTransaction)>($r8);

        $r9 = virtualinvoke r18.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        virtualinvoke $r9.<java.util.Timer: void schedule(java.util.TimerTask,long)>($r7, 8000L);

     label06:
        goto label10;

     label07:
        $z4 = virtualinvoke r18.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z4 == 0 goto label10;

        $z5 = virtualinvoke r17.<gov.nist.javax.sip.stack.SIPClientTransaction: boolean isReliable()>();

        if $z5 == 0 goto label10;

        $r2 = virtualinvoke r17.<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.stack.MessageChannel getMessageChannel()>();

        i2 = $r2.<gov.nist.javax.sip.stack.MessageChannel: int useCount>;

        $z6 = virtualinvoke r18.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z6 == 0 goto label08;

        r23 = virtualinvoke r18.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Client Use Count = ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r23.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r6);

     label08:
        goto label10;

     label09:
        virtualinvoke r17.<gov.nist.javax.sip.stack.SIPClientTransaction: void fireTimer()>();

     label10:
        return;

        catch java.lang.IllegalStateException from label02 to label03 with label04;
    }
}
