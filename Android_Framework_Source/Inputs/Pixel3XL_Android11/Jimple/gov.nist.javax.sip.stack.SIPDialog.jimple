public class gov.nist.javax.sip.stack.SIPDialog extends java.lang.Object implements javax.sip.Dialog, gov.nist.javax.sip.DialogExt
{
    public static final int CONFIRMED_STATE;
    private static final int DIALOG_LINGER_TIME;
    public static final int EARLY_STATE;
    public static final int NULL_STATE;
    public static final int TERMINATED_STATE;
    private static final long serialVersionUID;
    private transient int ackLine;
    protected transient boolean ackProcessed;
    protected transient boolean ackSeen;
    private transient java.util.concurrent.Semaphore ackSem;
    private transient java.lang.Object applicationData;
    public transient long auditTag;
    private transient boolean byeSent;
    protected javax.sip.header.CallIdHeader callIdHeader;
    protected gov.nist.javax.sip.header.Contact contactHeader;
    private transient gov.nist.javax.sip.stack.SIPDialog$DialogDeleteIfNoAckSentTask dialogDeleteIfNoAckSentTask;
    private transient gov.nist.javax.sip.stack.SIPDialog$DialogDeleteTask dialogDeleteTask;
    private java.lang.String dialogId;
    private int dialogState;
    private transient boolean dialogTerminatedEventDelivered;
    private transient java.lang.String earlyDialogId;
    private javax.sip.header.EventHeader eventHeader;
    private transient java.util.Set eventListeners;
    private transient gov.nist.javax.sip.stack.SIPTransaction firstTransaction;
    protected java.lang.String firstTransactionId;
    protected boolean firstTransactionIsServerTransaction;
    protected java.lang.String firstTransactionMethod;
    protected int firstTransactionPort;
    protected boolean firstTransactionSecure;
    protected boolean firstTransactionSeen;
    private transient long highestSequenceNumberAcknowledged;
    protected java.lang.String hisTag;
    private transient boolean isAcknowledged;
    private transient boolean isAssigned;
    private boolean isBackToBackUserAgent;
    private gov.nist.javax.sip.message.SIPRequest lastAckReceived;
    private transient gov.nist.javax.sip.message.SIPRequest lastAckSent;
    private transient long lastInviteOkReceived;
    private gov.nist.javax.sip.message.SIPResponse lastResponse;
    private transient gov.nist.javax.sip.stack.SIPTransaction lastTransaction;
    protected javax.sip.address.Address localParty;
    private long localSequenceNumber;
    private java.lang.String method;
    protected java.lang.String myTag;
    protected transient java.lang.Long nextSeqno;
    private long originalLocalSequenceNumber;
    private transient gov.nist.javax.sip.message.SIPRequest originalRequest;
    private transient int prevRetransmissionTicks;
    private boolean reInviteFlag;
    private transient int reInviteWaitTime;
    protected javax.sip.address.Address remoteParty;
    private long remoteSequenceNumber;
    private javax.sip.address.Address remoteTarget;
    private transient int retransmissionTicksLeft;
    private gov.nist.javax.sip.header.RouteList routeList;
    private boolean sequenceNumberValidation;
    private boolean serverTransactionFlag;
    private transient gov.nist.javax.sip.SipProviderImpl sipProvider;
    private transient gov.nist.javax.sip.stack.SIPTransactionStack sipStack;
    private transient java.lang.String stackTrace;
    private boolean terminateOnBye;
    protected transient gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask;
    private java.util.concurrent.Semaphore timerTaskLock;

    static void <clinit>()
    {
        int $i0, $i1, $i2;

        <gov.nist.javax.sip.stack.SIPDialog: long serialVersionUID> = -1429794423085204069L;

        <gov.nist.javax.sip.stack.SIPDialog: int NULL_STATE> = -1;

        <gov.nist.javax.sip.stack.SIPDialog: int DIALOG_LINGER_TIME> = 8;

        $i0 = <javax.sip.DialogState: int _EARLY>;

        <gov.nist.javax.sip.stack.SIPDialog: int EARLY_STATE> = $i0;

        $i1 = <javax.sip.DialogState: int _CONFIRMED>;

        <gov.nist.javax.sip.stack.SIPDialog: int CONFIRMED_STATE> = $i1;

        $i2 = <javax.sip.DialogState: int _TERMINATED>;

        <gov.nist.javax.sip.stack.SIPDialog: int TERMINATED_STATE> = $i2;

        return;
    }

    private void <init>(gov.nist.javax.sip.SipProviderImpl)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.SipProviderImpl r1;
        java.util.concurrent.Semaphore $r2, $r3;
        gov.nist.javax.sip.header.RouteList $r4;
        java.util.concurrent.CopyOnWriteArraySet $r5;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.SipProviderImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: long auditTag> = 0L;

        $r2 = new java.util.concurrent.Semaphore;

        specialinvoke $r2.<java.util.concurrent.Semaphore: void <init>(int)>(1);

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.util.concurrent.Semaphore ackSem> = $r2;

        r0.<gov.nist.javax.sip.stack.SIPDialog: int reInviteWaitTime> = 100;

        r0.<gov.nist.javax.sip.stack.SIPDialog: long highestSequenceNumberAcknowledged> = -1L;

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean sequenceNumberValidation> = 1;

        $r3 = new java.util.concurrent.Semaphore;

        specialinvoke $r3.<java.util.concurrent.Semaphore: void <init>(int)>(1);

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.util.concurrent.Semaphore timerTaskLock> = $r3;

        r0.<gov.nist.javax.sip.stack.SIPDialog: int firstTransactionPort> = 5060;

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean terminateOnBye> = 1;

        $r4 = new gov.nist.javax.sip.header.RouteList;

        specialinvoke $r4.<gov.nist.javax.sip.header.RouteList: void <init>()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList> = $r4;

        r0.<gov.nist.javax.sip.stack.SIPDialog: int dialogState> = -1;

        r0.<gov.nist.javax.sip.stack.SIPDialog: long localSequenceNumber> = 0L;

        r0.<gov.nist.javax.sip.stack.SIPDialog: long remoteSequenceNumber> = -1L;

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl sipProvider> = r1;

        $r5 = new java.util.concurrent.CopyOnWriteArraySet;

        specialinvoke $r5.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.util.Set eventListeners> = $r5;

        return;
    }

    public void <init>(gov.nist.javax.sip.SipProviderImpl, gov.nist.javax.sip.message.SIPResponse)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        long l0;
        javax.sip.SipStack $r1;
        gov.nist.javax.sip.stack.SIPTransactionStack $r2, $r15, $r16, $r17, $r18, $r23;
        javax.sip.header.CSeqHeader $r3, $r12;
        javax.sip.header.FromHeader $r4, $r8;
        java.lang.String $r5, $r7, $r13, $r22;
        javax.sip.header.ToHeader $r6, $r10;
        javax.sip.address.Address $r9, $r11;
        javax.sip.header.CallIdHeader $r14;
        boolean $z0, $z1;
        java.lang.StringBuilder $r19;
        gov.nist.core.StackLogger $r24, r27;
        gov.nist.javax.sip.SipProviderImpl r25;
        gov.nist.javax.sip.message.SIPResponse r26;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r25 := @parameter0: gov.nist.javax.sip.SipProviderImpl;

        r26 := @parameter1: gov.nist.javax.sip.message.SIPResponse;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void <init>(gov.nist.javax.sip.SipProviderImpl)>(r25);

        $r1 = virtualinvoke r25.<gov.nist.javax.sip.SipProviderImpl: javax.sip.SipStack getSipStack()>();

        $r2 = (gov.nist.javax.sip.stack.SIPTransactionStack) $r1;

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack> = $r2;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setLastResponse(gov.nist.javax.sip.stack.SIPTransaction,gov.nist.javax.sip.message.SIPResponse)>(null, r26);

        $r3 = virtualinvoke r26.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        l0 = interfaceinvoke $r3.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: long localSequenceNumber> = l0;

        r0.<gov.nist.javax.sip.stack.SIPDialog: long originalLocalSequenceNumber> = l0;

        $r4 = virtualinvoke r26.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.FromHeader getFrom()>();

        $r5 = interfaceinvoke $r4.<javax.sip.header.FromHeader: java.lang.String getTag()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String myTag> = $r5;

        $r6 = virtualinvoke r26.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.ToHeader getTo()>();

        $r7 = interfaceinvoke $r6.<javax.sip.header.ToHeader: java.lang.String getTag()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String hisTag> = $r7;

        $r8 = virtualinvoke r26.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.FromHeader getFrom()>();

        $r9 = interfaceinvoke $r8.<javax.sip.header.FromHeader: javax.sip.address.Address getAddress()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address localParty> = $r9;

        $r10 = virtualinvoke r26.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.ToHeader getTo()>();

        $r11 = interfaceinvoke $r10.<javax.sip.header.ToHeader: javax.sip.address.Address getAddress()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address remoteParty> = $r11;

        $r12 = virtualinvoke r26.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $r13 = interfaceinvoke $r12.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String method> = $r13;

        $r14 = virtualinvoke r26.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CallIdHeader getCallId()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.CallIdHeader callIdHeader> = $r14;

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean serverTransactionFlag> = 0;

        $r15 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r15.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r18 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r27 = virtualinvoke $r18.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating a dialog : ");

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r27.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r22);

        $r23 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r24 = virtualinvoke $r23.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r24.<gov.nist.core.StackLogger: void logStackTrace()>();

     label1:
        $r16 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = $r16.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isBackToBackUserAgent>;

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isBackToBackUserAgent> = $z1;

        $r17 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void addEventListener(gov.nist.javax.sip.stack.SIPDialogEventListener)>($r17);

        return;
    }

    public void <init>(gov.nist.javax.sip.stack.SIPClientTransaction, gov.nist.javax.sip.message.SIPResponse)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPClientTransaction r1;
        gov.nist.javax.sip.message.SIPResponse r2;
        java.lang.NullPointerException $r3;
        gov.nist.javax.sip.stack.SIPTransactionStack $r4;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.stack.SIPClientTransaction;

        r2 := @parameter1: gov.nist.javax.sip.message.SIPResponse;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void <init>(gov.nist.javax.sip.stack.SIPTransaction)>(r1);

        if r2 == null goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setLastResponse(gov.nist.javax.sip.stack.SIPTransaction,gov.nist.javax.sip.message.SIPResponse)>(r1, r2);

        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isBackToBackUserAgent>;

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isBackToBackUserAgent> = $z0;

        return;

     label1:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null SipResponse");

        throw $r3;
    }

    public void <init>(gov.nist.javax.sip.stack.SIPTransaction)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.SipProviderImpl $r1, $r19, r27;
        javax.sip.message.Request $r2;
        javax.sip.header.CallIdHeader $r3;
        java.lang.String $r4, $r15, $r22;
        java.lang.NullPointerException $r5, $r7;
        gov.nist.javax.sip.stack.SIPTransactionStack $r6, $r8, $r9, $r10, $r11, $r16, $r23;
        boolean $z0, $z1;
        java.lang.StringBuilder $r12, $r17;
        javax.sip.ListeningPoint $r20;
        int $i0;
        gov.nist.core.StackLogger $r24, r28, r30;
        gov.nist.javax.sip.stack.SIPTransaction r25;
        gov.nist.javax.sip.message.SIPRequest r26;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r25 := @parameter0: gov.nist.javax.sip.stack.SIPTransaction;

        $r1 = virtualinvoke r25.<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.SipProviderImpl getSipProvider()>();

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void <init>(gov.nist.javax.sip.SipProviderImpl)>($r1);

        $r2 = virtualinvoke r25.<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.message.Request getRequest()>();

        r26 = (gov.nist.javax.sip.message.SIPRequest) $r2;

        $r3 = virtualinvoke r26.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CallIdHeader getCallId()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.CallIdHeader callIdHeader> = $r3;

        $r4 = virtualinvoke r26.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getDialogId(boolean)>(0);

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String earlyDialogId> = $r4;

        if r25 == null goto label3;

        $r6 = r25.<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack> = $r6;

        r27 = virtualinvoke r25.<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.SipProviderImpl getSipProvider()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl sipProvider> = r27;

        if r27 == null goto label2;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void addTransaction(gov.nist.javax.sip.stack.SIPTransaction)>(r25);

        $r8 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r8.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r11 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r28 = virtualinvoke $r11.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating a dialog : ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r28.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r15);

        $r16 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r30 = virtualinvoke $r16.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("provider port = ");

        $r19 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl sipProvider>;

        $r20 = virtualinvoke $r19.<gov.nist.javax.sip.SipProviderImpl: javax.sip.ListeningPoint getListeningPoint()>();

        $i0 = interfaceinvoke $r20.<javax.sip.ListeningPoint: int getPort()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r30.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r22);

        $r23 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r24 = virtualinvoke $r23.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r24.<gov.nist.core.StackLogger: void logStackTrace()>();

     label1:
        $r9 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = $r9.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isBackToBackUserAgent>;

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isBackToBackUserAgent> = $z1;

        $r10 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void addEventListener(gov.nist.javax.sip.stack.SIPDialogEventListener)>($r10);

        return;

     label2:
        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null Provider!");

        throw $r7;

     label3:
        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null tx");

        throw $r5;
    }

    static gov.nist.javax.sip.stack.SIPTransactionStack access$000(gov.nist.javax.sip.stack.SIPDialog)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r1;

        r0 := @parameter0: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        return $r1;
    }

    static gov.nist.javax.sip.SipProviderImpl access$100(gov.nist.javax.sip.stack.SIPDialog)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.SipProviderImpl $r1;

        r0 := @parameter0: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl sipProvider>;

        return $r1;
    }

    static gov.nist.javax.sip.stack.SIPDialog$DialogDeleteIfNoAckSentTask access$1002(gov.nist.javax.sip.stack.SIPDialog, gov.nist.javax.sip.stack.SIPDialog$DialogDeleteIfNoAckSentTask)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPDialog$DialogDeleteIfNoAckSentTask r1;

        r0 := @parameter0: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter1: gov.nist.javax.sip.stack.SIPDialog$DialogDeleteIfNoAckSentTask;

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogDeleteIfNoAckSentTask dialogDeleteIfNoAckSentTask> = r1;

        return r1;
    }

    static boolean access$1100(gov.nist.javax.sip.stack.SIPDialog)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean $z0;

        r0 := @parameter0: gov.nist.javax.sip.stack.SIPDialog;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isBackToBackUserAgent>;

        return $z0;
    }

    static void access$200(gov.nist.javax.sip.stack.SIPDialog, int)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        int i0;

        r0 := @parameter0: gov.nist.javax.sip.stack.SIPDialog;

        i0 := @parameter1: int;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void raiseErrorEvent(int)>(i0);

        return;
    }

    static int access$300(gov.nist.javax.sip.stack.SIPDialog)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        int $i0;

        r0 := @parameter0: gov.nist.javax.sip.stack.SIPDialog;

        $i0 = r0.<gov.nist.javax.sip.stack.SIPDialog: int reInviteWaitTime>;

        return $i0;
    }

    static java.util.Set access$400(gov.nist.javax.sip.stack.SIPDialog)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.util.Set $r1;

        r0 := @parameter0: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.util.Set eventListeners>;

        return $r1;
    }

    static java.util.concurrent.Semaphore access$502(gov.nist.javax.sip.stack.SIPDialog, java.util.concurrent.Semaphore)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.util.concurrent.Semaphore r1;

        r0 := @parameter0: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter1: java.util.concurrent.Semaphore;

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.util.concurrent.Semaphore timerTaskLock> = r1;

        return r1;
    }

    static boolean access$600(gov.nist.javax.sip.stack.SIPDialog, int)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: gov.nist.javax.sip.stack.SIPDialog;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean toRetransmitFinalResponse(int)>(i0);

        return $z0;
    }

    static void access$700(gov.nist.javax.sip.stack.SIPDialog, java.lang.String, int, java.lang.String)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.lang.String r1, r2;
        int i0;

        r0 := @parameter0: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void raiseIOException(java.lang.String,int,java.lang.String)>(r1, i0, r2);

        return;
    }

    static int access$800(gov.nist.javax.sip.stack.SIPDialog)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        int $i0;

        r0 := @parameter0: gov.nist.javax.sip.stack.SIPDialog;

        $i0 = r0.<gov.nist.javax.sip.stack.SIPDialog: int dialogState>;

        return $i0;
    }

    static long access$900(gov.nist.javax.sip.stack.SIPDialog)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        long $l0;

        r0 := @parameter0: gov.nist.javax.sip.stack.SIPDialog;

        $l0 = r0.<gov.nist.javax.sip.stack.SIPDialog: long highestSequenceNumberAcknowledged>;

        return $l0;
    }

    private void addRoute(gov.nist.javax.sip.header.RecordRouteList)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z7, $z9, $z10, $z11, $z12;
        gov.nist.javax.sip.stack.SIPTransactionStack $r2, $r10, $r11, $r16, $r37, $r45, $r46, $r51;
        gov.nist.core.StackLogger $r3, $r17, $r38, $r52, r63, r66;
        gov.nist.javax.sip.header.RouteList $r4, $r26, $r35, $r39, r54, r58;
        java.lang.Object $r5, $r18, $r21, $r24, $r27, $r30, $r33, $r40;
        gov.nist.javax.sip.header.Route $r6, $r41, r57, r61;
        javax.sip.address.Address $r7, $r19, $r28, $r42;
        javax.sip.address.URI $r8, $r43;
        javax.sip.address.SipURI $r9, $r44;
        java.lang.StringBuilder $r12, $r47;
        java.lang.String $r15, $r50;
        gov.nist.javax.sip.address.AddressImpl $r20, $r22, $r29, $r31;
        gov.nist.core.NameValueList $r23, $r25, $r32, $r34;
        int $i0;
        java.lang.Throwable $r36;
        gov.nist.javax.sip.header.RecordRouteList r53;
        java.util.ListIterator r55, r59;
        gov.nist.javax.sip.header.RecordRoute r56, r60;
        java.util.Iterator r62, r65;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r53 := @parameter0: gov.nist.javax.sip.header.RecordRouteList;

     label01:
        $z0 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isClientDialog()>();

        if $z0 == 0 goto label06;

        r54 = new gov.nist.javax.sip.header.RouteList;

        specialinvoke r54.<gov.nist.javax.sip.header.RouteList: void <init>()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList> = r54;

        $i0 = virtualinvoke r53.<gov.nist.javax.sip.header.RecordRouteList: int size()>();

        r55 = virtualinvoke r53.<gov.nist.javax.sip.header.RecordRouteList: java.util.ListIterator listIterator(int)>($i0);

     label02:
        $z7 = interfaceinvoke r55.<java.util.ListIterator: boolean hasPrevious()>();

        if $z7 == 0 goto label05;

        $r27 = interfaceinvoke r55.<java.util.ListIterator: java.lang.Object previous()>();

        r56 = (gov.nist.javax.sip.header.RecordRoute) $r27;

     label03:
        r57 = new gov.nist.javax.sip.header.Route;

        specialinvoke r57.<gov.nist.javax.sip.header.Route: void <init>()>();

        $r28 = virtualinvoke r56.<gov.nist.javax.sip.header.RecordRoute: javax.sip.address.Address getAddress()>();

        $r29 = (gov.nist.javax.sip.address.AddressImpl) $r28;

        $r30 = virtualinvoke $r29.<gov.nist.javax.sip.address.AddressImpl: java.lang.Object clone()>();

        $r31 = (gov.nist.javax.sip.address.AddressImpl) $r30;

        virtualinvoke r57.<gov.nist.javax.sip.header.Route: void setAddress(javax.sip.address.Address)>($r31);

        $r32 = virtualinvoke r56.<gov.nist.javax.sip.header.RecordRoute: gov.nist.core.NameValueList getParameters()>();

        $r33 = virtualinvoke $r32.<gov.nist.core.NameValueList: java.lang.Object clone()>();

        $r34 = (gov.nist.core.NameValueList) $r33;

        virtualinvoke r57.<gov.nist.javax.sip.header.Route: void setParameters(gov.nist.core.NameValueList)>($r34);

        $r35 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList>;

        virtualinvoke $r35.<gov.nist.javax.sip.header.RouteList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r57);

     label04:
        goto label02;

     label05:
        goto label10;

     label06:
        r58 = new gov.nist.javax.sip.header.RouteList;

        specialinvoke r58.<gov.nist.javax.sip.header.RouteList: void <init>()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList> = r58;

        r59 = virtualinvoke r53.<gov.nist.javax.sip.header.RecordRouteList: java.util.ListIterator listIterator()>();

     label07:
        $z1 = interfaceinvoke r59.<java.util.ListIterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r18 = interfaceinvoke r59.<java.util.ListIterator: java.lang.Object next()>();

        r60 = (gov.nist.javax.sip.header.RecordRoute) $r18;

     label08:
        r61 = new gov.nist.javax.sip.header.Route;

        specialinvoke r61.<gov.nist.javax.sip.header.Route: void <init>()>();

        $r19 = virtualinvoke r60.<gov.nist.javax.sip.header.RecordRoute: javax.sip.address.Address getAddress()>();

        $r20 = (gov.nist.javax.sip.address.AddressImpl) $r19;

        $r21 = virtualinvoke $r20.<gov.nist.javax.sip.address.AddressImpl: java.lang.Object clone()>();

        $r22 = (gov.nist.javax.sip.address.AddressImpl) $r21;

        virtualinvoke r61.<gov.nist.javax.sip.header.Route: void setAddress(javax.sip.address.Address)>($r22);

        $r23 = virtualinvoke r60.<gov.nist.javax.sip.header.RecordRoute: gov.nist.core.NameValueList getParameters()>();

        $r24 = virtualinvoke $r23.<gov.nist.core.NameValueList: java.lang.Object clone()>();

        $r25 = (gov.nist.core.NameValueList) $r24;

        virtualinvoke r61.<gov.nist.javax.sip.header.Route: void setParameters(gov.nist.core.NameValueList)>($r25);

        $r26 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList>;

        virtualinvoke $r26.<gov.nist.javax.sip.header.RouteList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r61);

     label09:
        goto label07;

     label10:
        $r2 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r3 = virtualinvoke $r2.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $z2 = interfaceinvoke $r3.<gov.nist.core.StackLogger: boolean isLoggingEnabled()>();

        if $z2 == 0 goto label13;

        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList>;

        r62 = virtualinvoke $r4.<gov.nist.javax.sip.header.RouteList: java.util.Iterator iterator()>();

     label11:
        $z3 = interfaceinvoke r62.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label13;

        $r5 = interfaceinvoke r62.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (gov.nist.javax.sip.header.Route) $r5;

        $r7 = virtualinvoke $r6.<gov.nist.javax.sip.header.Route: javax.sip.address.Address getAddress()>();

        $r8 = interfaceinvoke $r7.<javax.sip.address.Address: javax.sip.address.URI getURI()>();

        $r9 = (javax.sip.address.SipURI) $r8;

        $z4 = interfaceinvoke $r9.<javax.sip.address.SipURI: boolean hasLrParam()>();

        if $z4 != 0 goto label12;

        $r10 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z5 = virtualinvoke $r10.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z5 == 0 goto label12;

        $r11 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r63 = virtualinvoke $r11.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NON LR route in Route set detected for dialog : ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r63.<gov.nist.core.StackLogger: void logWarning(java.lang.String)>($r15);

        $r16 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r17 = virtualinvoke $r16.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r17.<gov.nist.core.StackLogger: void logStackTrace()>();

     label12:
        goto label11;

     label13:
        return;

     label14:
        $r36 := @caughtexception;

        $r37 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r38 = virtualinvoke $r37.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $z9 = interfaceinvoke $r38.<gov.nist.core.StackLogger: boolean isLoggingEnabled()>();

        if $z9 == 0 goto label17;

        $r39 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList>;

        r65 = virtualinvoke $r39.<gov.nist.javax.sip.header.RouteList: java.util.Iterator iterator()>();

     label15:
        $z10 = interfaceinvoke r65.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label17;

        $r40 = interfaceinvoke r65.<java.util.Iterator: java.lang.Object next()>();

        $r41 = (gov.nist.javax.sip.header.Route) $r40;

        $r42 = virtualinvoke $r41.<gov.nist.javax.sip.header.Route: javax.sip.address.Address getAddress()>();

        $r43 = interfaceinvoke $r42.<javax.sip.address.Address: javax.sip.address.URI getURI()>();

        $r44 = (javax.sip.address.SipURI) $r43;

        $z11 = interfaceinvoke $r44.<javax.sip.address.SipURI: boolean hasLrParam()>();

        if $z11 != 0 goto label16;

        $r45 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z12 = virtualinvoke $r45.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z12 == 0 goto label16;

        $r46 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r66 = virtualinvoke $r46.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NON LR route in Route set detected for dialog : ");

        virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r50 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r66.<gov.nist.core.StackLogger: void logWarning(java.lang.String)>($r50);

        $r51 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r52 = virtualinvoke $r51.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r52.<gov.nist.core.StackLogger: void logStackTrace()>();

     label16:
        goto label15;

     label17:
        throw $r36;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
    }

    private void addRoute(gov.nist.javax.sip.message.SIPResponse)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        gov.nist.core.StackLogger r1, $r4, $r12, $r19, $r22, $r33;
        int i0, $i1, $i2, $i3, $i4, i5, i6;
        gov.nist.javax.sip.stack.SIPTransactionStack $r2, $r3, $r11, $r17, $r18, $r20, $r21, $r23, $r31, $r32, $r40, $r44;
        javax.sip.DialogState $r5, $r6, $r9, $r10, $r27;
        javax.sip.header.Header $r7, $r15;
        javax.sip.header.ContactHeader $r8, $r16;
        javax.sip.header.CSeqHeader $r13;
        java.lang.String $r14, $r29;
        java.lang.Throwable $r30, $r34, $r35, r38;
        gov.nist.javax.sip.message.SIPResponse r36;
        java.lang.StringBuilder r37;
        gov.nist.javax.sip.header.ContactList r39, r43;
        gov.nist.javax.sip.header.RecordRouteList r41;
        gov.nist.javax.sip.header.RouteList r42;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r36 := @parameter0: gov.nist.javax.sip.message.SIPResponse;

        entermonitor r0;

     label01:
        $r2 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        z0 = virtualinvoke $r2.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

     label02:
        if z0 == 0 goto label06;

     label03:
        $r23 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r1 = virtualinvoke $r23.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r37 = new java.lang.StringBuilder;

        specialinvoke r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setContact: dialogState: ");

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state = ");

        $r27 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        virtualinvoke r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        $r29 = virtualinvoke r37.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r29);

     label04:
        goto label06;

     label05:
        $r34 := @caughtexception;

        r38 = $r34;

        goto label30;

     label06:
        i5 = virtualinvoke r36.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

     label07:
        if i5 != 100 goto label10;

     label08:
        $r20 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z5 = virtualinvoke $r20.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z5 == 0 goto label09;

        $r21 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r22 = virtualinvoke $r21.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r22.<gov.nist.core.StackLogger: void logStackTrace()>();

     label09:
        exitmonitor r0;

        return;

     label10:
        i0 = r0.<gov.nist.javax.sip.stack.SIPDialog: int dialogState>;

        i6 = <gov.nist.javax.sip.stack.SIPDialog: int TERMINATED_STATE>;

     label11:
        if i0 != i6 goto label14;

     label12:
        $r17 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z4 = virtualinvoke $r17.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z4 == 0 goto label13;

        $r18 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r19 = virtualinvoke $r18.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r19.<gov.nist.core.StackLogger: void logStackTrace()>();

     label13:
        exitmonitor r0;

        return;

     label14:
        $i2 = r0.<gov.nist.javax.sip.stack.SIPDialog: int dialogState>;

        $i1 = <gov.nist.javax.sip.stack.SIPDialog: int CONFIRMED_STATE>;

        if $i2 != $i1 goto label19;

        $i3 = virtualinvoke r36.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        $i4 = $i3 / 100;

        if $i4 != 2 goto label17;

        $z2 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isServer()>();

        if $z2 != 0 goto label17;

        r39 = virtualinvoke r36.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.ContactList getContactHeaders()>();

     label15:
        if r39 == null goto label17;

     label16:
        $r13 = virtualinvoke r36.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $r14 = interfaceinvoke $r13.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $z3 = staticinvoke <gov.nist.javax.sip.message.SIPRequest: boolean isTargetRefresh(java.lang.String)>($r14);

        if $z3 == 0 goto label17;

        $r15 = virtualinvoke r39.<gov.nist.javax.sip.header.ContactList: javax.sip.header.Header getFirst()>();

        $r16 = (javax.sip.header.ContactHeader) $r15;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setRemoteTarget(javax.sip.header.ContactHeader)>($r16);

     label17:
        $r40 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z7 = virtualinvoke $r40.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z7 == 0 goto label18;

        $r11 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r12 = virtualinvoke $r11.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r12.<gov.nist.core.StackLogger: void logStackTrace()>();

     label18:
        exitmonitor r0;

        return;

     label19:
        $z1 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isServer()>();

        if $z1 != 0 goto label27;

        $r5 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r6 = <javax.sip.DialogState: javax.sip.DialogState CONFIRMED>;

        if $r5 == $r6 goto label24;

        $r9 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r10 = <javax.sip.DialogState: javax.sip.DialogState TERMINATED>;

        if $r9 == $r10 goto label24;

        r41 = virtualinvoke r36.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.RecordRouteList getRecordRouteHeaders()>();

     label20:
        if r41 == null goto label23;

     label21:
        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void addRoute(gov.nist.javax.sip.header.RecordRouteList)>(r41);

     label22:
        goto label24;

     label23:
        r42 = new gov.nist.javax.sip.header.RouteList;

        specialinvoke r42.<gov.nist.javax.sip.header.RouteList: void <init>()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList> = r42;

     label24:
        r43 = virtualinvoke r36.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.ContactList getContactHeaders()>();

     label25:
        if r43 == null goto label27;

     label26:
        $r7 = virtualinvoke r43.<gov.nist.javax.sip.header.ContactList: javax.sip.header.Header getFirst()>();

        $r8 = (javax.sip.header.ContactHeader) $r7;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setRemoteTarget(javax.sip.header.ContactHeader)>($r8);

     label27:
        $r44 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z8 = virtualinvoke $r44.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z8 == 0 goto label28;

        $r3 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r4 = virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r4.<gov.nist.core.StackLogger: void logStackTrace()>();

     label28:
        exitmonitor r0;

        return;

     label29:
        $r30 := @caughtexception;

        r38 = $r30;

     label30:
        $r31 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z6 = virtualinvoke $r31.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z6 == 0 goto label31;

        $r32 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r33 = virtualinvoke $r32.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r33.<gov.nist.core.StackLogger: void logStackTrace()>();

     label31:
        throw r38;

     label32:
        $r35 := @caughtexception;

        exitmonitor r0;

        throw $r35;

        catch java.lang.Throwable from label01 to label02 with label29;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label29;
        catch java.lang.Throwable from label08 to label09 with label32;
        catch java.lang.Throwable from label10 to label11 with label29;
        catch java.lang.Throwable from label12 to label13 with label32;
        catch java.lang.Throwable from label14 to label15 with label29;
        catch java.lang.Throwable from label16 to label17 with label29;
        catch java.lang.Throwable from label17 to label18 with label32;
        catch java.lang.Throwable from label19 to label20 with label29;
        catch java.lang.Throwable from label21 to label22 with label29;
        catch java.lang.Throwable from label23 to label24 with label29;
        catch java.lang.Throwable from label24 to label25 with label29;
        catch java.lang.Throwable from label26 to label27 with label29;
        catch java.lang.Throwable from label27 to label28 with label32;
        catch java.lang.Throwable from label30 to label31 with label32;
        catch java.lang.Throwable from label31 to label32 with label32;
    }

    public static gov.nist.javax.sip.stack.SIPDialog createFromNOTIFY(gov.nist.javax.sip.stack.SIPClientTransaction, gov.nist.javax.sip.stack.SIPTransaction)
    {
        gov.nist.javax.sip.stack.SIPClientTransaction r0;
        gov.nist.javax.sip.stack.SIPDialog $r2;
        long $l0, $l1;
        javax.sip.message.Request $r3;
        javax.sip.header.CSeqHeader $r4;
        java.lang.String $r5, $r6, $r7;
        gov.nist.javax.sip.message.SIPResponse $r8;
        javax.sip.header.ToHeader $r9;
        javax.sip.address.Address $r10, $r12;
        javax.sip.header.FromHeader $r11;
        int $i2;
        gov.nist.javax.sip.stack.SIPTransaction r13;
        gov.nist.javax.sip.message.SIPRequest r14;

        r0 := @parameter0: gov.nist.javax.sip.stack.SIPClientTransaction;

        r13 := @parameter1: gov.nist.javax.sip.stack.SIPTransaction;

        $r2 = new gov.nist.javax.sip.stack.SIPDialog;

        specialinvoke $r2.<gov.nist.javax.sip.stack.SIPDialog: void <init>(gov.nist.javax.sip.stack.SIPTransaction)>(r13);

        $r2.<gov.nist.javax.sip.stack.SIPDialog: boolean serverTransactionFlag> = 0;

        $r2.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransaction lastTransaction> = r0;

        staticinvoke <gov.nist.javax.sip.stack.SIPDialog: void storeFirstTransactionInfo(gov.nist.javax.sip.stack.SIPDialog,gov.nist.javax.sip.stack.SIPTransaction)>($r2, r0);

        $r2.<gov.nist.javax.sip.stack.SIPDialog: boolean terminateOnBye> = 0;

        $l0 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPClientTransaction: long getCSeq()>();

        $r2.<gov.nist.javax.sip.stack.SIPDialog: long localSequenceNumber> = $l0;

        $r3 = virtualinvoke r13.<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.message.Request getRequest()>();

        r14 = (gov.nist.javax.sip.message.SIPRequest) $r3;

        $r4 = virtualinvoke r14.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $l1 = interfaceinvoke $r4.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $r2.<gov.nist.javax.sip.stack.SIPDialog: long remoteSequenceNumber> = $l1;

        $r5 = virtualinvoke r14.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getDialogId(boolean)>(1);

        virtualinvoke $r2.<gov.nist.javax.sip.stack.SIPDialog: void setDialogId(java.lang.String)>($r5);

        $r6 = virtualinvoke r14.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getToTag()>();

        specialinvoke $r2.<gov.nist.javax.sip.stack.SIPDialog: void setLocalTag(java.lang.String)>($r6);

        $r7 = virtualinvoke r14.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFromTag()>();

        specialinvoke $r2.<gov.nist.javax.sip.stack.SIPDialog: void setRemoteTag(java.lang.String)>($r7);

        $r8 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.message.SIPResponse getLastResponse()>();

        virtualinvoke $r2.<gov.nist.javax.sip.stack.SIPDialog: void setLastResponse(gov.nist.javax.sip.stack.SIPTransaction,gov.nist.javax.sip.message.SIPResponse)>(r0, $r8);

        $r9 = virtualinvoke r14.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.ToHeader getTo()>();

        $r10 = interfaceinvoke $r9.<javax.sip.header.ToHeader: javax.sip.address.Address getAddress()>();

        $r2.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address localParty> = $r10;

        $r11 = virtualinvoke r14.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.FromHeader getFrom()>();

        $r12 = interfaceinvoke $r11.<javax.sip.header.FromHeader: javax.sip.address.Address getAddress()>();

        $r2.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address remoteParty> = $r12;

        virtualinvoke $r2.<gov.nist.javax.sip.stack.SIPDialog: void addRoute(gov.nist.javax.sip.message.SIPRequest)>(r14);

        $i2 = <gov.nist.javax.sip.stack.SIPDialog: int CONFIRMED_STATE>;

        virtualinvoke $r2.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i2);

        return $r2;
    }

    private javax.sip.message.Request createRequest(java.lang.String, gov.nist.javax.sip.message.SIPResponse) throws javax.sip.SipException
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.ListeningPointImpl r2, $r29;
        gov.nist.javax.sip.header.Via r3, $r36, $r44, $r64;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        javax.sip.DialogState $r7, $r12, $r51, $r80;
        int $i0, $i1, $i5, $i6;
        javax.sip.address.Address $r13, $r18, $r20, $r30, $r48, $r60;
        javax.sip.address.URI $r14, $r31, $r49;
        java.lang.Object $r15, $r50;
        long $l2, $l3, $l4;
        javax.sip.header.CSeqHeader $r21;
        gov.nist.javax.sip.header.CSeq $r22, r83;
        java.lang.String $r23, $r24, $r25, $r27, $r37, $r40, $r45, $r47, r58, $r65, $r75, $r79, $r82;
        gov.nist.javax.sip.SipProviderImpl $r26, $r63;
        javax.sip.ListeningPoint $r28, $r66;
        javax.sip.address.SipURI $r32;
        gov.nist.javax.sip.stack.SIPTransactionStack $r33, $r41, $r53, $r54;
        java.lang.Exception $r52, r93, r94;
        gov.nist.core.StackLogger $r55, r67;
        java.lang.Throwable $r56, $r57;
        gov.nist.javax.sip.message.SIPResponse r59;
        gov.nist.javax.sip.address.SipUri r61;
        gov.nist.javax.sip.message.SIPRequest r71;
        javax.sip.header.ContactHeader r72;
        javax.sip.header.EventHeader r74;
        java.lang.StringBuilder r84, r85, r89;
        javax.sip.SipException r86, r90, r91;
        gov.nist.javax.sip.header.From r87;
        gov.nist.javax.sip.header.To r88;
        java.lang.NullPointerException r92;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r58 := @parameter0: java.lang.String;

        r59 := @parameter1: gov.nist.javax.sip.message.SIPResponse;

        if r58 == null goto label27;

        if r59 == null goto label27;

        $z0 = virtualinvoke r58.<java.lang.String: boolean equals(java.lang.Object)>("CANCEL");

        if $z0 != 0 goto label26;

        $r7 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        if $r7 == null goto label25;

        $r12 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $i0 = virtualinvoke $r12.<javax.sip.DialogState: int getValue()>();

        $i1 = <gov.nist.javax.sip.stack.SIPDialog: int TERMINATED_STATE>;

        if $i0 != $i1 goto label01;

        $z7 = virtualinvoke r58.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("BYE");

        if $z7 == 0 goto label25;

     label01:
        $z1 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isServer()>();

        if $z1 == 0 goto label02;

        $r51 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $i5 = virtualinvoke $r51.<javax.sip.DialogState: int getValue()>();

        $i6 = <gov.nist.javax.sip.stack.SIPDialog: int EARLY_STATE>;

        if $i5 != $i6 goto label02;

        $z6 = virtualinvoke r58.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("BYE");

        if $z6 != 0 goto label25;

     label02:
        $r60 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address getRemoteTarget()>();

        if $r60 == null goto label03;

        $r48 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address getRemoteTarget()>();

        $r49 = interfaceinvoke $r48.<javax.sip.address.Address: javax.sip.address.URI getURI()>();

        $r50 = interfaceinvoke $r49.<javax.sip.address.URI: java.lang.Object clone()>();

        r61 = (gov.nist.javax.sip.address.SipUri) $r50;

        goto label04;

     label03:
        $r13 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address getRemoteParty()>();

        $r14 = interfaceinvoke $r13.<javax.sip.address.Address: javax.sip.address.URI getURI()>();

        $r15 = interfaceinvoke $r14.<javax.sip.address.URI: java.lang.Object clone()>();

        r61 = (gov.nist.javax.sip.address.SipUri) $r15;

        virtualinvoke r61.<gov.nist.javax.sip.address.SipUri: void clearUriParms()>();

     label04:
        r83 = new gov.nist.javax.sip.header.CSeq;

        specialinvoke r83.<gov.nist.javax.sip.header.CSeq: void <init>()>();

     label05:
        virtualinvoke r83.<gov.nist.javax.sip.header.CSeq: void setMethod(java.lang.String)>(r58);

        $l2 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: long getLocalSeqNumber()>();

        virtualinvoke r83.<gov.nist.javax.sip.header.CSeq: void setSeqNumber(long)>($l2);

     label06:
        goto label09;

     label07:
        $r52 := @caughtexception;

        $r53 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z8 = virtualinvoke $r53.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z8 == 0 goto label08;

        $r54 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r55 = virtualinvoke $r54.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r55.<gov.nist.core.StackLogger: void logError(java.lang.String)>("Unexpected error");

     label08:
        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>($r52);

     label09:
        $r63 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl sipProvider>;

        $r64 = virtualinvoke r59.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.Via getTopmostVia()>();

        $r65 = virtualinvoke $r64.<gov.nist.javax.sip.header.Via: java.lang.String getTransport()>();

        $r66 = virtualinvoke $r63.<gov.nist.javax.sip.SipProviderImpl: javax.sip.ListeningPoint getListeningPoint(java.lang.String)>($r65);

        r2 = (gov.nist.javax.sip.ListeningPointImpl) $r66;

        if r2 != null goto label11;

        $r33 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z5 = virtualinvoke $r33.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z5 == 0 goto label10;

        $r41 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r67 = virtualinvoke $r41.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r84 = new java.lang.StringBuilder;

        specialinvoke r84.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find listening point for transport ");

        $r44 = virtualinvoke r59.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.Via getTopmostVia()>();

        $r45 = virtualinvoke $r44.<gov.nist.javax.sip.header.Via: java.lang.String getTransport()>();

        virtualinvoke r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke r84.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r67.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r47);

     label10:
        r85 = new java.lang.StringBuilder;

        specialinvoke r85.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find listening point for transport ");

        $r36 = virtualinvoke r59.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.Via getTopmostVia()>();

        $r37 = virtualinvoke $r36.<gov.nist.javax.sip.header.Via: java.lang.String getTransport()>();

        virtualinvoke r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        r86 = new javax.sip.SipException;

        $r40 = virtualinvoke r85.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r86.<javax.sip.SipException: void <init>(java.lang.String)>($r40);

        throw r86;

     label11:
        r3 = virtualinvoke r2.<gov.nist.javax.sip.ListeningPointImpl: gov.nist.javax.sip.header.Via getViaHeader()>();

        r87 = new gov.nist.javax.sip.header.From;

        specialinvoke r87.<gov.nist.javax.sip.header.From: void <init>()>();

        $r18 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address localParty>;

        virtualinvoke r87.<gov.nist.javax.sip.header.From: void setAddress(javax.sip.address.Address)>($r18);

        r88 = new gov.nist.javax.sip.header.To;

        specialinvoke r88.<gov.nist.javax.sip.header.To: void <init>()>();

        $r20 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address remoteParty>;

        virtualinvoke r88.<gov.nist.javax.sip.header.To: void setAddress(javax.sip.address.Address)>($r20);

        r71 = virtualinvoke r59.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.message.SIPRequest createRequest(gov.nist.javax.sip.address.SipUri,gov.nist.javax.sip.header.Via,gov.nist.javax.sip.header.CSeq,gov.nist.javax.sip.header.From,gov.nist.javax.sip.header.To)>(r61, r3, r83, r87, r88);

        $z2 = staticinvoke <gov.nist.javax.sip.message.SIPRequest: boolean isTargetRefresh(java.lang.String)>(r58);

        if $z2 == 0 goto label12;

        $r26 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl sipProvider>;

        $r27 = virtualinvoke r2.<gov.nist.javax.sip.ListeningPointImpl: java.lang.String getTransport()>();

        $r28 = virtualinvoke $r26.<gov.nist.javax.sip.SipProviderImpl: javax.sip.ListeningPoint getListeningPoint(java.lang.String)>($r27);

        $r29 = (gov.nist.javax.sip.ListeningPointImpl) $r28;

        r72 = virtualinvoke $r29.<gov.nist.javax.sip.ListeningPointImpl: javax.sip.header.ContactHeader createContactHeader()>();

        $r30 = interfaceinvoke r72.<javax.sip.header.ContactHeader: javax.sip.address.Address getAddress()>();

        $r31 = interfaceinvoke $r30.<javax.sip.address.Address: javax.sip.address.URI getURI()>();

        $r32 = (javax.sip.address.SipURI) $r31;

        $z4 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isSecure()>();

        interfaceinvoke $r32.<javax.sip.address.SipURI: void setSecure(boolean)>($z4);

        virtualinvoke r71.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>(r72);

     label12:
        $r21 = virtualinvoke r71.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $r22 = (gov.nist.javax.sip.header.CSeq) $r21;

        $l3 = r0.<gov.nist.javax.sip.stack.SIPDialog: long localSequenceNumber>;

        $l4 = $l3 + 1L;

        virtualinvoke $r22.<gov.nist.javax.sip.header.CSeq: void setSeqNumber(long)>($l4);

     label13:
        goto label15;

     label14:
        $r57 := @caughtexception;

        r93 = (java.lang.Exception) $r57;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r93);

     label15:
        $z3 = virtualinvoke r58.<java.lang.String: boolean equals(java.lang.Object)>("SUBSCRIBE");

        if $z3 == 0 goto label16;

        r74 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.EventHeader eventHeader>;

        if r74 == null goto label16;

        virtualinvoke r71.<gov.nist.javax.sip.message.SIPRequest: void addHeader(javax.sip.header.Header)>(r74);

     label16:
        $r75 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        if $r75 == null goto label18;

        $r25 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        virtualinvoke r87.<gov.nist.javax.sip.header.From: void setTag(java.lang.String)>($r25);

     label17:
        goto label19;

     label18:
        virtualinvoke r87.<gov.nist.javax.sip.header.From: void removeTag()>();

     label19:
        $r23 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>();

        if $r23 == null goto label21;

        $r24 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>();

        virtualinvoke r88.<gov.nist.javax.sip.header.To: void setTag(java.lang.String)>($r24);

     label20:
        goto label22;

     label21:
        virtualinvoke r88.<gov.nist.javax.sip.header.To: void removeTag()>();

     label22:
        goto label24;

     label23:
        $r56 := @caughtexception;

        r94 = (java.lang.Exception) $r56;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r94);

     label24:
        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void updateRequest(gov.nist.javax.sip.message.SIPRequest)>(r71);

        return r71;

     label25:
        r89 = new java.lang.StringBuilder;

        specialinvoke r89.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dialog  ");

        $r79 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getDialogId()>();

        virtualinvoke r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r79);

        virtualinvoke r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not yet established or terminated ");

        $r80 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        virtualinvoke r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r80);

        r90 = new javax.sip.SipException;

        $r82 = virtualinvoke r89.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r90.<javax.sip.SipException: void <init>(java.lang.String)>($r82);

        throw r90;

     label26:
        r91 = new javax.sip.SipException;

        specialinvoke r91.<javax.sip.SipException: void <init>(java.lang.String)>("Dialog.createRequest(): Invalid request");

        throw r91;

     label27:
        r92 = new java.lang.NullPointerException;

        specialinvoke r92.<java.lang.NullPointerException: void <init>(java.lang.String)>("null argument");

        throw r92;

        catch java.lang.Exception from label05 to label06 with label07;
        catch javax.sip.InvalidArgumentException from label12 to label13 with label14;
        catch java.text.ParseException from label16 to label17 with label23;
        catch java.text.ParseException from label18 to label19 with label23;
        catch java.text.ParseException from label19 to label20 with label23;
        catch java.text.ParseException from label21 to label22 with label23;
    }

    private void doTargetRefresh(gov.nist.javax.sip.message.SIPMessage)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        javax.sip.header.Header $r1;
        gov.nist.javax.sip.header.Contact $r2;
        gov.nist.javax.sip.message.SIPMessage r3;
        gov.nist.javax.sip.header.ContactList r4;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r3 := @parameter0: gov.nist.javax.sip.message.SIPMessage;

        r4 = virtualinvoke r3.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContactList getContactHeaders()>();

        if r4 == null goto label1;

        $r1 = virtualinvoke r4.<gov.nist.javax.sip.header.ContactList: javax.sip.header.Header getFirst()>();

        $r2 = (gov.nist.javax.sip.header.Contact) $r1;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setRemoteTarget(javax.sip.header.ContactHeader)>($r2);

     label1:
        return;
    }

    private gov.nist.javax.sip.header.RouteList getRouteList()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r1, $r4, $r5, $r7, $r11, $r17, $r19, $r30;
        boolean $z0, $z1, $z2;
        gov.nist.javax.sip.header.RouteList $r2, $r3, $r16, $r21, $r25, r37;
        gov.nist.core.StackLogger $r6, $r18, r35, r39, r41, r43;
        java.lang.String $r10, $r13, $r15, $r22, $r24, $r33;
        java.lang.Object $r26, $r28;
        gov.nist.javax.sip.header.Route $r27, $r29;
        java.lang.Throwable $r34;
        java.lang.StringBuilder r36, r40, r42, r44;
        java.util.ListIterator r38;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        entermonitor r0;

     label1:
        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r1.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label2;

        $r30 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r35 = virtualinvoke $r30.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r36 = new java.lang.StringBuilder;

        specialinvoke r36.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getRouteList ");

        virtualinvoke r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r33 = virtualinvoke r36.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r35.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r33);

     label2:
        $r2 = new gov.nist.javax.sip.header.RouteList;

        specialinvoke $r2.<gov.nist.javax.sip.header.RouteList: void <init>()>();

        r37 = new gov.nist.javax.sip.header.RouteList;

        specialinvoke r37.<gov.nist.javax.sip.header.RouteList: void <init>()>();

        $r3 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList>;

        if $r3 == null goto label5;

        $r25 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList>;

        r38 = virtualinvoke $r25.<gov.nist.javax.sip.header.RouteList: java.util.ListIterator listIterator()>();

     label3:
        $z2 = interfaceinvoke r38.<java.util.ListIterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r26 = interfaceinvoke r38.<java.util.ListIterator: java.lang.Object next()>();

        $r27 = (gov.nist.javax.sip.header.Route) $r26;

        $r28 = virtualinvoke $r27.<gov.nist.javax.sip.header.Route: java.lang.Object clone()>();

        $r29 = (gov.nist.javax.sip.header.Route) $r28;

        virtualinvoke r37.<gov.nist.javax.sip.header.RouteList: boolean add(gov.nist.javax.sip.header.SIPHeader)>($r29);

     label4:
        goto label3;

     label5:
        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label8;

        $r5 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r6 = virtualinvoke $r5.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r6.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("----- ");

        $r7 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r39 = virtualinvoke $r7.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r40 = new java.lang.StringBuilder;

        specialinvoke r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getRouteList for ");

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke r40.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r39.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r10);

     label6:
        $r11 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r41 = virtualinvoke $r11.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r42 = new java.lang.StringBuilder;

        specialinvoke r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RouteList = ");

        $r13 = virtualinvoke r37.<gov.nist.javax.sip.header.RouteList: java.lang.String encode()>();

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke r42.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r41.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r15);

        $r16 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList>;

        if $r16 == null goto label7;

        $r19 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r43 = virtualinvoke $r19.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r44 = new java.lang.StringBuilder;

        specialinvoke r44.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("myRouteList = ");

        $r21 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList>;

        $r22 = virtualinvoke $r21.<gov.nist.javax.sip.header.RouteList: java.lang.String encode()>();

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke r44.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r43.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r24);

     label7:
        $r17 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r18 = virtualinvoke $r17.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r18.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("----- ");

     label8:
        exitmonitor r0;

        return r37;

     label9:
        $r34 := @caughtexception;

        exitmonitor r0;

        throw $r34;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label2 to label3 with label9;
        catch java.lang.Throwable from label3 to label4 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label6 to label7 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }

    private boolean isClientDialog()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        javax.sip.Transaction $r1;
        gov.nist.javax.sip.stack.SIPTransaction $r2;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.Transaction getFirstTransaction()>();

        $r2 = (gov.nist.javax.sip.stack.SIPTransaction) $r1;

        $z0 = $r2 instanceof gov.nist.javax.sip.stack.SIPClientTransaction;

        return $z0;
    }

    private static final boolean optionPresent(java.util.ListIterator, java.lang.String)
    {
        java.util.ListIterator r0;
        java.lang.String r1, $r4;
        javax.sip.header.OptionTag r2;
        boolean $z0, $z1;
        java.lang.Object $r3;

        r0 := @parameter0: java.util.ListIterator;

        r1 := @parameter1: java.lang.String;

     label1:
        $z0 = interfaceinvoke r0.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r0.<java.util.ListIterator: java.lang.Object next()>();

        r2 = (javax.sip.header.OptionTag) $r3;

        if r2 == null goto label2;

        $r4 = interfaceinvoke r2.<javax.sip.header.OptionTag: java.lang.String getOptionTag()>();

        $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    private void printRouteList()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r1, $r2, $r7;
        boolean $z0;
        java.lang.StringBuilder $r3, $r8;
        java.lang.String $r6, $r11, $r13;
        gov.nist.javax.sip.header.RouteList $r10;
        gov.nist.core.StackLogger r14, r16;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r1.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r14 = virtualinvoke $r2.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("this : ");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r14.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r6);

        $r7 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r16 = virtualinvoke $r7.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("printRouteList : ");

        $r10 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList>;

        $r11 = virtualinvoke $r10.<gov.nist.javax.sip.header.RouteList: java.lang.String encode()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r16.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r13);

     label1:
        return;
    }

    private void raiseErrorEvent(int)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        int i0;
        java.util.Set r2, $r4, $r5;
        gov.nist.javax.sip.stack.SIPDialogErrorEvent $r3;
        boolean $z0;
        java.lang.Object $r6;
        gov.nist.javax.sip.stack.SIPDialogEventListener $r7;
        java.lang.Throwable $r8;
        java.util.Iterator r9;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        i0 := @parameter0: int;

        $r3 = new gov.nist.javax.sip.stack.SIPDialogErrorEvent;

        specialinvoke $r3.<gov.nist.javax.sip.stack.SIPDialogErrorEvent: void <init>(gov.nist.javax.sip.stack.SIPDialog,int)>(r0, i0);

        r2 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.util.Set eventListeners>;

        entermonitor r2;

     label1:
        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.util.Set eventListeners>;

        r9 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (gov.nist.javax.sip.stack.SIPDialogEventListener) $r6;

        interfaceinvoke $r7.<gov.nist.javax.sip.stack.SIPDialogEventListener: void dialogErrorEvent(gov.nist.javax.sip.stack.SIPDialogErrorEvent)>($r3);

     label3:
        goto label2;

     label4:
        exitmonitor r2;

     label5:
        $r5 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.util.Set eventListeners>;

        interfaceinvoke $r5.<java.util.Set: void clear()>();

        if i0 == 2 goto label6;

        if i0 == 1 goto label6;

        if i0 == 3 goto label6;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void delete()>();

     label6:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void stopTimer()>();

        return;

     label7:
        $r8 := @caughtexception;

     label8:
        exitmonitor r2;

     label9:
        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label2 to label3 with label7;
        catch java.lang.Throwable from label4 to label5 with label7;
        catch java.lang.Throwable from label8 to label9 with label7;
    }

    private void raiseIOException(java.lang.String, int, java.lang.String)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        int i0, $i1;
        java.lang.String r1, r4;
        javax.sip.IOExceptionEvent $r2;
        gov.nist.javax.sip.SipProviderImpl $r3;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r4 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r2 = new javax.sip.IOExceptionEvent;

        specialinvoke $r2.<javax.sip.IOExceptionEvent: void <init>(java.lang.Object,java.lang.String,int,java.lang.String)>(r0, r4, i0, r1);

        $r3 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl sipProvider>;

        virtualinvoke $r3.<gov.nist.javax.sip.SipProviderImpl: void handleEvent(java.util.EventObject,gov.nist.javax.sip.stack.SIPTransaction)>($r2, null);

        $i1 = <gov.nist.javax.sip.stack.SIPDialog: int TERMINATED_STATE>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i1);

        return;
    }

    private void recordStackTrace()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.io.StringWriter $r3;
        java.io.PrintWriter $r4;
        java.lang.Exception $r5;
        java.lang.StringBuffer $r6;
        java.lang.String $r7;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r3 = new java.io.StringWriter;

        specialinvoke $r3.<java.io.StringWriter: void <init>()>();

        $r4 = new java.io.PrintWriter;

        specialinvoke $r4.<java.io.PrintWriter: void <init>(java.io.Writer)>($r3);

        $r5 = new java.lang.Exception;

        specialinvoke $r5.<java.lang.Exception: void <init>()>();

        virtualinvoke $r5.<java.lang.Exception: void printStackTrace(java.io.PrintWriter)>($r4);

        $r6 = virtualinvoke $r3.<java.io.StringWriter: java.lang.StringBuffer getBuffer()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String stackTrace> = $r7;

        return;
    }

    private void sendAck(javax.sip.message.Request, boolean) throws javax.sip.SipException
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z10, $z11, $z12, $z13, z14;
        gov.nist.javax.sip.stack.SIPTransactionStack $r1, $r5, $r12, $r26, $r29, $r31, $r43, $r44, $r50, $r58, $r63, $r68, $r72, $r74, $r80, $r87, $r92, $r98, $r99, $r102, $r104;
        java.lang.String $r2, $r11, $r17, $r19, $r22, $r25, $r27, $r28, $r33, $r37, $r38, $r49, $r53, $r55, $r57, $r60, $r62, $r65, $r67, $r71, $r79, $r84, $r86, $r91, $r96, $r108, $r109, $r112;
        javax.sip.DialogState $r4, $r8, $r20;
        int $i0, $i1, $i2, $i7;
        javax.sip.header.CallIdHeader $r21, $r24, $r77, $r83;
        gov.nist.javax.sip.message.SIPRequest $r23, $r40, r114;
        gov.nist.javax.sip.SipProviderImpl $r32;
        javax.sip.ListeningPoint $r34;
        gov.nist.javax.sip.stack.MessageProcessor $r39;
        javax.sip.header.CSeqHeader $r41, $r42;
        long $l3, $l4, $l5, $l6;
        javax.sip.header.ToHeader $r54;
        javax.sip.header.FromHeader $r56;
        java.lang.Throwable $r97, $r106, $r110;
        gov.nist.core.StackLogger $r100, $r105, r115, r117, r119, r121, r123, r125, r127, r130, r135, r144;
        java.lang.Exception $r101;
        javax.sip.message.Request r113;
        javax.sip.address.Hop r129;
        gov.nist.javax.sip.ListeningPointImpl r132;
        java.net.InetAddress r133;
        gov.nist.javax.sip.stack.MessageChannel r134;
        gov.nist.javax.sip.stack.SIPDialog$DialogDeleteTask r142;
        java.lang.StringBuilder r147, r148, r149, r150, r152, r153, r154, r155, r156, r157, r163, r164;
        javax.sip.SipException r151, r158, r159, r160, r161, r162, r165, r166;
        java.text.ParseException r167;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r113 := @parameter0: javax.sip.message.Request;

        z0 := @parameter1: boolean;

        r114 = (gov.nist.javax.sip.message.SIPRequest) r113;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r1.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label01;

        $r92 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r115 = virtualinvoke $r92.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r147 = new java.lang.StringBuilder;

        specialinvoke r147.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendAck");

        virtualinvoke r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r96 = virtualinvoke r147.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r115.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r96);

     label01:
        $r2 = virtualinvoke r114.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("ACK");

        if $z2 == 0 goto label34;

        $r4 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        if $r4 == null goto label32;

        $r20 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $i0 = virtualinvoke $r20.<javax.sip.DialogState: int getValue()>();

        $i1 = <gov.nist.javax.sip.stack.SIPDialog: int EARLY_STATE>;

        if $i0 != $i1 goto label02;

        goto label32;

     label02:
        $r21 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.CallIdHeader getCallId()>();

        $r22 = interfaceinvoke $r21.<javax.sip.header.CallIdHeader: java.lang.String getCallId()>();

        $r23 = (gov.nist.javax.sip.message.SIPRequest) r113;

        $r24 = virtualinvoke $r23.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CallIdHeader getCallId()>();

        $r25 = interfaceinvoke $r24.<javax.sip.header.CallIdHeader: java.lang.String getCallId()>();

        $z4 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>($r25);

        if $z4 != 0 goto label04;

        $r72 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z11 = virtualinvoke $r72.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z11 == 0 goto label03;

        $r74 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r117 = virtualinvoke $r74.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r148 = new java.lang.StringBuilder;

        specialinvoke r148.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CallID ");

        $r77 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.CallIdHeader getCallId()>();

        virtualinvoke r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r77);

        $r79 = virtualinvoke r148.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r117.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r79);

        $r80 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r119 = virtualinvoke $r80.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r149 = new java.lang.StringBuilder;

        specialinvoke r149.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RequestCallID = ");

        $r83 = virtualinvoke r114.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CallIdHeader getCallId()>();

        $r84 = interfaceinvoke $r83.<javax.sip.header.CallIdHeader: java.lang.String getCallId()>();

        virtualinvoke r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84);

        $r86 = virtualinvoke r149.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r119.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r86);

        $r87 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r121 = virtualinvoke $r87.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r150 = new java.lang.StringBuilder;

        specialinvoke r150.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dialog =  ");

        virtualinvoke r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r91 = virtualinvoke r150.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r121.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r91);

     label03:
        r151 = new javax.sip.SipException;

        specialinvoke r151.<javax.sip.SipException: void <init>(java.lang.String)>("Bad call ID in request");

        throw r151;

     label04:
        $r26 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z5 = virtualinvoke $r26.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z5 == 0 goto label05;

        $r58 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r123 = virtualinvoke $r58.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r152 = new java.lang.StringBuilder;

        specialinvoke r152.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setting from tag For outgoing ACK= ");

        $r60 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        virtualinvoke r152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r62 = virtualinvoke r152.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r123.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r62);

        $r63 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r125 = virtualinvoke $r63.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r153 = new java.lang.StringBuilder;

        specialinvoke r153.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setting To tag for outgoing ACK = ");

        $r65 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>();

        virtualinvoke r153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        $r67 = virtualinvoke r153.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r125.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r67);

        $r68 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r127 = virtualinvoke $r68.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r154 = new java.lang.StringBuilder;

        specialinvoke r154.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ack = ");

        virtualinvoke r154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r114);

        $r71 = virtualinvoke r154.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r127.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r71);

     label05:
        $r27 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        if $r27 == null goto label06;

        $r56 = virtualinvoke r114.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.FromHeader getFrom()>();

        $r57 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        interfaceinvoke $r56.<javax.sip.header.FromHeader: void setTag(java.lang.String)>($r57);

     label06:
        $r28 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>();

        if $r28 == null goto label07;

        $r54 = virtualinvoke r114.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.ToHeader getTo()>();

        $r55 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>();

        interfaceinvoke $r54.<javax.sip.header.ToHeader: void setTag(java.lang.String)>($r55);

     label07:
        $r29 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r129 = virtualinvoke $r29.<gov.nist.javax.sip.stack.SIPTransactionStack: javax.sip.address.Hop getNextHop(gov.nist.javax.sip.message.SIPRequest)>(r114);

        if r129 == null goto label30;

     label08:
        $r31 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z6 = virtualinvoke $r31.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z6 == 0 goto label09;

        $r50 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r130 = virtualinvoke $r50.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r155 = new java.lang.StringBuilder;

        specialinvoke r155.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hop = ");

        virtualinvoke r155.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r129);

        $r53 = virtualinvoke r155.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r130.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r53);

     label09:
        $r32 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl sipProvider>;

        $r33 = interfaceinvoke r129.<javax.sip.address.Hop: java.lang.String getTransport()>();

        $r34 = virtualinvoke $r32.<gov.nist.javax.sip.SipProviderImpl: javax.sip.ListeningPoint getListeningPoint(java.lang.String)>($r33);

        r132 = (gov.nist.javax.sip.ListeningPointImpl) $r34;

     label10:
        if r132 == null goto label21;

     label11:
        $r38 = interfaceinvoke r129.<javax.sip.address.Hop: java.lang.String getHost()>();

        r133 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>($r38);

        $r39 = virtualinvoke r132.<gov.nist.javax.sip.ListeningPointImpl: gov.nist.javax.sip.stack.MessageProcessor getMessageProcessor()>();

        $i2 = interfaceinvoke r129.<javax.sip.address.Hop: int getPort()>();

        r134 = virtualinvoke $r39.<gov.nist.javax.sip.stack.MessageProcessor: gov.nist.javax.sip.stack.MessageChannel createMessageChannel(java.net.InetAddress,int)>(r133, $i2);

     label12:
        z14 = 0;

     label13:
        $r40 = (gov.nist.javax.sip.message.SIPRequest) r113;

        $r41 = virtualinvoke $r40.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $l3 = interfaceinvoke $r41.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $z7 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isAckSent(long)>($l3);

        if $z7 != 0 goto label15;

     label14:
        z14 = 1;

     label15:
        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setLastAckSent(gov.nist.javax.sip.message.SIPRequest)>(r114);

        virtualinvoke r134.<gov.nist.javax.sip.stack.MessageChannel: void sendMessage(gov.nist.javax.sip.message.SIPMessage)>(r114);

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isAcknowledged> = 1;

        $l4 = r0.<gov.nist.javax.sip.stack.SIPDialog: long highestSequenceNumberAcknowledged>;

        $r42 = virtualinvoke r114.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $l5 = interfaceinvoke $r42.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $l6 = staticinvoke <java.lang.Math: long max(long,long)>($l4, $l5);

        r0.<gov.nist.javax.sip.stack.SIPDialog: long highestSequenceNumberAcknowledged> = $l6;

     label16:
        if z14 == 0 goto label19;

     label17:
        $z10 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isBackToBackUserAgent>;

        if $z10 == 0 goto label19;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void releaseAckSem()>();

     label18:
        goto label27;

     label19:
        $r43 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z8 = virtualinvoke $r43.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z8 == 0 goto label27;

        $r44 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r135 = virtualinvoke $r44.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r156 = new java.lang.StringBuilder;

        specialinvoke r156.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r156.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not releasing ack sem for ");

        virtualinvoke r156.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke r156.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isAckSent ");

        virtualinvoke r156.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z14);

        $r49 = virtualinvoke r156.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r135.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r49);

     label20:
        goto label27;

     label21:
        r158 = new javax.sip.SipException;

        r157 = new java.lang.StringBuilder;

        specialinvoke r157.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No listening point for this provider registered at ");

        virtualinvoke r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r129);

        $r37 = virtualinvoke r157.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r158.<javax.sip.SipException: void <init>(java.lang.String)>($r37);

        throw r158;

     label22:
        $r101 := @caughtexception;

        $r102 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z13 = virtualinvoke $r102.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z13 == 0 goto label23;

        $r104 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r105 = virtualinvoke $r104.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r105.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>($r101);

     label23:
        r159 = new javax.sip.SipException;

        specialinvoke r159.<javax.sip.SipException: void <init>(java.lang.String,java.lang.Throwable)>("Could not create message channel", $r101);

        throw r159;

     label24:
        $r97 := @caughtexception;

        $r98 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z12 = virtualinvoke $r98.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z12 == 0 goto label25;

        $r99 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r100 = virtualinvoke $r99.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r100.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>($r97);

     label25:
        throw $r97;

     label26:
        $r106 := @caughtexception;

        if z0 != 0 goto label29;

        $r108 = interfaceinvoke r129.<javax.sip.address.Hop: java.lang.String getHost()>();

        $i7 = interfaceinvoke r129.<javax.sip.address.Hop: int getPort()>();

        $r109 = interfaceinvoke r129.<javax.sip.address.Hop: java.lang.String getTransport()>();

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void raiseIOException(java.lang.String,int,java.lang.String)>($r108, $i7, $r109);

     label27:
        r142 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogDeleteTask dialogDeleteTask>;

        if r142 == null goto label28;

        virtualinvoke r142.<gov.nist.javax.sip.stack.SIPDialog$DialogDeleteTask: boolean cancel()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogDeleteTask dialogDeleteTask> = null;

     label28:
        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean ackSeen> = 1;

        return;

     label29:
        r160 = new javax.sip.SipException;

        specialinvoke r160.<javax.sip.SipException: void <init>(java.lang.String,java.lang.Throwable)>("Could not send ack", $r106);

        throw r160;

     label30:
        r161 = new javax.sip.SipException;

        specialinvoke r161.<javax.sip.SipException: void <init>(java.lang.String)>("No route!");

        throw r161;

     label31:
        $r110 := @caughtexception;

        r162 = new javax.sip.SipException;

        r167 = (java.text.ParseException) $r110;

        $r112 = virtualinvoke r167.<java.text.ParseException: java.lang.String getMessage()>();

        specialinvoke r162.<javax.sip.SipException: void <init>(java.lang.String)>($r112);

        throw r162;

     label32:
        $r5 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z3 = virtualinvoke $r5.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z3 == 0 goto label33;

        $r12 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r144 = virtualinvoke $r12.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r163 = new java.lang.StringBuilder;

        specialinvoke r163.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r163.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad Dialog State for ");

        virtualinvoke r163.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke r163.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dialogID = ");

        $r17 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getDialogId()>();

        virtualinvoke r163.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke r163.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r144.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r19);

     label33:
        r164 = new java.lang.StringBuilder;

        specialinvoke r164.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad dialog state ");

        $r8 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        virtualinvoke r164.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        r165 = new javax.sip.SipException;

        $r11 = virtualinvoke r164.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r165.<javax.sip.SipException: void <init>(java.lang.String)>($r11);

        throw r165;

     label34:
        r166 = new javax.sip.SipException;

        specialinvoke r166.<javax.sip.SipException: void <init>(java.lang.String)>("Bad request method -- should be ACK");

        throw r166;

        catch java.text.ParseException from label04 to label05 with label31;
        catch java.text.ParseException from label05 to label06 with label31;
        catch java.text.ParseException from label06 to label07 with label31;
        catch java.io.IOException from label08 to label09 with label26;
        catch javax.sip.SipException from label08 to label09 with label24;
        catch java.lang.Exception from label08 to label09 with label22;
        catch java.io.IOException from label09 to label10 with label26;
        catch javax.sip.SipException from label09 to label10 with label24;
        catch java.lang.Exception from label09 to label10 with label22;
        catch java.io.IOException from label11 to label12 with label26;
        catch javax.sip.SipException from label11 to label12 with label24;
        catch java.lang.Exception from label11 to label12 with label22;
        catch java.io.IOException from label13 to label14 with label26;
        catch javax.sip.SipException from label13 to label14 with label24;
        catch java.lang.Exception from label13 to label14 with label22;
        catch java.io.IOException from label15 to label16 with label26;
        catch javax.sip.SipException from label15 to label16 with label24;
        catch java.lang.Exception from label15 to label16 with label22;
        catch java.io.IOException from label17 to label18 with label26;
        catch javax.sip.SipException from label17 to label18 with label24;
        catch java.lang.Exception from label17 to label18 with label22;
        catch java.io.IOException from label19 to label20 with label26;
        catch javax.sip.SipException from label19 to label20 with label24;
        catch java.lang.Exception from label19 to label20 with label22;
        catch java.io.IOException from label21 to label22 with label26;
        catch javax.sip.SipException from label21 to label22 with label24;
        catch java.lang.Exception from label21 to label22 with label22;
    }

    private void setCallId(gov.nist.javax.sip.message.SIPRequest)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.message.SIPRequest r1;
        javax.sip.header.CallIdHeader $r2;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPRequest;

        $r2 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CallIdHeader getCallId()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.CallIdHeader callIdHeader> = $r2;

        return;
    }

    private void setLastAckReceived(gov.nist.javax.sip.message.SIPRequest)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.message.SIPRequest r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPRequest;

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest lastAckReceived> = r1;

        return;
    }

    private void setLastAckSent(gov.nist.javax.sip.message.SIPRequest)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.message.SIPRequest r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPRequest;

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest lastAckSent> = r1;

        return;
    }

    private void setLocalParty(gov.nist.javax.sip.message.SIPMessage)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.message.SIPMessage r1;
        boolean $z0;
        javax.sip.header.ToHeader $r2;
        javax.sip.address.Address $r3, $r5;
        javax.sip.header.FromHeader $r4;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPMessage;

        $z0 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isServer()>();

        if $z0 != 0 goto label1;

        $r4 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.FromHeader getFrom()>();

        $r5 = interfaceinvoke $r4.<javax.sip.header.FromHeader: javax.sip.address.Address getAddress()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address localParty> = $r5;

        goto label2;

     label1:
        $r2 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ToHeader getTo()>();

        $r3 = interfaceinvoke $r2.<javax.sip.header.ToHeader: javax.sip.address.Address getAddress()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address localParty> = $r3;

     label2:
        return;
    }

    private void setLocalSequenceNumber(long)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        long l0, $l1, $l3;
        gov.nist.core.StackLogger r1;
        gov.nist.javax.sip.stack.SIPTransactionStack $r3, $r5;
        boolean $z0;
        byte $b2;
        java.lang.RuntimeException $r4;
        java.lang.StringBuilder $r6;
        java.lang.String $r11;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        l0 := @parameter0: long;

        $r3 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r1 = virtualinvoke $r5.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setLocalSequenceNumber: original  ");

        $l3 = r0.<gov.nist.javax.sip.stack.SIPDialog: long localSequenceNumber>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" new  = ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r11);

     label1:
        $l1 = r0.<gov.nist.javax.sip.stack.SIPDialog: long localSequenceNumber>;

        $b2 = l0 cmp $l1;

        if $b2 <= 0 goto label2;

        r0.<gov.nist.javax.sip.stack.SIPDialog: long localSequenceNumber> = l0;

        return;

     label2:
        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Sequence number should not decrease !");

        throw $r4;
    }

    private void setLocalTag(java.lang.String)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.lang.String r1, $r10, $r12;
        gov.nist.core.StackLogger r2, $r14;
        gov.nist.javax.sip.stack.SIPTransactionStack $r4, $r5, $r13;
        boolean $z0;
        java.lang.StringBuilder $r6;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r2 = virtualinvoke $r5.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("set Local tag ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String dialogId>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r12);

        $r13 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r14 = virtualinvoke $r13.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r14.<gov.nist.core.StackLogger: void logStackTrace()>();

     label1:
        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String myTag> = r1;

        return;
    }

    private void setRemoteParty(gov.nist.javax.sip.message.SIPMessage)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean $z0, $z1;
        javax.sip.header.FromHeader $r2;
        javax.sip.address.Address $r3, $r8, $r12;
        gov.nist.javax.sip.stack.SIPTransactionStack $r4, $r5;
        java.lang.StringBuilder $r6;
        java.lang.String $r10;
        javax.sip.header.ToHeader $r11;
        gov.nist.javax.sip.message.SIPMessage r13;
        gov.nist.core.StackLogger r14;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r13 := @parameter0: gov.nist.javax.sip.message.SIPMessage;

        $z0 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isServer()>();

        if $z0 != 0 goto label1;

        $r11 = virtualinvoke r13.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ToHeader getTo()>();

        $r12 = interfaceinvoke $r11.<javax.sip.header.ToHeader: javax.sip.address.Address getAddress()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address remoteParty> = $r12;

        goto label2;

     label1:
        $r2 = virtualinvoke r13.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.FromHeader getFrom()>();

        $r3 = interfaceinvoke $r2.<javax.sip.header.FromHeader: javax.sip.address.Address getAddress()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address remoteParty> = $r3;

     label2:
        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label3;

        $r5 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r14 = virtualinvoke $r5.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("settingRemoteParty ");

        $r8 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address remoteParty>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r14.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r10);

     label3:
        return;
    }

    private void setRemoteTag(java.lang.String)
    {
        gov.nist.javax.sip.stack.SIPDialog r0, $r12;
        java.lang.String r1, $r10, $r17, $r22, $r27, $r36, $r40, r43;
        gov.nist.javax.sip.stack.SIPTransactionStack $r2, $r3, $r4, $r8, $r9, $r11, $r13, $r14, $r15, $r18, $r19, $r28, $r29, $r31;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7;
        gov.nist.core.StackLogger $r5, $r16, $r30, r41, r44;
        javax.sip.DialogState $r6, $r7;
        java.lang.StringBuilder $r20, $r32;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r2.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label01;

        $r31 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r41 = virtualinvoke $r31.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setRemoteTag(): ");

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" remoteTag = ");

        $r36 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String hisTag>;

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" new tag = ");

        virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r40 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r41.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r40);

     label01:
        r43 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String hisTag>;

        if r43 == null goto label08;

        if r1 == null goto label08;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r43);

        if $z2 != 0 goto label08;

        $r6 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r7 = <javax.sip.DialogState: javax.sip.DialogState EARLY>;

        if $r6 == $r7 goto label03;

        $r28 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z6 = virtualinvoke $r28.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z6 == 0 goto label02;

        $r29 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r30 = virtualinvoke $r29.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r30.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Dialog is already established -- ignoring remote tag re-assignment");

     label02:
        return;

     label03:
        $r8 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z3 = virtualinvoke $r8.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isRemoteTagReassignmentAllowed()>();

        if $z3 == 0 goto label10;

        $r9 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z4 = virtualinvoke $r9.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z4 == 0 goto label04;

        $r19 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r44 = virtualinvoke $r19.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UNSAFE OPERATION !  tag re-assignment ");

        $r22 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String hisTag>;

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" trying to set to ");

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can cause unexpected effects ");

        $r27 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r44.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r27);

     label04:
        z7 = 0;

        $r11 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r10 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String dialogId>;

        $r12 = virtualinvoke $r11.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.SIPDialog getDialog(java.lang.String)>($r10);

        if $r12 != r0 goto label05;

        $r18 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r17 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String dialogId>;

        virtualinvoke $r18.<gov.nist.javax.sip.stack.SIPTransactionStack: void removeDialog(java.lang.String)>($r17);

        z7 = 1;

     label05:
        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String dialogId> = null;

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String hisTag> = r1;

        if z7 == 0 goto label07;

        $r13 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z5 = virtualinvoke $r13.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z5 == 0 goto label06;

        $r15 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r16 = virtualinvoke $r15.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r16.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("ReInserting Dialog");

     label06:
        $r14 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        virtualinvoke $r14.<gov.nist.javax.sip.stack.SIPTransactionStack: void putDialog(gov.nist.javax.sip.stack.SIPDialog)>(r0);

     label07:
        goto label10;

     label08:
        if r1 == null goto label09;

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String hisTag> = r1;

        goto label10;

     label09:
        $r3 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label10;

        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r5 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r5.<gov.nist.core.StackLogger: void logWarning(java.lang.String)>("setRemoteTag : called with null argument ");

     label10:
        return;
    }

    private static void storeFirstTransactionInfo(gov.nist.javax.sip.stack.SIPDialog, gov.nist.javax.sip.stack.SIPTransaction)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean $z0, $z1, $z2;
        javax.sip.message.Request $r1;
        javax.sip.address.URI $r2;
        java.lang.String $r3, $r4, $r5;
        int $i0;
        gov.nist.javax.sip.message.SIPRequest $r6;
        gov.nist.javax.sip.header.Contact $r7, r11;
        gov.nist.javax.sip.stack.SIPServerTransaction $r8;
        gov.nist.javax.sip.stack.SIPTransaction r9;
        gov.nist.javax.sip.message.SIPResponse r10;
        gov.nist.javax.sip.stack.SIPClientTransaction r12;

        r0 := @parameter0: gov.nist.javax.sip.stack.SIPDialog;

        r9 := @parameter1: gov.nist.javax.sip.stack.SIPTransaction;

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransaction firstTransaction> = r9;

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean firstTransactionSeen> = 1;

        $z0 = virtualinvoke r9.<gov.nist.javax.sip.stack.SIPTransaction: boolean isServerTransaction()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean firstTransactionIsServerTransaction> = $z0;

        $r1 = virtualinvoke r9.<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.message.Request getRequest()>();

        $r2 = interfaceinvoke $r1.<javax.sip.message.Request: javax.sip.address.URI getRequestURI()>();

        $r3 = interfaceinvoke $r2.<javax.sip.address.URI: java.lang.String getScheme()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("sips");

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean firstTransactionSecure> = $z1;

        $i0 = virtualinvoke r9.<gov.nist.javax.sip.stack.SIPTransaction: int getPort()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: int firstTransactionPort> = $i0;

        $r4 = virtualinvoke r9.<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getBranchId()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String firstTransactionId> = $r4;

        $r5 = virtualinvoke r9.<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getMethod()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String firstTransactionMethod> = $r5;

        $z2 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isServer()>();

        if $z2 == 0 goto label3;

        $r8 = (gov.nist.javax.sip.stack.SIPServerTransaction) r9;

        r10 = virtualinvoke $r8.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse getLastResponse()>();

        if r10 == null goto label1;

        r11 = virtualinvoke r10.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.Contact getContactHeader()>();

        goto label2;

     label1:
        r11 = null;

     label2:
        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.Contact contactHeader> = r11;

        goto label4;

     label3:
        r12 = (gov.nist.javax.sip.stack.SIPClientTransaction) r9;

        if r12 == null goto label4;

        $r6 = virtualinvoke r12.<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r7 = virtualinvoke $r6.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.Contact getContactHeader()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.Contact contactHeader> = $r7;

     label4:
        return;
    }

    private boolean toRetransmitFinalResponse(int)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        int i0, $i1, $i2, $i3, $i4, i5, i6;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        i0 := @parameter0: int;

        $i1 = r0.<gov.nist.javax.sip.stack.SIPDialog: int retransmissionTicksLeft>;

        i5 = $i1 - 1;

        r0.<gov.nist.javax.sip.stack.SIPDialog: int retransmissionTicksLeft> = i5;

        if i5 != 0 goto label3;

        i6 = r0.<gov.nist.javax.sip.stack.SIPDialog: int prevRetransmissionTicks>;

        $i2 = i6 * 2;

        if $i2 > i0 goto label1;

        $i4 = i6 * 2;

        r0.<gov.nist.javax.sip.stack.SIPDialog: int retransmissionTicksLeft> = $i4;

        goto label2;

     label1:
        r0.<gov.nist.javax.sip.stack.SIPDialog: int retransmissionTicksLeft> = i6;

     label2:
        $i3 = r0.<gov.nist.javax.sip.stack.SIPDialog: int retransmissionTicksLeft>;

        r0.<gov.nist.javax.sip.stack.SIPDialog: int prevRetransmissionTicks> = $i3;

        return 1;

     label3:
        return 0;
    }

    private void updateRequest(gov.nist.javax.sip.message.SIPRequest)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.message.SIPRequest r1;
        gov.nist.javax.sip.header.RouteList r2;
        int $i0;
        javax.sip.header.UserAgentHeader $r3, $r4;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPRequest;

        r2 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList getRouteList()>();

        $i0 = virtualinvoke r2.<gov.nist.javax.sip.header.RouteList: int size()>();

        if $i0 <= 0 goto label1;

        virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>(r2);

        goto label2;

     label1:
        virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: void removeHeader(java.lang.String)>("Route");

     label2:
        $r3 = staticinvoke <gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.UserAgentHeader getDefaultUserAgentHeader()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.UserAgentHeader getDefaultUserAgentHeader()>();

        virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>($r4);

     label3:
        return;
    }

    void ackReceived(gov.nist.javax.sip.message.SIPRequest)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPServerTransaction r1;
        boolean $z0, $z1, $z2;
        long $l0, $l1;
        javax.sip.header.CSeqHeader $r2;
        byte $b2;
        gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask $r3, $r13;
        gov.nist.javax.sip.stack.SIPTransactionStack $r4, $r5, $r11;
        int $i3, $i4;
        java.lang.StringBuilder $r6;
        java.lang.String $r8, $r10;
        gov.nist.core.StackLogger $r12, r17;
        java.lang.Throwable $r14;
        gov.nist.javax.sip.message.SIPRequest r15;
        gov.nist.javax.sip.stack.SIPDialog$DialogDeleteTask r16;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r15 := @parameter0: gov.nist.javax.sip.message.SIPRequest;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean ackSeen>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r1 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPServerTransaction getInviteTransaction()>();

        if r1 == null goto label8;

        $l0 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPServerTransaction: long getCSeq()>();

        $r2 = virtualinvoke r15.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $l1 = interfaceinvoke $r2.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label8;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void acquireTimerTaskSem()>();

     label2:
        $r3 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask>;

        if $r3 == null goto label3;

        $r13 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask>;

        virtualinvoke $r13.<gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask: boolean cancel()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask> = null;

     label3:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void releaseTimerTaskSem()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean ackSeen> = 1;

        r16 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogDeleteTask dialogDeleteTask>;

        if r16 == null goto label4;

        virtualinvoke r16.<gov.nist.javax.sip.stack.SIPDialog$DialogDeleteTask: boolean cancel()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogDeleteTask dialogDeleteTask> = null;

     label4:
        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setLastAckReceived(gov.nist.javax.sip.message.SIPRequest)>(r15);

        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label5;

        $r5 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r17 = virtualinvoke $r5.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ackReceived for ");

        $r8 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getMethod()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r17.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r10);

        $r11 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r12 = virtualinvoke $r11.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $i4 = interfaceinvoke $r12.<gov.nist.core.StackLogger: int getLineCount()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: int ackLine> = $i4;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void printDebugInfo()>();

     label5:
        $z2 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isBackToBackUserAgent>;

        if $z2 == 0 goto label6;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void releaseAckSem()>();

     label6:
        $i3 = <gov.nist.javax.sip.stack.SIPDialog: int CONFIRMED_STATE>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i3);

        goto label8;

     label7:
        $r14 := @caughtexception;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void releaseTimerTaskSem()>();

        throw $r14;

     label8:
        return;

        catch java.lang.Throwable from label2 to label3 with label7;
    }

    public void acquireTimerTaskSem()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.util.concurrent.TimeUnit $r2;
        java.util.concurrent.Semaphore $r3;
        java.lang.IllegalStateException $r4;
        java.lang.Throwable $r5;
        boolean z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

     label1:
        $r3 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.util.concurrent.Semaphore timerTaskLock>;

        $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        z0 = virtualinvoke $r3.<java.util.concurrent.Semaphore: boolean tryAcquire(long,java.util.concurrent.TimeUnit)>(10L, $r2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        z0 = 0;

     label4:
        if z0 == 0 goto label5;

        return;

     label5:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Impossible to acquire the dialog timer task lock");

        throw $r4;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public void addEventListener(gov.nist.javax.sip.stack.SIPDialogEventListener)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPDialogEventListener r1;
        java.util.Set $r2;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.stack.SIPDialogEventListener;

        $r2 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.util.Set eventListeners>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void addRoute(gov.nist.javax.sip.message.SIPRequest)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.lang.StringBuilder r1;
        gov.nist.javax.sip.stack.SIPTransactionStack $r2, $r6;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        javax.sip.header.Header $r3;
        javax.sip.header.ContactHeader $r4;
        java.lang.String $r5, $r12, r16;
        javax.sip.DialogState $r10;
        java.lang.Throwable $r13;
        gov.nist.javax.sip.message.SIPRequest r14;
        gov.nist.core.StackLogger r15;
        gov.nist.javax.sip.header.RecordRouteList r17;
        gov.nist.javax.sip.header.RouteList r18;
        gov.nist.javax.sip.header.ContactList r19;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r14 := @parameter0: gov.nist.javax.sip.message.SIPRequest;

        entermonitor r0;

     label01:
        $r2 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r2.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label02;

        $r6 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r15 = virtualinvoke $r6.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setContact: dialogState: ");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state = ");

        $r10 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r15.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r12);

     label02:
        $i1 = r0.<gov.nist.javax.sip.stack.SIPDialog: int dialogState>;

        $i0 = <gov.nist.javax.sip.stack.SIPDialog: int CONFIRMED_STATE>;

        if $i1 != $i0 goto label03;

        $r5 = virtualinvoke r14.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z1 = staticinvoke <gov.nist.javax.sip.message.SIPRequest: boolean isTargetRefresh(java.lang.String)>($r5);

        if $z1 == 0 goto label03;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void doTargetRefresh(gov.nist.javax.sip.message.SIPMessage)>(r14);

     label03:
        $i4 = r0.<gov.nist.javax.sip.stack.SIPDialog: int dialogState>;

        $i5 = <gov.nist.javax.sip.stack.SIPDialog: int CONFIRMED_STATE>;

        if $i4 == $i5 goto label16;

        $i3 = r0.<gov.nist.javax.sip.stack.SIPDialog: int dialogState>;

        $i2 = <gov.nist.javax.sip.stack.SIPDialog: int TERMINATED_STATE>;

        if $i3 != $i2 goto label05;

     label04:
        goto label16;

     label05:
        r16 = virtualinvoke r14.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getToTag()>();

     label06:
        if r16 == null goto label07;

        exitmonitor r0;

        return;

     label07:
        r17 = virtualinvoke r14.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RecordRouteList getRecordRouteHeaders()>();

     label08:
        if r17 == null goto label11;

     label09:
        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void addRoute(gov.nist.javax.sip.header.RecordRouteList)>(r17);

     label10:
        goto label12;

     label11:
        r18 = new gov.nist.javax.sip.header.RouteList;

        specialinvoke r18.<gov.nist.javax.sip.header.RouteList: void <init>()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList> = r18;

     label12:
        r19 = virtualinvoke r14.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.ContactList getContactHeaders()>();

     label13:
        if r19 == null goto label15;

     label14:
        $r3 = virtualinvoke r19.<gov.nist.javax.sip.header.ContactList: javax.sip.header.Header getFirst()>();

        $r4 = (javax.sip.header.ContactHeader) $r3;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setRemoteTarget(javax.sip.header.ContactHeader)>($r4);

     label15:
        exitmonitor r0;

        return;

     label16:
        exitmonitor r0;

        return;

     label17:
        $r13 := @caughtexception;

        exitmonitor r0;

        throw $r13;

        catch java.lang.Throwable from label01 to label02 with label17;
        catch java.lang.Throwable from label02 to label03 with label17;
        catch java.lang.Throwable from label03 to label04 with label17;
        catch java.lang.Throwable from label05 to label06 with label17;
        catch java.lang.Throwable from label07 to label08 with label17;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label11 to label12 with label17;
        catch java.lang.Throwable from label12 to label13 with label17;
        catch java.lang.Throwable from label14 to label15 with label17;
    }

    public void addTransaction(gov.nist.javax.sip.stack.SIPTransaction)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPTransaction r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.lang.String $r2, $r3, $r9, $r12, $r14, $r18, $r22, $r26, $r27, $r29, $r36, $r37, $r40, $r41, $r42, $r43, r45;
        gov.nist.javax.sip.stack.SIPTransactionStack $r4, $r5, $r15, $r23, $r32, $r33;
        java.lang.StringBuilder $r6, $r16;
        gov.nist.core.StackLogger $r24, $r34, r46, r48;
        javax.sip.header.CSeqHeader $r25, $r30;
        long $l0, $l1, $l2;
        gov.nist.javax.sip.message.SIPRequest $r28, r44;
        javax.sip.header.FromHeader $r31, $r35;
        javax.sip.header.Header $r38;
        javax.sip.header.EventHeader $r39;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.stack.SIPTransaction;

        r44 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $z0 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean firstTransactionSeen>;

        if $z0 == 0 goto label1;

        $r40 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String firstTransactionId>;

        $r41 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getBranchId()>();

        $z9 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>($r41);

        if $z9 != 0 goto label1;

        $r42 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getMethod()>();

        $r43 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String firstTransactionMethod>;

        $z10 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>($r43);

        if $z10 == 0 goto label1;

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean reInviteFlag> = 1;

     label1:
        $z11 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean firstTransactionSeen>;

        if $z11 != 0 goto label6;

        staticinvoke <gov.nist.javax.sip.stack.SIPDialog: void storeFirstTransactionInfo(gov.nist.javax.sip.stack.SIPDialog,gov.nist.javax.sip.stack.SIPTransaction)>(r0, r1);

        $r27 = virtualinvoke r44.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z6 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>("SUBSCRIBE");

        if $z6 == 0 goto label2;

        $r38 = virtualinvoke r44.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.Header getHeader(java.lang.String)>("Event");

        $r39 = (javax.sip.header.EventHeader) $r38;

        r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.EventHeader eventHeader> = $r39;

     label2:
        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setLocalParty(gov.nist.javax.sip.message.SIPMessage)>(r44);

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setRemoteParty(gov.nist.javax.sip.message.SIPMessage)>(r44);

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setCallId(gov.nist.javax.sip.message.SIPRequest)>(r44);

        $r28 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest originalRequest>;

        if $r28 != null goto label3;

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest originalRequest> = r44;

     label3:
        $r29 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String method>;

        if $r29 != null goto label4;

        $r37 = virtualinvoke r44.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String method> = $r37;

     label4:
        $z7 = r1 instanceof gov.nist.javax.sip.stack.SIPServerTransaction;

        if $z7 == 0 goto label5;

        $r35 = virtualinvoke r44.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.FromHeader getFrom()>();

        $r36 = interfaceinvoke $r35.<javax.sip.header.FromHeader: java.lang.String getTag()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String hisTag> = $r36;

        goto label7;

     label5:
        $r30 = virtualinvoke r44.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $l1 = interfaceinvoke $r30.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setLocalSequenceNumber(long)>($l1);

        $l2 = r0.<gov.nist.javax.sip.stack.SIPDialog: long localSequenceNumber>;

        r0.<gov.nist.javax.sip.stack.SIPDialog: long originalLocalSequenceNumber> = $l2;

        $r31 = virtualinvoke r44.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.FromHeader getFrom()>();

        r45 = interfaceinvoke $r31.<javax.sip.header.FromHeader: java.lang.String getTag()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String myTag> = r45;

        if r45 != null goto label7;

        $r32 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z8 = virtualinvoke $r32.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z8 == 0 goto label7;

        $r33 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r34 = virtualinvoke $r33.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r34.<gov.nist.core.StackLogger: void logError(java.lang.String)>("The request\'s From header is missing the required Tag parameter.");

        goto label7;

     label6:
        $r2 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getMethod()>();

        $r3 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String firstTransactionMethod>;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label7;

        $z4 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean firstTransactionIsServerTransaction>;

        $z5 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransaction: boolean isServerTransaction()>();

        if $z4 == $z5 goto label7;

        staticinvoke <gov.nist.javax.sip.stack.SIPDialog: void storeFirstTransactionInfo(gov.nist.javax.sip.stack.SIPDialog,gov.nist.javax.sip.stack.SIPTransaction)>(r0, r1);

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setLocalParty(gov.nist.javax.sip.message.SIPMessage)>(r44);

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setRemoteParty(gov.nist.javax.sip.message.SIPMessage)>(r44);

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setCallId(gov.nist.javax.sip.message.SIPRequest)>(r44);

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest originalRequest> = r44;

        $r26 = virtualinvoke r44.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String method> = $r26;

     label7:
        $z12 = r1 instanceof gov.nist.javax.sip.stack.SIPServerTransaction;

        if $z12 == 0 goto label8;

        $r25 = virtualinvoke r44.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $l0 = interfaceinvoke $r25.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setRemoteSequenceNumber(long)>($l0);

     label8:
        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransaction lastTransaction> = r1;

        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z2 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z2 == 0 goto label9;

        $r5 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r46 = virtualinvoke $r5.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Transaction Added ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String myTag>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r12 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String hisTag>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r46.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r14);

        $r15 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r48 = virtualinvoke $r15.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TID = ");

        $r18 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getTransactionId()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $z3 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransaction: boolean isServerTransaction()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z3);

        $r22 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r48.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r22);

        $r23 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r24 = virtualinvoke $r23.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r24.<gov.nist.core.StackLogger: void logStackTrace()>();

     label9:
        return;
    }

    public javax.sip.message.Request createAck(long) throws javax.sip.InvalidArgumentException, javax.sip.SipException
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        long l0, $l3;
        java.lang.String $r1, $r4, $r7, $r25, $r35, $r41, $r45, $r49, $r62, $r68, $r75, r85, r86, $r104, $r107, $r110;
        boolean $z0, $z1, $z3, $z4, $z5, $z6;
        java.lang.StringBuilder $r2, $r59, $r64, $r70, r91, r93, r95, r97;
        javax.sip.SipException $r6, $r11, $r57, $r77, r96;
        byte $b1, $b2, $b4;
        javax.sip.InvalidArgumentException $r8, $r9;
        javax.sip.address.Address $r10, $r14, $r16, $r38, $r54, $r106, $r109;
        gov.nist.javax.sip.stack.SIPTransactionStack $r12, $r32, $r36, $r42, $r46, $r56, $r58, $r63, $r69;
        gov.nist.javax.sip.header.RouteList $r13, $r50, $r51;
        javax.sip.address.URI $r15, $r17, $r39, $r55;
        java.lang.Object $r18, $r30;
        gov.nist.javax.sip.address.SipUri $r19;
        javax.sip.header.CallIdHeader $r20;
        gov.nist.javax.sip.message.SIPResponse $r21, $r66;
        gov.nist.javax.sip.message.SIPRequest $r22, $r23, $r24, $r26, $r28, r98;
        gov.nist.javax.sip.header.Via $r27, $r29, r101;
        int $i5;
        gov.nist.core.NameValueList $r31, r102;
        javax.sip.header.Header $r52;
        gov.nist.javax.sip.header.Route $r53;
        java.lang.Exception $r76;
        gov.nist.core.StackLogger r78, r80, r82, r90, r92, r94;
        javax.sip.address.SipURI r84;
        gov.nist.javax.sip.SipProviderImpl $r87;
        javax.sip.ListeningPoint $r88;
        gov.nist.javax.sip.ListeningPointImpl $r89;
        gov.nist.javax.sip.header.CSeq r99;
        java.util.ArrayList r100;
        gov.nist.javax.sip.Utils $r103;
        gov.nist.javax.sip.header.From r105;
        gov.nist.javax.sip.header.To r108;
        gov.nist.javax.sip.header.MaxForwards r111;
        gov.nist.javax.sip.header.Authorization r112;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        l0 := @parameter0: long;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String method>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z0 == 0 goto label26;

        $b1 = l0 cmp 0L;

        if $b1 <= 0 goto label25;

        $b2 = l0 cmp 4294967295L;

        if $b2 > 0 goto label24;

        $r10 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address remoteTarget>;

        if $r10 == null goto label23;

        $r12 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r12.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label01;

        $r69 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r78 = virtualinvoke $r69.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("createAck ");

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cseqno ");

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r75 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r78.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r75);

     label01:
        $l3 = r0.<gov.nist.javax.sip.stack.SIPDialog: long lastInviteOkReceived>;

        $b4 = $l3 cmp l0;

        if $b4 >= 0 goto label03;

        $r56 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z6 = virtualinvoke $r56.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z6 == 0 goto label02;

        $r58 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r80 = virtualinvoke $r58.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WARNING : Attempt to crete ACK without OK ");

        virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r62 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r80.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r62);

        $r63 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r82 = virtualinvoke $r63.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LAST RESPONSE = ");

        $r66 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPResponse lastResponse>;

        virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r66);

        $r68 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r82.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r68);

     label02:
        $r57 = new javax.sip.SipException;

        specialinvoke $r57.<javax.sip.SipException: void <init>(java.lang.String)>("Dialog not yet established -- no OK response!");

        throw $r57;

     label03:
        $r13 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList>;

        if $r13 == null goto label05;

        $r50 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList>;

        $z5 = virtualinvoke $r50.<gov.nist.javax.sip.header.RouteList: boolean isEmpty()>();

        if $z5 != 0 goto label05;

        $r51 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList>;

        $r52 = virtualinvoke $r51.<gov.nist.javax.sip.header.RouteList: javax.sip.header.Header getFirst()>();

        $r53 = (gov.nist.javax.sip.header.Route) $r52;

        $r54 = virtualinvoke $r53.<gov.nist.javax.sip.header.Route: javax.sip.address.Address getAddress()>();

        $r55 = interfaceinvoke $r54.<javax.sip.address.Address: javax.sip.address.URI getURI()>();

        r84 = (javax.sip.address.SipURI) $r55;

     label04:
        goto label06;

     label05:
        $r14 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address remoteTarget>;

        $r15 = interfaceinvoke $r14.<javax.sip.address.Address: javax.sip.address.URI getURI()>();

        r84 = (javax.sip.address.SipURI) $r15;

     label06:
        r85 = interfaceinvoke r84.<javax.sip.address.SipURI: java.lang.String getTransportParam()>();

     label07:
        r86 = r85;

        if r85 != null goto label11;

     label08:
        $z4 = interfaceinvoke r84.<javax.sip.address.SipURI: boolean isSecure()>();

        if $z4 == 0 goto label10;

     label09:
        r86 = "TLS";

        goto label11;

     label10:
        r86 = "UDP";

     label11:
        $r87 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl sipProvider>;

        $r88 = virtualinvoke $r87.<gov.nist.javax.sip.SipProviderImpl: javax.sip.ListeningPoint getListeningPoint(java.lang.String)>(r86);

        $r89 = (gov.nist.javax.sip.ListeningPointImpl) $r88;

        if $r89 != null goto label13;

        $r32 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z3 = virtualinvoke $r32.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z3 == 0 goto label12;

        $r36 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r90 = virtualinvoke $r36.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r91 = new java.lang.StringBuilder;

        specialinvoke r91.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remoteTargetURI ");

        $r38 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address remoteTarget>;

        $r39 = interfaceinvoke $r38.<javax.sip.address.Address: javax.sip.address.URI getURI()>();

        virtualinvoke r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r39);

        $r41 = virtualinvoke r91.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r90.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r41);

        $r42 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r92 = virtualinvoke $r42.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r93 = new java.lang.StringBuilder;

        specialinvoke r93.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("uri4transport = ");

        virtualinvoke r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r84);

        $r45 = virtualinvoke r93.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r92.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r45);

        $r46 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r94 = virtualinvoke $r46.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r95 = new java.lang.StringBuilder;

        specialinvoke r95.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No LP found for transport=");

        virtualinvoke r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r86);

        $r49 = virtualinvoke r95.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r94.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r49);

     label12:
        r96 = new javax.sip.SipException;

        r97 = new java.lang.StringBuilder;

        specialinvoke r97.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create ACK - no ListeningPoint for transport towards next hop found:");

        virtualinvoke r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r86);

        $r35 = virtualinvoke r97.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r96.<javax.sip.SipException: void <init>(java.lang.String)>($r35);

        throw r96;

     label13:
        r98 = new gov.nist.javax.sip.message.SIPRequest;

        specialinvoke r98.<gov.nist.javax.sip.message.SIPRequest: void <init>()>();

        virtualinvoke r98.<gov.nist.javax.sip.message.SIPRequest: void setMethod(java.lang.String)>("ACK");

        $r16 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address getRemoteTarget()>();

        $r17 = interfaceinvoke $r16.<javax.sip.address.Address: javax.sip.address.URI getURI()>();

        $r18 = interfaceinvoke $r17.<javax.sip.address.URI: java.lang.Object clone()>();

        $r19 = (gov.nist.javax.sip.address.SipUri) $r18;

        virtualinvoke r98.<gov.nist.javax.sip.message.SIPRequest: void setRequestURI(javax.sip.address.URI)>($r19);

        $r20 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.CallIdHeader callIdHeader>;

        virtualinvoke r98.<gov.nist.javax.sip.message.SIPRequest: void setCallId(javax.sip.header.CallIdHeader)>($r20);

        r99 = new gov.nist.javax.sip.header.CSeq;

        specialinvoke r99.<gov.nist.javax.sip.header.CSeq: void <init>(long,java.lang.String)>(l0, "ACK");

        virtualinvoke r98.<gov.nist.javax.sip.message.SIPRequest: void setCSeq(javax.sip.header.CSeqHeader)>(r99);

        r100 = new java.util.ArrayList;

        specialinvoke r100.<java.util.ArrayList: void <init>()>();

        $r21 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPResponse lastResponse>;

        r101 = virtualinvoke $r21.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.Via getTopmostVia()>();

        virtualinvoke r101.<gov.nist.javax.sip.header.Via: void removeParameters()>();

        $r22 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest originalRequest>;

        if $r22 == null goto label16;

        $r26 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest originalRequest>;

        $r27 = virtualinvoke $r26.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.Via getTopmostVia()>();

        if $r27 == null goto label16;

        $r28 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest originalRequest>;

        $r29 = virtualinvoke $r28.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.Via getTopmostVia()>();

        r102 = virtualinvoke $r29.<gov.nist.javax.sip.header.Via: gov.nist.core.NameValueList getParameters()>();

     label14:
        if r102 == null goto label16;

     label15:
        $i5 = virtualinvoke r102.<gov.nist.core.NameValueList: int size()>();

        if $i5 <= 0 goto label16;

        $r30 = virtualinvoke r102.<gov.nist.core.NameValueList: java.lang.Object clone()>();

        $r31 = (gov.nist.core.NameValueList) $r30;

        virtualinvoke r101.<gov.nist.javax.sip.header.Via: void setParameters(gov.nist.core.NameValueList)>($r31);

     label16:
        $r103 = staticinvoke <gov.nist.javax.sip.Utils: gov.nist.javax.sip.Utils getInstance()>();

        $r104 = virtualinvoke $r103.<gov.nist.javax.sip.Utils: java.lang.String generateBranchId()>();

        virtualinvoke r101.<gov.nist.javax.sip.header.Via: void setBranch(java.lang.String)>($r104);

        interfaceinvoke r100.<java.util.List: boolean add(java.lang.Object)>(r101);

        virtualinvoke r98.<gov.nist.javax.sip.message.SIPRequest: void setVia(java.util.List)>(r100);

        r105 = new gov.nist.javax.sip.header.From;

        specialinvoke r105.<gov.nist.javax.sip.header.From: void <init>()>();

        $r106 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address localParty>;

        virtualinvoke r105.<gov.nist.javax.sip.header.From: void setAddress(javax.sip.address.Address)>($r106);

        $r107 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String myTag>;

        virtualinvoke r105.<gov.nist.javax.sip.header.From: void setTag(java.lang.String)>($r107);

        virtualinvoke r98.<gov.nist.javax.sip.message.SIPRequest: void setFrom(javax.sip.header.FromHeader)>(r105);

        r108 = new gov.nist.javax.sip.header.To;

        specialinvoke r108.<gov.nist.javax.sip.header.To: void <init>()>();

        $r109 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address remoteParty>;

        virtualinvoke r108.<gov.nist.javax.sip.header.To: void setAddress(javax.sip.address.Address)>($r109);

        $r110 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String hisTag>;

        if $r110 == null goto label17;

        $r25 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String hisTag>;

        virtualinvoke r108.<gov.nist.javax.sip.header.To: void setTag(java.lang.String)>($r25);

     label17:
        virtualinvoke r98.<gov.nist.javax.sip.message.SIPRequest: void setTo(javax.sip.header.ToHeader)>(r108);

        r111 = new gov.nist.javax.sip.header.MaxForwards;

        specialinvoke r111.<gov.nist.javax.sip.header.MaxForwards: void <init>(int)>(70);

        virtualinvoke r98.<gov.nist.javax.sip.message.SIPRequest: void setMaxForwards(javax.sip.header.MaxForwardsHeader)>(r111);

        $r23 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest originalRequest>;

        if $r23 == null goto label20;

        $r24 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest originalRequest>;

        r112 = virtualinvoke $r24.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.Authorization getAuthorization()>();

     label18:
        if r112 == null goto label20;

     label19:
        virtualinvoke r98.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>(r112);

     label20:
        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void updateRequest(gov.nist.javax.sip.message.SIPRequest)>(r98);

     label21:
        return r98;

     label22:
        $r76 := @caughtexception;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>($r76);

        $r77 = new javax.sip.SipException;

        specialinvoke $r77.<javax.sip.SipException: void <init>(java.lang.String,java.lang.Throwable)>("unexpected exception ", $r76);

        throw $r77;

     label23:
        $r11 = new javax.sip.SipException;

        specialinvoke $r11.<javax.sip.SipException: void <init>(java.lang.String)>("Cannot create ACK - no remote Target!");

        throw $r11;

     label24:
        $r9 = new javax.sip.InvalidArgumentException;

        specialinvoke $r9.<javax.sip.InvalidArgumentException: void <init>(java.lang.String)>("bad cseq > 4294967295");

        throw $r9;

     label25:
        $r8 = new javax.sip.InvalidArgumentException;

        specialinvoke $r8.<javax.sip.InvalidArgumentException: void <init>(java.lang.String)>("bad cseq <= 0 ");

        throw $r8;

     label26:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dialog was not created with an INVITE");

        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String method>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = new javax.sip.SipException;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<javax.sip.SipException: void <init>(java.lang.String)>($r7);

        throw $r6;

        catch java.lang.Exception from label03 to label04 with label22;
        catch java.lang.Exception from label05 to label06 with label22;
        catch java.lang.Exception from label06 to label07 with label22;
        catch java.lang.Exception from label08 to label09 with label22;
        catch java.lang.Exception from label11 to label12 with label22;
        catch java.lang.Exception from label12 to label13 with label22;
        catch java.lang.Exception from label13 to label14 with label22;
        catch java.lang.Exception from label15 to label16 with label22;
        catch java.lang.Exception from label16 to label17 with label22;
        catch java.lang.Exception from label17 to label18 with label22;
        catch java.lang.Exception from label19 to label20 with label22;
        catch java.lang.Exception from label20 to label21 with label22;
    }

    public javax.sip.message.Request createPrack(javax.sip.message.Response) throws javax.sip.DialogDoesNotExistException, javax.sip.SipException
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.message.SIPResponse r1, $r11;
        gov.nist.javax.sip.message.SIPRequest r2;
        gov.nist.javax.sip.header.RAck r3;
        javax.sip.DialogState $r4, $r6, $r7;
        javax.sip.DialogDoesNotExistException $r5;
        boolean $z0;
        javax.sip.header.Header $r8, $r15;
        gov.nist.javax.sip.header.RSeq $r9, r21;
        javax.sip.SipException $r10;
        javax.sip.message.Request $r12;
        javax.sip.header.ToHeader $r13;
        java.lang.String $r14, $r17;
        javax.sip.header.CSeqHeader $r16, $r18;
        long $l0, $l2, $l3;
        int $i1;
        java.lang.Exception $r19;
        javax.sip.message.Response r20;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r20 := @parameter0: javax.sip.message.Response;

        $r4 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        if $r4 == null goto label5;

        $r6 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r7 = <javax.sip.DialogState: javax.sip.DialogState TERMINATED>;

        $z0 = virtualinvoke $r6.<javax.sip.DialogState: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label5;

        $r8 = interfaceinvoke r20.<javax.sip.message.Response: javax.sip.header.Header getHeader(java.lang.String)>("RSeq");

        $r9 = (gov.nist.javax.sip.header.RSeq) $r8;

        if $r9 == null goto label4;

     label1:
        r1 = (gov.nist.javax.sip.message.SIPResponse) r20;

        $r11 = (gov.nist.javax.sip.message.SIPResponse) r20;

        $r12 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.message.Request createRequest(java.lang.String,gov.nist.javax.sip.message.SIPResponse)>("PRACK", $r11);

        r2 = (gov.nist.javax.sip.message.SIPRequest) $r12;

        $r13 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.ToHeader getTo()>();

        $r14 = interfaceinvoke $r13.<javax.sip.header.ToHeader: java.lang.String getTag()>();

        virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: void setToTag(java.lang.String)>($r14);

        r3 = new gov.nist.javax.sip.header.RAck;

        specialinvoke r3.<gov.nist.javax.sip.header.RAck: void <init>()>();

        $r15 = interfaceinvoke r20.<javax.sip.message.Response: javax.sip.header.Header getHeader(java.lang.String)>("RSeq");

        r21 = (gov.nist.javax.sip.header.RSeq) $r15;

        $r16 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $r17 = interfaceinvoke $r16.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        virtualinvoke r3.<gov.nist.javax.sip.header.RAck: void setMethod(java.lang.String)>($r17);

        $r18 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $l0 = interfaceinvoke $r18.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $i1 = (int) $l0;

        $l2 = (long) $i1;

        virtualinvoke r3.<gov.nist.javax.sip.header.RAck: void setCSequenceNumber(long)>($l2);

        $l3 = virtualinvoke r21.<gov.nist.javax.sip.header.RSeq: long getSeqNumber()>();

        virtualinvoke r3.<gov.nist.javax.sip.header.RAck: void setRSequenceNumber(long)>($l3);

        virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>(r3);

     label2:
        return r2;

     label3:
        $r19 := @caughtexception;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>($r19);

        return null;

     label4:
        $r10 = new javax.sip.SipException;

        specialinvoke $r10.<javax.sip.SipException: void <init>(java.lang.String)>("Missing RSeq Header");

        throw $r10;

     label5:
        $r5 = new javax.sip.DialogDoesNotExistException;

        specialinvoke $r5.<javax.sip.DialogDoesNotExistException: void <init>(java.lang.String)>("Dialog not initialized or terminated");

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public javax.sip.message.Response createReliableProvisionalResponse(int) throws javax.sip.InvalidArgumentException, javax.sip.SipException
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        int i0;
        boolean $z0, $z1, $z2, $z3;
        javax.sip.SipException $r3, $r6, $r7;
        javax.sip.InvalidArgumentException $r4;
        java.lang.String $r5;
        gov.nist.javax.sip.header.Require $r8;
        gov.nist.javax.sip.header.RSeq $r9;
        java.lang.Object $r10;
        gov.nist.javax.sip.header.RecordRouteList $r11, r17;
        java.lang.Exception $r12;
        gov.nist.javax.sip.message.SIPRequest r13;
        java.util.ListIterator r14, r15;
        gov.nist.javax.sip.message.SIPResponse r16;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        i0 := @parameter0: int;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean firstTransactionIsServerTransaction>;

        if $z0 == 0 goto label11;

        if i0 <= 100 goto label10;

        if i0 > 199 goto label10;

        r13 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest originalRequest>;

        $r5 = virtualinvoke r13.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z1 == 0 goto label09;

        r14 = virtualinvoke r13.<gov.nist.javax.sip.message.SIPRequest: java.util.ListIterator getHeaders(java.lang.String)>("Supported");

        if r14 == null goto label01;

        $z3 = staticinvoke <gov.nist.javax.sip.stack.SIPDialog: boolean optionPresent(java.util.ListIterator,java.lang.String)>(r14, "100rel");

        if $z3 != 0 goto label02;

     label01:
        r15 = virtualinvoke r13.<gov.nist.javax.sip.message.SIPRequest: java.util.ListIterator getHeaders(java.lang.String)>("Require");

        if r15 == null goto label08;

        $z2 = staticinvoke <gov.nist.javax.sip.stack.SIPDialog: boolean optionPresent(java.util.ListIterator,java.lang.String)>(r15, "100rel");

        if $z2 == 0 goto label08;

     label02:
        r16 = virtualinvoke r13.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPResponse createResponse(int)>(i0);

        $r8 = new gov.nist.javax.sip.header.Require;

        specialinvoke $r8.<gov.nist.javax.sip.header.Require: void <init>()>();

     label03:
        virtualinvoke $r8.<gov.nist.javax.sip.header.Require: void setOptionTag(java.lang.String)>("100rel");

     label04:
        goto label06;

     label05:
        $r12 := @caughtexception;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>($r12);

     label06:
        virtualinvoke r16.<gov.nist.javax.sip.message.SIPResponse: void addHeader(javax.sip.header.Header)>($r8);

        $r9 = new gov.nist.javax.sip.header.RSeq;

        specialinvoke $r9.<gov.nist.javax.sip.header.RSeq: void <init>()>();

        virtualinvoke $r9.<gov.nist.javax.sip.header.RSeq: void setSeqNumber(long)>(1L);

        r17 = virtualinvoke r13.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RecordRouteList getRecordRouteHeaders()>();

        if r17 == null goto label07;

        $r10 = virtualinvoke r17.<gov.nist.javax.sip.header.RecordRouteList: java.lang.Object clone()>();

        $r11 = (gov.nist.javax.sip.header.RecordRouteList) $r10;

        virtualinvoke r16.<gov.nist.javax.sip.message.SIPResponse: void setHeader(javax.sip.header.Header)>($r11);

     label07:
        return r16;

     label08:
        $r7 = new javax.sip.SipException;

        specialinvoke $r7.<javax.sip.SipException: void <init>(java.lang.String)>("No Supported/Require 100rel header in the request");

        throw $r7;

     label09:
        $r6 = new javax.sip.SipException;

        specialinvoke $r6.<javax.sip.SipException: void <init>(java.lang.String)>("Bad method");

        throw $r6;

     label10:
        $r4 = new javax.sip.InvalidArgumentException;

        specialinvoke $r4.<javax.sip.InvalidArgumentException: void <init>(java.lang.String)>("Bad status code ");

        throw $r4;

     label11:
        $r3 = new javax.sip.SipException;

        specialinvoke $r3.<javax.sip.SipException: void <init>(java.lang.String)>("Not a Server Dialog!");

        throw $r3;

        catch java.lang.Exception from label03 to label04 with label05;
    }

    public javax.sip.message.Request createRequest(java.lang.String) throws javax.sip.SipException
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.lang.String r1, $r6;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2;
        javax.sip.SipException $r5, $r7;
        javax.sip.message.Request $r8;
        gov.nist.javax.sip.message.SIPResponse r9;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("ACK");

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("PRACK");

        if $z1 != 0 goto label2;

        r9 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPResponse lastResponse>;

        if r9 == null goto label1;

        $r8 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.message.Request createRequest(java.lang.String,gov.nist.javax.sip.message.SIPResponse)>(r1, r9);

        return $r8;

     label1:
        $r7 = new javax.sip.SipException;

        specialinvoke $r7.<javax.sip.SipException: void <init>(java.lang.String)>("Dialog not yet established -- no response!");

        throw $r7;

     label2:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid method specified for createRequest:");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = new javax.sip.SipException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<javax.sip.SipException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public void delete()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $i0 = <gov.nist.javax.sip.stack.SIPDialog: int TERMINATED_STATE>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i0);

        return;
    }

    public void disableSequenceNumberValidation()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean sequenceNumberValidation> = 0;

        return;
    }

    public void doDeferredDelete()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r1, $r4;
        java.util.Timer $r2, $r5;
        gov.nist.javax.sip.stack.SIPDialog$DialogDeleteTask $r3, $r6;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r2 = virtualinvoke $r1.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        if $r2 != null goto label1;

        $i0 = <gov.nist.javax.sip.stack.SIPDialog: int TERMINATED_STATE>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i0);

        goto label2;

     label1:
        $r3 = new gov.nist.javax.sip.stack.SIPDialog$DialogDeleteTask;

        specialinvoke $r3.<gov.nist.javax.sip.stack.SIPDialog$DialogDeleteTask: void <init>(gov.nist.javax.sip.stack.SIPDialog)>(r0);

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogDeleteTask dialogDeleteTask> = $r3;

        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r5 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        $r6 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogDeleteTask dialogDeleteTask>;

        virtualinvoke $r5.<java.util.Timer: void schedule(java.util.TimerTask,long)>($r6, 32000L);

     label2:
        return;
    }

    public void doDeferredDeleteIfNoAckSent(long)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        long l0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r1, $r4;
        java.util.Timer $r2, $r5;
        gov.nist.javax.sip.stack.SIPDialog$DialogDeleteIfNoAckSentTask $r3, $r6, r8;
        int $i1;
        java.lang.Throwable $r7;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        l0 := @parameter0: long;

        entermonitor r0;

     label1:
        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r2 = virtualinvoke $r1.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        if $r2 != null goto label3;

        $i1 = <gov.nist.javax.sip.stack.SIPDialog: int TERMINATED_STATE>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i1);

     label2:
        goto label4;

     label3:
        $r3 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogDeleteIfNoAckSentTask dialogDeleteIfNoAckSentTask>;

        if $r3 != null goto label4;

        r8 = new gov.nist.javax.sip.stack.SIPDialog$DialogDeleteIfNoAckSentTask;

        specialinvoke r8.<gov.nist.javax.sip.stack.SIPDialog$DialogDeleteIfNoAckSentTask: void <init>(gov.nist.javax.sip.stack.SIPDialog,long)>(r0, l0);

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogDeleteIfNoAckSentTask dialogDeleteIfNoAckSentTask> = r8;

        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r5 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        $r6 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogDeleteIfNoAckSentTask dialogDeleteIfNoAckSentTask>;

        virtualinvoke $r5.<java.util.Timer: void schedule(java.util.TimerTask,long)>($r6, 32000L);

     label4:
        exitmonitor r0;

        return;

     label5:
        $r7 := @caughtexception;

        exitmonitor r0;

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public java.lang.Object getApplicationData()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.lang.Object $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.Object applicationData>;

        return $r1;
    }

    public javax.sip.header.CallIdHeader getCallId()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        javax.sip.header.CallIdHeader $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.CallIdHeader callIdHeader>;

        return $r1;
    }

    public java.lang.String getDialogId()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.message.SIPResponse r1;
        java.lang.String $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r2 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String dialogId>;

        if $r2 != null goto label1;

        r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPResponse lastResponse>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isServer()>();

        $r3 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getDialogId(boolean)>($z0);

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String dialogId> = $r3;

     label1:
        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String dialogId>;

        return $r4;
    }

    java.lang.String getEarlyDialogId()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.lang.String $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String earlyDialogId>;

        return $r1;
    }

    javax.sip.header.EventHeader getEventHeader()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        javax.sip.header.EventHeader $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.EventHeader eventHeader>;

        return $r1;
    }

    public javax.sip.Transaction getFirstTransaction()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPTransaction $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransaction firstTransaction>;

        return $r1;
    }

    public gov.nist.javax.sip.stack.SIPServerTransaction getInviteTransaction()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask r1;
        gov.nist.javax.sip.stack.SIPServerTransaction $r2;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask>;

        if r1 == null goto label1;

        $r2 = r1.<gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask: gov.nist.javax.sip.stack.SIPServerTransaction transaction>;

        return $r2;

     label1:
        return null;
    }

    protected gov.nist.javax.sip.message.SIPRequest getLastAckReceived()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.message.SIPRequest $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest lastAckReceived>;

        return $r1;
    }

    public gov.nist.javax.sip.message.SIPRequest getLastAckSent()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.message.SIPRequest $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest lastAckSent>;

        return $r1;
    }

    public gov.nist.javax.sip.message.SIPResponse getLastResponse()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.message.SIPResponse $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPResponse lastResponse>;

        return $r1;
    }

    public gov.nist.javax.sip.stack.SIPTransaction getLastTransaction()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPTransaction $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransaction lastTransaction>;

        return $r1;
    }

    public javax.sip.address.Address getLocalParty()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        javax.sip.address.Address $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address localParty>;

        return $r1;
    }

    public long getLocalSeqNumber()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        long $l0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $l0 = r0.<gov.nist.javax.sip.stack.SIPDialog: long localSequenceNumber>;

        return $l0;
    }

    public int getLocalSequenceNumber()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        long $l0;
        int $i1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $l0 = r0.<gov.nist.javax.sip.stack.SIPDialog: long localSequenceNumber>;

        $i1 = (int) $l0;

        return $i1;
    }

    public java.lang.String getLocalTag()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.lang.String $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String myTag>;

        return $r1;
    }

    public java.lang.String getMethod()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.lang.String $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String method>;

        return $r1;
    }

    public gov.nist.javax.sip.header.Contact getMyContactHeader()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.header.Contact $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.Contact contactHeader>;

        return $r1;
    }

    public long getOriginalLocalSequenceNumber()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        long $l0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $l0 = r0.<gov.nist.javax.sip.stack.SIPDialog: long originalLocalSequenceNumber>;

        return $l0;
    }

    public javax.sip.address.Address getRemoteParty()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.core.StackLogger r1;
        gov.nist.javax.sip.stack.SIPTransactionStack $r3, $r5;
        boolean $z0;
        javax.sip.address.Address $r4, $r8;
        java.lang.StringBuilder $r6;
        java.lang.String $r10;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r3 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r1 = virtualinvoke $r5.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("gettingRemoteParty ");

        $r8 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address remoteParty>;

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r10);

     label1:
        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address remoteParty>;

        return $r4;
    }

    public long getRemoteSeqNumber()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        long $l0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $l0 = r0.<gov.nist.javax.sip.stack.SIPDialog: long remoteSequenceNumber>;

        return $l0;
    }

    public int getRemoteSequenceNumber()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        long $l0;
        int $i1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $l0 = r0.<gov.nist.javax.sip.stack.SIPDialog: long remoteSequenceNumber>;

        $i1 = (int) $l0;

        return $i1;
    }

    public java.lang.String getRemoteTag()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.lang.String $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String hisTag>;

        return $r1;
    }

    public javax.sip.address.Address getRemoteTarget()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        javax.sip.address.Address $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address remoteTarget>;

        return $r1;
    }

    public java.util.Iterator getRouteSet()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.header.RouteList $r1, $r2;
        java.util.ListIterator $r3, $r5;
        java.util.LinkedList $r4;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList>;

        if $r1 != null goto label1;

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        $r5 = virtualinvoke $r4.<java.util.LinkedList: java.util.ListIterator listIterator()>();

        return $r5;

     label1:
        $r2 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList getRouteList()>();

        $r3 = virtualinvoke $r2.<gov.nist.javax.sip.header.RouteList: java.util.ListIterator listIterator()>();

        return $r3;
    }

    public gov.nist.javax.sip.SipProviderImpl getSipProvider()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.SipProviderImpl $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl sipProvider>;

        return $r1;
    }

    public volatile javax.sip.SipProvider getSipProvider()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.SipProviderImpl $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl getSipProvider()>();

        return $r1;
    }

    gov.nist.javax.sip.stack.SIPTransactionStack getStack()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        return $r1;
    }

    public javax.sip.DialogState getState()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        int i0;
        javax.sip.DialogState $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        i0 = r0.<gov.nist.javax.sip.stack.SIPDialog: int dialogState>;

        if i0 != -1 goto label1;

        return null;

     label1:
        $r1 = staticinvoke <javax.sip.DialogState: javax.sip.DialogState getObject(int)>(i0);

        return $r1;
    }

    public boolean handleAck(gov.nist.javax.sip.stack.SIPServerTransaction)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.message.SIPRequest r1;
        boolean z0, $z1, $z2, $z3, $z4, $z6;
        gov.nist.javax.sip.stack.SIPServerTransaction r2, r25;
        javax.sip.DialogState $r3, $r4;
        gov.nist.javax.sip.stack.SIPTransactionStack $r5, $r12, $r13, $r15, $r16, $r19, $r22, $r28;
        gov.nist.core.StackLogger $r6, $r14, $r17, $r23;
        int $i0, $i1;
        javax.sip.header.CSeqHeader $r7, $r9, $r10, $r18;
        java.lang.String $r8, $r11;
        long $l2, $l3, $l5, $l6;
        byte $b4, $b7;
        gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask $r20, $r21;
        java.lang.Throwable $r24;
        gov.nist.javax.sip.message.SIPResponse r26;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r25 := @parameter0: gov.nist.javax.sip.stack.SIPServerTransaction;

        r1 = virtualinvoke r25.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        z0 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isAckSeen()>();

        r26 = null;

        if z0 == 0 goto label05;

        $l5 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: long getRemoteSeqNumber()>();

        $r18 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $l6 = interfaceinvoke $r18.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $b7 = $l5 cmp $l6;

        if $b7 != 0 goto label05;

        $r19 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z4 = virtualinvoke $r19.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z4 == 0 goto label01;

        $r22 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r23 = virtualinvoke $r22.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r23.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("ACK already seen by dialog -- dropping Ack retransmission");

     label01:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void acquireTimerTaskSem()>();

     label02:
        $r20 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask>;

        if $r20 == null goto label03;

        $r21 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask>;

        virtualinvoke $r21.<gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask: boolean cancel()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask> = null;

     label03:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void releaseTimerTaskSem()>();

        return 0;

     label04:
        $r24 := @caughtexception;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void releaseTimerTaskSem()>();

        throw $r24;

     label05:
        $r3 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r4 = <javax.sip.DialogState: javax.sip.DialogState TERMINATED>;

        if $r3 != $r4 goto label07;

        $r15 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z3 = virtualinvoke $r15.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z3 == 0 goto label06;

        $r16 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r17 = virtualinvoke $r16.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r17.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Dialog is terminated -- dropping ACK");

     label06:
        return 0;

     label07:
        r2 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPServerTransaction getInviteTransaction()>();

        if r2 == null goto label08;

        r26 = virtualinvoke r2.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse getLastResponse()>();

     label08:
        if r2 == null goto label10;

        if r26 == null goto label10;

        $i0 = virtualinvoke r26.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        $i1 = $i0 / 100;

        if $i1 != 2 goto label10;

        $r7 = virtualinvoke r26.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $r8 = interfaceinvoke $r7.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z1 == 0 goto label10;

        $r9 = virtualinvoke r26.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $l2 = interfaceinvoke $r9.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $r10 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $l3 = interfaceinvoke $r10.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $b4 = $l2 cmp $l3;

        if $b4 != 0 goto label10;

        $r11 = virtualinvoke r26.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getDialogId(boolean)>(0);

        virtualinvoke r25.<gov.nist.javax.sip.stack.SIPServerTransaction: void setDialog(gov.nist.javax.sip.stack.SIPDialog,java.lang.String)>(r0, $r11);

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void ackReceived(gov.nist.javax.sip.message.SIPRequest)>(r1);

        $r12 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z2 = virtualinvoke $r12.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z2 == 0 goto label09;

        $r13 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r14 = virtualinvoke $r13.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r14.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("ACK for 2XX response --- sending to TU ");

     label09:
        return 1;

     label10:
        $r28 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z6 = virtualinvoke $r28.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z6 == 0 goto label11;

        $r5 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r6 = virtualinvoke $r5.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r6.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>(" INVITE transaction not found  -- Discarding ACK");

     label11:
        return 0;

        catch java.lang.Throwable from label02 to label03 with label04;
    }

    public boolean handlePrack(gov.nist.javax.sip.message.SIPRequest)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPServerTransaction r1;
        gov.nist.javax.sip.header.CSeq r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        javax.sip.Transaction $r3;
        javax.sip.header.Header $r4, $r8;
        javax.sip.header.CSeqHeader $r5;
        java.lang.String $r6, $r7;
        long $l0, $l1, $l3, $l4;
        byte $b2, $b5;
        gov.nist.javax.sip.stack.SIPTransactionStack $r9, $r10, $r12, $r13, $r15, $r16, $r18, $r19, $r21, $r22, $r24, $r25;
        gov.nist.core.StackLogger $r11, $r14, $r17, $r20, $r23, $r26;
        gov.nist.javax.sip.message.SIPRequest r27;
        gov.nist.javax.sip.message.SIPResponse r28;
        gov.nist.javax.sip.header.RAck r29;
        gov.nist.javax.sip.header.RSeq r30;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r27 := @parameter0: gov.nist.javax.sip.message.SIPRequest;

        $z0 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isServer()>();

        if $z0 != 0 goto label02;

        $r24 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z8 = virtualinvoke $r24.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z8 == 0 goto label01;

        $r25 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r26 = virtualinvoke $r25.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r26.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Dropping Prack -- not a server Dialog");

     label01:
        return 0;

     label02:
        $r3 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.Transaction getFirstTransaction()>();

        r1 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r3;

        r28 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse getReliableProvisionalResponse()>();

        if r28 != null goto label04;

        $r21 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z7 = virtualinvoke $r21.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z7 == 0 goto label03;

        $r22 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r23 = virtualinvoke $r22.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r23.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Dropping Prack -- ReliableResponse not found");

     label03:
        return 0;

     label04:
        $r4 = virtualinvoke r27.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.Header getHeader(java.lang.String)>("RAck");

        r29 = (gov.nist.javax.sip.header.RAck) $r4;

        if r29 != null goto label06;

        $r18 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z6 = virtualinvoke $r18.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z6 == 0 goto label05;

        $r19 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r20 = virtualinvoke $r19.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r20.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Dropping Prack -- rack header not found");

     label05:
        return 0;

     label06:
        $r5 = virtualinvoke r28.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        r2 = (gov.nist.javax.sip.header.CSeq) $r5;

        $r6 = virtualinvoke r29.<gov.nist.javax.sip.header.RAck: java.lang.String getMethod()>();

        $r7 = virtualinvoke r2.<gov.nist.javax.sip.header.CSeq: java.lang.String getMethod()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 != 0 goto label08;

        $r15 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z5 = virtualinvoke $r15.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z5 == 0 goto label07;

        $r16 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r17 = virtualinvoke $r16.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r17.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Dropping Prack -- CSeq Header does not match PRACK");

     label07:
        return 0;

     label08:
        $l0 = virtualinvoke r29.<gov.nist.javax.sip.header.RAck: long getCSeqNumberLong()>();

        $l1 = virtualinvoke r2.<gov.nist.javax.sip.header.CSeq: long getSeqNumber()>();

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label10;

        $r12 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z4 = virtualinvoke $r12.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z4 == 0 goto label09;

        $r13 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r14 = virtualinvoke $r13.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r14.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Dropping Prack -- CSeq Header does not match PRACK");

     label09:
        return 0;

     label10:
        $r8 = virtualinvoke r28.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.Header getHeader(java.lang.String)>("RSeq");

        r30 = (gov.nist.javax.sip.header.RSeq) $r8;

        $l3 = virtualinvoke r29.<gov.nist.javax.sip.header.RAck: long getRSequenceNumber()>();

        $l4 = virtualinvoke r30.<gov.nist.javax.sip.header.RSeq: long getSeqNumber()>();

        $b5 = $l3 cmp $l4;

        if $b5 == 0 goto label12;

        $r9 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z3 = virtualinvoke $r9.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z3 == 0 goto label11;

        $r10 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r11 = virtualinvoke $r10.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r11.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Dropping Prack -- RSeq Header does not match PRACK");

     label11:
        return 0;

     label12:
        $z2 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean prackRecieved()>();

        return $z2;
    }

    public void incrementLocalSequenceNumber()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        long $l0, $l1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $l0 = r0.<gov.nist.javax.sip.stack.SIPDialog: long localSequenceNumber>;

        $l1 = $l0 + 1L;

        r0.<gov.nist.javax.sip.stack.SIPDialog: long localSequenceNumber> = $l1;

        return;
    }

    public boolean isAckSeen()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean ackSeen>;

        return $z0;
    }

    public boolean isAckSent(long)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        long l0, $l1;
        gov.nist.javax.sip.stack.SIPTransaction r1, $r2;
        boolean $z0, z1;
        gov.nist.javax.sip.message.SIPRequest $r3, $r4;
        javax.sip.header.CSeqHeader $r5;
        byte $b2;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        l0 := @parameter0: long;

        r1 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransaction getLastTransaction()>();

        z1 = 1;

        if r1 != null goto label1;

        return 1;

     label1:
        $r2 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransaction getLastTransaction()>();

        $z0 = $r2 instanceof javax.sip.ClientTransaction;

        if $z0 == 0 goto label5;

        $r3 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest getLastAckSent()>();

        if $r3 != null goto label2;

        return 0;

     label2:
        $r4 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest getLastAckSent()>();

        $r5 = virtualinvoke $r4.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $l1 = interfaceinvoke $r5.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $b2 = l0 cmp $l1;

        if $b2 > 0 goto label3;

        goto label4;

     label3:
        z1 = 0;

     label4:
        return z1;

     label5:
        return 1;
    }

    public boolean isAssigned()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isAssigned>;

        return $z0;
    }

    public boolean isAtleastOneAckSent()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isAcknowledged>;

        return $z0;
    }

    public boolean isBackToBackUserAgent()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isBackToBackUserAgent>;

        return $z0;
    }

    protected boolean isReInvite()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean reInviteFlag>;

        return $z0;
    }

    public boolean isRequestConsumable(gov.nist.javax.sip.message.SIPRequest)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean z0, $z1, z2;
        long l0, l1;
        java.lang.String $r1;
        javax.sip.header.CSeqHeader $r2;
        byte $b2;
        java.lang.Throwable $r3;
        gov.nist.javax.sip.message.SIPRequest r4;
        java.lang.RuntimeException r5;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r4 := @parameter0: gov.nist.javax.sip.message.SIPRequest;

        entermonitor r0;

     label1:
        $r1 = virtualinvoke r4.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("ACK");

        if $z1 != 0 goto label7;

        z0 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isSequnceNumberValidation()>();

     label2:
        z2 = 1;

        if z0 != 0 goto label3;

        exitmonitor r0;

        return 1;

     label3:
        l0 = r0.<gov.nist.javax.sip.stack.SIPDialog: long remoteSequenceNumber>;

        $r2 = virtualinvoke r4.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        l1 = interfaceinvoke $r2.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

     label4:
        $b2 = l0 cmp l1;

        if $b2 >= 0 goto label5;

        goto label6;

     label5:
        z2 = 0;

     label6:
        exitmonitor r0;

        return z2;

     label7:
        r5 = new java.lang.RuntimeException;

        specialinvoke r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Illegal method");

        throw r5;

     label8:
        $r3 := @caughtexception;

        exitmonitor r0;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label7 to label8 with label8;
    }

    public boolean isSecure()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean firstTransactionSecure>;

        return $z0;
    }

    public boolean isSequnceNumberValidation()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean sequenceNumberValidation>;

        return $z0;
    }

    public boolean isServer()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean $z0, $z1, $z2;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean firstTransactionSeen>;

        if $z0 != 0 goto label1;

        $z2 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean serverTransactionFlag>;

        return $z2;

     label1:
        $z1 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean firstTransactionIsServerTransaction>;

        return $z1;
    }

    boolean isTerminatedOnBye()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean terminateOnBye>;

        return $z0;
    }

    public void printDebugInfo()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r1, $r2, $r7, $r13, $r19, $r24, $r29;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3, $r8, $r14, $r20, $r25, $r30;
        java.lang.String $r6, $r10, $r12, $r16, $r18, $r23, $r28, $r32, $r36;
        long $l0, $l1;
        int $i2;
        gov.nist.core.StackLogger r37, r39, r41, r43, r45, r47;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r1.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r37 = virtualinvoke $r2.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isServer = ");

        $z1 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isServer()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r37.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r6);

        $r7 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r39 = virtualinvoke $r7.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("localTag = ");

        $r10 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r39.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r12);

        $r13 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r41 = virtualinvoke $r13.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remoteTag = ");

        $r16 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r41.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r18);

        $r19 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r43 = virtualinvoke $r19.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("localSequenceNumer = ");

        $l0 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: long getLocalSeqNumber()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r43.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r23);

        $r24 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r45 = virtualinvoke $r24.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remoteSequenceNumer = ");

        $l1 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: long getRemoteSeqNumber()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r45.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r28);

        $r29 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r47 = virtualinvoke $r29.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ackLine:");

        $r32 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>();

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i2 = r0.<gov.nist.javax.sip.stack.SIPDialog: int ackLine>;

        virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r36 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r47.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r36);

     label1:
        return;
    }

    void releaseAckSem()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.core.StackLogger r1;
        boolean $z0, $z1;
        gov.nist.javax.sip.stack.SIPTransactionStack $r3, $r5;
        java.util.concurrent.Semaphore $r4;
        java.lang.StringBuilder $r6;
        java.lang.String $r9;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isBackToBackUserAgent>;

        if $z0 == 0 goto label2;

        $r3 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label1;

        $r5 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r1 = virtualinvoke $r5.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("releaseAckSem]");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r9);

     label1:
        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.util.concurrent.Semaphore ackSem>;

        virtualinvoke $r4.<java.util.concurrent.Semaphore: void release()>();

     label2:
        return;
    }

    public void releaseTimerTaskSem()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.util.concurrent.Semaphore $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.util.concurrent.Semaphore timerTaskLock>;

        virtualinvoke $r1.<java.util.concurrent.Semaphore: void release()>();

        return;
    }

    public void removeEventListener(gov.nist.javax.sip.stack.SIPDialogEventListener)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPDialogEventListener r1;
        java.util.Set $r2;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.stack.SIPDialogEventListener;

        $r2 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.util.Set eventListeners>;

        interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void requestConsumed()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.core.StackLogger r1;
        long $l0, $l1;
        java.lang.Long $r2, $r6;
        gov.nist.javax.sip.stack.SIPTransactionStack $r3, $r4;
        boolean $z0;
        java.lang.String $r8;
        java.lang.Throwable $r9;
        java.lang.StringBuilder r10;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        entermonitor r0;

     label1:
        $l0 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: long getRemoteSeqNumber()>();

        $l1 = $l0 + 1L;

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.Long nextSeqno> = $r2;

        $r3 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label2;

        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r1 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r10 = new java.lang.StringBuilder;

        specialinvoke r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Request Consumed -- next consumable Request Seqno = ");

        $r6 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.Long nextSeqno>;

        virtualinvoke r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r8);

     label2:
        exitmonitor r0;

        return;

     label3:
        $r9 := @caughtexception;

        exitmonitor r0;

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void resendAck() throws javax.sip.SipException
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.message.SIPRequest $r1, $r2, $r6, $r10;
        javax.sip.header.Header $r3;
        gov.nist.javax.sip.stack.SIPTransactionStack $r4;
        boolean $z0;
        gov.nist.javax.sip.header.TimeStamp $r5;
        long $l0;
        float $f0;
        java.lang.Throwable $r7;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest getLastAckSent()>();

        if $r1 == null goto label5;

        $r2 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest getLastAckSent()>();

        $r3 = virtualinvoke $r2.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.Header getHeader(java.lang.String)>("Timestamp");

        if $r3 == null goto label4;

        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean generateTimeStampHeader>;

        if $z0 == 0 goto label4;

        $r5 = new gov.nist.javax.sip.header.TimeStamp;

        specialinvoke $r5.<gov.nist.javax.sip.header.TimeStamp: void <init>()>();

     label1:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $f0 = (float) $l0;

        virtualinvoke $r5.<gov.nist.javax.sip.header.TimeStamp: void setTimeStamp(float)>($f0);

        $r6 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest getLastAckSent()>();

        virtualinvoke $r6.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>($r5);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

     label4:
        $r10 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest getLastAckSent()>();

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void sendAck(javax.sip.message.Request,boolean)>($r10, 0);

     label5:
        return;

        catch javax.sip.InvalidArgumentException from label1 to label2 with label3;
    }

    public void sendAck(javax.sip.message.Request) throws javax.sip.SipException
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        javax.sip.message.Request r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: javax.sip.message.Request;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void sendAck(javax.sip.message.Request,boolean)>(r1, 1);

        return;
    }

    public void sendReliableProvisionalResponse(javax.sip.message.Response) throws javax.sip.SipException
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        javax.sip.message.Response r1;
        gov.nist.javax.sip.message.SIPResponse r2;
        boolean $z0, $z1, $z2, $z3, z4, z5;
        javax.sip.SipException $r3, $r4, $r5, $r7;
        int $i0, $i1, $i2;
        java.lang.String $r6, $r14, $r18;
        gov.nist.javax.sip.header.Require $r8;
        gov.nist.javax.sip.stack.SIPTransactionStack $r9, $r10;
        gov.nist.core.StackLogger $r11;
        java.lang.Object $r12;
        javax.sip.header.RequireHeader $r13;
        java.util.ListIterator r15;
        javax.sip.Transaction $r16;
        gov.nist.javax.sip.stack.SIPServerTransaction r17;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: javax.sip.message.Response;

        $z0 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isServer()>();

        if $z0 == 0 goto label8;

        r2 = (gov.nist.javax.sip.message.SIPResponse) r1;

        $i0 = interfaceinvoke r1.<javax.sip.message.Response: int getStatusCode()>();

        if $i0 == 100 goto label7;

        $i1 = interfaceinvoke r1.<javax.sip.message.Response: int getStatusCode()>();

        $i2 = $i1 / 100;

        if $i2 > 2 goto label6;

        $r6 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getToTag()>();

        if $r6 == null goto label5;

        r15 = interfaceinvoke r1.<javax.sip.message.Response: java.util.ListIterator getHeaders(java.lang.String)>("Require");

        z4 = 0;

        z5 = 0;

        if r15 == null goto label3;

     label1:
        z4 = z5;

        $z2 = interfaceinvoke r15.<java.util.ListIterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        z4 = z5;

        if z5 != 0 goto label3;

        $r12 = interfaceinvoke r15.<java.util.ListIterator: java.lang.Object next()>();

        $r13 = (javax.sip.header.RequireHeader) $r12;

        $r14 = interfaceinvoke $r13.<javax.sip.header.RequireHeader: java.lang.String getOptionTag()>();

        $z3 = virtualinvoke $r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("100rel");

        if $z3 == 0 goto label2;

        z5 = 1;

     label2:
        goto label1;

     label3:
        if z4 != 0 goto label4;

        $r8 = new gov.nist.javax.sip.header.Require;

        specialinvoke $r8.<gov.nist.javax.sip.header.Require: void <init>(java.lang.String)>("100rel");

        interfaceinvoke r1.<javax.sip.message.Response: void addHeader(javax.sip.header.Header)>($r8);

        $r9 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r9.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label4;

        $r10 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r11 = virtualinvoke $r10.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r11.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Require header with optionTag 100rel is needed -- adding one");

     label4:
        $r16 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.Transaction getFirstTransaction()>();

        r17 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r16;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setLastResponse(gov.nist.javax.sip.stack.SIPTransaction,gov.nist.javax.sip.message.SIPResponse)>(r17, r2);

        $r18 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getDialogId(boolean)>(1);

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setDialogId(java.lang.String)>($r18);

        virtualinvoke r17.<gov.nist.javax.sip.stack.SIPServerTransaction: void sendReliableProvisionalResponse(javax.sip.message.Response)>(r1);

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void startRetransmitTimer(gov.nist.javax.sip.stack.SIPServerTransaction,javax.sip.message.Response)>(r17, r1);

        return;

     label5:
        $r7 = new javax.sip.SipException;

        specialinvoke $r7.<javax.sip.SipException: void <init>(java.lang.String)>("Badly formatted response -- To tag mandatory for Reliable Provisional Response");

        throw $r7;

     label6:
        $r5 = new javax.sip.SipException;

        specialinvoke $r5.<javax.sip.SipException: void <init>(java.lang.String)>("Response code is not a 1xx response - should be in the range 101 to 199 ");

        throw $r5;

     label7:
        $r4 = new javax.sip.SipException;

        specialinvoke $r4.<javax.sip.SipException: void <init>(java.lang.String)>("Cannot send 100 as a reliable provisional response");

        throw $r4;

     label8:
        $r3 = new javax.sip.SipException;

        specialinvoke $r3.<javax.sip.SipException: void <init>(java.lang.String)>("Not a Server Dialog");

        throw $r3;
    }

    public void sendRequest(javax.sip.ClientTransaction) throws javax.sip.TransactionDoesNotExistException, javax.sip.SipException
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        javax.sip.ClientTransaction r1;
        boolean $z0, $z1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: javax.sip.ClientTransaction;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isBackToBackUserAgent>;

        $z1 = $z0 ^ 1;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void sendRequest(javax.sip.ClientTransaction,boolean)>(r1, $z1);

        return;
    }

    public void sendRequest(javax.sip.ClientTransaction, boolean) throws javax.sip.TransactionDoesNotExistException, javax.sip.SipException
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24;
        gov.nist.javax.sip.message.SIPRequest r1;
        gov.nist.core.StackLogger r2, $r57, $r139, $r145, r150, r152, r155, r157, r159, r165, r171, r180;
        gov.nist.javax.sip.stack.SIPClientTransaction $r3, $r19, $r21, $r26, $r33, $r35, $r38, $r55, $r116;
        gov.nist.javax.sip.stack.SIPTransactionStack $r4, $r27, $r28, $r34, $r36, $r37, $r40, $r44, $r45, $r50, $r56, $r58, $r59, $r63, $r80, $r81, $r96, $r98, $r104, $r111, $r119, $r121, $r126, $r138, $r142, $r144;
        java.lang.String $r6, $r9, $r12, $r13, $r15, $r17, $r18, $r24, $r25, $r30, $r32, $r39, $r43, $r49, $r52, $r54, $r62, $r66, $r70, $r71, $r72, $r73, $r74, $r76, $r77, $r78, $r79, $r84, $r86, $r87, $r88, $r89, $r92, $r95, $r103, $r108, $r110, $r115, $r118, $r125, $r132, $r134, $r140, $r164, $r167, $r168;
        javax.sip.header.CallIdHeader $r14, $r16, $r101, $r107;
        gov.nist.javax.sip.stack.SIPTransaction $r20;
        javax.sip.header.FromHeader $r22;
        javax.sip.header.ToHeader $r23;
        gov.nist.javax.sip.SipProviderImpl $r29, $r51;
        javax.sip.ListeningPoint $r31, $r53;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        javax.sip.address.Router $r46;
        gov.nist.javax.sip.header.Via $r117, $r154;
        javax.sip.message.Request $r133;
        java.lang.Throwable $r137, $r146, $r147;
        java.lang.Exception $r141, r210;
        javax.sip.ClientTransaction r149;
        gov.nist.javax.sip.header.From r161;
        gov.nist.javax.sip.header.To r162;
        javax.sip.address.Hop r170, r176;
        gov.nist.javax.sip.stack.MessageChannel r173, r174, r177;
        long $l10, $l11, $l12;
        javax.sip.header.CSeqHeader $r182;
        gov.nist.javax.sip.stack.SIPDialog$ReInviteSender r187;
        java.lang.Thread r188;
        java.lang.StringBuilder r189, r190, r192, r193, r194, r196, r198, r200, r201, r202, r204, r207;
        javax.sip.SipException r191, r195, r197, r199, r203, r205, r206, r208;
        java.lang.NullPointerException r209;
        javax.sip.InvalidArgumentException r211;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r149 := @parameter0: javax.sip.ClientTransaction;

        z0 := @parameter1: boolean;

        if z0 != 0 goto label01;

        $r133 = interfaceinvoke r149.<javax.sip.ClientTransaction: javax.sip.message.Request getRequest()>();

        $r134 = interfaceinvoke $r133.<javax.sip.message.Request: java.lang.String getMethod()>();

        $z23 = virtualinvoke $r134.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z23 == 0 goto label01;

        r188 = new java.lang.Thread;

        r187 = new gov.nist.javax.sip.stack.SIPDialog$ReInviteSender;

        specialinvoke r187.<gov.nist.javax.sip.stack.SIPDialog$ReInviteSender: void <init>(gov.nist.javax.sip.stack.SIPDialog,javax.sip.ClientTransaction)>(r0, r149);

        specialinvoke r188.<java.lang.Thread: void <init>(java.lang.Runnable)>(r187);

        virtualinvoke r188.<java.lang.Thread: void start()>();

        return;

     label01:
        $r3 = (gov.nist.javax.sip.stack.SIPClientTransaction) r149;

        r1 = virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label02;

        $r126 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r150 = virtualinvoke $r126.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r189 = new java.lang.StringBuilder;

        specialinvoke r189.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r189.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dialog.sendRequest  dialog = ");

        virtualinvoke r189.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke r189.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\ndialogRequest = \n");

        virtualinvoke r189.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r132 = virtualinvoke r189.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r150.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r132);

     label02:
        if r149 == null goto label45;

        $r6 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("ACK");

        if $z2 != 0 goto label44;

        $r13 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("CANCEL");

        if $z3 != 0 goto label44;

        $z4 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean byeSent>;

        if $z4 == 0 goto label04;

        $z20 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isTerminatedOnBye()>();

        if $z20 == 0 goto label04;

        $r118 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z21 = virtualinvoke $r118.<java.lang.String: boolean equals(java.lang.Object)>("BYE");

        if $z21 != 0 goto label04;

        $r119 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z22 = virtualinvoke $r119.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z22 == 0 goto label03;

        $r121 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r152 = virtualinvoke $r121.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r190 = new java.lang.StringBuilder;

        specialinvoke r190.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r190.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BYE already sent for ");

        virtualinvoke r190.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r125 = virtualinvoke r190.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r152.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r125);

     label03:
        r191 = new javax.sip.SipException;

        specialinvoke r191.<javax.sip.SipException: void <init>(java.lang.String)>("Cannot send request; BYE already sent");

        throw r191;

     label04:
        $r154 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.Via getTopmostVia()>();

        if $r154 != null goto label05;

        $r116 = (gov.nist.javax.sip.stack.SIPClientTransaction) r149;

        $r117 = virtualinvoke $r116.<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.header.Via getOutgoingViaHeader()>();

        virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: void addHeader(javax.sip.header.Header)>($r117);

     label05:
        $r14 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.CallIdHeader getCallId()>();

        $r15 = interfaceinvoke $r14.<javax.sip.header.CallIdHeader: java.lang.String getCallId()>();

        $r16 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CallIdHeader getCallId()>();

        $r17 = interfaceinvoke $r16.<javax.sip.header.CallIdHeader: java.lang.String getCallId()>();

        $z5 = virtualinvoke $r15.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r17);

        if $z5 != 0 goto label07;

        $r96 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z19 = virtualinvoke $r96.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z19 == 0 goto label06;

        $r98 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r155 = virtualinvoke $r98.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r192 = new java.lang.StringBuilder;

        specialinvoke r192.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r192.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CallID ");

        $r101 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.CallIdHeader getCallId()>();

        virtualinvoke r192.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r101);

        $r103 = virtualinvoke r192.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r155.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r103);

        $r104 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r157 = virtualinvoke $r104.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r193 = new java.lang.StringBuilder;

        specialinvoke r193.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r193.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RequestCallID = ");

        $r107 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CallIdHeader getCallId()>();

        $r108 = interfaceinvoke $r107.<javax.sip.header.CallIdHeader: java.lang.String getCallId()>();

        virtualinvoke r193.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r108);

        $r110 = virtualinvoke r193.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r157.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r110);

        $r111 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r159 = virtualinvoke $r111.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r194 = new java.lang.StringBuilder;

        specialinvoke r194.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r194.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dialog =  ");

        virtualinvoke r194.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r115 = virtualinvoke r194.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r159.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r115);

     label06:
        r195 = new javax.sip.SipException;

        specialinvoke r195.<javax.sip.SipException: void <init>(java.lang.String)>("Bad call ID in request");

        throw r195;

     label07:
        $r19 = (gov.nist.javax.sip.stack.SIPClientTransaction) r149;

        $r18 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String dialogId>;

        virtualinvoke $r19.<gov.nist.javax.sip.stack.SIPClientTransaction: void setDialog(gov.nist.javax.sip.stack.SIPDialog,java.lang.String)>(r0, $r18);

        $r20 = (gov.nist.javax.sip.stack.SIPTransaction) r149;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void addTransaction(gov.nist.javax.sip.stack.SIPTransaction)>($r20);

        $r21 = (gov.nist.javax.sip.stack.SIPClientTransaction) r149;

        $r21.<gov.nist.javax.sip.stack.SIPClientTransaction: boolean isMapped> = 1;

        $r22 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.FromHeader getFrom()>();

        r161 = (gov.nist.javax.sip.header.From) $r22;

        $r23 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.ToHeader getTo()>();

        r162 = (gov.nist.javax.sip.header.To) $r23;

        $r24 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        if $r24 == null goto label09;

        $r87 = virtualinvoke r161.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

        if $r87 == null goto label09;

        $r88 = virtualinvoke r161.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

        $r89 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        $z18 = virtualinvoke $r88.<java.lang.String: boolean equals(java.lang.Object)>($r89);

        if $z18 == 0 goto label08;

        goto label09;

     label08:
        r196 = new java.lang.StringBuilder;

        specialinvoke r196.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r196.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("From tag mismatch expecting  ");

        $r92 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        virtualinvoke r196.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r92);

        r197 = new javax.sip.SipException;

        $r95 = virtualinvoke r196.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r197.<javax.sip.SipException: void <init>(java.lang.String)>($r95);

        throw r197;

     label09:
        $r164 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>();

        if $r164 == null goto label10;

        $r77 = virtualinvoke r162.<gov.nist.javax.sip.header.To: java.lang.String getTag()>();

        if $r77 == null goto label10;

        $r78 = virtualinvoke r162.<gov.nist.javax.sip.header.To: java.lang.String getTag()>();

        $r79 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>();

        $z16 = virtualinvoke $r78.<java.lang.String: boolean equals(java.lang.Object)>($r79);

        if $z16 != 0 goto label10;

        $r80 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z17 = virtualinvoke $r80.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z17 == 0 goto label10;

        $r81 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r165 = virtualinvoke $r81.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r198 = new java.lang.StringBuilder;

        specialinvoke r198.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r198.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("To header tag mismatch expecting ");

        $r84 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>();

        virtualinvoke r198.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84);

        $r86 = virtualinvoke r198.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r165.<gov.nist.core.StackLogger: void logWarning(java.lang.String)>($r86);

     label10:
        $r167 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        if $r167 != null goto label12;

        $r73 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z14 = virtualinvoke $r73.<java.lang.String: boolean equals(java.lang.Object)>("NOTIFY");

        if $z14 == 0 goto label12;

        $r74 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getMethod()>();

        $z15 = virtualinvoke $r74.<java.lang.String: boolean equals(java.lang.Object)>("SUBSCRIBE");

        if $z15 == 0 goto label11;

        $r76 = virtualinvoke r161.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setLocalTag(java.lang.String)>($r76);

        goto label12;

     label11:
        r199 = new javax.sip.SipException;

        specialinvoke r199.<javax.sip.SipException: void <init>(java.lang.String)>("Trying to send NOTIFY without SUBSCRIBE Dialog!");

        throw r199;

     label12:
        $r168 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        if $r168 == null goto label13;

        $r72 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        virtualinvoke r161.<gov.nist.javax.sip.header.From: void setTag(java.lang.String)>($r72);

     label13:
        $r25 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>();

        if $r25 == null goto label14;

        $r71 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>();

        virtualinvoke r162.<gov.nist.javax.sip.header.To: void setTag(java.lang.String)>($r71);

     label14:
        goto label16;

     label15:
        $r146 := @caughtexception;

        r210 = (java.lang.Exception) $r146;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r210);

     label16:
        $r26 = (gov.nist.javax.sip.stack.SIPClientTransaction) r149;

        r170 = virtualinvoke $r26.<gov.nist.javax.sip.stack.SIPClientTransaction: javax.sip.address.Hop getNextHop()>();

        $r27 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z6 = virtualinvoke $r27.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z6 == 0 goto label17;

        $r63 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r171 = virtualinvoke $r63.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r200 = new java.lang.StringBuilder;

        specialinvoke r200.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r200.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using hop = ");

        $r66 = interfaceinvoke r170.<javax.sip.address.Hop: java.lang.String getHost()>();

        virtualinvoke r200.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        virtualinvoke r200.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $i9 = interfaceinvoke r170.<javax.sip.address.Hop: int getPort()>();

        virtualinvoke r200.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r70 = virtualinvoke r200.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r171.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r70);

     label17:
        $r28 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r29 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl getSipProvider()>();

        $r30 = interfaceinvoke r170.<javax.sip.address.Hop: java.lang.String getTransport()>();

        $r31 = virtualinvoke $r29.<gov.nist.javax.sip.SipProviderImpl: javax.sip.ListeningPoint getListeningPoint(java.lang.String)>($r30);

        $r32 = interfaceinvoke $r31.<javax.sip.ListeningPoint: java.lang.String getIPAddress()>();

        $i0 = r0.<gov.nist.javax.sip.stack.SIPDialog: int firstTransactionPort>;

        r173 = virtualinvoke $r28.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.MessageChannel createRawMessageChannel(java.lang.String,int,javax.sip.address.Hop)>($r32, $i0, r170);

        $r33 = (gov.nist.javax.sip.stack.SIPClientTransaction) r149;

        r174 = virtualinvoke $r33.<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.stack.MessageChannel getMessageChannel()>();

        virtualinvoke r174.<gov.nist.javax.sip.stack.MessageChannel: void uncache()>();

        $r34 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z7 = $r34.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean cacheClientConnections>;

        if $z7 != 0 goto label18;

        $i6 = r174.<gov.nist.javax.sip.stack.MessageChannel: int useCount>;

        $i7 = $i6 - 1;

        r174.<gov.nist.javax.sip.stack.MessageChannel: int useCount> = $i7;

        $r58 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z13 = virtualinvoke $r58.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z13 == 0 goto label18;

        $r59 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r2 = virtualinvoke $r59.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r201 = new java.lang.StringBuilder;

        specialinvoke r201.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r201.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("oldChannel: useCount ");

        $i8 = r174.<gov.nist.javax.sip.stack.MessageChannel: int useCount>;

        virtualinvoke r201.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r62 = virtualinvoke r201.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r62);

     label18:
        if r173 != null goto label27;

     label19:
        $r44 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z12 = virtualinvoke $r44.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z12 == 0 goto label20;

        $r56 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r57 = virtualinvoke $r56.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r57.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Null message channel using outbound proxy !");

     label20:
        $r45 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r46 = virtualinvoke $r45.<gov.nist.javax.sip.stack.SIPTransactionStack: javax.sip.address.Router getRouter(gov.nist.javax.sip.message.SIPRequest)>(r1);

        r176 = interfaceinvoke $r46.<javax.sip.address.Router: javax.sip.address.Hop getOutboundProxy()>();

     label21:
        if r176 == null goto label26;

     label22:
        $r50 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r51 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl getSipProvider()>();

        $r52 = interfaceinvoke r176.<javax.sip.address.Hop: java.lang.String getTransport()>();

        $r53 = virtualinvoke $r51.<gov.nist.javax.sip.SipProviderImpl: javax.sip.ListeningPoint getListeningPoint(java.lang.String)>($r52);

        $r54 = interfaceinvoke $r53.<javax.sip.ListeningPoint: java.lang.String getIPAddress()>();

        $i5 = r0.<gov.nist.javax.sip.stack.SIPDialog: int firstTransactionPort>;

        r177 = virtualinvoke $r50.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.MessageChannel createRawMessageChannel(java.lang.String,int,javax.sip.address.Hop)>($r54, $i5, r176);

     label23:
        if r177 == null goto label25;

     label24:
        $r55 = (gov.nist.javax.sip.stack.SIPClientTransaction) r149;

        virtualinvoke $r55.<gov.nist.javax.sip.stack.SIPClientTransaction: void setEncapsulatedChannel(gov.nist.javax.sip.stack.MessageChannel)>(r177);

     label25:
        goto label31;

     label26:
        r203 = new javax.sip.SipException;

        r202 = new java.lang.StringBuilder;

        specialinvoke r202.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r202.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No route found! hop=");

        virtualinvoke r202.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r170);

        $r49 = virtualinvoke r202.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r203.<javax.sip.SipException: void <init>(java.lang.String)>($r49);

        throw r203;

     label27:
        $r35 = (gov.nist.javax.sip.stack.SIPClientTransaction) r149;

        virtualinvoke $r35.<gov.nist.javax.sip.stack.SIPClientTransaction: void setEncapsulatedChannel(gov.nist.javax.sip.stack.MessageChannel)>(r173);

     label28:
        r177 = r173;

     label29:
        $r36 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z8 = virtualinvoke $r36.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z8 == 0 goto label31;

        $r40 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r180 = virtualinvoke $r40.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r204 = new java.lang.StringBuilder;

        specialinvoke r204.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r204.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("using message channel ");

        virtualinvoke r204.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r173);

        $r43 = virtualinvoke r204.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r180.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r43);

     label30:
        r177 = r173;

     label31:
        if r177 == null goto label33;

     label32:
        $i3 = r177.<gov.nist.javax.sip.stack.MessageChannel: int useCount>;

        $i4 = $i3 + 1;

        r177.<gov.nist.javax.sip.stack.MessageChannel: int useCount> = $i4;

     label33:
        $r37 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z9 = $r37.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean cacheClientConnections>;

        if $z9 != 0 goto label36;

     label34:
        if r174 == null goto label36;

     label35:
        $i2 = r174.<gov.nist.javax.sip.stack.MessageChannel: int useCount>;

        if $i2 > 0 goto label36;

        virtualinvoke r174.<gov.nist.javax.sip.stack.MessageChannel: void close()>();

     label36:
        $l10 = r0.<gov.nist.javax.sip.stack.SIPDialog: long localSequenceNumber>;

        $l11 = $l10 + 1L;

        r0.<gov.nist.javax.sip.stack.SIPDialog: long localSequenceNumber> = $l11;

        $r182 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $l12 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: long getLocalSeqNumber()>();

        interfaceinvoke $r182.<javax.sip.header.CSeqHeader: void setSeqNumber(long)>($l12);

     label37:
        goto label39;

     label38:
        $r137 := @caughtexception;

        $r138 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r139 = virtualinvoke $r138.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r211 = (javax.sip.InvalidArgumentException) $r137;

        $r140 = virtualinvoke r211.<javax.sip.InvalidArgumentException: java.lang.String getMessage()>();

        interfaceinvoke $r139.<gov.nist.core.StackLogger: void logFatalError(java.lang.String)>($r140);

     label39:
        $r38 = (gov.nist.javax.sip.stack.SIPClientTransaction) r149;

        virtualinvoke $r38.<gov.nist.javax.sip.stack.SIPClientTransaction: void sendMessage(gov.nist.javax.sip.message.SIPMessage)>(r1);

        $r39 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z10 = virtualinvoke $r39.<java.lang.String: boolean equals(java.lang.Object)>("BYE");

        if $z10 == 0 goto label40;

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean byeSent> = 1;

        $z11 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isTerminatedOnBye()>();

        if $z11 == 0 goto label40;

        $i1 = <javax.sip.DialogState: int _TERMINATED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i1);

     label40:
        return;

     label41:
        $r147 := @caughtexception;

        r205 = new javax.sip.SipException;

        specialinvoke r205.<javax.sip.SipException: void <init>(java.lang.String,java.lang.Throwable)>("error sending message", $r147);

        throw r205;

     label42:
        $r141 := @caughtexception;

        $r142 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z24 = virtualinvoke $r142.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z24 == 0 goto label43;

        $r144 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r145 = virtualinvoke $r144.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r145.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>($r141);

     label43:
        r206 = new javax.sip.SipException;

        specialinvoke r206.<javax.sip.SipException: void <init>(java.lang.String,java.lang.Throwable)>("Could not create message channel", $r141);

        throw r206;

     label44:
        r207 = new java.lang.StringBuilder;

        specialinvoke r207.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r207.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad Request Method. ");

        $r9 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        virtualinvoke r207.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        r208 = new javax.sip.SipException;

        $r12 = virtualinvoke r207.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r208.<javax.sip.SipException: void <init>(java.lang.String)>($r12);

        throw r208;

     label45:
        r209 = new java.lang.NullPointerException;

        specialinvoke r209.<java.lang.NullPointerException: void <init>(java.lang.String)>("null parameter");

        throw r209;

        catch java.text.ParseException from label12 to label13 with label15;
        catch java.text.ParseException from label13 to label14 with label15;
        catch java.lang.Exception from label17 to label18 with label42;
        catch java.lang.Exception from label19 to label20 with label42;
        catch java.lang.Exception from label20 to label21 with label42;
        catch java.lang.Exception from label22 to label23 with label42;
        catch java.lang.Exception from label24 to label25 with label42;
        catch java.lang.Exception from label26 to label27 with label42;
        catch java.lang.Exception from label27 to label28 with label42;
        catch java.lang.Exception from label29 to label30 with label42;
        catch java.lang.Exception from label32 to label33 with label42;
        catch java.lang.Exception from label33 to label34 with label42;
        catch java.lang.Exception from label35 to label36 with label42;
        catch javax.sip.InvalidArgumentException from label36 to label37 with label38;
        catch java.io.IOException from label39 to label40 with label41;
    }

    public void setApplicationData(java.lang.Object)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.lang.Object r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: java.lang.Object;

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.Object applicationData> = r1;

        return;
    }

    public void setAssigned()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isAssigned> = 1;

        return;
    }

    public void setBackToBackUserAgent()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isBackToBackUserAgent> = 1;

        return;
    }

    public void setDialogId(java.lang.String)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: java.lang.String;

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String dialogId> = r1;

        return;
    }

    void setEarlyDialogId(java.lang.String)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: java.lang.String;

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String earlyDialogId> = r1;

        return;
    }

    void setEventHeader(javax.sip.header.EventHeader)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        javax.sip.header.EventHeader r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: javax.sip.header.EventHeader;

        r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.EventHeader eventHeader> = r1;

        return;
    }

    public void setLastResponse(gov.nist.javax.sip.stack.SIPTransaction, gov.nist.javax.sip.message.SIPResponse)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i28, $i29, $i30;
        javax.sip.header.CallIdHeader $r1;
        gov.nist.javax.sip.stack.SIPTransactionStack $r2, $r6, $r10, $r32, $r33, $r40, $r41, $r46, $r47, $r50, $r51, $r54, $r57, $r58, $r61, $r67, $r69, $r74, $r80, $r86, $r91, $r96, $r100, $r102, $r111, $r112;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, z36, $z37, $z38;
        javax.sip.DialogState $r3, $r4, $r8, $r12, $r13, $r14, $r15, $r22, $r24, $r28, $r29, $r34, $r35, $r55, $r56, $r77, $r130, $r131;
        javax.sip.header.CSeqHeader $r5, $r26, $r97, $r99;
        java.lang.String $r7, $r9, $r11, $r23, $r25, $r27, $r30, $r31, $r36, $r37, $r38, $r39, $r42, $r43, $r44, $r45, $r53, $r60, $r63, $r64, $r66, $r73, $r79, $r83, $r85, $r90, $r95, $r98, $r108, $r110, r118, $r129;
        java.lang.Object $r16;
        gov.nist.javax.sip.header.RouteList $r17, $r21;
        javax.sip.header.Header $r18;
        javax.sip.address.Address $r19, $r20;
        long $l10, $l11, $l12, $l25, $l26, $l27;
        javax.sip.TransactionState $r48, $r49;
        gov.nist.core.StackLogger $r52, $r59, $r68, $r101, $r113, r116, r119, r121, r123, r125, r127;
        javax.sip.header.ToHeader $r62, $r65;
        java.lang.StringBuilder $r70, $r75, $r81, $r87, $r92, $r103;
        gov.nist.javax.sip.message.SIPResponse $r107, r115;
        gov.nist.javax.sip.stack.SIPTransaction r114;
        gov.nist.javax.sip.message.SIPRequest r132;
        gov.nist.javax.sip.header.RecordRouteList r133;
        java.util.ListIterator r134;
        gov.nist.javax.sip.header.RecordRoute r135;
        gov.nist.javax.sip.header.Route r136;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r114 := @parameter0: gov.nist.javax.sip.stack.SIPTransaction;

        r115 := @parameter1: gov.nist.javax.sip.message.SIPResponse;

        $r1 = virtualinvoke r115.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CallIdHeader getCallId()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.CallIdHeader callIdHeader> = $r1;

        i0 = virtualinvoke r115.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        if i0 != 100 goto label02;

        $r111 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z35 = virtualinvoke $r111.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z35 == 0 goto label01;

        $r112 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r113 = virtualinvoke $r112.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r113.<gov.nist.core.StackLogger: void logWarning(java.lang.String)>("Invalid status code - 100 in setLastResponse - ignoring");

     label01:
        return;

     label02:
        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPResponse lastResponse> = r115;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setAssigned()>();

        $r2 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r2.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label03;

        $r102 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r116 = virtualinvoke $r102.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r103 = new java.lang.StringBuilder;

        specialinvoke $r103.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sipDialog: setLastResponse:");

        virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lastResponse = ");

        $r107 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPResponse lastResponse>;

        $r108 = virtualinvoke $r107.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getFirstLine()>();

        virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r108);

        $r110 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r116.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r110);

     label03:
        $r3 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r4 = <javax.sip.DialogState: javax.sip.DialogState TERMINATED>;

        if $r3 != $r4 goto label06;

        $r96 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z33 = virtualinvoke $r96.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z33 == 0 goto label04;

        $r100 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r101 = virtualinvoke $r100.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r101.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("sipDialog: setLastResponse -- dialog is terminated - ignoring ");

     label04:
        $r97 = virtualinvoke r115.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $r98 = interfaceinvoke $r97.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $z34 = virtualinvoke $r98.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z34 == 0 goto label05;

        if i0 != 200 goto label05;

        $r99 = virtualinvoke r115.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $l25 = interfaceinvoke $r99.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $l26 = r0.<gov.nist.javax.sip.stack.SIPDialog: long lastInviteOkReceived>;

        $l27 = staticinvoke <java.lang.Math: long max(long,long)>($l25, $l26);

        r0.<gov.nist.javax.sip.stack.SIPDialog: long lastInviteOkReceived> = $l27;

     label05:
        return;

     label06:
        $r5 = virtualinvoke r115.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        r118 = interfaceinvoke $r5.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $r6 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z2 = virtualinvoke $r6.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z2 == 0 goto label07;

        $r67 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r68 = virtualinvoke $r67.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r68.<gov.nist.core.StackLogger: void logStackTrace()>();

        $r69 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r119 = virtualinvoke $r69.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cseqMethod = ");

        virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r118);

        $r73 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r119.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r73);

        $r74 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r121 = virtualinvoke $r74.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dialogState = ");

        $r77 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r77);

        $r79 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r121.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r79);

        $r80 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r123 = virtualinvoke $r80.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r81 = new java.lang.StringBuilder;

        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("method = ");

        $r83 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getMethod()>();

        virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r83);

        $r85 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r123.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r85);

        $r86 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r125 = virtualinvoke $r86.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("statusCode = ");

        virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r90 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r125.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r90);

        $r91 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r127 = virtualinvoke $r91.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r92 = new java.lang.StringBuilder;

        specialinvoke $r92.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("transaction = ");

        virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r114);

        $r95 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r127.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r95);

     label07:
        if r114 == null goto label19;

        $z17 = r114 instanceof javax.sip.ClientTransaction;

        if $z17 == 0 goto label08;

        goto label19;

     label08:
        $z18 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("BYE");

        if $z18 == 0 goto label09;

        $i23 = i0 / 100;

        if $i23 != 2 goto label09;

        $z32 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isTerminatedOnBye()>();

        if $z32 == 0 goto label09;

        $i24 = <gov.nist.javax.sip.stack.SIPDialog: int TERMINATED_STATE>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i24);

        goto label34;

     label09:
        z36 = 0;

        $r129 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        if $r129 != null goto label10;

        z36 = 0;

        $r62 = virtualinvoke r115.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.ToHeader getTo()>();

        $r63 = interfaceinvoke $r62.<javax.sip.header.ToHeader: java.lang.String getTag()>();

        if $r63 == null goto label10;

        z36 = 0;

        $z30 = staticinvoke <gov.nist.javax.sip.stack.SIPTransactionStack: boolean isDialogCreated(java.lang.String)>(r118);

        if $z30 == 0 goto label10;

        z36 = 0;

        $r64 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getMethod()>();

        $z31 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>($r64);

        if $z31 == 0 goto label10;

        $r65 = virtualinvoke r115.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.ToHeader getTo()>();

        $r66 = interfaceinvoke $r65.<javax.sip.header.ToHeader: java.lang.String getTag()>();

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setLocalTag(java.lang.String)>($r66);

        z36 = 1;

     label10:
        $i28 = i0 / 100;

        if $i28 == 2 goto label14;

        $i20 = i0 / 100;

        if $i20 != 1 goto label11;

        if z36 == 0 goto label34;

        $i22 = <gov.nist.javax.sip.stack.SIPDialog: int EARLY_STATE>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i22);

        $r60 = virtualinvoke r115.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getDialogId(boolean)>(1);

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setDialogId(java.lang.String)>($r60);

        $r61 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        virtualinvoke $r61.<gov.nist.javax.sip.stack.SIPTransactionStack: void putDialog(gov.nist.javax.sip.stack.SIPDialog)>(r0);

        goto label34;

     label11:
        if i0 != 489 goto label13;

        $z27 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("NOTIFY");

        if $z27 != 0 goto label12;

        $z29 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("SUBSCRIBE");

        if $z29 == 0 goto label13;

     label12:
        $r57 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z28 = virtualinvoke $r57.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z28 == 0 goto label34;

        $r58 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r59 = virtualinvoke $r58.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r59.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("RFC 3265 : Not setting dialog to TERMINATED for 489");

        goto label34;

     label13:
        $z26 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isReInvite()>();

        if $z26 != 0 goto label34;

        $r55 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r56 = <javax.sip.DialogState: javax.sip.DialogState CONFIRMED>;

        if $r55 == $r56 goto label34;

        $i21 = <gov.nist.javax.sip.stack.SIPDialog: int TERMINATED_STATE>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i21);

        goto label34;

     label14:
        $i18 = r0.<gov.nist.javax.sip.stack.SIPDialog: int dialogState>;

        $i17 = <gov.nist.javax.sip.stack.SIPDialog: int EARLY_STATE>;

        if $i18 > $i17 goto label16;

        $z23 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z23 != 0 goto label15;

        $z24 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("SUBSCRIBE");

        if $z24 != 0 goto label15;

        $z25 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("REFER");

        if $z25 == 0 goto label16;

     label15:
        $i29 = <gov.nist.javax.sip.stack.SIPDialog: int CONFIRMED_STATE>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i29);

     label16:
        if z36 == 0 goto label17;

        $r53 = virtualinvoke r115.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getDialogId(boolean)>(1);

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setDialogId(java.lang.String)>($r53);

        $r54 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        virtualinvoke $r54.<gov.nist.javax.sip.stack.SIPTransactionStack: void putDialog(gov.nist.javax.sip.stack.SIPDialog)>(r0);

     label17:
        $r48 = virtualinvoke r114.<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.TransactionState getState()>();

        $r49 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        if $r48 == $r49 goto label34;

        $i19 = virtualinvoke r115.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        if $i19 != 200 goto label34;

        $z19 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z19 == 0 goto label34;

        $z20 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isBackToBackUserAgent>;

        if $z20 == 0 goto label34;

        $z21 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean takeAckSem()>();

        if $z21 != 0 goto label34;

        $r50 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z22 = virtualinvoke $r50.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z22 == 0 goto label18;

        $r51 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r52 = virtualinvoke $r51.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r52.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Delete dialog -- cannot acquire ackSem");

     label18:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void delete()>();

        return;

     label19:
        $z3 = staticinvoke <gov.nist.javax.sip.stack.SIPTransactionStack: boolean isDialogCreated(java.lang.String)>(r118);

        if $z3 == 0 goto label31;

        $r12 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        if $r12 != null goto label21;

        $i15 = i0 / 100;

        if $i15 != 1 goto label21;

        $i16 = <gov.nist.javax.sip.stack.SIPDialog: int EARLY_STATE>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i16);

        $r42 = virtualinvoke r115.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getToTag()>();

        if $r42 != null goto label20;

        $r47 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z16 = $r47.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean rfc2543Supported>;

        if $z16 == 0 goto label28;

     label20:
        $r43 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>();

        if $r43 != null goto label28;

        $r44 = virtualinvoke r115.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getToTag()>();

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setRemoteTag(java.lang.String)>($r44);

        $r45 = virtualinvoke r115.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getDialogId(boolean)>(0);

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setDialogId(java.lang.String)>($r45);

        $r46 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        virtualinvoke $r46.<gov.nist.javax.sip.stack.SIPTransactionStack: void putDialog(gov.nist.javax.sip.stack.SIPDialog)>(r0);

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void addRoute(gov.nist.javax.sip.message.SIPResponse)>(r115);

        goto label28;

     label21:
        $r13 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        if $r13 == null goto label23;

        $r34 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r35 = <javax.sip.DialogState: javax.sip.DialogState EARLY>;

        $z13 = virtualinvoke $r34.<javax.sip.DialogState: boolean equals(java.lang.Object)>($r35);

        if $z13 == 0 goto label23;

        $i14 = i0 / 100;

        if $i14 != 1 goto label23;

        $r36 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getMethod()>();

        $z14 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>($r36);

        if $z14 == 0 goto label28;

        if r114 == null goto label28;

        $r37 = virtualinvoke r115.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getToTag()>();

        if $r37 != null goto label22;

        $r41 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z15 = $r41.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean rfc2543Supported>;

        if $z15 == 0 goto label28;

     label22:
        $r38 = virtualinvoke r115.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getToTag()>();

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setRemoteTag(java.lang.String)>($r38);

        $r39 = virtualinvoke r115.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getDialogId(boolean)>(0);

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setDialogId(java.lang.String)>($r39);

        $r40 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        virtualinvoke $r40.<gov.nist.javax.sip.stack.SIPTransactionStack: void putDialog(gov.nist.javax.sip.stack.SIPDialog)>(r0);

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void addRoute(gov.nist.javax.sip.message.SIPResponse)>(r115);

        goto label28;

     label23:
        $i30 = i0 / 100;

        if $i30 != 2 goto label26;

        $r25 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getMethod()>();

        $z11 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>($r25);

        if $z11 == 0 goto label25;

        $r27 = virtualinvoke r115.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getToTag()>();

        if $r27 != null goto label24;

        $r33 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z12 = $r33.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean rfc2543Supported>;

        if $z12 == 0 goto label25;

     label24:
        $r28 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r29 = <javax.sip.DialogState: javax.sip.DialogState CONFIRMED>;

        if $r28 == $r29 goto label25;

        $r30 = virtualinvoke r115.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getToTag()>();

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setRemoteTag(java.lang.String)>($r30);

        $r31 = virtualinvoke r115.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getDialogId(boolean)>(0);

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setDialogId(java.lang.String)>($r31);

        $r32 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        virtualinvoke $r32.<gov.nist.javax.sip.stack.SIPTransactionStack: void putDialog(gov.nist.javax.sip.stack.SIPDialog)>(r0);

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void addRoute(gov.nist.javax.sip.message.SIPResponse)>(r115);

        $i13 = <gov.nist.javax.sip.stack.SIPDialog: int CONFIRMED_STATE>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i13);

     label25:
        $z37 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z37 == 0 goto label28;

        $r26 = virtualinvoke r115.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $l10 = interfaceinvoke $r26.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $l11 = r0.<gov.nist.javax.sip.stack.SIPDialog: long lastInviteOkReceived>;

        $l12 = staticinvoke <java.lang.Math: long max(long,long)>($l10, $l11);

        r0.<gov.nist.javax.sip.stack.SIPDialog: long lastInviteOkReceived> = $l12;

        goto label28;

     label26:
        if i0 < 300 goto label28;

        if i0 > 699 goto label28;

        $r22 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        if $r22 == null goto label27;

        $r23 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getMethod()>();

        $z10 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>($r23);

        if $z10 == 0 goto label28;

        $r24 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $i8 = virtualinvoke $r24.<javax.sip.DialogState: int getValue()>();

        $i9 = <gov.nist.javax.sip.stack.SIPDialog: int EARLY_STATE>;

        if $i8 != $i9 goto label28;

     label27:
        $i7 = <gov.nist.javax.sip.stack.SIPDialog: int TERMINATED_STATE>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i7);

     label28:
        $r130 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r131 = <javax.sip.DialogState: javax.sip.DialogState CONFIRMED>;

        if $r130 == $r131 goto label34;

        $r14 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r15 = <javax.sip.DialogState: javax.sip.DialogState TERMINATED>;

        if $r14 == $r15 goto label34;

        r132 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest originalRequest>;

        if r132 == null goto label34;

        r133 = virtualinvoke r132.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RecordRouteList getRecordRouteHeaders()>();

        if r133 == null goto label30;

        $i6 = virtualinvoke r133.<gov.nist.javax.sip.header.RecordRouteList: int size()>();

        r134 = virtualinvoke r133.<gov.nist.javax.sip.header.RecordRouteList: java.util.ListIterator listIterator(int)>($i6);

     label29:
        $z8 = interfaceinvoke r134.<java.util.ListIterator: boolean hasPrevious()>();

        if $z8 == 0 goto label30;

        $r16 = interfaceinvoke r134.<java.util.ListIterator: java.lang.Object previous()>();

        r135 = (gov.nist.javax.sip.header.RecordRoute) $r16;

        $r17 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList>;

        $r18 = virtualinvoke $r17.<gov.nist.javax.sip.header.RouteList: javax.sip.header.Header getFirst()>();

        r136 = (gov.nist.javax.sip.header.Route) $r18;

        if r136 == null goto label30;

        $r19 = virtualinvoke r135.<gov.nist.javax.sip.header.RecordRoute: javax.sip.address.Address getAddress()>();

        $r20 = virtualinvoke r136.<gov.nist.javax.sip.header.Route: javax.sip.address.Address getAddress()>();

        $z9 = interfaceinvoke $r19.<javax.sip.address.Address: boolean equals(java.lang.Object)>($r20);

        if $z9 == 0 goto label30;

        $r21 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList>;

        virtualinvoke $r21.<gov.nist.javax.sip.header.RouteList: void removeFirst()>();

        goto label29;

     label30:
        goto label34;

     label31:
        $z4 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("NOTIFY");

        if $z4 == 0 goto label33;

        $r7 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getMethod()>();

        $z6 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("SUBSCRIBE");

        if $z6 != 0 goto label32;

        $r11 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getMethod()>();

        $z7 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("REFER");

        if $z7 == 0 goto label33;

     label32:
        $i3 = virtualinvoke r115.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        $i4 = $i3 / 100;

        if $i4 != 2 goto label33;

        $r8 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        if $r8 != null goto label33;

        $r9 = virtualinvoke r115.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getDialogId(boolean)>(1);

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setDialogId(java.lang.String)>($r9);

        $r10 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        virtualinvoke $r10.<gov.nist.javax.sip.stack.SIPTransactionStack: void putDialog(gov.nist.javax.sip.stack.SIPDialog)>(r0);

        $i5 = <gov.nist.javax.sip.stack.SIPDialog: int CONFIRMED_STATE>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i5);

        goto label34;

     label33:
        $z38 = virtualinvoke r118.<java.lang.String: boolean equals(java.lang.Object)>("BYE");

        if $z38 == 0 goto label34;

        $i1 = i0 / 100;

        if $i1 != 2 goto label34;

        $z5 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isTerminatedOnBye()>();

        if $z5 == 0 goto label34;

        $i2 = <gov.nist.javax.sip.stack.SIPDialog: int TERMINATED_STATE>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i2);

     label34:
        return;
    }

    void setReInviteFlag(boolean)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        z0 := @parameter0: boolean;

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean reInviteFlag> = z0;

        return;
    }

    public void setRemoteSequenceNumber(long)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        long l0;
        gov.nist.core.StackLogger r1;
        gov.nist.javax.sip.stack.SIPTransactionStack $r3, $r4;
        boolean $z0;
        java.lang.StringBuilder $r5;
        java.lang.String $r10;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        l0 := @parameter0: long;

        $r3 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r1 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setRemoteSeqno ");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r10);

     label1:
        r0.<gov.nist.javax.sip.stack.SIPDialog: long remoteSequenceNumber> = l0;

        return;
    }

    void setRemoteTarget(javax.sip.header.ContactHeader)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.core.StackLogger r1, $r11;
        javax.sip.address.Address $r2, $r7;
        gov.nist.javax.sip.stack.SIPTransactionStack $r3, $r4, $r10;
        boolean $z0;
        java.lang.StringBuilder $r5;
        java.lang.String $r9;
        javax.sip.header.ContactHeader r12;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r12 := @parameter0: javax.sip.header.ContactHeader;

        $r2 = interfaceinvoke r12.<javax.sip.header.ContactHeader: javax.sip.address.Address getAddress()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address remoteTarget> = $r2;

        $r3 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r1 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dialog.setRemoteTarget: ");

        $r7 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address remoteTarget>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r9);

        $r10 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r11 = virtualinvoke $r10.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r11.<gov.nist.core.StackLogger: void logStackTrace()>();

     label1:
        return;
    }

    public void setResponseTags(gov.nist.javax.sip.message.SIPResponse)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.message.SIPResponse r1;
        java.lang.String r2, $r3, $r4, $r8, $r9, $r10, $r11;
        gov.nist.javax.sip.stack.SIPTransactionStack $r5, $r6;
        boolean $z0, $z1, $z2;
        gov.nist.core.StackLogger $r7;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPResponse;

        $r3 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        if $r3 != null goto label5;

        $r4 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>();

        if $r4 == null goto label1;

        goto label5;

     label1:
        r2 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getFromTag()>();

        if r2 == null goto label3;

        $r8 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label2;

        $r11 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>();

        virtualinvoke r1.<gov.nist.javax.sip.message.SIPResponse: void setToTag(java.lang.String)>($r11);

        goto label4;

     label2:
        $r9 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>();

        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z2 == 0 goto label4;

        $r10 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        virtualinvoke r1.<gov.nist.javax.sip.message.SIPResponse: void setToTag(java.lang.String)>($r10);

        goto label4;

     label3:
        $r5 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r5.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label4;

        $r6 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r7 = virtualinvoke $r6.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r7.<gov.nist.core.StackLogger: void logWarning(java.lang.String)>("No from tag in response! Not RFC 3261 compatible.");

     label4:
        return;

     label5:
        return;
    }

    protected void setRetransmissionTicks()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r0.<gov.nist.javax.sip.stack.SIPDialog: int retransmissionTicksLeft> = 1;

        r0.<gov.nist.javax.sip.stack.SIPDialog: int prevRetransmissionTicks> = 1;

        return;
    }

    void setRouteList(gov.nist.javax.sip.header.RouteList)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.header.RouteList r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.header.RouteList;

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList> = r1;

        return;
    }

    void setServerTransactionFlag(boolean)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        z0 := @parameter0: boolean;

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean serverTransactionFlag> = z0;

        return;
    }

    public void setSipProvider(gov.nist.javax.sip.SipProviderImpl)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.SipProviderImpl r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.SipProviderImpl;

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl sipProvider> = r1;

        return;
    }

    void setStack(gov.nist.javax.sip.stack.SIPTransactionStack)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPTransactionStack r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.stack.SIPTransactionStack;

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack> = r1;

        return;
    }

    public void setState(int)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        int i0, $i1, $i2;
        gov.nist.javax.sip.stack.SIPTransactionStack $r1, $r2, $r4, $r7, $r14, $r16, $r17, $r24;
        boolean $z0, $z1;
        java.util.Timer $r3, $r5;
        gov.nist.javax.sip.stack.SIPDialog$LingerTimer $r6;
        java.lang.StringBuilder $r8, $r18, $r25;
        java.lang.String $r13, $r23, $r30;
        gov.nist.core.StackLogger $r15, r31, r33, r35;
        javax.sip.DialogState $r21, $r28;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        i0 := @parameter0: int;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r1.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r31 = virtualinvoke $r7.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting dialog state for ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("newState = ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r31.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r13);

        $r14 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r15 = virtualinvoke $r14.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r15.<gov.nist.core.StackLogger: void logStackTrace()>();

        if i0 == -1 goto label1;

        $i1 = r0.<gov.nist.javax.sip.stack.SIPDialog: int dialogState>;

        if i0 == $i1 goto label1;

        $r16 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r16.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label1;

        $r17 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r33 = virtualinvoke $r17.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  old dialog state is ");

        $r21 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r33.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r23);

        $r24 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r35 = virtualinvoke $r24.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  New dialog state is ");

        $r28 = staticinvoke <javax.sip.DialogState: javax.sip.DialogState getObject(int)>(i0);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r35.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r30);

     label1:
        r0.<gov.nist.javax.sip.stack.SIPDialog: int dialogState> = i0;

        $i2 = <gov.nist.javax.sip.stack.SIPDialog: int TERMINATED_STATE>;

        if i0 != $i2 goto label3;

        $r2 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r3 = virtualinvoke $r2.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        if $r3 == null goto label2;

        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r5 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        $r6 = new gov.nist.javax.sip.stack.SIPDialog$LingerTimer;

        specialinvoke $r6.<gov.nist.javax.sip.stack.SIPDialog$LingerTimer: void <init>(gov.nist.javax.sip.stack.SIPDialog)>(r0);

        virtualinvoke $r5.<java.util.Timer: void schedule(java.util.TimerTask,long)>($r6, 8000L);

     label2:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void stopTimer()>();

     label3:
        return;
    }

    public void startRetransmitTimer(gov.nist.javax.sip.stack.SIPServerTransaction, javax.sip.message.Response)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPServerTransaction r1;
        javax.sip.message.Response r2;
        javax.sip.message.Request $r3;
        java.lang.String $r4;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.stack.SIPServerTransaction;

        r2 := @parameter1: javax.sip.message.Response;

        $r3 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.message.Request getRequest()>();

        $r4 = interfaceinvoke $r3.<javax.sip.message.Request: java.lang.String getMethod()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z0 == 0 goto label1;

        $i0 = interfaceinvoke r2.<javax.sip.message.Response: int getStatusCode()>();

        $i1 = $i0 / 100;

        if $i1 != 2 goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void startTimer(gov.nist.javax.sip.stack.SIPServerTransaction)>(r1);

     label1:
        return;
    }

    protected void startTimer(gov.nist.javax.sip.stack.SIPServerTransaction)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.core.StackLogger r1, r25;
        gov.nist.javax.sip.stack.SIPTransactionStack $r2, $r4, $r8, $r15, $r16;
        boolean $z0, $z1;
        gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask $r3, $r6, $r7, r24, r28;
        java.util.Timer $r5;
        java.lang.StringBuilder $r9, $r17;
        java.lang.String $r11, $r13, $r19, $r21;
        gov.nist.javax.sip.stack.SIPServerTransaction $r14, r23;
        java.lang.Throwable $r22;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r23 := @parameter0: gov.nist.javax.sip.stack.SIPServerTransaction;

        r24 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask>;

        if r24 == null goto label2;

        $r14 = r24.<gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask: gov.nist.javax.sip.stack.SIPServerTransaction transaction>;

        if $r14 != r23 goto label2;

        $r15 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r15.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label1;

        $r16 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r25 = virtualinvoke $r16.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timer already running for ");

        $r19 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getDialogId()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r25.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r21);

     label1:
        return;

     label2:
        $r2 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r2.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label3;

        $r8 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r1 = virtualinvoke $r8.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting dialog timer for ");

        $r11 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getDialogId()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r13);

     label3:
        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean ackSeen> = 0;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void acquireTimerTaskSem()>();

     label4:
        $r3 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask>;

        if $r3 == null goto label6;

        $r7 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask>;

        $r7.<gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask: gov.nist.javax.sip.stack.SIPServerTransaction transaction> = r23;

     label5:
        goto label7;

     label6:
        r28 = new gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask;

        specialinvoke r28.<gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask: void <init>(gov.nist.javax.sip.stack.SIPDialog,gov.nist.javax.sip.stack.SIPServerTransaction)>(r0, r23);

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask> = r28;

        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r5 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        $r6 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask>;

        virtualinvoke $r5.<java.util.Timer: void schedule(java.util.TimerTask,long,long)>($r6, 500L, 500L);

     label7:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void releaseTimerTaskSem()>();

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setRetransmissionTicks()>();

        return;

     label8:
        $r22 := @caughtexception;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void releaseTimerTaskSem()>();

        throw $r22;

        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    protected void stopTimer()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask $r1, $r2;
        java.lang.Exception $r3;
        java.lang.Throwable $r4;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

     label1:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void acquireTimerTaskSem()>();

     label2:
        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask>;

        if $r1 == null goto label3;

        $r2 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask>;

        virtualinvoke $r2.<gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask: boolean cancel()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask> = null;

     label3:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void releaseTimerTaskSem()>();

     label4:
        goto label9;

     label5:
        $r4 := @caughtexception;

     label6:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void releaseTimerTaskSem()>();

     label7:
        throw $r4;

     label8:
        $r3 := @caughtexception;

     label9:
        return;

        catch java.lang.Exception from label1 to label2 with label8;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Exception from label3 to label4 with label8;
        catch java.lang.Exception from label6 to label7 with label8;
        catch java.lang.Exception from label7 to label8 with label8;
    }

    boolean takeAckSem()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r1, $r4, $r5, $r6, $r7, $r12, $r14, $r16, $r22;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.concurrent.TimeUnit $r2;
        java.util.concurrent.Semaphore $r3;
        java.lang.String $r9, $r11, $r20;
        gov.nist.core.StackLogger $r13, $r15, $r23, r24, r26;
        java.lang.StringBuilder $r17, r27;
        java.lang.Throwable $r21;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r1.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r16 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r24 = virtualinvoke $r16.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[takeAckSem ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r24.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r20);

     label1:
        $r3 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.util.concurrent.Semaphore ackSem>;

        $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $z1 = virtualinvoke $r3.<java.util.concurrent.Semaphore: boolean tryAcquire(long,java.util.concurrent.TimeUnit)>(2L, $r2);

        if $z1 != 0 goto label4;

        $r5 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z3 = virtualinvoke $r5.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z3 == 0 goto label2;

        $r14 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r15 = virtualinvoke $r14.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r15.<gov.nist.core.StackLogger: void logError(java.lang.String)>("Cannot aquire ACK semaphore");

     label2:
        $r6 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z4 = virtualinvoke $r6.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z4 == 0 goto label3;

        $r7 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r26 = virtualinvoke $r7.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r27 = new java.lang.StringBuilder;

        specialinvoke r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Semaphore previously acquired at ");

        $r9 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String stackTrace>;

        virtualinvoke r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke r27.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r26.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r11);

        $r12 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r13 = virtualinvoke $r12.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r13.<gov.nist.core.StackLogger: void logStackTrace()>();

     label3:
        return 0;

     label4:
        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z2 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z2 == 0 goto label5;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void recordStackTrace()>();

     label5:
        return 1;

     label6:
        $r21 := @caughtexception;

        $r22 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r23 = virtualinvoke $r22.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r23.<gov.nist.core.StackLogger: void logError(java.lang.String)>("Cannot aquire ACK semaphore");

        return 0;

        catch java.lang.InterruptedException from label1 to label2 with label6;
        catch java.lang.InterruptedException from label2 to label3 with label6;
        catch java.lang.InterruptedException from label4 to label5 with label6;
    }

    public void terminateOnBye(boolean) throws javax.sip.SipException
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        z0 := @parameter0: boolean;

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean terminateOnBye> = z0;

        return;
    }

    boolean testAndSetIsDialogTerminatedEventDelivered()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean z0;
        java.lang.Throwable $r2;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        entermonitor r0;

     label1:
        z0 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean dialogTerminatedEventDelivered>;

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean dialogTerminatedEventDelivered> = 1;

     label2:
        exitmonitor r0;

        return z0;

     label3:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
