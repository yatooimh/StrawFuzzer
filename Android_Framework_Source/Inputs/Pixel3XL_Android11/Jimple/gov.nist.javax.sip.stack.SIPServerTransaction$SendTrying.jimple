class gov.nist.javax.sip.stack.SIPServerTransaction$SendTrying extends gov.nist.javax.sip.stack.SIPStackTimerTask
{
    final gov.nist.javax.sip.stack.SIPServerTransaction this$0;

    protected void <init>(gov.nist.javax.sip.stack.SIPServerTransaction)
    {
        gov.nist.javax.sip.stack.SIPServerTransaction$SendTrying r0;
        gov.nist.javax.sip.stack.SIPServerTransaction r1;
        gov.nist.core.StackLogger r2;
        gov.nist.javax.sip.stack.SIPTransactionStack $r4, $r5;
        boolean $z0;
        java.lang.StringBuilder $r6;
        java.lang.String $r9;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction$SendTrying;

        r1 := @parameter0: gov.nist.javax.sip.stack.SIPServerTransaction;

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction$SendTrying: gov.nist.javax.sip.stack.SIPServerTransaction this$0> = r1;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPStackTimerTask: void <init>()>();

        $r4 = r1.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r5 = r1.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r2 = virtualinvoke $r5.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scheduled timer for ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r9);

     label1:
        return;
    }

    protected void runTask()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction$SendTrying r0;
        gov.nist.javax.sip.stack.SIPServerTransaction $r1, $r5, $r7, $r13, $r22, $r24, r27;
        gov.nist.javax.sip.stack.SIPTransactionStack $r2, $r6, $r8, $r14, $r23, $r25;
        boolean $z0, $z1, $z2;
        gov.nist.javax.sip.message.SIPRequest $r3;
        gov.nist.javax.sip.message.SIPResponse $r4;
        javax.sip.TransactionState $r10, $r17, $r20, r28;
        java.lang.String $r12, $r19;
        java.lang.StringBuilder $r15, r32;
        java.lang.Throwable $r21;
        gov.nist.core.StackLogger $r26, r29, r31;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction$SendTrying;

        r27 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction$SendTrying: gov.nist.javax.sip.stack.SIPServerTransaction this$0>;

        r28 = staticinvoke <gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState access$100(gov.nist.javax.sip.stack.SIPServerTransaction)>(r27);

        if r28 == null goto label1;

        $r20 = <javax.sip.TransactionState: javax.sip.TransactionState TRYING>;

        if $r20 != r28 goto label5;

     label1:
        $r1 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction$SendTrying: gov.nist.javax.sip.stack.SIPServerTransaction this$0>;

        $r2 = $r1.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r2.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label2;

        $r13 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction$SendTrying: gov.nist.javax.sip.stack.SIPServerTransaction this$0>;

        $r14 = $r13.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r29 = virtualinvoke $r14.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sending Trying current state = ");

        $r17 = staticinvoke <gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState access$100(gov.nist.javax.sip.stack.SIPServerTransaction)>(r27);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r29.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r19);

     label2:
        $r3 = virtualinvoke r27.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r4 = virtualinvoke $r3.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPResponse createResponse(int,java.lang.String)>(100, "Trying");

        virtualinvoke r27.<gov.nist.javax.sip.stack.SIPServerTransaction: void sendMessage(gov.nist.javax.sip.message.SIPMessage)>($r4);

        $r5 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction$SendTrying: gov.nist.javax.sip.stack.SIPServerTransaction this$0>;

        $r6 = $r5.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r6.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label3;

        $r7 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction$SendTrying: gov.nist.javax.sip.stack.SIPServerTransaction this$0>;

        $r8 = $r7.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r31 = virtualinvoke $r8.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r32 = new java.lang.StringBuilder;

        specialinvoke r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" trying sent ");

        $r10 = staticinvoke <gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState access$100(gov.nist.javax.sip.stack.SIPServerTransaction)>(r27);

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r31.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r12);

     label3:
        goto label5;

     label4:
        $r21 := @caughtexception;

        $r22 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction$SendTrying: gov.nist.javax.sip.stack.SIPServerTransaction this$0>;

        $r23 = $r22.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z2 = virtualinvoke $r23.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z2 == 0 goto label5;

        $r24 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction$SendTrying: gov.nist.javax.sip.stack.SIPServerTransaction this$0>;

        $r25 = $r24.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r26 = virtualinvoke $r25.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r26.<gov.nist.core.StackLogger: void logError(java.lang.String)>("IO error sending  TRYING");

     label5:
        return;

        catch java.io.IOException from label2 to label3 with label4;
    }
}
