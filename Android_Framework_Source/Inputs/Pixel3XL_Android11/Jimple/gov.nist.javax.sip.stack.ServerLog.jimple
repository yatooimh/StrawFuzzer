public class gov.nist.javax.sip.stack.ServerLog extends java.lang.Object implements gov.nist.core.ServerLogger
{
    private java.lang.String auxInfo;
    private java.util.Properties configurationProperties;
    private java.lang.String description;
    private boolean logContent;
    private java.lang.String logFileName;
    private java.io.PrintWriter printWriter;
    private gov.nist.javax.sip.stack.SIPTransactionStack sipStack;
    private java.lang.String stackIpAddress;
    protected gov.nist.core.StackLogger stackLogger;
    protected int traceLevel;

    public void <init>()
    {
        gov.nist.javax.sip.stack.ServerLog r0;

        r0 := @this: gov.nist.javax.sip.stack.ServerLog;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<gov.nist.javax.sip.stack.ServerLog: int traceLevel> = 16;

        return;
    }

    private void logMessage(java.lang.String)
    {
        gov.nist.javax.sip.stack.ServerLog r0;
        java.lang.String r1;
        java.io.PrintWriter r2;
        gov.nist.javax.sip.stack.SIPTransactionStack $r3;
        boolean $z0;
        gov.nist.core.StackLogger $r4;

        r0 := @this: gov.nist.javax.sip.stack.ServerLog;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<gov.nist.javax.sip.stack.ServerLog: void checkLogFile()>();

        r2 = r0.<gov.nist.javax.sip.stack.ServerLog: java.io.PrintWriter printWriter>;

        if r2 == null goto label1;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(r1);

     label1:
        $r3 = r0.<gov.nist.javax.sip.stack.ServerLog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label2;

        $r4 = r0.<gov.nist.javax.sip.stack.ServerLog: gov.nist.core.StackLogger stackLogger>;

        interfaceinvoke $r4.<gov.nist.core.StackLogger: void logInfo(java.lang.String)>(r1);

     label2:
        return;
    }

    private void logMessage(java.lang.String, java.lang.String, java.lang.String, boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, long, long)
    {
        gov.nist.javax.sip.stack.ServerLog r0;
        java.lang.String r1, r2, r3, r4, r5, r6, $r9, r10;
        boolean z0;
        long l0, l1;
        gov.nist.javax.sip.stack.SIPTransactionStack $r7;
        gov.nist.javax.sip.LogRecordFactory $r8;
        gov.nist.javax.sip.LogRecord r11;

        r0 := @this: gov.nist.javax.sip.stack.ServerLog;

        r10 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.lang.String;

        r5 := @parameter6: java.lang.String;

        r6 := @parameter7: java.lang.String;

        l0 := @parameter8: long;

        l1 := @parameter9: long;

        $r7 = r0.<gov.nist.javax.sip.stack.ServerLog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r8 = $r7.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.LogRecordFactory logRecordFactory>;

        r11 = interfaceinvoke $r8.<gov.nist.javax.sip.LogRecordFactory: gov.nist.javax.sip.LogRecord createLogRecord(java.lang.String,java.lang.String,java.lang.String,long,boolean,java.lang.String,java.lang.String,java.lang.String,long)>(r10, r1, r2, l0, z0, r4, r6, r3, l1);

        if r11 == null goto label1;

        $r9 = interfaceinvoke r11.<gov.nist.javax.sip.LogRecord: java.lang.String toString()>();

        specialinvoke r0.<gov.nist.javax.sip.stack.ServerLog: void logMessage(java.lang.String)>($r9);

     label1:
        return;
    }

    private void setProperties(java.util.Properties)
    {
        gov.nist.javax.sip.stack.ServerLog r0;
        java.lang.String r1, $r3, $r4, $r5, $r10, r13;
        java.io.PrintStream r2, $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7;
        java.lang.Throwable $r6;
        java.lang.StringBuilder $r7;
        java.util.Properties r12;
        int i0;

        r0 := @this: gov.nist.javax.sip.stack.ServerLog;

        r12 := @parameter0: java.util.Properties;

        r0.<gov.nist.javax.sip.stack.ServerLog: java.util.Properties configurationProperties> = r12;

        $r3 = virtualinvoke r12.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("javax.sip.STACK_NAME");

        r0.<gov.nist.javax.sip.stack.ServerLog: java.lang.String description> = $r3;

        $r4 = virtualinvoke r12.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("javax.sip.IP_ADDRESS");

        r0.<gov.nist.javax.sip.stack.ServerLog: java.lang.String stackIpAddress> = $r4;

        $r5 = virtualinvoke r12.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("gov.nist.javax.sip.SERVER_LOG");

        r0.<gov.nist.javax.sip.stack.ServerLog: java.lang.String logFileName> = $r5;

        r1 = virtualinvoke r12.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("gov.nist.javax.sip.TRACE_LEVEL");

        r13 = virtualinvoke r12.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("gov.nist.javax.sip.LOG_MESSAGE_CONTENT");

        if r13 == null goto label01;

        $z6 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>("true");

        if $z6 == 0 goto label01;

        z7 = 1;

        goto label02;

     label01:
        z7 = 0;

     label02:
        r0.<gov.nist.javax.sip.stack.ServerLog: boolean logContent> = z7;

        if r1 == null goto label17;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("LOG4J");

        if $z0 == 0 goto label03;

        goto label17;

     label03:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("DEBUG");

        if $z1 == 0 goto label05;

     label04:
        i0 = 32;

        goto label14;

     label05:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("INFO");

        if $z2 == 0 goto label07;

     label06:
        i0 = 16;

        goto label14;

     label07:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("ERROR");

        if $z3 == 0 goto label09;

     label08:
        i0 = 4;

        goto label14;

     label09:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("NONE");

        if $z4 != 0 goto label13;

        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("OFF");

        if $z5 == 0 goto label11;

     label10:
        goto label13;

     label11:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label12:
        goto label14;

     label13:
        i0 = 0;

     label14:
        virtualinvoke r0.<gov.nist.javax.sip.stack.ServerLog: void setTraceLevel(int)>(i0);

     label15:
        goto label17;

     label16:
        $r6 := @caughtexception;

        r2 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ServerLog: WARNING Bad integer ");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintStream: void println(java.lang.String)>($r10);

        $r11 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("logging dislabled ");

        virtualinvoke r0.<gov.nist.javax.sip.stack.ServerLog: void setTraceLevel(int)>(0);

     label17:
        virtualinvoke r0.<gov.nist.javax.sip.stack.ServerLog: void checkLogFile()>();

        return;

        catch java.lang.NumberFormatException from label03 to label04 with label16;
        catch java.lang.NumberFormatException from label05 to label06 with label16;
        catch java.lang.NumberFormatException from label07 to label08 with label16;
        catch java.lang.NumberFormatException from label09 to label10 with label16;
        catch java.lang.NumberFormatException from label11 to label12 with label16;
        catch java.lang.NumberFormatException from label14 to label15 with label16;
    }

    public void checkLogFile()
    {
        gov.nist.javax.sip.stack.ServerLog r0;
        java.lang.String $r1, $r2, $r5, $r9, $r13, $r17, $r21, $r24, $r26, $r30, $r33, $r36, $r42, $r46, $r49, $r52, $r58, $r62, $r66, $r70, $r74, $r78, $r82, $r85, $r89, $r92, $r95, $r98, r104, r109;
        int $i0;
        boolean $z0, $z1, $z2, z4, z5;
        java.io.PrintWriter $r3, r105, r107;
        java.util.Properties $r4, $r8, $r12, $r16, $r20, $r29, $r39, $r57, $r61, $r65, $r69, $r73, $r77, $r81;
        java.lang.Boolean $r6;
        gov.nist.javax.sip.stack.SIPTransactionStack $r37, $r55;
        gov.nist.core.StackLogger $r43, $r44, $r53, $r54, $r86, $r87, $r99, $r100, r110, r112, r114, r116;
        java.lang.Throwable $r101;
        java.io.File r102;
        java.io.FileWriter r103;
        java.lang.StringBuilder r106, r108, r111, r113, r115, r117;

        r0 := @this: gov.nist.javax.sip.stack.ServerLog;

        $r1 = r0.<gov.nist.javax.sip.stack.ServerLog: java.lang.String logFileName>;

        if $r1 == null goto label15;

        $i0 = r0.<gov.nist.javax.sip.stack.ServerLog: int traceLevel>;

        if $i0 >= 16 goto label01;

        goto label15;

     label01:
        r102 = new java.io.File;

        $r2 = r0.<gov.nist.javax.sip.stack.ServerLog: java.lang.String logFileName>;

        specialinvoke r102.<java.io.File: void <init>(java.lang.String)>($r2);

        $z0 = virtualinvoke r102.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label02;

        virtualinvoke r102.<java.io.File: boolean createNewFile()>();

        r0.<gov.nist.javax.sip.stack.ServerLog: java.io.PrintWriter printWriter> = null;

     label02:
        $r3 = r0.<gov.nist.javax.sip.stack.ServerLog: java.io.PrintWriter printWriter>;

        if $r3 != null goto label12;

        $r4 = r0.<gov.nist.javax.sip.stack.ServerLog: java.util.Properties configurationProperties>;

        $r5 = virtualinvoke $r4.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("gov.nist.javax.sip.SERVER_LOG_OVERWRITE");

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r5);

        z4 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        r103 = new java.io.FileWriter;

        r104 = r0.<gov.nist.javax.sip.stack.ServerLog: java.lang.String logFileName>;

     label03:
        if z4 != 0 goto label04;

        z5 = 1;

        goto label05;

     label04:
        z5 = 0;

     label05:
        specialinvoke r103.<java.io.FileWriter: void <init>(java.lang.String,boolean)>(r104, z5);

        r105 = new java.io.PrintWriter;

        specialinvoke r105.<java.io.PrintWriter: void <init>(java.io.Writer,boolean)>(r103, 1);

        r0.<gov.nist.javax.sip.stack.ServerLog: java.io.PrintWriter printWriter> = r105;

        r106 = new java.lang.StringBuilder;

        specialinvoke r106.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<!-- Use the  Trace Viewer in src/tools/tracesviewer to view this  trace  \nHere are the stack configuration properties \njavax.sip.IP_ADDRESS= ");

        $r8 = r0.<gov.nist.javax.sip.stack.ServerLog: java.util.Properties configurationProperties>;

        $r9 = virtualinvoke $r8.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("javax.sip.IP_ADDRESS");

        virtualinvoke r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\njavax.sip.STACK_NAME= ");

        $r12 = r0.<gov.nist.javax.sip.stack.ServerLog: java.util.Properties configurationProperties>;

        $r13 = virtualinvoke $r12.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("javax.sip.STACK_NAME");

        virtualinvoke r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\njavax.sip.ROUTER_PATH= ");

        $r16 = r0.<gov.nist.javax.sip.stack.ServerLog: java.util.Properties configurationProperties>;

        $r17 = virtualinvoke $r16.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("javax.sip.ROUTER_PATH");

        virtualinvoke r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\njavax.sip.OUTBOUND_PROXY= ");

        $r20 = r0.<gov.nist.javax.sip.stack.ServerLog: java.util.Properties configurationProperties>;

        $r21 = virtualinvoke $r20.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("javax.sip.OUTBOUND_PROXY");

        virtualinvoke r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        virtualinvoke r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n-->");

        $r24 = virtualinvoke r106.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r105.<java.io.PrintWriter: void println(java.lang.String)>($r24);

        r107 = r0.<gov.nist.javax.sip.stack.ServerLog: java.io.PrintWriter printWriter>;

        r108 = new java.lang.StringBuilder;

        specialinvoke r108.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<description\n logDescription=\"");

        $r26 = r0.<gov.nist.javax.sip.stack.ServerLog: java.lang.String description>;

        virtualinvoke r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        virtualinvoke r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"\n name=\"");

        $r29 = r0.<gov.nist.javax.sip.stack.ServerLog: java.util.Properties configurationProperties>;

        $r30 = virtualinvoke $r29.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("javax.sip.STACK_NAME");

        virtualinvoke r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        virtualinvoke r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"\n auxInfo=\"");

        $r33 = r0.<gov.nist.javax.sip.stack.ServerLog: java.lang.String auxInfo>;

        virtualinvoke r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        virtualinvoke r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"/>\n ");

        $r36 = virtualinvoke r108.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r107.<java.io.PrintWriter: void println(java.lang.String)>($r36);

        r109 = r0.<gov.nist.javax.sip.stack.ServerLog: java.lang.String auxInfo>;

     label06:
        if r109 == null goto label10;

     label07:
        $r55 = r0.<gov.nist.javax.sip.stack.ServerLog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z2 = virtualinvoke $r55.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z2 == 0 goto label09;

        r110 = r0.<gov.nist.javax.sip.stack.ServerLog: gov.nist.core.StackLogger stackLogger>;

        r111 = new java.lang.StringBuilder;

        specialinvoke r111.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Here are the stack configuration properties \njavax.sip.IP_ADDRESS= ");

        $r57 = r0.<gov.nist.javax.sip.stack.ServerLog: java.util.Properties configurationProperties>;

        $r58 = virtualinvoke $r57.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("javax.sip.IP_ADDRESS");

        virtualinvoke r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

        virtualinvoke r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\njavax.sip.ROUTER_PATH= ");

        $r61 = r0.<gov.nist.javax.sip.stack.ServerLog: java.util.Properties configurationProperties>;

        $r62 = virtualinvoke $r61.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("javax.sip.ROUTER_PATH");

        virtualinvoke r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        virtualinvoke r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\njavax.sip.OUTBOUND_PROXY= ");

        $r65 = r0.<gov.nist.javax.sip.stack.ServerLog: java.util.Properties configurationProperties>;

        $r66 = virtualinvoke $r65.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("javax.sip.OUTBOUND_PROXY");

        virtualinvoke r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        virtualinvoke r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\ngov.nist.javax.sip.CACHE_CLIENT_CONNECTIONS= ");

        $r69 = r0.<gov.nist.javax.sip.stack.ServerLog: java.util.Properties configurationProperties>;

        $r70 = virtualinvoke $r69.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("gov.nist.javax.sip.CACHE_CLIENT_CONNECTIONS");

        virtualinvoke r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70);

        virtualinvoke r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\ngov.nist.javax.sip.CACHE_SERVER_CONNECTIONS= ");

        $r73 = r0.<gov.nist.javax.sip.stack.ServerLog: java.util.Properties configurationProperties>;

        $r74 = virtualinvoke $r73.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("gov.nist.javax.sip.CACHE_SERVER_CONNECTIONS");

        virtualinvoke r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        virtualinvoke r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\ngov.nist.javax.sip.REENTRANT_LISTENER= ");

        $r77 = r0.<gov.nist.javax.sip.stack.ServerLog: java.util.Properties configurationProperties>;

        $r78 = virtualinvoke $r77.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("gov.nist.javax.sip.REENTRANT_LISTENER");

        virtualinvoke r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78);

        virtualinvoke r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("gov.nist.javax.sip.THREAD_POOL_SIZE= ");

        $r81 = r0.<gov.nist.javax.sip.stack.ServerLog: java.util.Properties configurationProperties>;

        $r82 = virtualinvoke $r81.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("gov.nist.javax.sip.THREAD_POOL_SIZE");

        virtualinvoke r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r82);

        virtualinvoke r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r85 = virtualinvoke r111.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r110.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r85);

        $r86 = r0.<gov.nist.javax.sip.stack.ServerLog: gov.nist.core.StackLogger stackLogger>;

        interfaceinvoke $r86.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>(" ]]> ");

        $r87 = r0.<gov.nist.javax.sip.stack.ServerLog: gov.nist.core.StackLogger stackLogger>;

        interfaceinvoke $r87.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("</debug>");

        r112 = r0.<gov.nist.javax.sip.stack.ServerLog: gov.nist.core.StackLogger stackLogger>;

        r113 = new java.lang.StringBuilder;

        specialinvoke r113.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<description\n logDescription=\"");

        $r89 = r0.<gov.nist.javax.sip.stack.ServerLog: java.lang.String description>;

        virtualinvoke r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r89);

        virtualinvoke r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"\n name=\"");

        $r92 = r0.<gov.nist.javax.sip.stack.ServerLog: java.lang.String stackIpAddress>;

        virtualinvoke r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r92);

        virtualinvoke r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"\n auxInfo=\"");

        $r95 = r0.<gov.nist.javax.sip.stack.ServerLog: java.lang.String auxInfo>;

        virtualinvoke r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r95);

        virtualinvoke r113.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"/>\n ");

        $r98 = virtualinvoke r113.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r112.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r98);

        $r99 = r0.<gov.nist.javax.sip.stack.ServerLog: gov.nist.core.StackLogger stackLogger>;

        interfaceinvoke $r99.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("<debug>");

        $r100 = r0.<gov.nist.javax.sip.stack.ServerLog: gov.nist.core.StackLogger stackLogger>;

        interfaceinvoke $r100.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("<![CDATA[ ");

     label08:
        goto label12;

     label09:
        goto label12;

     label10:
        $r37 = r0.<gov.nist.javax.sip.stack.ServerLog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r37.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label12;

        r114 = r0.<gov.nist.javax.sip.stack.ServerLog: gov.nist.core.StackLogger stackLogger>;

        r115 = new java.lang.StringBuilder;

        specialinvoke r115.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Here are the stack configuration properties \n");

        $r39 = r0.<gov.nist.javax.sip.stack.ServerLog: java.util.Properties configurationProperties>;

        virtualinvoke r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r39);

        virtualinvoke r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r42 = virtualinvoke r115.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r114.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r42);

        $r43 = r0.<gov.nist.javax.sip.stack.ServerLog: gov.nist.core.StackLogger stackLogger>;

        interfaceinvoke $r43.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>(" ]]>");

        $r44 = r0.<gov.nist.javax.sip.stack.ServerLog: gov.nist.core.StackLogger stackLogger>;

        interfaceinvoke $r44.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("</debug>");

        r116 = r0.<gov.nist.javax.sip.stack.ServerLog: gov.nist.core.StackLogger stackLogger>;

        r117 = new java.lang.StringBuilder;

        specialinvoke r117.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<description\n logDescription=\"");

        $r46 = r0.<gov.nist.javax.sip.stack.ServerLog: java.lang.String description>;

        virtualinvoke r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        virtualinvoke r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"\n name=\"");

        $r49 = r0.<gov.nist.javax.sip.stack.ServerLog: java.lang.String stackIpAddress>;

        virtualinvoke r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        virtualinvoke r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" />\n");

        $r52 = virtualinvoke r117.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r116.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r52);

        $r53 = r0.<gov.nist.javax.sip.stack.ServerLog: gov.nist.core.StackLogger stackLogger>;

        interfaceinvoke $r53.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("<debug>");

        $r54 = r0.<gov.nist.javax.sip.stack.ServerLog: gov.nist.core.StackLogger stackLogger>;

        interfaceinvoke $r54.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("<![CDATA[ ");

     label11:
        goto label12;

     label12:
        goto label14;

     label13:
        $r101 := @caughtexception;

     label14:
        return;

     label15:
        return;

        catch java.io.IOException from label01 to label02 with label13;
        catch java.io.IOException from label02 to label03 with label13;
        catch java.io.IOException from label05 to label06 with label13;
        catch java.io.IOException from label07 to label08 with label13;
        catch java.io.IOException from label10 to label11 with label13;
    }

    public void closeLogFile()
    {
        gov.nist.javax.sip.stack.ServerLog r0;
        java.io.PrintWriter $r2, $r3;
        java.lang.Throwable $r4;

        r0 := @this: gov.nist.javax.sip.stack.ServerLog;

        entermonitor r0;

     label1:
        $r2 = r0.<gov.nist.javax.sip.stack.ServerLog: java.io.PrintWriter printWriter>;

        if $r2 == null goto label2;

        $r3 = r0.<gov.nist.javax.sip.stack.ServerLog: java.io.PrintWriter printWriter>;

        virtualinvoke $r3.<java.io.PrintWriter: void close()>();

        r0.<gov.nist.javax.sip.stack.ServerLog: java.io.PrintWriter printWriter> = null;

     label2:
        exitmonitor r0;

        return;

     label3:
        $r4 := @caughtexception;

        exitmonitor r0;

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.String getLogFileName()
    {
        gov.nist.javax.sip.stack.ServerLog r0;
        java.lang.String $r1;

        r0 := @this: gov.nist.javax.sip.stack.ServerLog;

        $r1 = r0.<gov.nist.javax.sip.stack.ServerLog: java.lang.String logFileName>;

        return $r1;
    }

    public int getTraceLevel()
    {
        gov.nist.javax.sip.stack.ServerLog r0;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.ServerLog;

        $i0 = r0.<gov.nist.javax.sip.stack.ServerLog: int traceLevel>;

        return $i0;
    }

    public void logException(java.lang.Exception)
    {
        gov.nist.javax.sip.stack.ServerLog r0;
        java.lang.Exception r1;
        java.io.PrintWriter r2;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.ServerLog;

        r1 := @parameter0: java.lang.Exception;

        $i0 = r0.<gov.nist.javax.sip.stack.ServerLog: int traceLevel>;

        if $i0 < 4 goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.stack.ServerLog: void checkLogFile()>();

        virtualinvoke r1.<java.lang.Exception: void printStackTrace()>();

        r2 = r0.<gov.nist.javax.sip.stack.ServerLog: java.io.PrintWriter printWriter>;

        if r2 == null goto label1;

        virtualinvoke r1.<java.lang.Exception: void printStackTrace(java.io.PrintWriter)>(r2);

     label1:
        return;
    }

    public void logMessage(gov.nist.javax.sip.message.SIPMessage, java.lang.String, java.lang.String, java.lang.String, boolean)
    {
        gov.nist.javax.sip.stack.ServerLog r0;
        gov.nist.javax.sip.message.SIPMessage r1;
        java.lang.String r2, r3, r4;
        boolean z0;
        long $l0;

        r0 := @this: gov.nist.javax.sip.stack.ServerLog;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPMessage;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke r0.<gov.nist.javax.sip.stack.ServerLog: void logMessage(gov.nist.javax.sip.message.SIPMessage,java.lang.String,java.lang.String,java.lang.String,boolean,long)>(r1, r2, r3, r4, z0, $l0);

        return;
    }

    public void logMessage(gov.nist.javax.sip.message.SIPMessage, java.lang.String, java.lang.String, java.lang.String, boolean, long)
    {
        gov.nist.javax.sip.stack.ServerLog r0;
        java.lang.String r1, r2, r3, r4, r5, $r7, r11, r12;
        boolean z0, $z1;
        long l0, l1;
        javax.sip.header.CallIdHeader $r6;
        javax.sip.header.Header $r8;
        gov.nist.javax.sip.message.SIPMessage r9;
        gov.nist.javax.sip.header.CallID r10;
        javax.sip.header.TimeStampHeader r13;

        r0 := @this: gov.nist.javax.sip.stack.ServerLog;

        r9 := @parameter0: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        l0 := @parameter5: long;

        virtualinvoke r0.<gov.nist.javax.sip.stack.ServerLog: void checkLogFile()>();

        $r6 = virtualinvoke r9.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CallIdHeader getCallId()>();

        r10 = (gov.nist.javax.sip.header.CallID) $r6;

        r11 = null;

        if r10 == null goto label1;

        r11 = virtualinvoke r10.<gov.nist.javax.sip.header.CallID: java.lang.String getCallId()>();

     label1:
        $r7 = virtualinvoke r9.<gov.nist.javax.sip.message.SIPMessage: java.lang.String getFirstLine()>();

        r4 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();

        $z1 = r0.<gov.nist.javax.sip.stack.ServerLog: boolean logContent>;

        if $z1 == 0 goto label2;

        r12 = virtualinvoke r9.<gov.nist.javax.sip.message.SIPMessage: java.lang.String encode()>();

        goto label3;

     label2:
        r12 = virtualinvoke r9.<gov.nist.javax.sip.message.SIPMessage: java.lang.String encodeMessage()>();

     label3:
        r5 = virtualinvoke r9.<gov.nist.javax.sip.message.SIPMessage: java.lang.String getTransactionId()>();

        $r8 = virtualinvoke r9.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.Header getHeader(java.lang.String)>("Timestamp");

        r13 = (javax.sip.header.TimeStampHeader) $r8;

        if r13 != null goto label4;

        l1 = 0L;

        goto label5;

     label4:
        l1 = interfaceinvoke r13.<javax.sip.header.TimeStampHeader: long getTime()>();

     label5:
        specialinvoke r0.<gov.nist.javax.sip.stack.ServerLog: void logMessage(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long)>(r12, r1, r2, z0, r11, r4, r3, r5, l0, l1);

        return;
    }

    public void logMessage(gov.nist.javax.sip.message.SIPMessage, java.lang.String, java.lang.String, boolean, long)
    {
        gov.nist.javax.sip.stack.ServerLog r0;
        java.lang.String r1, r2, r3, r4, $r5, $r7, r11, r12;
        boolean z0, $z1;
        long l0, l1;
        javax.sip.header.CallIdHeader $r6;
        javax.sip.header.Header $r8;
        gov.nist.javax.sip.message.SIPMessage r9;
        gov.nist.javax.sip.header.CallID r10;
        javax.sip.header.TimeStampHeader r13;

        r0 := @this: gov.nist.javax.sip.stack.ServerLog;

        r9 := @parameter0: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        l0 := @parameter4: long;

        virtualinvoke r0.<gov.nist.javax.sip.stack.ServerLog: void checkLogFile()>();

        $r5 = virtualinvoke r9.<gov.nist.javax.sip.message.SIPMessage: java.lang.String getFirstLine()>();

        if $r5 != null goto label1;

        return;

     label1:
        $r6 = virtualinvoke r9.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CallIdHeader getCallId()>();

        r10 = (gov.nist.javax.sip.header.CallID) $r6;

        r11 = null;

        if r10 == null goto label2;

        r11 = virtualinvoke r10.<gov.nist.javax.sip.header.CallID: java.lang.String getCallId()>();

     label2:
        $r7 = virtualinvoke r9.<gov.nist.javax.sip.message.SIPMessage: java.lang.String getFirstLine()>();

        r3 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();

        $z1 = r0.<gov.nist.javax.sip.stack.ServerLog: boolean logContent>;

        if $z1 == 0 goto label3;

        r12 = virtualinvoke r9.<gov.nist.javax.sip.message.SIPMessage: java.lang.String encode()>();

        goto label4;

     label3:
        r12 = virtualinvoke r9.<gov.nist.javax.sip.message.SIPMessage: java.lang.String encodeMessage()>();

     label4:
        r4 = virtualinvoke r9.<gov.nist.javax.sip.message.SIPMessage: java.lang.String getTransactionId()>();

        $r8 = virtualinvoke r9.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.Header getHeader(java.lang.String)>("Timestamp");

        r13 = (javax.sip.header.TimeStampHeader) $r8;

        if r13 != null goto label5;

        l1 = 0L;

        goto label6;

     label5:
        l1 = interfaceinvoke r13.<javax.sip.header.TimeStampHeader: long getTime()>();

     label6:
        specialinvoke r0.<gov.nist.javax.sip.stack.ServerLog: void logMessage(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,long)>(r12, r1, r2, z0, r11, r3, null, r4, l0, l1);

        return;
    }

    public boolean needsLogging()
    {
        gov.nist.javax.sip.stack.ServerLog r0;
        java.lang.String $r1;
        boolean z0;

        r0 := @this: gov.nist.javax.sip.stack.ServerLog;

        $r1 = r0.<gov.nist.javax.sip.stack.ServerLog: java.lang.String logFileName>;

        if $r1 == null goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public void setAuxInfo(java.lang.String)
    {
        gov.nist.javax.sip.stack.ServerLog r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.stack.ServerLog;

        r1 := @parameter0: java.lang.String;

        r0.<gov.nist.javax.sip.stack.ServerLog: java.lang.String auxInfo> = r1;

        return;
    }

    public void setLevel(int)
    {
        gov.nist.javax.sip.stack.ServerLog r0;
        int i0;

        r0 := @this: gov.nist.javax.sip.stack.ServerLog;

        i0 := @parameter0: int;

        return;
    }

    public void setLogFileName(java.lang.String)
    {
        gov.nist.javax.sip.stack.ServerLog r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.stack.ServerLog;

        r1 := @parameter0: java.lang.String;

        r0.<gov.nist.javax.sip.stack.ServerLog: java.lang.String logFileName> = r1;

        return;
    }

    public void setSipStack(javax.sip.SipStack)
    {
        gov.nist.javax.sip.stack.ServerLog r0;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;
        gov.nist.core.StackLogger $r2;
        javax.sip.SipStack r3;
        gov.nist.javax.sip.stack.SIPTransactionStack r4;

        r0 := @this: gov.nist.javax.sip.stack.ServerLog;

        r3 := @parameter0: javax.sip.SipStack;

        $z0 = r3 instanceof gov.nist.javax.sip.stack.SIPTransactionStack;

        if $z0 == 0 goto label1;

        r4 = (gov.nist.javax.sip.stack.SIPTransactionStack) r3;

        r0.<gov.nist.javax.sip.stack.ServerLog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack> = r4;

        $r2 = virtualinvoke r4.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r0.<gov.nist.javax.sip.stack.ServerLog: gov.nist.core.StackLogger stackLogger> = $r2;

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("sipStack must be a SIPTransactionStack");

        throw $r1;
    }

    public void setStackIpAddress(java.lang.String)
    {
        gov.nist.javax.sip.stack.ServerLog r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.stack.ServerLog;

        r1 := @parameter0: java.lang.String;

        r0.<gov.nist.javax.sip.stack.ServerLog: java.lang.String stackIpAddress> = r1;

        return;
    }

    public void setStackProperties(java.util.Properties)
    {
        gov.nist.javax.sip.stack.ServerLog r0;
        java.util.Properties r1;

        r0 := @this: gov.nist.javax.sip.stack.ServerLog;

        r1 := @parameter0: java.util.Properties;

        specialinvoke r0.<gov.nist.javax.sip.stack.ServerLog: void setProperties(java.util.Properties)>(r1);

        return;
    }

    public void setTraceLevel(int)
    {
        gov.nist.javax.sip.stack.ServerLog r0;
        int i0;

        r0 := @this: gov.nist.javax.sip.stack.ServerLog;

        i0 := @parameter0: int;

        r0.<gov.nist.javax.sip.stack.ServerLog: int traceLevel> = i0;

        return;
    }
}
