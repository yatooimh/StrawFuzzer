public class gov.nist.javax.sip.stack.TCPMessageProcessor extends gov.nist.javax.sip.stack.MessageProcessor
{
    private java.util.ArrayList incomingTcpMessageChannels;
    private boolean isRunning;
    protected int nConnections;
    private java.net.ServerSocket sock;
    private java.util.Hashtable tcpMessageChannels;
    protected int useCount;

    protected void <init>(java.net.InetAddress, gov.nist.javax.sip.stack.SIPTransactionStack, int)
    {
        gov.nist.javax.sip.stack.TCPMessageProcessor r0;
        java.net.InetAddress r1;
        gov.nist.javax.sip.stack.SIPTransactionStack r2;
        int i0;
        java.util.Hashtable $r3;
        java.util.ArrayList $r4;

        r0 := @this: gov.nist.javax.sip.stack.TCPMessageProcessor;

        r1 := @parameter0: java.net.InetAddress;

        r2 := @parameter1: gov.nist.javax.sip.stack.SIPTransactionStack;

        i0 := @parameter2: int;

        specialinvoke r0.<gov.nist.javax.sip.stack.MessageProcessor: void <init>(java.net.InetAddress,int,java.lang.String,gov.nist.javax.sip.stack.SIPTransactionStack)>(r1, i0, "tcp", r2);

        r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack> = r2;

        $r3 = new java.util.Hashtable;

        specialinvoke $r3.<java.util.Hashtable: void <init>()>();

        r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.util.Hashtable tcpMessageChannels> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.util.ArrayList incomingTcpMessageChannels> = $r4;

        return;
    }

    protected void cacheMessageChannel(gov.nist.javax.sip.stack.TCPMessageChannel)
    {
        gov.nist.javax.sip.stack.TCPMessageProcessor r0;
        java.lang.String r1, $r10, $r15;
        gov.nist.javax.sip.stack.TCPMessageChannel r2, r17;
        java.util.Hashtable $r3, $r5;
        java.lang.Object $r4;
        gov.nist.javax.sip.stack.SIPTransactionStack $r7, $r11, $r12, $r20;
        boolean $z0, $z1;
        java.lang.Throwable $r16;
        gov.nist.core.StackLogger r18, r21;
        java.lang.StringBuilder r19, r22;

        r0 := @this: gov.nist.javax.sip.stack.TCPMessageProcessor;

        r17 := @parameter0: gov.nist.javax.sip.stack.TCPMessageChannel;

        entermonitor r0;

     label1:
        r1 = virtualinvoke r17.<gov.nist.javax.sip.stack.TCPMessageChannel: java.lang.String getKey()>();

        $r3 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.util.Hashtable tcpMessageChannels>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (gov.nist.javax.sip.stack.TCPMessageChannel) $r4;

     label2:
        if r2 == null goto label5;

     label3:
        $r11 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r11.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label4;

        $r12 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r18 = virtualinvoke $r12.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r19 = new java.lang.StringBuilder;

        specialinvoke r19.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing ");

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r18.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r15);

     label4:
        virtualinvoke r2.<gov.nist.javax.sip.stack.TCPMessageChannel: void close()>();

     label5:
        $r20 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r20.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label6;

        $r7 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r21 = virtualinvoke $r7.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r22 = new java.lang.StringBuilder;

        specialinvoke r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caching ");

        virtualinvoke r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke r22.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r21.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r10);

     label6:
        $r5 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.util.Hashtable tcpMessageChannels>;

        virtualinvoke $r5.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r17);

     label7:
        exitmonitor r0;

        return;

     label8:
        $r16 := @caughtexception;

        exitmonitor r0;

        throw $r16;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
    }

    public gov.nist.javax.sip.stack.MessageChannel createMessageChannel(gov.nist.core.HostPort) throws java.io.IOException
    {
        gov.nist.javax.sip.stack.TCPMessageProcessor r0;
        gov.nist.javax.sip.stack.TCPMessageChannel r1, r23;
        java.lang.StringBuilder r2, r26;
        java.util.Hashtable $r3, $r7, $r18;
        java.lang.Object $r4, $r19;
        java.net.InetAddress $r5;
        int $i0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r6, $r9, $r10, $r14;
        boolean $z0;
        java.lang.String $r13, $r17, r22;
        java.lang.Throwable $r20;
        gov.nist.core.HostPort r21;
        gov.nist.core.StackLogger r24, r25;

        r0 := @this: gov.nist.javax.sip.stack.TCPMessageProcessor;

        r21 := @parameter0: gov.nist.core.HostPort;

        entermonitor r0;

     label1:
        r22 = staticinvoke <gov.nist.javax.sip.stack.MessageChannel: java.lang.String getKey(gov.nist.core.HostPort,java.lang.String)>(r21, "TCP");

        $r3 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.util.Hashtable tcpMessageChannels>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r22);

        if $r4 == null goto label3;

        $r18 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.util.Hashtable tcpMessageChannels>;

        $r19 = virtualinvoke $r18.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r22);

        r23 = (gov.nist.javax.sip.stack.TCPMessageChannel) $r19;

     label2:
        exitmonitor r0;

        return r23;

     label3:
        r1 = new gov.nist.javax.sip.stack.TCPMessageChannel;

        $r5 = virtualinvoke r21.<gov.nist.core.HostPort: java.net.InetAddress getInetAddress()>();

        $i0 = virtualinvoke r21.<gov.nist.core.HostPort: int getPort()>();

        $r6 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        specialinvoke r1.<gov.nist.javax.sip.stack.TCPMessageChannel: void <init>(java.net.InetAddress,int,gov.nist.javax.sip.stack.SIPTransactionStack,gov.nist.javax.sip.stack.TCPMessageProcessor)>($r5, $i0, $r6, r0);

        $r7 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.util.Hashtable tcpMessageChannels>;

        virtualinvoke $r7.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r22, r1);

        r1.<gov.nist.javax.sip.stack.TCPMessageChannel: boolean isCached> = 1;

        $r9 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r9.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label4;

        $r10 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r24 = virtualinvoke $r10.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("key ");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r13 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r24.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r13);

        $r14 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r25 = virtualinvoke $r14.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r26 = new java.lang.StringBuilder;

        specialinvoke r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating ");

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r17 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r25.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r17);

     label4:
        exitmonitor r0;

        return r1;

     label5:
        $r20 := @caughtexception;

        exitmonitor r0;

        throw $r20;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public gov.nist.javax.sip.stack.MessageChannel createMessageChannel(java.net.InetAddress, int) throws java.io.IOException
    {
        gov.nist.javax.sip.stack.TCPMessageProcessor r0;
        int i0;
        java.util.Hashtable $r2, $r5, $r16;
        java.lang.Object $r3, $r17;
        gov.nist.javax.sip.stack.SIPTransactionStack $r4, $r7, $r8, $r12;
        boolean $z0;
        java.lang.String $r11, $r15, $r20, r22;
        java.lang.Throwable $r18, $r19;
        java.net.InetAddress r21;
        gov.nist.javax.sip.stack.TCPMessageChannel r23, r31;
        gov.nist.core.StackLogger r25, r26;
        java.lang.StringBuilder r32, r33;
        java.io.IOException r34;
        java.net.UnknownHostException r35;

        r0 := @this: gov.nist.javax.sip.stack.TCPMessageProcessor;

        r21 := @parameter0: java.net.InetAddress;

        i0 := @parameter1: int;

        entermonitor r0;

     label1:
        r22 = staticinvoke <gov.nist.javax.sip.stack.MessageChannel: java.lang.String getKey(java.net.InetAddress,int,java.lang.String)>(r21, i0, "TCP");

        $r2 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.util.Hashtable tcpMessageChannels>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r22);

        if $r3 == null goto label3;

        $r16 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.util.Hashtable tcpMessageChannels>;

        $r17 = virtualinvoke $r16.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r22);

        r23 = (gov.nist.javax.sip.stack.TCPMessageChannel) $r17;

     label2:
        exitmonitor r0;

        return r23;

     label3:
        r31 = new gov.nist.javax.sip.stack.TCPMessageChannel;

        $r4 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        specialinvoke r31.<gov.nist.javax.sip.stack.TCPMessageChannel: void <init>(java.net.InetAddress,int,gov.nist.javax.sip.stack.SIPTransactionStack,gov.nist.javax.sip.stack.TCPMessageProcessor)>(r21, i0, $r4, r0);

        $r5 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.util.Hashtable tcpMessageChannels>;

        virtualinvoke $r5.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r22, r31);

        r31.<gov.nist.javax.sip.stack.TCPMessageChannel: boolean isCached> = 1;

        $r7 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r7.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label4;

        $r8 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r25 = virtualinvoke $r8.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r32 = new java.lang.StringBuilder;

        specialinvoke r32.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("key ");

        virtualinvoke r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r11 = virtualinvoke r32.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r25.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r11);

        $r12 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r26 = virtualinvoke $r12.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r33 = new java.lang.StringBuilder;

        specialinvoke r33.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating ");

        virtualinvoke r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r31);

        $r15 = virtualinvoke r33.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r26.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r15);

     label4:
        exitmonitor r0;

        return r31;

     label5:
        $r18 := @caughtexception;

        goto label8;

     label6:
        $r19 := @caughtexception;

     label7:
        r34 = new java.io.IOException;

        r35 = (java.net.UnknownHostException) $r19;

        $r20 = virtualinvoke r35.<java.net.UnknownHostException: java.lang.String getMessage()>();

        specialinvoke r34.<java.io.IOException: void <init>(java.lang.String)>($r20);

        throw r34;

     label8:
        exitmonitor r0;

        throw $r18;

        catch java.net.UnknownHostException from label1 to label2 with label6;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.net.UnknownHostException from label3 to label4 with label6;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label7 to label8 with label5;
    }

    public int getDefaultTargetPort()
    {
        gov.nist.javax.sip.stack.TCPMessageProcessor r0;

        r0 := @this: gov.nist.javax.sip.stack.TCPMessageProcessor;

        return 5060;
    }

    public int getMaximumMessageSize()
    {
        gov.nist.javax.sip.stack.TCPMessageProcessor r0;

        r0 := @this: gov.nist.javax.sip.stack.TCPMessageProcessor;

        return 2147483647;
    }

    public gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()
    {
        gov.nist.javax.sip.stack.TCPMessageProcessor r0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r1;

        r0 := @this: gov.nist.javax.sip.stack.TCPMessageProcessor;

        $r1 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        return $r1;
    }

    public java.lang.String getTransport()
    {
        gov.nist.javax.sip.stack.TCPMessageProcessor r0;

        r0 := @this: gov.nist.javax.sip.stack.TCPMessageProcessor;

        return "tcp";
    }

    public boolean inUse()
    {
        gov.nist.javax.sip.stack.TCPMessageProcessor r0;
        int $i0;
        boolean z0;

        r0 := @this: gov.nist.javax.sip.stack.TCPMessageProcessor;

        $i0 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: int useCount>;

        if $i0 == 0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public boolean isSecure()
    {
        gov.nist.javax.sip.stack.TCPMessageProcessor r0;

        r0 := @this: gov.nist.javax.sip.stack.TCPMessageProcessor;

        return 0;
    }

    protected void remove(gov.nist.javax.sip.stack.TCPMessageChannel)
    {
        gov.nist.javax.sip.stack.TCPMessageProcessor r0;
        java.lang.String r1, $r15;
        gov.nist.core.StackLogger r2;
        java.lang.StringBuilder r3;
        gov.nist.javax.sip.stack.SIPTransactionStack $r4, $r10;
        boolean $z0;
        java.util.Hashtable $r5, $r8;
        java.lang.Object $r6;
        java.util.ArrayList $r7;
        java.lang.Thread $r11;
        java.lang.Throwable $r16;
        gov.nist.javax.sip.stack.TCPMessageChannel r17;

        r0 := @this: gov.nist.javax.sip.stack.TCPMessageProcessor;

        r17 := @parameter0: gov.nist.javax.sip.stack.TCPMessageChannel;

        entermonitor r0;

     label1:
        r1 = virtualinvoke r17.<gov.nist.javax.sip.stack.TCPMessageChannel: java.lang.String getKey()>();

        $r4 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label2;

        $r10 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r2 = virtualinvoke $r10.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r3 = new java.lang.StringBuilder;

        specialinvoke r3.<java.lang.StringBuilder: void <init>()>();

        $r11 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" removing ");

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r15);

     label2:
        $r5 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.util.Hashtable tcpMessageChannels>;

        $r6 = virtualinvoke $r5.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        if $r6 != r17 goto label3;

        $r8 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.util.Hashtable tcpMessageChannels>;

        virtualinvoke $r8.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r1);

     label3:
        $r7 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.util.ArrayList incomingTcpMessageChannels>;

        virtualinvoke $r7.<java.util.ArrayList: boolean remove(java.lang.Object)>(r17);

     label4:
        exitmonitor r0;

        return;

     label5:
        $r16 := @caughtexception;

        exitmonitor r0;

        throw $r16;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public void run()
    {
        gov.nist.javax.sip.stack.TCPMessageProcessor r0;
        int i0, i1, $i2, $i3, $i4;
        boolean z0, $z2, $z3, $z4;
        java.net.Socket r1;
        gov.nist.javax.sip.stack.TCPMessageChannel r2;
        gov.nist.javax.sip.stack.SIPTransactionStack $r3, $r4, $r5, $r7, $r11, $r12, $r18;
        gov.nist.core.StackLogger $r6, $r13;
        java.lang.Exception $r8;
        java.lang.Throwable $r9, $r10, $r14, $r15;
        java.net.ServerSocket $r17;
        java.util.ArrayList r19;

        r0 := @this: gov.nist.javax.sip.stack.TCPMessageProcessor;

     label01:
        $z3 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: boolean isRunning>;

        if $z3 == 0 goto label23;

     label02:
        entermonitor r0;

     label03:
        $r3 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $i2 = $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: int maxConnections>;

        if $i2 == -1 goto label11;

        i0 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: int nConnections>;

        $r7 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        i1 = $r7.<gov.nist.javax.sip.stack.SIPTransactionStack: int maxConnections>;

     label04:
        if i0 < i1 goto label11;

     label05:
        virtualinvoke r0.<java.lang.Object: void wait()>();

        z0 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: boolean isRunning>;

     label06:
        if z0 != 0 goto label09;

     label07:
        exitmonitor r0;

     label08:
        return;

     label09:
        goto label03;

     label10:
        $r9 := @caughtexception;

     label11:
        $i3 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: int nConnections>;

        $i4 = $i3 + 1;

        r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: int nConnections> = $i4;

        exitmonitor r0;

     label12:
        $r17 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.net.ServerSocket sock>;

        r1 = virtualinvoke $r17.<java.net.ServerSocket: java.net.Socket accept()>();

        $r18 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z4 = virtualinvoke $r18.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z4 == 0 goto label13;

        $r5 = virtualinvoke r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()>();

        $r6 = virtualinvoke $r5.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r6.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Accepting new connection!");

     label13:
        r19 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.util.ArrayList incomingTcpMessageChannels>;

        r2 = new gov.nist.javax.sip.stack.TCPMessageChannel;

        $r4 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        specialinvoke r2.<gov.nist.javax.sip.stack.TCPMessageChannel: void <init>(java.net.Socket,gov.nist.javax.sip.stack.SIPTransactionStack,gov.nist.javax.sip.stack.TCPMessageProcessor)>(r1, $r4, r0);

        virtualinvoke r19.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

     label14:
        goto label01;

     label15:
        $r15 := @caughtexception;

     label16:
        exitmonitor r0;

     label17:
        throw $r15;

     label18:
        $r8 := @caughtexception;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>($r8);

        goto label22;

     label19:
        $r10 := @caughtexception;

        $r11 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z2 = virtualinvoke $r11.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z2 == 0 goto label20;

        $r12 = virtualinvoke r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()>();

        $r13 = virtualinvoke $r12.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r13.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>($r10);

     label20:
        goto label01;

     label21:
        $r14 := @caughtexception;

        r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: boolean isRunning> = 0;

     label22:
        goto label01;

     label23:
        return;

        catch java.net.SocketException from label02 to label03 with label21;
        catch java.io.IOException from label02 to label03 with label19;
        catch java.lang.Exception from label02 to label03 with label18;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.lang.InterruptedException from label05 to label06 with label10;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.net.SocketException from label12 to label13 with label21;
        catch java.io.IOException from label12 to label13 with label19;
        catch java.lang.Exception from label12 to label13 with label18;
        catch java.net.SocketException from label13 to label14 with label21;
        catch java.io.IOException from label13 to label14 with label19;
        catch java.lang.Exception from label13 to label14 with label18;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch java.net.SocketException from label17 to label18 with label21;
        catch java.io.IOException from label17 to label18 with label19;
        catch java.lang.Exception from label17 to label18 with label18;
    }

    public void start() throws java.io.IOException
    {
        gov.nist.javax.sip.stack.TCPMessageProcessor r0;
        java.lang.Thread $r2;
        gov.nist.javax.sip.stack.SIPTransactionStack $r3;
        gov.nist.core.net.NetworkLayer $r4;
        int $i0;
        java.net.InetAddress $r5, $r7, $r10, $r11;
        java.net.ServerSocket $r6, $r9;
        java.lang.String $r8, $r12;
        boolean $z0, $z1;

        r0 := @this: gov.nist.javax.sip.stack.TCPMessageProcessor;

        $r2 = new java.lang.Thread;

        specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>(r0);

        virtualinvoke $r2.<java.lang.Thread: void setName(java.lang.String)>("TCPMessageProcessorThread");

        virtualinvoke $r2.<java.lang.Thread: void setPriority(int)>(10);

        virtualinvoke $r2.<java.lang.Thread: void setDaemon(boolean)>(1);

        $r3 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r4 = virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.net.NetworkLayer getNetworkLayer()>();

        $i0 = virtualinvoke r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: int getPort()>();

        $r5 = virtualinvoke r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.net.InetAddress getIpAddress()>();

        $r6 = interfaceinvoke $r4.<gov.nist.core.net.NetworkLayer: java.net.ServerSocket createServerSocket(int,int,java.net.InetAddress)>($i0, 0, $r5);

        r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.net.ServerSocket sock> = $r6;

        $r7 = virtualinvoke r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.net.InetAddress getIpAddress()>();

        $r8 = virtualinvoke $r7.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("0.0.0.0");

        if $z0 != 0 goto label1;

        $r11 = virtualinvoke r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.net.InetAddress getIpAddress()>();

        $r12 = virtualinvoke $r11.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("::0");

        if $z1 == 0 goto label2;

     label1:
        $r9 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.net.ServerSocket sock>;

        $r10 = virtualinvoke $r9.<java.net.ServerSocket: java.net.InetAddress getInetAddress()>();

        specialinvoke r0.<gov.nist.javax.sip.stack.MessageProcessor: void setIpAddress(java.net.InetAddress)>($r10);

     label2:
        r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: boolean isRunning> = 1;

        virtualinvoke $r2.<java.lang.Thread: void start()>();

        return;
    }

    public void stop()
    {
        gov.nist.javax.sip.stack.TCPMessageProcessor r0;
        java.net.ServerSocket $r1;
        java.util.Hashtable $r2;
        java.util.Collection $r3;
        java.util.ArrayList $r4;
        boolean $z0, $z1;
        java.lang.Object $r5, $r7;
        gov.nist.javax.sip.stack.TCPMessageChannel $r6, $r8;
        java.lang.Throwable $r9, $r10;
        java.util.Iterator r12, r13;
        java.io.IOException r15;

        r0 := @this: gov.nist.javax.sip.stack.TCPMessageProcessor;

        entermonitor r0;

     label01:
        r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: boolean isRunning> = 0;

     label02:
        $r1 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.net.ServerSocket sock>;

        virtualinvoke $r1.<java.net.ServerSocket: void close()>();

     label03:
        goto label06;

     label04:
        $r10 := @caughtexception;

     label05:
        r15 = (java.io.IOException) $r10;

        virtualinvoke r15.<java.io.IOException: void printStackTrace()>();

     label06:
        $r2 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.util.Hashtable tcpMessageChannels>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.util.Collection values()>();

        r12 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r7 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (gov.nist.javax.sip.stack.TCPMessageChannel) $r7;

        virtualinvoke $r8.<gov.nist.javax.sip.stack.TCPMessageChannel: void close()>();

     label08:
        goto label07;

     label09:
        $r4 = r0.<gov.nist.javax.sip.stack.TCPMessageProcessor: java.util.ArrayList incomingTcpMessageChannels>;

        r13 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label10:
        $z0 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r5 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (gov.nist.javax.sip.stack.TCPMessageChannel) $r5;

        virtualinvoke $r6.<gov.nist.javax.sip.stack.TCPMessageChannel: void close()>();

     label11:
        goto label10;

     label12:
        virtualinvoke r0.<java.lang.Object: void notify()>();

     label13:
        exitmonitor r0;

        return;

     label14:
        $r9 := @caughtexception;

        exitmonitor r0;

        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.io.IOException from label02 to label03 with label04;
        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label07 to label08 with label14;
        catch java.lang.Throwable from label09 to label10 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }
}
