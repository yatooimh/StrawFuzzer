public class gov.nist.javax.sip.stack.UDPMessageChannel extends gov.nist.javax.sip.stack.MessageChannel implements gov.nist.javax.sip.parser.ParseExceptionListener, java.lang.Runnable, gov.nist.javax.sip.stack.RawMessageChannel
{
    private java.net.DatagramPacket incomingPacket;
    private java.lang.String myAddress;
    protected gov.nist.javax.sip.parser.StringMsgParser myParser;
    protected int myPort;
    private java.net.InetAddress peerAddress;
    private java.net.InetAddress peerPacketSourceAddress;
    private int peerPacketSourcePort;
    private int peerPort;
    private java.lang.String peerProtocol;
    private java.util.Hashtable pingBackRecord;
    private long receptionTime;
    protected gov.nist.javax.sip.stack.SIPTransactionStack sipStack;

    protected void <init>(gov.nist.javax.sip.stack.SIPTransactionStack, gov.nist.javax.sip.stack.UDPMessageProcessor)
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        gov.nist.javax.sip.stack.UDPMessageProcessor r1;
        java.util.Hashtable $r2;
        java.lang.Thread $r3;
        java.net.InetAddress $r4;
        java.lang.String $r5;
        int $i0;
        gov.nist.javax.sip.stack.SIPTransactionStack r6;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r6 := @parameter0: gov.nist.javax.sip.stack.SIPTransactionStack;

        r1 := @parameter1: gov.nist.javax.sip.stack.UDPMessageProcessor;

        specialinvoke r0.<gov.nist.javax.sip.stack.MessageChannel: void <init>()>();

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.util.Hashtable pingBackRecord> = $r2;

        r0.<gov.nist.javax.sip.stack.MessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor> = r1;

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack> = r6;

        $r3 = new java.lang.Thread;

        specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable)>(r0);

        $r4 = virtualinvoke r1.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.InetAddress getIpAddress()>();

        $r5 = virtualinvoke $r4.<java.net.InetAddress: java.lang.String getHostAddress()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String myAddress> = $r5;

        $i0 = virtualinvoke r1.<gov.nist.javax.sip.stack.UDPMessageProcessor: int getPort()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int myPort> = $i0;

        virtualinvoke $r3.<java.lang.Thread: void setName(java.lang.String)>("UDPMessageChannelThread");

        virtualinvoke $r3.<java.lang.Thread: void setDaemon(boolean)>(1);

        virtualinvoke $r3.<java.lang.Thread: void start()>();

        return;
    }

    protected void <init>(gov.nist.javax.sip.stack.SIPTransactionStack, gov.nist.javax.sip.stack.UDPMessageProcessor, java.net.DatagramPacket)
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        gov.nist.javax.sip.stack.UDPMessageProcessor r1;
        java.net.DatagramPacket r2;
        java.util.Hashtable $r3;
        java.net.InetAddress $r4;
        java.lang.String $r5;
        int $i0;
        java.lang.Thread $r6;
        gov.nist.javax.sip.stack.SIPTransactionStack r7;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r7 := @parameter0: gov.nist.javax.sip.stack.SIPTransactionStack;

        r1 := @parameter1: gov.nist.javax.sip.stack.UDPMessageProcessor;

        r2 := @parameter2: java.net.DatagramPacket;

        specialinvoke r0.<gov.nist.javax.sip.stack.MessageChannel: void <init>()>();

        $r3 = new java.util.Hashtable;

        specialinvoke $r3.<java.util.Hashtable: void <init>()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.util.Hashtable pingBackRecord> = $r3;

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.DatagramPacket incomingPacket> = r2;

        r0.<gov.nist.javax.sip.stack.MessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor> = r1;

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack> = r7;

        $r4 = virtualinvoke r1.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.InetAddress getIpAddress()>();

        $r5 = virtualinvoke $r4.<java.net.InetAddress: java.lang.String getHostAddress()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String myAddress> = $r5;

        $i0 = virtualinvoke r1.<gov.nist.javax.sip.stack.UDPMessageProcessor: int getPort()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int myPort> = $i0;

        $r6 = new java.lang.Thread;

        specialinvoke $r6.<java.lang.Thread: void <init>(java.lang.Runnable)>(r0);

        virtualinvoke $r6.<java.lang.Thread: void setDaemon(boolean)>(1);

        virtualinvoke $r6.<java.lang.Thread: void setName(java.lang.String)>("UDPMessageChannelThread");

        virtualinvoke $r6.<java.lang.Thread: void start()>();

        return;
    }

    protected void <init>(java.net.InetAddress, int, gov.nist.javax.sip.stack.SIPTransactionStack, gov.nist.javax.sip.stack.UDPMessageProcessor)
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        java.net.InetAddress r1, $r3;
        int i0, $i1;
        java.util.Hashtable $r2;
        java.lang.String $r4, $r8, $r12;
        boolean $z0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r5, r13;
        java.lang.StringBuilder $r6;
        gov.nist.javax.sip.stack.UDPMessageProcessor r14;
        gov.nist.core.StackLogger r15;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r1 := @parameter0: java.net.InetAddress;

        i0 := @parameter1: int;

        r13 := @parameter2: gov.nist.javax.sip.stack.SIPTransactionStack;

        r14 := @parameter3: gov.nist.javax.sip.stack.UDPMessageProcessor;

        specialinvoke r0.<gov.nist.javax.sip.stack.MessageChannel: void <init>()>();

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.util.Hashtable pingBackRecord> = $r2;

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress> = r1;

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort> = i0;

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String peerProtocol> = "UDP";

        r0.<gov.nist.javax.sip.stack.MessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor> = r14;

        $r3 = virtualinvoke r14.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.InetAddress getIpAddress()>();

        $r4 = virtualinvoke $r3.<java.net.InetAddress: java.lang.String getHostAddress()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String myAddress> = $r4;

        $i1 = virtualinvoke r14.<gov.nist.javax.sip.stack.UDPMessageProcessor: int getPort()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int myPort> = $i1;

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack> = r13;

        $z0 = virtualinvoke r13.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r15 = virtualinvoke $r5.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating message channel ");

        $r8 = virtualinvoke r1.<java.net.InetAddress: java.lang.String getHostAddress()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r15.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r12);

     label1:
        return;
    }

    static java.util.Hashtable access$000(gov.nist.javax.sip.stack.UDPMessageChannel)
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        java.util.Hashtable $r1;

        r0 := @parameter0: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.util.Hashtable pingBackRecord>;

        return $r1;
    }

    private void processIncomingDataPacket(java.net.DatagramPacket) throws java.lang.Exception
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.net.InetAddress $r1, $r32, $r33, $r42, $r43, $r44, $r48, $r52, $r61, $r68, $r75, $r95;
        gov.nist.javax.sip.stack.SIPTransactionStack $r2, $r5, $r10, $r38, $r50, $r65, $r70, $r72, $r84, $r88, $r90, $r91, $r93, $r96, $r98, $r100, $r106, $r112, $r130;
        long $l1;
        gov.nist.javax.sip.parser.StringMsgParser $r3;
        javax.sip.header.FromHeader $r4, $r13;
        java.lang.String $r9, $r27, $r36, $r41, $r45, $r46, $r47, $r49, $r53, $r57, $r59, $r69, $r76, $r82, $r105, $r109, $r111, r141, r147, r151, r153;
        javax.sip.header.ToHeader $r16, $r28;
        javax.sip.header.CallIdHeader $r19, $r29;
        javax.sip.header.CSeqHeader $r22, $r30;
        gov.nist.javax.sip.header.ViaList $r25, $r31, r124;
        javax.sip.header.Header $r34, $r37;
        gov.nist.javax.sip.header.Via $r35, r125;
        gov.nist.core.net.AddressResolver $r39;
        javax.sip.address.Hop $r40, r126;
        java.lang.Object $r58;
        gov.nist.javax.sip.stack.MessageProcessor $r62;
        gov.nist.javax.sip.stack.UDPMessageProcessor $r63;
        java.net.DatagramSocket $r64;
        java.util.Timer $r66;
        gov.nist.core.StackLogger $r71, $r85, $r92, $r97, $r99, $r113, r117, r131, r133, r136, r138;
        java.lang.Throwable $r83, $r86, $r87;
        byte[] $r94, r115, r116, r122;
        java.net.DatagramPacket r114, r145;
        gov.nist.javax.sip.message.SIPMessage r119;
        java.util.Hashtable r120;
        java.lang.StringBuilder r143, r144, r148, r149, r150, r152;
        gov.nist.javax.sip.stack.UDPMessageChannel$PingBackTimerTask r146;
        java.lang.Exception r154;
        java.text.ParseException r155, r156;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r114 := @parameter0: java.net.DatagramPacket;

        $r1 = virtualinvoke r114.<java.net.DatagramPacket: java.net.InetAddress getAddress()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress> = $r1;

        i0 = virtualinvoke r114.<java.net.DatagramPacket: int getLength()>();

        r115 = virtualinvoke r114.<java.net.DatagramPacket: byte[] getData()>();

        r116 = newarray (byte)[i0];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r115, 0, r116, 0, i0);

        $r2 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r2.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label01;

        $r72 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r117 = virtualinvoke $r72.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r143 = new java.lang.StringBuilder;

        specialinvoke r143.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UDPMessageChannel: processIncomingDataPacket : peerAddress = ");

        $r75 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $r76 = virtualinvoke $r75.<java.net.InetAddress: java.lang.String getHostAddress()>();

        virtualinvoke r143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r76);

        virtualinvoke r143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i11 = virtualinvoke r114.<java.net.DatagramPacket: int getPort()>();

        virtualinvoke r143.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        virtualinvoke r143.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Length = ");

        virtualinvoke r143.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r82 = virtualinvoke r143.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r117.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r82);

     label01:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: long receptionTime> = $l1;

        $r3 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.parser.StringMsgParser myParser>;

        r119 = virtualinvoke $r3.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.message.SIPMessage parseSIPMessage(byte[])>(r116);

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.parser.StringMsgParser myParser> = null;

     label02:
        if r119 != null goto label05;

        $r50 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z4 = virtualinvoke $r50.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z4 == 0 goto label03;

        $r70 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r71 = virtualinvoke $r70.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r71.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Rejecting message !  + Null message parsed.");

     label03:
        r120 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.util.Hashtable pingBackRecord>;

        r144 = new java.lang.StringBuilder;

        specialinvoke r144.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke r114.<java.net.DatagramPacket: java.net.InetAddress getAddress()>();

        $r53 = virtualinvoke $r52.<java.net.InetAddress: java.lang.String getHostAddress()>();

        virtualinvoke r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

        virtualinvoke r144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i7 = virtualinvoke r114.<java.net.DatagramPacket: int getPort()>();

        virtualinvoke r144.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r57 = virtualinvoke r144.<java.lang.StringBuilder: java.lang.String toString()>();

        $r58 = virtualinvoke r120.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r57);

        if $r58 != null goto label04;

        $r59 = "\r\n\r\n";

        r122 = virtualinvoke $r59.<java.lang.String: byte[] getBytes()>();

        r145 = new java.net.DatagramPacket;

        $i8 = lengthof r122;

        $r61 = virtualinvoke r114.<java.net.DatagramPacket: java.net.InetAddress getAddress()>();

        $i9 = virtualinvoke r114.<java.net.DatagramPacket: int getPort()>();

        specialinvoke r145.<java.net.DatagramPacket: void <init>(byte[],int,int,java.net.InetAddress,int)>(r122, 0, $i8, $r61, $i9);

        $r62 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r63 = (gov.nist.javax.sip.stack.UDPMessageProcessor) $r62;

        $r64 = $r63.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.DatagramSocket sock>;

        virtualinvoke $r64.<java.net.DatagramSocket: void send(java.net.DatagramPacket)>(r145);

        $r65 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r66 = virtualinvoke $r65.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        r146 = new gov.nist.javax.sip.stack.UDPMessageChannel$PingBackTimerTask;

        $r68 = virtualinvoke r114.<java.net.DatagramPacket: java.net.InetAddress getAddress()>();

        $r69 = virtualinvoke $r68.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $i10 = virtualinvoke r114.<java.net.DatagramPacket: int getPort()>();

        specialinvoke r146.<gov.nist.javax.sip.stack.UDPMessageChannel$PingBackTimerTask: void <init>(gov.nist.javax.sip.stack.UDPMessageChannel,java.lang.String,int)>(r0, $r69, $i10);

        virtualinvoke $r66.<java.util.Timer: void schedule(java.util.TimerTask,long)>(r146, 1000L);

     label04:
        return;

     label05:
        r124 = virtualinvoke r119.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ViaList getViaHeaders()>();

        $r4 = virtualinvoke r119.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.FromHeader getFrom()>();

        if $r4 == null goto label18;

        $r28 = virtualinvoke r119.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ToHeader getTo()>();

        if $r28 == null goto label18;

        $r29 = virtualinvoke r119.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CallIdHeader getCallId()>();

        if $r29 == null goto label18;

        $r30 = virtualinvoke r119.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CSeqHeader getCSeq()>();

        if $r30 == null goto label18;

        $r31 = virtualinvoke r119.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ViaList getViaHeaders()>();

        if $r31 != null goto label06;

        goto label18;

     label06:
        $z2 = r119 instanceof gov.nist.javax.sip.message.SIPRequest;

        if $z2 == 0 goto label16;

        $r37 = virtualinvoke r124.<gov.nist.javax.sip.header.ViaList: javax.sip.header.Header getFirst()>();

        r125 = (gov.nist.javax.sip.header.Via) $r37;

        $r38 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r39 = $r38.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.net.AddressResolver addressResolver>;

        $r40 = virtualinvoke r125.<gov.nist.javax.sip.header.Via: javax.sip.address.Hop getHop()>();

        r126 = interfaceinvoke $r39.<gov.nist.core.net.AddressResolver: javax.sip.address.Hop resolveAddress(javax.sip.address.Hop)>($r40);

        $i4 = interfaceinvoke r126.<javax.sip.address.Hop: int getPort()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort> = $i4;

        $r41 = virtualinvoke r125.<gov.nist.javax.sip.header.Via: java.lang.String getTransport()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String peerProtocol> = $r41;

        $r42 = virtualinvoke r114.<java.net.DatagramPacket: java.net.InetAddress getAddress()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerPacketSourceAddress> = $r42;

        $i5 = virtualinvoke r114.<java.net.DatagramPacket: int getPort()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPacketSourcePort> = $i5;

     label07:
        $r43 = virtualinvoke r114.<java.net.DatagramPacket: java.net.InetAddress getAddress()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress> = $r43;

        z0 = virtualinvoke r125.<gov.nist.javax.sip.header.Via: boolean hasParameter(java.lang.String)>("rport");

     label08:
        if z0 != 0 goto label10;

     label09:
        $r47 = interfaceinvoke r126.<javax.sip.address.Hop: java.lang.String getHost()>();

        $r48 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $r49 = virtualinvoke $r48.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $z3 = virtualinvoke $r47.<java.lang.String: boolean equals(java.lang.Object)>($r49);

        if $z3 != 0 goto label11;

     label10:
        $r44 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $r45 = virtualinvoke $r44.<java.net.InetAddress: java.lang.String getHostAddress()>();

        virtualinvoke r125.<gov.nist.javax.sip.header.Via: void setParameter(java.lang.String,java.lang.String)>("received", $r45);

     label11:
        if z0 == 0 goto label13;

     label12:
        $i6 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPacketSourcePort>;

        $r46 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6);

        virtualinvoke r125.<gov.nist.javax.sip.header.Via: void setParameter(java.lang.String,java.lang.String)>("rport", $r46);

     label13:
        goto label15;

     label14:
        $r86 := @caughtexception;

        r154 = (java.lang.Exception) $r86;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r154);

     label15:
        goto label17;

     label16:
        $r32 = virtualinvoke r114.<java.net.DatagramPacket: java.net.InetAddress getAddress()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerPacketSourceAddress> = $r32;

        $i2 = virtualinvoke r114.<java.net.DatagramPacket: int getPort()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPacketSourcePort> = $i2;

        $r33 = virtualinvoke r114.<java.net.DatagramPacket: java.net.InetAddress getAddress()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress> = $r33;

        $i3 = virtualinvoke r114.<java.net.DatagramPacket: int getPort()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort> = $i3;

        $r34 = virtualinvoke r124.<gov.nist.javax.sip.header.ViaList: javax.sip.header.Header getFirst()>();

        $r35 = (gov.nist.javax.sip.header.Via) $r34;

        $r36 = virtualinvoke $r35.<gov.nist.javax.sip.header.Via: java.lang.String getTransport()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String peerProtocol> = $r36;

     label17:
        virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: void processMessage(gov.nist.javax.sip.message.SIPMessage)>(r119);

        return;

     label18:
        r147 = new java.lang.String;

        specialinvoke r147.<java.lang.String: void <init>(byte[])>(r116);

        $r130 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z10 = virtualinvoke $r130.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z10 == 0 goto label19;

        $r5 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r131 = virtualinvoke $r5.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r148 = new java.lang.StringBuilder;

        specialinvoke r148.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad message ");

        virtualinvoke r148.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r147);

        $r9 = virtualinvoke r148.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r131.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r9);

        $r10 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r133 = virtualinvoke $r10.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r149 = new java.lang.StringBuilder;

        specialinvoke r149.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">>> Dropped Bad Msg From = ");

        $r13 = virtualinvoke r119.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.FromHeader getFrom()>();

        virtualinvoke r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        virtualinvoke r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("To = ");

        $r16 = virtualinvoke r119.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ToHeader getTo()>();

        virtualinvoke r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        virtualinvoke r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CallId = ");

        $r19 = virtualinvoke r119.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CallIdHeader getCallId()>();

        virtualinvoke r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        virtualinvoke r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CSeq = ");

        $r22 = virtualinvoke r119.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CSeqHeader getCSeq()>();

        virtualinvoke r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        virtualinvoke r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Via = ");

        $r25 = virtualinvoke r119.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ViaList getViaHeaders()>();

        virtualinvoke r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r27 = virtualinvoke r149.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r133.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r27);

     label19:
        return;

     label20:
        $r87 := @caughtexception;

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.parser.StringMsgParser myParser> = null;

        $r88 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z5 = virtualinvoke $r88.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z5 == 0 goto label21;

        $r100 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r136 = virtualinvoke $r100.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r150 = new java.lang.StringBuilder;

        specialinvoke r150.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rejecting message !  ");

        r151 = new java.lang.String;

        specialinvoke r151.<java.lang.String: void <init>(byte[])>(r116);

        virtualinvoke r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r151);

        $r105 = virtualinvoke r150.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r136.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r105);

        $r106 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r138 = virtualinvoke $r106.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r152 = new java.lang.StringBuilder;

        specialinvoke r152.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error message ");

        r155 = (java.text.ParseException) $r87;

        $r109 = virtualinvoke r155.<java.text.ParseException: java.lang.String getMessage()>();

        virtualinvoke r152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r109);

        $r111 = virtualinvoke r152.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r138.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r111);

        $r112 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r113 = virtualinvoke $r112.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r113.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>($r87);

     label21:
        r153 = new java.lang.String;

        specialinvoke r153.<java.lang.String: void <init>(byte[],int,int)>(r116, 0, i0);

        $z6 = virtualinvoke r153.<java.lang.String: boolean startsWith(java.lang.String)>("SIP/");

        if $z6 != 0 goto label27;

        $z7 = virtualinvoke r153.<java.lang.String: boolean startsWith(java.lang.String)>("ACK ");

        if $z7 != 0 goto label27;

        r156 = (java.text.ParseException) $r87;

        r141 = virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String createBadReqRes(java.lang.String,java.text.ParseException)>(r153, r156);

        if r141 == null goto label26;

        $r93 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z9 = virtualinvoke $r93.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z9 == 0 goto label22;

        $r96 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r97 = virtualinvoke $r96.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r97.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Sending automatic 400 Bad Request:");

        $r98 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r99 = virtualinvoke $r98.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r99.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>(r141);

     label22:
        $r94 = virtualinvoke r141.<java.lang.String: byte[] getBytes()>();

        $r95 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $i12 = virtualinvoke r114.<java.net.DatagramPacket: int getPort()>();

        virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: void sendMessage(byte[],java.net.InetAddress,int,java.lang.String,boolean)>($r94, $r95, $i12, "UDP", 0);

     label23:
        goto label25;

     label24:
        $r83 := @caughtexception;

        $r84 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r85 = virtualinvoke $r84.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r85.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>($r83);

     label25:
        goto label27;

     label26:
        $r90 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z8 = virtualinvoke $r90.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z8 == 0 goto label27;

        $r91 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r92 = virtualinvoke $r91.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r92.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Could not formulate automatic 400 Bad Request");

     label27:
        return;

        catch java.text.ParseException from label01 to label02 with label20;
        catch java.text.ParseException from label07 to label08 with label14;
        catch java.text.ParseException from label09 to label10 with label14;
        catch java.text.ParseException from label10 to label11 with label14;
        catch java.text.ParseException from label12 to label13 with label14;
        catch java.io.IOException from label22 to label23 with label24;
    }

    public void close()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0, r6;
        java.lang.Class $r1, $r2;
        boolean $z0, z1;
        java.lang.String $r3, $r4;
        java.lang.Object r5;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r5 := @parameter0: java.lang.Object;

        if r5 != null goto label1;

        return 0;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label2;

        z1 = 0;

        goto label3;

     label2:
        r6 = (gov.nist.javax.sip.stack.UDPMessageChannel) r5;

        $r3 = virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getKey()>();

        $r4 = virtualinvoke r6.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getKey()>();

        z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

     label3:
        return z1;
    }

    public java.lang.String getHost()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        gov.nist.javax.sip.stack.MessageProcessor $r1;
        java.net.InetAddress $r2;
        java.lang.String $r3;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r2 = virtualinvoke $r1.<gov.nist.javax.sip.stack.MessageProcessor: java.net.InetAddress getIpAddress()>();

        $r3 = virtualinvoke $r2.<java.net.InetAddress: java.lang.String getHostAddress()>();

        return $r3;
    }

    public java.lang.String getKey()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        int $i0;
        java.net.InetAddress $r1;
        java.lang.String $r2;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $i0 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort>;

        $r2 = staticinvoke <gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getKey(java.net.InetAddress,int,java.lang.String)>($r1, $i0, "UDP");

        return $r2;
    }

    public java.lang.String getPeerAddress()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        java.net.InetAddress $r1;
        java.lang.String $r2;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $r2 = virtualinvoke $r1.<java.net.InetAddress: java.lang.String getHostAddress()>();

        return $r2;
    }

    protected java.net.InetAddress getPeerInetAddress()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        java.net.InetAddress $r1;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        return $r1;
    }

    public java.lang.String getPeerName()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        java.net.InetAddress $r1;
        java.lang.String $r2;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $r2 = virtualinvoke $r1.<java.net.InetAddress: java.lang.String getHostName()>();

        return $r2;
    }

    public java.net.InetAddress getPeerPacketSourceAddress()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        java.net.InetAddress $r1;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerPacketSourceAddress>;

        return $r1;
    }

    public int getPeerPacketSourcePort()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $i0 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPacketSourcePort>;

        return $i0;
    }

    public int getPeerPort()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $i0 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort>;

        return $i0;
    }

    public java.lang.String getPeerProtocol()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        java.lang.String $r1;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String peerProtocol>;

        return $r1;
    }

    public int getPort()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        gov.nist.javax.sip.stack.MessageProcessor $r1;
        gov.nist.javax.sip.stack.UDPMessageProcessor $r2;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r2 = (gov.nist.javax.sip.stack.UDPMessageProcessor) $r1;

        $i0 = virtualinvoke $r2.<gov.nist.javax.sip.stack.UDPMessageProcessor: int getPort()>();

        return $i0;
    }

    public gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r1;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        return $r1;
    }

    public java.lang.String getTransport()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        return "udp";
    }

    public java.lang.String getViaHost()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        java.lang.String $r1;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String myAddress>;

        return $r1;
    }

    public int getViaPort()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $i0 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int myPort>;

        return $i0;
    }

    public void handleException(java.text.ParseException, gov.nist.javax.sip.message.SIPMessage, java.lang.Class, java.lang.String, java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        java.text.ParseException r1;
        gov.nist.javax.sip.message.SIPMessage r2;
        java.lang.Class r3;
        java.lang.String r4, r5;
        gov.nist.javax.sip.stack.SIPTransactionStack $r6, $r7, $r9, $r11, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        gov.nist.core.StackLogger $r8, $r10, $r12;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r1 := @parameter0: java.text.ParseException;

        r2 := @parameter1: gov.nist.javax.sip.message.SIPMessage;

        r3 := @parameter2: java.lang.Class;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        $r6 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r6.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r11 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r12 = virtualinvoke $r11.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r12.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>(r1);

     label1:
        if r3 == null goto label4;

        $z1 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(class "Lgov/nist/javax/sip/header/From;");

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(class "Lgov/nist/javax/sip/header/To;");

        if $z2 != 0 goto label2;

        $z3 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(class "Lgov/nist/javax/sip/header/CSeq;");

        if $z3 != 0 goto label2;

        $z4 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(class "Lgov/nist/javax/sip/header/Via;");

        if $z4 != 0 goto label2;

        $z5 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(class "Lgov/nist/javax/sip/header/CallID;");

        if $z5 != 0 goto label2;

        $z6 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(class "Lgov/nist/javax/sip/header/RequestLine;");

        if $z6 != 0 goto label2;

        $z7 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(class "Lgov/nist/javax/sip/header/StatusLine;");

        if $z7 == 0 goto label4;

     label2:
        $r13 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z8 = virtualinvoke $r13.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z8 == 0 goto label3;

        $r7 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r8 = virtualinvoke $r7.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r8.<gov.nist.core.StackLogger: void logError(java.lang.String)>("BAD MESSAGE!");

        $r9 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r10 = virtualinvoke $r9.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r10.<gov.nist.core.StackLogger: void logError(java.lang.String)>(r5);

     label3:
        throw r1;

     label4:
        virtualinvoke r2.<gov.nist.javax.sip.message.SIPMessage: void addUnparsed(java.lang.String)>(r4);

        return;
    }

    public boolean isReliable()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        return 0;
    }

    public boolean isSecure()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        return 0;
    }

    public void processMessage(gov.nist.javax.sip.message.SIPMessage)
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19;
        gov.nist.javax.sip.stack.SIPTransactionStack $r2, $r3, $r4, $r9, $r12, $r16, $r18, $r19, $r20, $r30, $r38, $r39, $r41, $r56, $r57, $r69;
        gov.nist.core.StackLogger $r5, $r17, $r40, r67, r70, r75, r79;
        gov.nist.javax.sip.stack.SIPTransaction $r6, $r7, $r10, $r11, $r29, $r50, $r51, $r54;
        gov.nist.javax.sip.stack.SIPClientTransaction $r8;
        java.lang.String $r15, $r23, $r27, $r33, $r37, $r44, $r48, $r61, r65;
        java.lang.StringBuilder $r21, $r31, $r43, $r58, r76;
        gov.nist.javax.sip.stack.SIPServerTransaction $r28, $r53;
        gov.nist.core.HostPort $r42;
        int $i0;
        long $l1;
        java.lang.Throwable $r49, $r52, $r55;
        gov.nist.javax.sip.message.SIPMessage r62;
        gov.nist.javax.sip.message.SIPRequest r63;
        gov.nist.core.ServerLogger r64;
        gov.nist.javax.sip.stack.ServerRequestInterface r66;
        gov.nist.javax.sip.message.SIPResponse r73;
        gov.nist.javax.sip.stack.ServerResponseInterface r74;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r62 := @parameter0: gov.nist.javax.sip.message.SIPMessage;

        $z0 = r62 instanceof gov.nist.javax.sip.message.SIPRequest;

        if $z0 == 0 goto label10;

        r63 = (gov.nist.javax.sip.message.SIPRequest) r62;

        $r16 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r17 = virtualinvoke $r16.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $z9 = interfaceinvoke $r17.<gov.nist.core.StackLogger: boolean isLoggingEnabled(int)>(16);

        if $z9 == 0 goto label01;

        $r41 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r64 = $r41.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.ServerLogger serverLogger>;

        $r42 = virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.core.HostPort getPeerHostPort()>();

        r65 = virtualinvoke $r42.<gov.nist.core.HostPort: java.lang.String toString()>();

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getHost()>();

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i0 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int myPort>;

        virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r48 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        $l1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: long receptionTime>;

        interfaceinvoke r64.<gov.nist.core.ServerLogger: void logMessage(gov.nist.javax.sip.message.SIPMessage,java.lang.String,java.lang.String,boolean,long)>(r62, r65, $r48, 0, $l1);

     label01:
        $r18 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r66 = virtualinvoke $r18.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.ServerRequestInterface newSIPServerRequest(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.MessageChannel)>(r63, r0);

        if r66 != null goto label03;

        $r38 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z13 = virtualinvoke $r38.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z13 == 0 goto label02;

        $r39 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r40 = virtualinvoke $r39.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r40.<gov.nist.core.StackLogger: void logWarning(java.lang.String)>("Null request interface returned -- dropping request");

     label02:
        return;

     label03:
        $r19 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z10 = virtualinvoke $r19.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z10 == 0 goto label04;

        $r30 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r67 = virtualinvoke $r30.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("About to process ");

        $r33 = virtualinvoke r63.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()>();

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r66);

        $r37 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r67.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r37);

     label04:
        interfaceinvoke r66.<gov.nist.javax.sip.stack.ServerRequestInterface: void processRequest(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.MessageChannel)>(r63, r0);

     label05:
        $z11 = r66 instanceof gov.nist.javax.sip.stack.SIPTransaction;

        if $z11 == 0 goto label06;

        $r28 = (gov.nist.javax.sip.stack.SIPServerTransaction) r66;

        $z12 = virtualinvoke $r28.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean passToListener()>();

        if $z12 != 0 goto label06;

        $r29 = (gov.nist.javax.sip.stack.SIPTransaction) r66;

        virtualinvoke $r29.<gov.nist.javax.sip.stack.SIPTransaction: void releaseSem()>();

     label06:
        $r69 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z19 = virtualinvoke $r69.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z19 == 0 goto label07;

        $r20 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r70 = virtualinvoke $r20.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Done processing ");

        $r23 = virtualinvoke r63.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r66);

        $r27 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r70.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r27);

     label07:
        goto label22;

     label08:
        $r52 := @caughtexception;

        $z16 = r66 instanceof gov.nist.javax.sip.stack.SIPTransaction;

        if $z16 == 0 goto label09;

        $r53 = (gov.nist.javax.sip.stack.SIPServerTransaction) r66;

        $z17 = virtualinvoke $r53.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean passToListener()>();

        if $z17 != 0 goto label09;

        $r54 = (gov.nist.javax.sip.stack.SIPTransaction) r66;

        virtualinvoke $r54.<gov.nist.javax.sip.stack.SIPTransaction: void releaseSem()>();

     label09:
        throw $r52;

     label10:
        r73 = (gov.nist.javax.sip.message.SIPResponse) r62;

     label11:
        virtualinvoke r73.<gov.nist.javax.sip.message.SIPResponse: void checkHeaders()>();

     label12:
        $r2 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r74 = virtualinvoke $r2.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.ServerResponseInterface newSIPServerResponse(gov.nist.javax.sip.message.SIPResponse,gov.nist.javax.sip.stack.MessageChannel)>(r73, r0);

        if r74 == null goto label21;

     label13:
        $z2 = r74 instanceof gov.nist.javax.sip.stack.SIPClientTransaction;

        if $z2 == 0 goto label16;

        $r8 = (gov.nist.javax.sip.stack.SIPClientTransaction) r74;

        $z5 = virtualinvoke $r8.<gov.nist.javax.sip.stack.SIPClientTransaction: boolean checkFromTag(gov.nist.javax.sip.message.SIPResponse)>(r73);

        if $z5 != 0 goto label16;

        $r9 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z6 = virtualinvoke $r9.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z6 == 0 goto label14;

        $r12 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r75 = virtualinvoke $r12.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r76 = new java.lang.StringBuilder;

        specialinvoke r76.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dropping response message with invalid tag >>> ");

        virtualinvoke r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r73);

        $r15 = virtualinvoke r76.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r75.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r15);

     label14:
        $z7 = r74 instanceof gov.nist.javax.sip.stack.SIPTransaction;

        if $z7 == 0 goto label15;

        $r10 = (gov.nist.javax.sip.stack.SIPTransaction) r74;

        $z8 = virtualinvoke $r10.<gov.nist.javax.sip.stack.SIPTransaction: boolean passToListener()>();

        if $z8 != 0 goto label15;

        $r11 = (gov.nist.javax.sip.stack.SIPTransaction) r74;

        virtualinvoke $r11.<gov.nist.javax.sip.stack.SIPTransaction: void releaseSem()>();

     label15:
        return;

     label16:
        interfaceinvoke r74.<gov.nist.javax.sip.stack.ServerResponseInterface: void processResponse(gov.nist.javax.sip.message.SIPResponse,gov.nist.javax.sip.stack.MessageChannel)>(r73, r0);

     label17:
        $z3 = r74 instanceof gov.nist.javax.sip.stack.SIPTransaction;

        if $z3 == 0 goto label18;

        $r6 = (gov.nist.javax.sip.stack.SIPTransaction) r74;

        $z4 = virtualinvoke $r6.<gov.nist.javax.sip.stack.SIPTransaction: boolean passToListener()>();

        if $z4 != 0 goto label18;

        $r7 = (gov.nist.javax.sip.stack.SIPTransaction) r74;

        virtualinvoke $r7.<gov.nist.javax.sip.stack.SIPTransaction: void releaseSem()>();

     label18:
        goto label22;

     label19:
        $r49 := @caughtexception;

        $z14 = r74 instanceof gov.nist.javax.sip.stack.SIPTransaction;

        if $z14 == 0 goto label20;

        $r50 = (gov.nist.javax.sip.stack.SIPTransaction) r74;

        $z15 = virtualinvoke $r50.<gov.nist.javax.sip.stack.SIPTransaction: boolean passToListener()>();

        if $z15 != 0 goto label20;

        $r51 = (gov.nist.javax.sip.stack.SIPTransaction) r74;

        virtualinvoke $r51.<gov.nist.javax.sip.stack.SIPTransaction: void releaseSem()>();

     label20:
        throw $r49;

     label21:
        $r3 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label22;

        $r4 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r5 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r5.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("null sipServerResponse!");

     label22:
        return;

     label23:
        $r55 := @caughtexception;

        $r56 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z18 = virtualinvoke $r56.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z18 == 0 goto label24;

        $r57 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r79 = virtualinvoke $r57.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dropping Badly formatted response message >>> ");

        virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r73);

        $r61 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r79.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r61);

     label24:
        return;

        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.text.ParseException from label11 to label12 with label23;
        catch java.lang.Throwable from label13 to label14 with label19;
        catch java.lang.Throwable from label16 to label17 with label19;
    }

    public void run()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        java.util.LinkedList r1, $r9, $r12, $r18;
        gov.nist.javax.sip.parser.StringMsgParser $r2, $r21;
        gov.nist.javax.sip.stack.SIPTransactionStack $r3, $r4, $r19, $r23;
        int $i0, $i1;
        gov.nist.javax.sip.stack.MessageProcessor $r5, $r7, $r10, $r14, $r16, $r27;
        gov.nist.javax.sip.stack.UDPMessageProcessor $r6, $r8, $r11, $r15, $r17, $r28;
        boolean $z0, $z1, $z2;
        java.lang.Object $r13;
        long $l2;
        gov.nist.core.ThreadAuditor $r20;
        java.lang.Exception $r22;
        gov.nist.core.StackLogger $r24;
        java.lang.Throwable $r25, $r26;
        gov.nist.core.ThreadAuditor$ThreadHandle r29, r31;
        java.net.DatagramPacket r33;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r29 = null;

     label01:
        $r2 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.parser.StringMsgParser myParser>;

        if $r2 != null goto label02;

        $r21 = new gov.nist.javax.sip.parser.StringMsgParser;

        specialinvoke $r21.<gov.nist.javax.sip.parser.StringMsgParser: void <init>()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.parser.StringMsgParser myParser> = $r21;

        virtualinvoke $r21.<gov.nist.javax.sip.parser.StringMsgParser: void setParseExceptionListener(gov.nist.javax.sip.parser.ParseExceptionListener)>(r0);

     label02:
        $r3 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $i0 = $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: int threadPoolSize>;

        if $i0 == -1 goto label21;

        $r5 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r6 = (gov.nist.javax.sip.stack.UDPMessageProcessor) $r5;

        r1 = $r6.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        entermonitor r1;

     label03:
        $r7 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r8 = (gov.nist.javax.sip.stack.UDPMessageProcessor) $r7;

        $r9 = $r8.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        $z0 = virtualinvoke $r9.<java.util.LinkedList: boolean isEmpty()>();

        if $z0 == 0 goto label16;

        $r14 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r15 = (gov.nist.javax.sip.stack.UDPMessageProcessor) $r14;

        $z1 = $r15.<gov.nist.javax.sip.stack.UDPMessageProcessor: boolean isRunning>;

        if $z1 != 0 goto label05;

        exitmonitor r1;

     label04:
        return;

     label05:
        r31 = r29;

        if r29 != null goto label07;

     label06:
        $r19 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r20 = virtualinvoke $r19.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.ThreadAuditor getThreadAuditor()>();

        r31 = virtualinvoke $r20.<gov.nist.core.ThreadAuditor: gov.nist.core.ThreadAuditor$ThreadHandle addCurrentThread()>();

     label07:
        r29 = r31;

     label08:
        virtualinvoke r31.<gov.nist.core.ThreadAuditor$ThreadHandle: void ping()>();

     label09:
        r29 = r31;

     label10:
        $r16 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r17 = (gov.nist.javax.sip.stack.UDPMessageProcessor) $r16;

        $r18 = $r17.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        $l2 = virtualinvoke r31.<gov.nist.core.ThreadAuditor$ThreadHandle: long getPingIntervalInMillisecs()>();

        virtualinvoke $r18.<java.lang.Object: void wait(long)>($l2);

     label11:
        r29 = r31;

        goto label15;

     label12:
        $r26 := @caughtexception;

     label13:
        $r27 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r28 = (gov.nist.javax.sip.stack.UDPMessageProcessor) $r27;

        $z2 = $r28.<gov.nist.javax.sip.stack.UDPMessageProcessor: boolean isRunning>;

        if $z2 != 0 goto label15;

        exitmonitor r1;

     label14:
        return;

     label15:
        goto label03;

     label16:
        $r10 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r11 = (gov.nist.javax.sip.stack.UDPMessageProcessor) $r10;

        $r12 = $r11.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        $r13 = virtualinvoke $r12.<java.util.LinkedList: java.lang.Object removeFirst()>();

        r33 = (java.net.DatagramPacket) $r13;

        exitmonitor r1;

     label17:
        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.DatagramPacket incomingPacket> = r33;

        goto label22;

     label18:
        $r25 := @caughtexception;

     label19:
        exitmonitor r1;

     label20:
        throw $r25;

     label21:
        r33 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.DatagramPacket incomingPacket>;

     label22:
        specialinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: void processIncomingDataPacket(java.net.DatagramPacket)>(r33);

     label23:
        goto label25;

     label24:
        $r22 := @caughtexception;

        $r23 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r24 = virtualinvoke $r23.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r24.<gov.nist.core.StackLogger: void logError(java.lang.String,java.lang.Exception)>("Error while processing incoming UDP packet", $r22);

     label25:
        $r4 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $i1 = $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: int threadPoolSize>;

        if $i1 != -1 goto label26;

        return;

     label26:
        goto label01;

        catch java.lang.Throwable from label03 to label04 with label18;
        catch java.lang.InterruptedException from label06 to label07 with label12;
        catch java.lang.Throwable from label06 to label07 with label18;
        catch java.lang.InterruptedException from label08 to label09 with label12;
        catch java.lang.Throwable from label08 to label09 with label18;
        catch java.lang.InterruptedException from label10 to label11 with label12;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label13 to label14 with label18;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label19 to label20 with label18;
        catch java.lang.Exception from label22 to label23 with label24;
    }

    public void sendMessage(gov.nist.javax.sip.message.SIPMessage) throws java.io.IOException
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        gov.nist.javax.sip.message.SIPMessage r1;
        long l0;
        int i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        gov.nist.javax.sip.stack.SIPTransactionStack $r2, $r7, $r9, $r11, $r20, $r21, $r23, $r25, $r28, $r30, $r31, $r35, $r38, $r40, $r42, $r46, $r49;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        java.lang.String $r3, $r5, $r16, $r17;
        byte[] $r4;
        java.net.InetAddress $r6, $r13, $r14, $r15, $r18, $r27, $r44;
        gov.nist.core.StackLogger $r8, $r10, $r12, $r22, $r24, $r26, $r29, $r32, $r36, $r39, $r41, $r43, $r47;
        gov.nist.javax.sip.stack.RawMessageChannel $r19;
        gov.nist.javax.sip.message.SIPRequest $r33;
        gov.nist.javax.sip.header.RequestLine $r34;
        java.lang.Throwable $r37, $r48;
        java.lang.Exception $r45;
        gov.nist.javax.sip.stack.MessageProcessor[] r50;
        gov.nist.javax.sip.stack.MessageProcessor r51;
        gov.nist.javax.sip.stack.MessageChannel r52;
        java.io.IOException r55;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPMessage;

        $r2 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r2.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label02;

        $r30 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z12 = virtualinvoke $r30.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLogStackTraceOnMessageSend()>();

        if $z12 == 0 goto label02;

        $z13 = r1 instanceof gov.nist.javax.sip.message.SIPRequest;

        if $z13 == 0 goto label01;

        $r33 = (gov.nist.javax.sip.message.SIPRequest) r1;

        $r34 = virtualinvoke $r33.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine getRequestLine()>();

        if $r34 == null goto label01;

        $r35 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r36 = virtualinvoke $r35.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r36.<gov.nist.core.StackLogger: void logStackTrace(int)>(16);

        goto label02;

     label01:
        $r31 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r32 = virtualinvoke $r31.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r32.<gov.nist.core.StackLogger: void logStackTrace(int)>(16);

     label02:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label03:
        $r49 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r50 = virtualinvoke $r49.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.MessageProcessor[] getMessageProcessors()>();

        i1 = lengthof r50;

     label04:
        i9 = 0;

     label05:
        if i9 >= i1 goto label11;

        r51 = r50[i9];

     label06:
        $r14 = virtualinvoke r51.<gov.nist.javax.sip.stack.MessageProcessor: java.net.InetAddress getIpAddress()>();

        $r15 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $z5 = virtualinvoke $r14.<java.net.InetAddress: boolean equals(java.lang.Object)>($r15);

        if $z5 == 0 goto label10;

        $i4 = virtualinvoke r51.<gov.nist.javax.sip.stack.MessageProcessor: int getPort()>();

        $i5 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort>;

        if $i4 != $i5 goto label10;

        $r16 = virtualinvoke r51.<gov.nist.javax.sip.stack.MessageProcessor: java.lang.String getTransport()>();

        $r17 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String peerProtocol>;

        $z6 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z6 == 0 goto label10;

        $r18 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $i6 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort>;

        r52 = virtualinvoke r51.<gov.nist.javax.sip.stack.MessageProcessor: gov.nist.javax.sip.stack.MessageChannel createMessageChannel(java.net.InetAddress,int)>($r18, $i6);

        $z7 = r52 instanceof gov.nist.javax.sip.stack.RawMessageChannel;

        if $z7 == 0 goto label10;

        $r19 = (gov.nist.javax.sip.stack.RawMessageChannel) r52;

        interfaceinvoke $r19.<gov.nist.javax.sip.stack.RawMessageChannel: void processMessage(gov.nist.javax.sip.message.SIPMessage)>(r1);

        $r20 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z8 = virtualinvoke $r20.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z8 == 0 goto label07;

        $r28 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r29 = virtualinvoke $r28.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r29.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Self routing message");

     label07:
        $r21 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r22 = virtualinvoke $r21.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $z9 = interfaceinvoke $r22.<gov.nist.core.StackLogger: boolean isLoggingEnabled(int)>(16);

        if $z9 == 0 goto label08;

        $z11 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: boolean isNullRequest()>();

        if $z11 != 0 goto label08;

        $r27 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $i7 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: void logMessage(gov.nist.javax.sip.message.SIPMessage,java.net.InetAddress,int,long)>(r1, $r27, $i7, l0);

        goto label09;

     label08:
        $r23 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r24 = virtualinvoke $r23.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $z10 = interfaceinvoke $r24.<gov.nist.core.StackLogger: boolean isLoggingEnabled(int)>(32);

        if $z10 == 0 goto label09;

        $r25 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r26 = virtualinvoke $r25.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r26.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Sent EMPTY Message");

     label09:
        return;

     label10:
        i9 = i9 + 1;

        goto label05;

     label11:
        $r3 = virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getTransport()>();

        $r4 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: byte[] encodeAsBytes(java.lang.String)>($r3);

        $r6 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $i2 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort>;

        $r5 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String peerProtocol>;

        $z1 = r1 instanceof gov.nist.javax.sip.message.SIPRequest;

        virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: void sendMessage(byte[],java.net.InetAddress,int,java.lang.String,boolean)>($r4, $r6, $i2, $r5, $z1);

     label12:
        $r7 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r8 = virtualinvoke $r7.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $z2 = interfaceinvoke $r8.<gov.nist.core.StackLogger: boolean isLoggingEnabled(int)>(16);

        if $z2 == 0 goto label13;

        $z4 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: boolean isNullRequest()>();

        if $z4 != 0 goto label13;

        $r13 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $i3 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: void logMessage(gov.nist.javax.sip.message.SIPMessage,java.net.InetAddress,int,long)>(r1, $r13, $i3, l0);

        goto label14;

     label13:
        $r9 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r10 = virtualinvoke $r9.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $z3 = interfaceinvoke $r10.<gov.nist.core.StackLogger: boolean isLoggingEnabled(int)>(32);

        if $z3 == 0 goto label14;

        $r11 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r12 = virtualinvoke $r11.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r12.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Sent EMPTY Message");

     label14:
        return;

     label15:
        $r37 := @caughtexception;

        goto label20;

     label16:
        $r45 := @caughtexception;

     label17:
        $r46 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r47 = virtualinvoke $r46.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r47.<gov.nist.core.StackLogger: void logError(java.lang.String,java.lang.Exception)>("An exception occured while sending message", $r45);

        r55 = new java.io.IOException;

        specialinvoke r55.<java.io.IOException: void <init>(java.lang.String)>("An exception occured while sending message");

        throw r55;

     label18:
        $r48 := @caughtexception;

     label19:
        throw $r48;

     label20:
        $r38 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r39 = virtualinvoke $r38.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $z14 = interfaceinvoke $r39.<gov.nist.core.StackLogger: boolean isLoggingEnabled(int)>(16);

        if $z14 == 0 goto label22;

        $z16 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: boolean isNullRequest()>();

        if $z16 == 0 goto label21;

        goto label22;

     label21:
        $r44 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $i8 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: void logMessage(gov.nist.javax.sip.message.SIPMessage,java.net.InetAddress,int,long)>(r1, $r44, $i8, l0);

        goto label23;

     label22:
        $r40 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r41 = virtualinvoke $r40.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $z15 = interfaceinvoke $r41.<gov.nist.core.StackLogger: boolean isLoggingEnabled(int)>(32);

        if $z15 == 0 goto label23;

        $r42 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r43 = virtualinvoke $r42.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r43.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Sent EMPTY Message");

     label23:
        throw $r37;

        catch java.io.IOException from label03 to label04 with label18;
        catch java.lang.Exception from label03 to label04 with label16;
        catch java.lang.Throwable from label03 to label04 with label15;
        catch java.io.IOException from label06 to label07 with label18;
        catch java.lang.Exception from label06 to label07 with label16;
        catch java.lang.Throwable from label06 to label07 with label15;
        catch java.io.IOException from label11 to label12 with label18;
        catch java.lang.Exception from label11 to label12 with label16;
        catch java.lang.Throwable from label11 to label12 with label15;
        catch java.lang.Throwable from label17 to label18 with label15;
        catch java.lang.Throwable from label19 to label20 with label15;
    }

    protected void sendMessage(byte[], java.net.InetAddress, int, java.lang.String, boolean) throws java.io.IOException
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        int i0, $i1, $i2, $i3, $i4;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        gov.nist.core.StackLogger r1, r49, r51;
        gov.nist.javax.sip.stack.SIPTransactionStack $r2, $r3, $r9, $r10, $r12, $r13, $r14, $r25, $r35, $r37;
        gov.nist.javax.sip.stack.MessageProcessor $r4, $r23;
        gov.nist.javax.sip.stack.IOHandler $r5;
        java.net.InetAddress $r6, r47;
        java.net.Socket $r7;
        java.net.DatagramPacket $r8;
        gov.nist.core.net.NetworkLayer $r11;
        java.lang.String $r16, $r22, $r28, $r34, $r40, $r43, r48, r56;
        gov.nist.javax.sip.stack.UDPMessageProcessor $r24;
        java.lang.StringBuilder $r26, $r38, r55;
        java.io.IOException $r36;
        java.lang.Class $r39;
        java.lang.Throwable $r44;
        java.lang.Exception $r45;
        byte[] r46;
        java.net.DatagramSocket r54;
        java.io.OutputStream r59;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r46 := @parameter0: byte[];

        r47 := @parameter1: java.net.InetAddress;

        i0 := @parameter2: int;

        r48 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        if i0 != -1 goto label02;

        $r35 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z5 = virtualinvoke $r35.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z5 == 0 goto label01;

        $r37 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r49 = virtualinvoke $r37.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r40 = virtualinvoke $r39.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":sendMessage: Dropping reply!");

        $r43 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r49.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r43);

     label01:
        $r36 = new java.io.IOException;

        specialinvoke $r36.<java.io.IOException: void <init>(java.lang.String)>("Receiver port not set ");

        throw $r36;

     label02:
        $r2 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r2.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label03;

        $r25 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r51 = virtualinvoke $r25.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":sendMessage ");

        $r28 = virtualinvoke r47.<java.net.InetAddress: java.lang.String getHostAddress()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n messageSize = ");

        $i4 = lengthof r46;

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r34 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r51.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r34);

     label03:
        $i1 = virtualinvoke r48.<java.lang.String: int compareToIgnoreCase(java.lang.String)>("UDP");

        if $i1 != 0 goto label13;

        $r8 = new java.net.DatagramPacket;

        $i3 = lengthof r46;

        specialinvoke $r8.<java.net.DatagramPacket: void <init>(byte[],int,java.net.InetAddress,int)>(r46, $i3, r47, i0);

     label04:
        $r9 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z2 = $r9.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean udpFlag>;

        if $z2 == 0 goto label06;

        $r23 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r24 = (gov.nist.javax.sip.stack.UDPMessageProcessor) $r23;

        r54 = $r24.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.DatagramSocket sock>;

     label05:
        goto label07;

     label06:
        $r10 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r11 = virtualinvoke $r10.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.net.NetworkLayer getNetworkLayer()>();

        r54 = interfaceinvoke $r11.<gov.nist.core.net.NetworkLayer: java.net.DatagramSocket createDatagramSocket()>();

     label07:
        $r12 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z3 = virtualinvoke $r12.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z3 == 0 goto label08;

        $r14 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r1 = virtualinvoke $r14.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r55 = new java.lang.StringBuilder;

        specialinvoke r55.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendMessage ");

        $r16 = virtualinvoke r47.<java.net.InetAddress: java.lang.String getHostAddress()>();

        virtualinvoke r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        virtualinvoke r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        virtualinvoke r55.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r56 = new java.lang.String;

        specialinvoke r56.<java.lang.String: void <init>(byte[])>(r46);

        virtualinvoke r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r56);

        $r22 = virtualinvoke r55.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r22);

     label08:
        virtualinvoke r54.<java.net.DatagramSocket: void send(java.net.DatagramPacket)>($r8);

        $r13 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z4 = $r13.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean udpFlag>;

        if $z4 != 0 goto label09;

        virtualinvoke r54.<java.net.DatagramSocket: void close()>();

     label09:
        goto label11;

     label10:
        $r45 := @caughtexception;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>($r45);

     label11:
        goto label14;

     label12:
        $r44 := @caughtexception;

        throw $r44;

     label13:
        $r3 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r5 = $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.IOHandler ioHandler>;

        $r4 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r6 = virtualinvoke $r4.<gov.nist.javax.sip.stack.MessageProcessor: java.net.InetAddress getIpAddress()>();

        $r7 = virtualinvoke $r5.<gov.nist.javax.sip.stack.IOHandler: java.net.Socket sendBytes(java.net.InetAddress,java.net.InetAddress,int,java.lang.String,byte[],boolean,gov.nist.javax.sip.stack.MessageChannel)>($r6, r47, i0, "tcp", r46, z0, r0);

        r59 = virtualinvoke $r7.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        $i2 = lengthof r46;

        virtualinvoke r59.<java.io.OutputStream: void write(byte[],int,int)>(r46, 0, $i2);

        virtualinvoke r59.<java.io.OutputStream: void flush()>();

     label14:
        return;

        catch java.io.IOException from label04 to label05 with label12;
        catch java.lang.Exception from label04 to label05 with label10;
        catch java.io.IOException from label06 to label07 with label12;
        catch java.lang.Exception from label06 to label07 with label10;
        catch java.io.IOException from label07 to label08 with label12;
        catch java.lang.Exception from label07 to label08 with label10;
        catch java.io.IOException from label08 to label09 with label12;
        catch java.lang.Exception from label08 to label09 with label10;
    }

    protected void sendMessage(byte[], java.net.InetAddress, int, boolean) throws java.io.IOException
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, z6;
        gov.nist.core.StackLogger r1, $r24, $r36, r41;
        gov.nist.javax.sip.stack.SIPTransactionStack $r3, $r4, $r6, $r10, $r23, $r25, $r27, $r34, $r35;
        java.net.DatagramPacket $r5;
        int $i0, $i1, i2;
        java.net.DatagramSocket $r7, r44;
        gov.nist.javax.sip.stack.MessageProcessor $r8;
        gov.nist.javax.sip.stack.UDPMessageProcessor $r9;
        java.lang.StringBuilder $r11, $r28;
        java.lang.String $r13, $r20, $r22, $r30, $r33;
        java.io.IOException $r26;
        java.lang.Class $r29;
        java.lang.Throwable $r37;
        java.lang.Exception $r38;
        byte[] r39;
        java.net.InetAddress r40;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r39 := @parameter0: byte[];

        r40 := @parameter1: java.net.InetAddress;

        i2 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r3 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label01;

        $r34 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z5 = virtualinvoke $r34.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLogStackTraceOnMessageSend()>();

        if $z5 == 0 goto label01;

        $r35 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r36 = virtualinvoke $r35.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r36.<gov.nist.core.StackLogger: void logStackTrace(int)>(16);

     label01:
        if i2 != -1 goto label03;

        $r25 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z4 = virtualinvoke $r25.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z4 == 0 goto label02;

        $r27 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r41 = virtualinvoke $r27.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r30 = virtualinvoke $r29.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":sendMessage: Dropping reply!");

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r41.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r33);

     label02:
        $r26 = new java.io.IOException;

        specialinvoke $r26.<java.io.IOException: void <init>(java.lang.String)>("Receiver port not set ");

        throw $r26;

     label03:
        $r4 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z2 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z2 == 0 goto label04;

        $r10 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r1 = virtualinvoke $r10.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendMessage ");

        $r13 = virtualinvoke r40.<java.net.InetAddress: java.lang.String getHostAddress()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nmessageSize =  ");

        $i1 = lengthof r39;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" message = ");

        $r20 = new java.lang.String;

        specialinvoke $r20.<java.lang.String: void <init>(byte[])>(r39);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r22);

        $r23 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r24 = virtualinvoke $r23.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r24.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("*******************\n");

     label04:
        $r5 = new java.net.DatagramPacket;

        $i0 = lengthof r39;

        specialinvoke $r5.<java.net.DatagramPacket: void <init>(byte[],int,java.net.InetAddress,int)>(r39, $i0, r40, i2);

        z6 = 0;

     label05:
        $r6 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z3 = $r6.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean udpFlag>;

        if $z3 == 0 goto label07;

        $r8 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r9 = (gov.nist.javax.sip.stack.UDPMessageProcessor) $r8;

        r44 = $r9.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.DatagramSocket sock>;

     label06:
        goto label09;

     label07:
        $r7 = new java.net.DatagramSocket;

        specialinvoke $r7.<java.net.DatagramSocket: void <init>()>();

        r44 = $r7;

     label08:
        z6 = 1;

     label09:
        virtualinvoke r44.<java.net.DatagramSocket: void send(java.net.DatagramPacket)>($r5);

     label10:
        if z6 == 0 goto label12;

     label11:
        virtualinvoke r44.<java.net.DatagramSocket: void close()>();

     label12:
        goto label14;

     label13:
        $r38 := @caughtexception;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>($r38);

     label14:
        return;

     label15:
        $r37 := @caughtexception;

        throw $r37;

        catch java.io.IOException from label05 to label06 with label15;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.io.IOException from label07 to label08 with label15;
        catch java.lang.Exception from label07 to label08 with label13;
        catch java.io.IOException from label09 to label10 with label15;
        catch java.lang.Exception from label09 to label10 with label13;
        catch java.io.IOException from label11 to label12 with label15;
        catch java.lang.Exception from label11 to label12 with label13;
    }
}
