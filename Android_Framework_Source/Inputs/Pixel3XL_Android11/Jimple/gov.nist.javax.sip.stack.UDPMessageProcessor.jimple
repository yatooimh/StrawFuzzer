public class gov.nist.javax.sip.stack.UDPMessageProcessor extends gov.nist.javax.sip.stack.MessageProcessor
{
    private static final int HIGHWAT;
    private static final int LOWAT;
    protected boolean isRunning;
    protected java.util.LinkedList messageChannels;
    protected java.util.LinkedList messageQueue;
    private int port;
    protected java.net.DatagramSocket sock;
    protected int threadPoolSize;

    protected void <init>(java.net.InetAddress, gov.nist.javax.sip.stack.SIPTransactionStack, int) throws java.io.IOException
    {
        gov.nist.javax.sip.stack.UDPMessageProcessor r0;
        gov.nist.javax.sip.stack.SIPTransactionStack r1;
        int i0, $i1, $i2, $i4;
        java.net.DatagramSocket r2, $r5, $r8, $r11;
        gov.nist.core.net.NetworkLayer $r4;
        gov.nist.core.ThreadAuditor $r6, $r12;
        boolean $z0, $z1, $z2;
        java.lang.String $r7, $r10, $r15;
        java.net.InetAddress $r9, r16;
        long $l3;
        java.lang.Throwable $r13;
        java.util.LinkedList r18;
        java.io.IOException r19;
        java.net.SocketException r20;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageProcessor;

        r16 := @parameter0: java.net.InetAddress;

        r1 := @parameter1: gov.nist.javax.sip.stack.SIPTransactionStack;

        i0 := @parameter2: int;

        specialinvoke r0.<gov.nist.javax.sip.stack.MessageProcessor: void <init>(java.net.InetAddress,int,java.lang.String,gov.nist.javax.sip.stack.SIPTransactionStack)>(r16, i0, "udp", r1);

        r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack> = r1;

        r18 = new java.util.LinkedList;

        specialinvoke r18.<java.util.LinkedList: void <init>()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue> = r18;

        r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: int port> = i0;

     label1:
        $r4 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.net.NetworkLayer getNetworkLayer()>();

        r2 = interfaceinvoke $r4.<gov.nist.core.net.NetworkLayer: java.net.DatagramSocket createDatagramSocket(int,java.net.InetAddress)>(i0, r16);

        r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.DatagramSocket sock> = r2;

        $i1 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransactionStack: int getReceiveUdpBufferSize()>();

        virtualinvoke r2.<java.net.DatagramSocket: void setReceiveBufferSize(int)>($i1);

        $r5 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.DatagramSocket sock>;

        $i2 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransactionStack: int getSendUdpBufferSize()>();

        virtualinvoke $r5.<java.net.DatagramSocket: void setSendBufferSize(int)>($i2);

        $r6 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.ThreadAuditor getThreadAuditor()>();

        $z0 = virtualinvoke $r6.<gov.nist.core.ThreadAuditor: boolean isEnabled()>();

        if $z0 == 0 goto label2;

        $r11 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.DatagramSocket sock>;

        $r12 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.ThreadAuditor getThreadAuditor()>();

        $l3 = virtualinvoke $r12.<gov.nist.core.ThreadAuditor: long getPingIntervalInMillisecs()>();

        $i4 = (int) $l3;

        virtualinvoke $r11.<java.net.DatagramSocket: void setSoTimeout(int)>($i4);

     label2:
        $r7 = virtualinvoke r16.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("0.0.0.0");

        if $z1 != 0 goto label3;

        $r10 = virtualinvoke r16.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("::0");

        if $z2 == 0 goto label4;

     label3:
        $r8 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.DatagramSocket sock>;

        $r9 = virtualinvoke $r8.<java.net.DatagramSocket: java.net.InetAddress getLocalAddress()>();

        specialinvoke r0.<gov.nist.javax.sip.stack.MessageProcessor: void setIpAddress(java.net.InetAddress)>($r9);

     label4:
        return;

     label5:
        $r13 := @caughtexception;

        r19 = new java.io.IOException;

        r20 = (java.net.SocketException) $r13;

        $r15 = virtualinvoke r20.<java.net.SocketException: java.lang.String getMessage()>();

        specialinvoke r19.<java.io.IOException: void <init>(java.lang.String)>($r15);

        throw r19;

        catch java.net.SocketException from label1 to label2 with label5;
        catch java.net.SocketException from label2 to label3 with label5;
        catch java.net.SocketException from label3 to label4 with label5;
    }

    public gov.nist.javax.sip.stack.MessageChannel createMessageChannel(gov.nist.core.HostPort) throws java.net.UnknownHostException
    {
        gov.nist.javax.sip.stack.UDPMessageProcessor r0;
        gov.nist.core.HostPort r1;
        gov.nist.javax.sip.stack.UDPMessageChannel $r2;
        java.net.InetAddress $r3;
        int $i0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r4;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageProcessor;

        r1 := @parameter0: gov.nist.core.HostPort;

        $r2 = new gov.nist.javax.sip.stack.UDPMessageChannel;

        $r3 = virtualinvoke r1.<gov.nist.core.HostPort: java.net.InetAddress getInetAddress()>();

        $i0 = virtualinvoke r1.<gov.nist.core.HostPort: int getPort()>();

        $r4 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        specialinvoke $r2.<gov.nist.javax.sip.stack.UDPMessageChannel: void <init>(java.net.InetAddress,int,gov.nist.javax.sip.stack.SIPTransactionStack,gov.nist.javax.sip.stack.UDPMessageProcessor)>($r3, $i0, $r4, r0);

        return $r2;
    }

    public gov.nist.javax.sip.stack.MessageChannel createMessageChannel(java.net.InetAddress, int) throws java.io.IOException
    {
        gov.nist.javax.sip.stack.UDPMessageProcessor r0;
        java.net.InetAddress r1;
        int i0;
        gov.nist.javax.sip.stack.UDPMessageChannel $r2;
        gov.nist.javax.sip.stack.SIPTransactionStack $r3;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageProcessor;

        r1 := @parameter0: java.net.InetAddress;

        i0 := @parameter1: int;

        $r2 = new gov.nist.javax.sip.stack.UDPMessageChannel;

        $r3 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        specialinvoke $r2.<gov.nist.javax.sip.stack.UDPMessageChannel: void <init>(java.net.InetAddress,int,gov.nist.javax.sip.stack.SIPTransactionStack,gov.nist.javax.sip.stack.UDPMessageProcessor)>(r1, i0, $r3, r0);

        return $r2;
    }

    public int getDefaultTargetPort()
    {
        gov.nist.javax.sip.stack.UDPMessageProcessor r0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageProcessor;

        return 5060;
    }

    public int getMaximumMessageSize()
    {
        gov.nist.javax.sip.stack.UDPMessageProcessor r0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageProcessor;

        return 8192;
    }

    public int getPort()
    {
        gov.nist.javax.sip.stack.UDPMessageProcessor r0;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageProcessor;

        $i0 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: int port>;

        return $i0;
    }

    public gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()
    {
        gov.nist.javax.sip.stack.UDPMessageProcessor r0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r1;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageProcessor;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        return $r1;
    }

    public java.lang.String getTransport()
    {
        gov.nist.javax.sip.stack.UDPMessageProcessor r0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageProcessor;

        return "udp";
    }

    public boolean inUse()
    {
        gov.nist.javax.sip.stack.UDPMessageProcessor r0;
        java.util.LinkedList r1, $r3;
        int $i0;
        java.lang.Throwable $r4;
        boolean z0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageProcessor;

        r1 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        entermonitor r1;

     label1:
        $r3 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        $i0 = virtualinvoke $r3.<java.util.LinkedList: int size()>();

        if $i0 == 0 goto label3;

     label2:
        z0 = 1;

        goto label4;

     label3:
        z0 = 0;

     label4:
        exitmonitor r1;

     label5:
        return z0;

     label6:
        $r4 := @caughtexception;

     label7:
        exitmonitor r1;

     label8:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label7 to label8 with label6;
    }

    public boolean isSecure()
    {
        gov.nist.javax.sip.stack.UDPMessageProcessor r0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageProcessor;

        return 0;
    }

    public void run()
    {
        gov.nist.javax.sip.stack.UDPMessageProcessor r0;
        float f0, $f1;
        gov.nist.javax.sip.stack.SIPTransactionStack $r2, $r3, $r7, $r9, $r16, $r17, $r21, $r22, $r24, $r26, $r29, $r30, $r33, $r34, $r38, $r40, $r50;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, i8, i9, $i10;
        gov.nist.core.ThreadAuditor $r4;
        java.net.DatagramSocket $r5, $r6;
        boolean $z0, $z2, $z3, $z5, $z6, $z7, $z8, z9;
        java.util.LinkedList $r10, $r11, $r12, $r13, $r14, $r15, $r27, $r39, r51, r56, r59;
        double $d0, $d1, $d2, $d3, $d4;
        byte $b6;
        java.lang.String $r20;
        gov.nist.core.StackLogger $r23, $r31, $r35, $r41, r48;
        java.lang.Exception $r28;
        java.lang.Throwable $r32, $r36, $r37, $r42, $r43;
        gov.nist.core.ThreadAuditor$ThreadHandle r45;
        byte[] r46;
        gov.nist.javax.sip.stack.UDPMessageChannel r60, r63;
        java.net.DatagramPacket r61;
        java.lang.StringBuilder r62;
        java.io.IOException r64;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageProcessor;

        r59 = new java.util.LinkedList;

        specialinvoke r59.<java.util.LinkedList: void <init>()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageChannels> = r59;

        $r2 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $i0 = $r2.<gov.nist.javax.sip.stack.SIPTransactionStack: int threadPoolSize>;

        if $i0 == -1 goto label02;

        i8 = 0;

     label01:
        $r24 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $i7 = $r24.<gov.nist.javax.sip.stack.SIPTransactionStack: int threadPoolSize>;

        if i8 >= $i7 goto label02;

        r60 = new gov.nist.javax.sip.stack.UDPMessageChannel;

        $r26 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        specialinvoke r60.<gov.nist.javax.sip.stack.UDPMessageChannel: void <init>(gov.nist.javax.sip.stack.SIPTransactionStack,gov.nist.javax.sip.stack.UDPMessageProcessor)>($r26, r0);

        $r27 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageChannels>;

        virtualinvoke $r27.<java.util.LinkedList: boolean add(java.lang.Object)>(r60);

        i8 = i8 + 1;

        goto label01;

     label02:
        $r3 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r4 = virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.ThreadAuditor getThreadAuditor()>();

        r45 = virtualinvoke $r4.<gov.nist.core.ThreadAuditor: gov.nist.core.ThreadAuditor$ThreadHandle addCurrentThread()>();

     label03:
        $z8 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: boolean isRunning>;

        if $z8 == 0 goto label32;

     label04:
        virtualinvoke r45.<gov.nist.core.ThreadAuditor$ThreadHandle: void ping()>();

        $r5 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.DatagramSocket sock>;

        i9 = virtualinvoke $r5.<java.net.DatagramSocket: int getReceiveBufferSize()>();

        r46 = newarray (byte)[i9];

        r61 = new java.net.DatagramPacket;

        specialinvoke r61.<java.net.DatagramPacket: void <init>(byte[],int)>(r46, i9);

        $r6 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.DatagramSocket sock>;

        virtualinvoke $r6.<java.net.DatagramSocket: void receive(java.net.DatagramPacket)>(r61);

        $r7 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = $r7.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean stackDoesCongestionControl>;

        if $z0 == 0 goto label12;

        $r12 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        $i1 = virtualinvoke $r12.<java.util.LinkedList: int size()>();

        if $i1 < 5000 goto label06;

        $r21 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z3 = virtualinvoke $r21.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z3 == 0 goto label05;

        $r22 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r23 = virtualinvoke $r22.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r23.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Dropping message -- queue length exceeded");

     label05:
        goto label03;

     label06:
        $r13 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        $i2 = virtualinvoke $r13.<java.util.LinkedList: int size()>();

        if $i2 <= 2500 goto label12;

        $r14 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        $i3 = virtualinvoke $r14.<java.util.LinkedList: int size()>();

        if $i3 >= 5000 goto label12;

        $r15 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        $i4 = virtualinvoke $r15.<java.util.LinkedList: int size()>();

        $i5 = $i4 - 2500;

        $f1 = (float) $i5;

        f0 = $f1 / 2500.0F;

        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d1 = (double) f0;

        $d2 = 1.0 - $d1;

        $b6 = $d0 cmpl $d2;

        if $b6 <= 0 goto label08;

     label07:
        z9 = 1;

        goto label09;

     label08:
        z9 = 0;

     label09:
        if z9 == 0 goto label12;

     label10:
        $r16 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z2 = virtualinvoke $r16.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z2 == 0 goto label11;

        $r17 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r48 = virtualinvoke $r17.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        r62 = new java.lang.StringBuilder;

        specialinvoke r62.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dropping message with probability  ");

        $d3 = (double) f0;

        $d4 = 1.0 - $d3;

        virtualinvoke r62.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d4);

        $r20 = virtualinvoke r62.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r48.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r20);

     label11:
        goto label03;

     label12:
        $r50 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $i10 = $r50.<gov.nist.javax.sip.stack.SIPTransactionStack: int threadPoolSize>;

        if $i10 == -1 goto label18;

        r51 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        entermonitor r51;

     label13:
        $r10 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        virtualinvoke $r10.<java.util.LinkedList: boolean add(java.lang.Object)>(r61);

        $r11 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        virtualinvoke $r11.<java.lang.Object: void notify()>();

        exitmonitor r51;

     label14:
        goto label31;

     label15:
        $r36 := @caughtexception;

     label16:
        exitmonitor r51;

     label17:
        throw $r36;

     label18:
        r63 = new gov.nist.javax.sip.stack.UDPMessageChannel;

        $r9 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        specialinvoke r63.<gov.nist.javax.sip.stack.UDPMessageChannel: void <init>(gov.nist.javax.sip.stack.SIPTransactionStack,gov.nist.javax.sip.stack.UDPMessageProcessor,java.net.DatagramPacket)>($r9, r0, r61);

     label19:
        goto label31;

     label20:
        $r28 := @caughtexception;

        $r29 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z5 = virtualinvoke $r29.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z5 == 0 goto label21;

        $r30 = virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()>();

        $r31 = virtualinvoke $r30.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r31.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("UDPMessageProcessor: Unexpected Exception - quitting");

     label21:
        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>($r28);

        return;

     label22:
        $r32 := @caughtexception;

        r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: boolean isRunning> = 0;

        r64 = (java.io.IOException) $r32;

        virtualinvoke r64.<java.io.IOException: void printStackTrace()>();

        $r33 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z6 = virtualinvoke $r33.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z6 == 0 goto label31;

        $r34 = virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()>();

        $r35 = virtualinvoke $r34.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r35.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("UDPMessageProcessor: Got an IO Exception");

        goto label31;

     label23:
        $r37 := @caughtexception;

        $r38 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z7 = virtualinvoke $r38.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z7 == 0 goto label24;

        $r40 = virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()>();

        $r41 = virtualinvoke $r40.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r41.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("UDPMessageProcessor: Stopping");

     label24:
        r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: boolean isRunning> = 0;

        r56 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        entermonitor r56;

     label25:
        $r39 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        virtualinvoke $r39.<java.lang.Object: void notifyAll()>();

        exitmonitor r56;

     label26:
        goto label31;

     label27:
        $r43 := @caughtexception;

     label28:
        exitmonitor r56;

     label29:
        throw $r43;

     label30:
        $r42 := @caughtexception;

     label31:
        goto label03;

     label32:
        return;

        catch java.net.SocketTimeoutException from label04 to label05 with label30;
        catch java.net.SocketException from label04 to label05 with label23;
        catch java.io.IOException from label04 to label05 with label22;
        catch java.lang.Exception from label04 to label05 with label20;
        catch java.net.SocketTimeoutException from label06 to label07 with label30;
        catch java.net.SocketException from label06 to label07 with label23;
        catch java.io.IOException from label06 to label07 with label22;
        catch java.lang.Exception from label06 to label07 with label20;
        catch java.net.SocketTimeoutException from label10 to label11 with label30;
        catch java.net.SocketException from label10 to label11 with label23;
        catch java.io.IOException from label10 to label11 with label22;
        catch java.lang.Exception from label10 to label11 with label20;
        catch java.net.SocketTimeoutException from label12 to label13 with label30;
        catch java.net.SocketException from label12 to label13 with label23;
        catch java.io.IOException from label12 to label13 with label22;
        catch java.lang.Exception from label12 to label13 with label20;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label15;
        catch java.net.SocketTimeoutException from label17 to label18 with label30;
        catch java.net.SocketException from label17 to label18 with label23;
        catch java.io.IOException from label17 to label18 with label22;
        catch java.lang.Exception from label17 to label18 with label20;
        catch java.net.SocketTimeoutException from label18 to label19 with label30;
        catch java.net.SocketException from label18 to label19 with label23;
        catch java.io.IOException from label18 to label19 with label22;
        catch java.lang.Exception from label18 to label19 with label20;
        catch java.lang.Throwable from label25 to label26 with label27;
        catch java.lang.Throwable from label28 to label29 with label27;
    }

    public void start() throws java.io.IOException
    {
        gov.nist.javax.sip.stack.UDPMessageProcessor r0;
        java.lang.Thread $r2;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageProcessor;

        r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: boolean isRunning> = 1;

        $r2 = new java.lang.Thread;

        specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>(r0);

        virtualinvoke $r2.<java.lang.Thread: void setDaemon(boolean)>(1);

        virtualinvoke $r2.<java.lang.Thread: void setName(java.lang.String)>("UDPMessageProcessorThread");

        virtualinvoke $r2.<java.lang.Thread: void setPriority(int)>(10);

        virtualinvoke $r2.<java.lang.Thread: void start()>();

        return;
    }

    public void stop()
    {
        gov.nist.javax.sip.stack.UDPMessageProcessor r0;
        java.util.LinkedList r1, $r3;
        java.net.DatagramSocket $r4;
        java.lang.Throwable $r5;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageProcessor;

        r1 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        entermonitor r1;

     label1:
        r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: boolean isRunning> = 0;

        $r3 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        virtualinvoke $r3.<java.lang.Object: void notifyAll()>();

        $r4 = r0.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.DatagramSocket sock>;

        virtualinvoke $r4.<java.net.DatagramSocket: void close()>();

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 := @caughtexception;

     label4:
        exitmonitor r1;

     label5:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label3;
    }

    public static void <clinit>()
    {
        <gov.nist.javax.sip.stack.UDPMessageProcessor: int LOWAT> = 2500;

        <gov.nist.javax.sip.stack.UDPMessageProcessor: int HIGHWAT> = 5000;

        return;
    }
}
