public class junit.framework.JUnit4TestAdapterCache extends java.util.HashMap
{
    private static final junit.framework.JUnit4TestAdapterCache fInstance;
    private static final long serialVersionUID;

    static void <clinit>()
    {
        junit.framework.JUnit4TestAdapterCache $r0;

        <junit.framework.JUnit4TestAdapterCache: long serialVersionUID> = 1L;

        $r0 = new junit.framework.JUnit4TestAdapterCache;

        specialinvoke $r0.<junit.framework.JUnit4TestAdapterCache: void <init>()>();

        <junit.framework.JUnit4TestAdapterCache: junit.framework.JUnit4TestAdapterCache fInstance> = $r0;

        return;
    }

    public void <init>()
    {
        junit.framework.JUnit4TestAdapterCache r0;

        r0 := @this: junit.framework.JUnit4TestAdapterCache;

        specialinvoke r0.<java.util.HashMap: void <init>()>();

        return;
    }

    public static junit.framework.JUnit4TestAdapterCache getDefault()
    {
        junit.framework.JUnit4TestAdapterCache $r0;

        $r0 = <junit.framework.JUnit4TestAdapterCache: junit.framework.JUnit4TestAdapterCache fInstance>;

        return $r0;
    }

    public junit.framework.Test asTest(org.junit.runner.Description)
    {
        junit.framework.JUnit4TestAdapterCache r0;
        org.junit.runner.Description r1;
        boolean $z0, $z1;
        java.lang.Object $r2;
        junit.framework.Test $r3, $r4, $r6;

        r0 := @this: junit.framework.JUnit4TestAdapterCache;

        r1 := @parameter0: org.junit.runner.Description;

        $z0 = virtualinvoke r1.<org.junit.runner.Description: boolean isSuite()>();

        if $z0 == 0 goto label1;

        $r6 = virtualinvoke r0.<junit.framework.JUnit4TestAdapterCache: junit.framework.Test createTest(org.junit.runner.Description)>(r1);

        return $r6;

     label1:
        $z1 = virtualinvoke r0.<junit.framework.JUnit4TestAdapterCache: boolean containsKey(java.lang.Object)>(r1);

        if $z1 != 0 goto label2;

        $r4 = virtualinvoke r0.<junit.framework.JUnit4TestAdapterCache: junit.framework.Test createTest(org.junit.runner.Description)>(r1);

        virtualinvoke r0.<junit.framework.JUnit4TestAdapterCache: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

     label2:
        $r2 = virtualinvoke r0.<junit.framework.JUnit4TestAdapterCache: java.lang.Object get(java.lang.Object)>(r1);

        $r3 = (junit.framework.Test) $r2;

        return $r3;
    }

    public java.util.List asTestList(org.junit.runner.Description)
    {
        junit.framework.JUnit4TestAdapterCache r0;
        boolean $z0, $z1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;
        org.junit.runner.Description $r5, r10;
        junit.framework.Test $r6, $r8;
        junit.framework.Test[] $r7;
        java.util.List $r9;
        java.util.Iterator r11;

        r0 := @this: junit.framework.JUnit4TestAdapterCache;

        r10 := @parameter0: org.junit.runner.Description;

        $z0 = virtualinvoke r10.<org.junit.runner.Description: boolean isTest()>();

        if $z0 == 0 goto label1;

        $r7 = newarray (junit.framework.Test)[1];

        $r8 = virtualinvoke r0.<junit.framework.JUnit4TestAdapterCache: junit.framework.Test asTest(org.junit.runner.Description)>(r10);

        $r7[0] = $r8;

        $r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7);

        return $r9;

     label1:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r10.<org.junit.runner.Description: java.util.ArrayList getChildren()>();

        r11 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r4 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.junit.runner.Description) $r4;

        $r6 = virtualinvoke r0.<junit.framework.JUnit4TestAdapterCache: junit.framework.Test asTest(org.junit.runner.Description)>($r5);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label2;

     label3:
        return $r2;
    }

    junit.framework.Test createTest(org.junit.runner.Description)
    {
        junit.framework.JUnit4TestAdapterCache r0;
        boolean $z0, $z1;
        junit.framework.TestSuite $r2;
        java.lang.String $r3;
        java.util.ArrayList $r4;
        java.lang.Object $r5;
        org.junit.runner.Description $r6, r9;
        junit.framework.Test $r7;
        junit.framework.JUnit4TestCaseFacade $r8;
        java.util.Iterator r10;

        r0 := @this: junit.framework.JUnit4TestAdapterCache;

        r9 := @parameter0: org.junit.runner.Description;

        $z0 = virtualinvoke r9.<org.junit.runner.Description: boolean isTest()>();

        if $z0 == 0 goto label1;

        $r8 = new junit.framework.JUnit4TestCaseFacade;

        specialinvoke $r8.<junit.framework.JUnit4TestCaseFacade: void <init>(org.junit.runner.Description)>(r9);

        return $r8;

     label1:
        $r2 = new junit.framework.TestSuite;

        $r3 = virtualinvoke r9.<org.junit.runner.Description: java.lang.String getDisplayName()>();

        specialinvoke $r2.<junit.framework.TestSuite: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke r9.<org.junit.runner.Description: java.util.ArrayList getChildren()>();

        r10 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r5 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (org.junit.runner.Description) $r5;

        $r7 = virtualinvoke r0.<junit.framework.JUnit4TestAdapterCache: junit.framework.Test asTest(org.junit.runner.Description)>($r6);

        virtualinvoke $r2.<junit.framework.TestSuite: void addTest(junit.framework.Test)>($r7);

        goto label2;

     label3:
        return $r2;
    }

    public org.junit.runner.notification.RunNotifier getNotifier(junit.framework.TestResult, junit.framework.JUnit4TestAdapter)
    {
        junit.framework.JUnit4TestAdapterCache r0;
        junit.framework.TestResult r1;
        org.junit.runner.notification.RunNotifier $r2;
        junit.framework.JUnit4TestAdapterCache$1 $r3;
        junit.framework.JUnit4TestAdapter r4;

        r0 := @this: junit.framework.JUnit4TestAdapterCache;

        r1 := @parameter0: junit.framework.TestResult;

        r4 := @parameter1: junit.framework.JUnit4TestAdapter;

        $r2 = new org.junit.runner.notification.RunNotifier;

        specialinvoke $r2.<org.junit.runner.notification.RunNotifier: void <init>()>();

        $r3 = new junit.framework.JUnit4TestAdapterCache$1;

        specialinvoke $r3.<junit.framework.JUnit4TestAdapterCache$1: void <init>(junit.framework.JUnit4TestAdapterCache,junit.framework.TestResult)>(r0, r1);

        virtualinvoke $r2.<org.junit.runner.notification.RunNotifier: void addListener(org.junit.runner.notification.RunListener)>($r3);

        return $r2;
    }
}
