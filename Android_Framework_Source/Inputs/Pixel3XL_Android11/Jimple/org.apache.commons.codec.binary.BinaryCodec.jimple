public class org.apache.commons.codec.binary.BinaryCodec extends java.lang.Object implements org.apache.commons.codec.BinaryDecoder, org.apache.commons.codec.BinaryEncoder
{
    private static final int[] BITS;
    private static final int BIT_0;
    private static final int BIT_1;
    private static final int BIT_2;
    private static final int BIT_3;
    private static final int BIT_4;
    private static final int BIT_5;
    private static final int BIT_6;
    private static final int BIT_7;
    private static final byte[] EMPTY_BYTE_ARRAY;
    private static final char[] EMPTY_CHAR_ARRAY;

    static void <clinit>()
    {
        char[] $r0;
        byte[] $r1;
        int[] $r2;

        <org.apache.commons.codec.binary.BinaryCodec: int BIT_7> = 128;

        <org.apache.commons.codec.binary.BinaryCodec: int BIT_6> = 64;

        <org.apache.commons.codec.binary.BinaryCodec: int BIT_5> = 32;

        <org.apache.commons.codec.binary.BinaryCodec: int BIT_4> = 16;

        <org.apache.commons.codec.binary.BinaryCodec: int BIT_3> = 8;

        <org.apache.commons.codec.binary.BinaryCodec: int BIT_2> = 4;

        <org.apache.commons.codec.binary.BinaryCodec: int BIT_1> = 2;

        <org.apache.commons.codec.binary.BinaryCodec: int BIT_0> = 1;

        $r0 = newarray (char)[0];

        <org.apache.commons.codec.binary.BinaryCodec: char[] EMPTY_CHAR_ARRAY> = $r0;

        $r1 = newarray (byte)[0];

        <org.apache.commons.codec.binary.BinaryCodec: byte[] EMPTY_BYTE_ARRAY> = $r1;

        $r2 = newarray (int)[8];

        $r2[0] = 1;

        $r2[1] = 2;

        $r2[2] = 4;

        $r2[3] = 8;

        $r2[4] = 16;

        $r2[5] = 32;

        $r2[6] = 64;

        $r2[7] = 128;

        <org.apache.commons.codec.binary.BinaryCodec: int[] BITS> = $r2;

        return;
    }

    public void <init>()
    {
        org.apache.commons.codec.binary.BinaryCodec r0;

        r0 := @this: org.apache.commons.codec.binary.BinaryCodec;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] fromAscii(byte[])
    {
        byte[] r0, r1, $r3;
        int[] r2;
        byte b0, $b8, $b11, $b12;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, i13, i14, i15;

        r0 := @parameter0: byte[];

        if r0 == null goto label7;

        $i1 = lengthof r0;

        if $i1 != 0 goto label1;

        goto label7;

     label1:
        $i2 = lengthof r0;

        $i3 = $i2 >> 3;

        r1 = newarray (byte)[$i3];

        i13 = 0;

        $i4 = lengthof r0;

        i14 = $i4 - 1;

     label2:
        $i5 = lengthof r1;

        if i13 >= $i5 goto label6;

        i15 = 0;

     label3:
        r2 = <org.apache.commons.codec.binary.BinaryCodec: int[] BITS>;

        $i6 = lengthof r2;

        if i15 >= $i6 goto label5;

        $i7 = i14 - i15;

        $b8 = r0[$i7];

        if $b8 != 49 goto label4;

        b0 = r1[i13];

        $i9 = r2[i15];

        $i10 = $i9 | b0;

        $b11 = (byte) $i10;

        $b12 = (byte) $b11;

        r1[i13] = $b12;

     label4:
        i15 = i15 + 1;

        goto label3;

     label5:
        i13 = i13 + 1;

        i14 = i14 + -8;

        goto label2;

     label6:
        return r1;

     label7:
        $r3 = <org.apache.commons.codec.binary.BinaryCodec: byte[] EMPTY_BYTE_ARRAY>;

        return $r3;
    }

    public static byte[] fromAscii(char[])
    {
        char[] r0;
        byte[] r1, $r3;
        int[] r2;
        byte b0, $b11, $b12;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, i13, i14, i15;
        char $c8;

        r0 := @parameter0: char[];

        if r0 == null goto label7;

        $i1 = lengthof r0;

        if $i1 != 0 goto label1;

        goto label7;

     label1:
        $i2 = lengthof r0;

        $i3 = $i2 >> 3;

        r1 = newarray (byte)[$i3];

        i13 = 0;

        $i4 = lengthof r0;

        i14 = $i4 - 1;

     label2:
        $i5 = lengthof r1;

        if i13 >= $i5 goto label6;

        i15 = 0;

     label3:
        r2 = <org.apache.commons.codec.binary.BinaryCodec: int[] BITS>;

        $i6 = lengthof r2;

        if i15 >= $i6 goto label5;

        $i7 = i14 - i15;

        $c8 = r0[$i7];

        if $c8 != 49 goto label4;

        b0 = r1[i13];

        $i9 = r2[i15];

        $i10 = $i9 | b0;

        $b11 = (byte) $i10;

        $b12 = (byte) $b11;

        r1[i13] = $b12;

     label4:
        i15 = i15 + 1;

        goto label3;

     label5:
        i13 = i13 + 1;

        i14 = i14 + -8;

        goto label2;

     label6:
        return r1;

     label7:
        $r3 = <org.apache.commons.codec.binary.BinaryCodec: byte[] EMPTY_BYTE_ARRAY>;

        return $r3;
    }

    public static byte[] toAsciiBytes(byte[])
    {
        byte[] r0, r1, $r3;
        int[] r2;
        byte b0, $b9, $b11;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i12, i13, i14, i15;

        r0 := @parameter0: byte[];

        if r0 == null goto label8;

        $i1 = lengthof r0;

        if $i1 != 0 goto label1;

        goto label8;

     label1:
        $i2 = lengthof r0;

        $i3 = $i2 << 3;

        r1 = newarray (byte)[$i3];

        i13 = 0;

        $i4 = lengthof r1;

        i14 = $i4 - 1;

     label2:
        $i5 = lengthof r0;

        if i13 >= $i5 goto label7;

        i15 = 0;

     label3:
        r2 = <org.apache.commons.codec.binary.BinaryCodec: int[] BITS>;

        $i6 = lengthof r2;

        if i15 >= $i6 goto label6;

        b0 = r0[i13];

        $i7 = r2[i15];

        $i8 = $i7 & b0;

        if $i8 != 0 goto label4;

        $i12 = i14 - i15;

        $b11 = (byte) 48;

        r1[$i12] = $b11;

        goto label5;

     label4:
        $i10 = i14 - i15;

        $b9 = (byte) 49;

        r1[$i10] = $b9;

     label5:
        i15 = i15 + 1;

        goto label3;

     label6:
        i13 = i13 + 1;

        i14 = i14 + -8;

        goto label2;

     label7:
        return r1;

     label8:
        $r3 = <org.apache.commons.codec.binary.BinaryCodec: byte[] EMPTY_BYTE_ARRAY>;

        return $r3;
    }

    public static char[] toAsciiChars(byte[])
    {
        byte[] r0;
        char[] r1, $r3;
        int[] r2;
        byte b0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i12, i13, i14, i15;
        char $c9, $c11;

        r0 := @parameter0: byte[];

        if r0 == null goto label8;

        $i1 = lengthof r0;

        if $i1 != 0 goto label1;

        goto label8;

     label1:
        $i2 = lengthof r0;

        $i3 = $i2 << 3;

        r1 = newarray (char)[$i3];

        i13 = 0;

        $i4 = lengthof r1;

        i14 = $i4 - 1;

     label2:
        $i5 = lengthof r0;

        if i13 >= $i5 goto label7;

        i15 = 0;

     label3:
        r2 = <org.apache.commons.codec.binary.BinaryCodec: int[] BITS>;

        $i6 = lengthof r2;

        if i15 >= $i6 goto label6;

        b0 = r0[i13];

        $i7 = r2[i15];

        $i8 = $i7 & b0;

        if $i8 != 0 goto label4;

        $i12 = i14 - i15;

        $c11 = (char) 48;

        r1[$i12] = $c11;

        goto label5;

     label4:
        $i10 = i14 - i15;

        $c9 = (char) 49;

        r1[$i10] = $c9;

     label5:
        i15 = i15 + 1;

        goto label3;

     label6:
        i13 = i13 + 1;

        i14 = i14 + -8;

        goto label2;

     label7:
        return r1;

     label8:
        $r3 = <org.apache.commons.codec.binary.BinaryCodec: char[] EMPTY_CHAR_ARRAY>;

        return $r3;
    }

    public static java.lang.String toAsciiString(byte[])
    {
        byte[] r0;
        java.lang.String $r1;
        char[] $r2;

        r0 := @parameter0: byte[];

        $r1 = new java.lang.String;

        $r2 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: char[] toAsciiChars(byte[])>(r0);

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r2);

        return $r1;
    }

    public java.lang.Object decode(java.lang.Object) throws org.apache.commons.codec.DecoderException
    {
        org.apache.commons.codec.binary.BinaryCodec r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;
        org.apache.commons.codec.DecoderException $r2;
        java.lang.String $r3;
        char[] $r4, $r6;
        byte[] $r5, $r7, $r8, $r9, $r10;

        r0 := @this: org.apache.commons.codec.binary.BinaryCodec;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        $r10 = <org.apache.commons.codec.binary.BinaryCodec: byte[] EMPTY_BYTE_ARRAY>;

        return $r10;

     label1:
        $z0 = r1 instanceof byte[];

        if $z0 == 0 goto label2;

        $r8 = (byte[]) r1;

        $r9 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(byte[])>($r8);

        return $r9;

     label2:
        $z1 = r1 instanceof char[];

        if $z1 == 0 goto label3;

        $r6 = (char[]) r1;

        $r7 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(char[])>($r6);

        return $r7;

     label3:
        $z2 = r1 instanceof java.lang.String;

        if $z2 == 0 goto label4;

        $r3 = (java.lang.String) r1;

        $r4 = virtualinvoke $r3.<java.lang.String: char[] toCharArray()>();

        $r5 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(char[])>($r4);

        return $r5;

     label4:
        $r2 = new org.apache.commons.codec.DecoderException;

        specialinvoke $r2.<org.apache.commons.codec.DecoderException: void <init>(java.lang.String)>("argument not a byte array");

        throw $r2;
    }

    public byte[] decode(byte[])
    {
        org.apache.commons.codec.binary.BinaryCodec r0;
        byte[] r1, $r2;

        r0 := @this: org.apache.commons.codec.binary.BinaryCodec;

        r1 := @parameter0: byte[];

        $r2 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(byte[])>(r1);

        return $r2;
    }

    public java.lang.Object encode(java.lang.Object) throws org.apache.commons.codec.EncoderException
    {
        org.apache.commons.codec.binary.BinaryCodec r0;
        java.lang.Object r1;
        boolean $z0;
        org.apache.commons.codec.EncoderException $r2;
        byte[] $r3;
        char[] $r4;

        r0 := @this: org.apache.commons.codec.binary.BinaryCodec;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof byte[];

        if $z0 == 0 goto label1;

        $r3 = (byte[]) r1;

        $r4 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: char[] toAsciiChars(byte[])>($r3);

        return $r4;

     label1:
        $r2 = new org.apache.commons.codec.EncoderException;

        specialinvoke $r2.<org.apache.commons.codec.EncoderException: void <init>(java.lang.String)>("argument not a byte array");

        throw $r2;
    }

    public byte[] encode(byte[])
    {
        org.apache.commons.codec.binary.BinaryCodec r0;
        byte[] r1, $r2;

        r0 := @this: org.apache.commons.codec.binary.BinaryCodec;

        r1 := @parameter0: byte[];

        $r2 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] toAsciiBytes(byte[])>(r1);

        return $r2;
    }

    public byte[] toByteArray(java.lang.String)
    {
        org.apache.commons.codec.binary.BinaryCodec r0;
        java.lang.String r1;
        char[] $r2;
        byte[] $r3, $r4;

        r0 := @this: org.apache.commons.codec.binary.BinaryCodec;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r4 = <org.apache.commons.codec.binary.BinaryCodec: byte[] EMPTY_BYTE_ARRAY>;

        return $r4;

     label1:
        $r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

        $r3 = staticinvoke <org.apache.commons.codec.binary.BinaryCodec: byte[] fromAscii(char[])>($r2);

        return $r3;
    }
}
