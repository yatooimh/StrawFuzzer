class org.apache.commons.logging.LogFactory$4 extends java.lang.Object implements java.security.PrivilegedAction
{
    final java.lang.ClassLoader val$loader;
    final java.lang.String val$name;

    void <init>(java.lang.ClassLoader, java.lang.String)
    {
        org.apache.commons.logging.LogFactory$4 r0;
        java.lang.ClassLoader r1;
        java.lang.String r2;

        r0 := @this: org.apache.commons.logging.LogFactory$4;

        r1 := @parameter0: java.lang.ClassLoader;

        r2 := @parameter1: java.lang.String;

        r0.<org.apache.commons.logging.LogFactory$4: java.lang.ClassLoader val$loader> = r1;

        r0.<org.apache.commons.logging.LogFactory$4: java.lang.String val$name> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object run()
    {
        org.apache.commons.logging.LogFactory$4 r0;
        java.lang.ClassLoader $r2, $r5;
        java.lang.String $r3, $r4, $r11, $r14, $r16;
        java.util.Enumeration $r6, r17;
        java.lang.NoSuchMethodError $r7;
        java.lang.Throwable $r8;
        boolean $z0;
        java.lang.StringBuilder r20;
        java.io.IOException r21;

        r0 := @this: org.apache.commons.logging.LogFactory$4;

     label1:
        $r2 = r0.<org.apache.commons.logging.LogFactory$4: java.lang.ClassLoader val$loader>;

        if $r2 == null goto label2;

        $r5 = r0.<org.apache.commons.logging.LogFactory$4: java.lang.ClassLoader val$loader>;

        $r4 = r0.<org.apache.commons.logging.LogFactory$4: java.lang.String val$name>;

        $r6 = virtualinvoke $r5.<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>($r4);

        return $r6;

     label2:
        $r3 = r0.<org.apache.commons.logging.LogFactory$4: java.lang.String val$name>;

        r17 = staticinvoke <java.lang.ClassLoader: java.util.Enumeration getSystemResources(java.lang.String)>($r3);

     label3:
        return r17;

     label4:
        $r7 := @caughtexception;

        return null;

     label5:
        $r8 := @caughtexception;

        $z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>();

        if $z0 == 0 goto label6;

        r20 = new java.lang.StringBuilder;

        specialinvoke r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception while trying to find configuration file ");

        $r11 = r0.<org.apache.commons.logging.LogFactory$4: java.lang.String val$name>;

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        r21 = (java.io.IOException) $r8;

        $r14 = virtualinvoke r21.<java.io.IOException: java.lang.String getMessage()>();

        virtualinvoke r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.commons.logging.LogFactory: void access$000(java.lang.String)>($r16);

     label6:
        return null;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.lang.NoSuchMethodError from label1 to label2 with label4;
        catch java.io.IOException from label2 to label3 with label5;
        catch java.lang.NoSuchMethodError from label2 to label3 with label4;
    }
}
