class org.apache.commons.logging.LogFactory$5 extends java.lang.Object implements java.security.PrivilegedAction
{
    final java.net.URL val$url;

    void <init>(java.net.URL)
    {
        org.apache.commons.logging.LogFactory$5 r0;
        java.net.URL r1;

        r0 := @this: org.apache.commons.logging.LogFactory$5;

        r1 := @parameter0: java.net.URL;

        r0.<org.apache.commons.logging.LogFactory$5: java.net.URL val$url> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object run()
    {
        org.apache.commons.logging.LogFactory$5 r0;
        java.io.InputStream r1;
        java.net.URL $r2, $r6;
        java.lang.Throwable $r3;
        boolean $z0;
        java.lang.StringBuilder $r4;
        java.lang.String $r8;
        java.util.Properties r9;

        r0 := @this: org.apache.commons.logging.LogFactory$5;

     label1:
        $r2 = r0.<org.apache.commons.logging.LogFactory$5: java.net.URL val$url>;

        r1 = virtualinvoke $r2.<java.net.URL: java.io.InputStream openStream()>();

     label2:
        if r1 == null goto label5;

     label3:
        r9 = new java.util.Properties;

        specialinvoke r9.<java.util.Properties: void <init>()>();

        virtualinvoke r9.<java.util.Properties: void load(java.io.InputStream)>(r1);

        virtualinvoke r1.<java.io.InputStream: void close()>();

     label4:
        return r9;

     label5:
        goto label7;

     label6:
        $r3 := @caughtexception;

        $z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>();

        if $z0 == 0 goto label7;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to read URL ");

        $r6 = r0.<org.apache.commons.logging.LogFactory$5: java.net.URL val$url>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.commons.logging.LogFactory: void access$000(java.lang.String)>($r8);

     label7:
        return null;

        catch java.io.IOException from label1 to label2 with label6;
        catch java.io.IOException from label3 to label4 with label6;
    }
}
