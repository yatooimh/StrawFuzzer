public class org.apache.http.auth.NTUserPrincipal extends java.lang.Object implements java.security.Principal
{
    private final java.lang.String domain;
    private final java.lang.String ntname;
    private final java.lang.String username;

    public void <init>(java.lang.String, java.lang.String)
    {
        org.apache.http.auth.NTUserPrincipal r0;
        java.lang.String r1, $r3, $r5, $r8, $r10, $r12, r13, r14;
        java.lang.IllegalArgumentException $r2;
        int $i0;
        java.lang.StringBuilder $r4;
        java.util.Locale $r11;

        r0 := @this: org.apache.http.auth.NTUserPrincipal;

        r13 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label5;

        r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String username> = r1;

        if r13 == null goto label1;

        $r11 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r12 = virtualinvoke r13.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r11);

        r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String domain> = $r12;

        goto label2;

     label1:
        r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String domain> = null;

     label2:
        r14 = r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String domain>;

        if r14 == null goto label3;

        $i0 = virtualinvoke r14.<java.lang.String: int length()>();

        if $i0 <= 0 goto label3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String domain>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r8 = r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String username>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String ntname> = $r10;

        goto label4;

     label3:
        $r3 = r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String username>;

        r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String ntname> = $r3;

     label4:
        return;

     label5:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("User name may not be null");

        throw $r2;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.http.auth.NTUserPrincipal r0, r6;
        boolean $z0, $z1, $z2;
        java.lang.String $r1, $r2, $r3, $r4;
        java.lang.Object r5;

        r0 := @this: org.apache.http.auth.NTUserPrincipal;

        r5 := @parameter0: java.lang.Object;

        if r5 != null goto label1;

        return 0;

     label1:
        if r0 != r5 goto label2;

        return 1;

     label2:
        $z0 = r5 instanceof org.apache.http.auth.NTUserPrincipal;

        if $z0 == 0 goto label3;

        r6 = (org.apache.http.auth.NTUserPrincipal) r5;

        $r2 = r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String username>;

        $r1 = r6.<org.apache.http.auth.NTUserPrincipal: java.lang.String username>;

        $z1 = staticinvoke <org.apache.http.util.LangUtils: boolean equals(java.lang.Object,java.lang.Object)>($r2, $r1);

        if $z1 == 0 goto label3;

        $r4 = r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String domain>;

        $r3 = r6.<org.apache.http.auth.NTUserPrincipal: java.lang.String domain>;

        $z2 = staticinvoke <org.apache.http.util.LangUtils: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public java.lang.String getDomain()
    {
        org.apache.http.auth.NTUserPrincipal r0;
        java.lang.String $r1;

        r0 := @this: org.apache.http.auth.NTUserPrincipal;

        $r1 = r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String domain>;

        return $r1;
    }

    public java.lang.String getName()
    {
        org.apache.http.auth.NTUserPrincipal r0;
        java.lang.String $r1;

        r0 := @this: org.apache.http.auth.NTUserPrincipal;

        $r1 = r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String ntname>;

        return $r1;
    }

    public java.lang.String getUsername()
    {
        org.apache.http.auth.NTUserPrincipal r0;
        java.lang.String $r1;

        r0 := @this: org.apache.http.auth.NTUserPrincipal;

        $r1 = r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String username>;

        return $r1;
    }

    public int hashCode()
    {
        org.apache.http.auth.NTUserPrincipal r0;
        java.lang.String $r1, $r2;
        int $i0, $i1;

        r0 := @this: org.apache.http.auth.NTUserPrincipal;

        $r1 = r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String username>;

        $i0 = staticinvoke <org.apache.http.util.LangUtils: int hashCode(int,java.lang.Object)>(17, $r1);

        $r2 = r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String domain>;

        $i1 = staticinvoke <org.apache.http.util.LangUtils: int hashCode(int,java.lang.Object)>($i0, $r2);

        return $i1;
    }

    public java.lang.String toString()
    {
        org.apache.http.auth.NTUserPrincipal r0;
        java.lang.String $r1;

        r0 := @this: org.apache.http.auth.NTUserPrincipal;

        $r1 = r0.<org.apache.http.auth.NTUserPrincipal: java.lang.String ntname>;

        return $r1;
    }
}
