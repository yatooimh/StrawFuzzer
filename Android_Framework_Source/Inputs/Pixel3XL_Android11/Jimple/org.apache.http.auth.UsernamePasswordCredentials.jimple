public class org.apache.http.auth.UsernamePasswordCredentials extends java.lang.Object implements org.apache.http.auth.Credentials
{
    private final java.lang.String password;
    private final org.apache.http.auth.BasicUserPrincipal principal;

    public void <init>(java.lang.String)
    {
        org.apache.http.auth.UsernamePasswordCredentials r0;
        java.lang.String r1, $r5, $r6;
        int i0, $i1;
        java.lang.IllegalArgumentException $r2;
        org.apache.http.auth.BasicUserPrincipal $r3, $r4;

        r0 := @this: org.apache.http.auth.UsernamePasswordCredentials;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label3;

        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(58);

        if i0 < 0 goto label1;

        $r4 = new org.apache.http.auth.BasicUserPrincipal;

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        specialinvoke $r4.<org.apache.http.auth.BasicUserPrincipal: void <init>(java.lang.String)>($r5);

        r0.<org.apache.http.auth.UsernamePasswordCredentials: org.apache.http.auth.BasicUserPrincipal principal> = $r4;

        $i1 = i0 + 1;

        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);

        r0.<org.apache.http.auth.UsernamePasswordCredentials: java.lang.String password> = $r6;

        goto label2;

     label1:
        $r3 = new org.apache.http.auth.BasicUserPrincipal;

        specialinvoke $r3.<org.apache.http.auth.BasicUserPrincipal: void <init>(java.lang.String)>(r1);

        r0.<org.apache.http.auth.UsernamePasswordCredentials: org.apache.http.auth.BasicUserPrincipal principal> = $r3;

        r0.<org.apache.http.auth.UsernamePasswordCredentials: java.lang.String password> = null;

     label2:
        return;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Username:password string may not be null");

        throw $r2;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        org.apache.http.auth.UsernamePasswordCredentials r0;
        java.lang.String r1, r2;
        java.lang.IllegalArgumentException $r3;
        org.apache.http.auth.BasicUserPrincipal $r4;

        r0 := @this: org.apache.http.auth.UsernamePasswordCredentials;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        $r4 = new org.apache.http.auth.BasicUserPrincipal;

        specialinvoke $r4.<org.apache.http.auth.BasicUserPrincipal: void <init>(java.lang.String)>(r1);

        r0.<org.apache.http.auth.UsernamePasswordCredentials: org.apache.http.auth.BasicUserPrincipal principal> = $r4;

        r0.<org.apache.http.auth.UsernamePasswordCredentials: java.lang.String password> = r2;

        return;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Username may not be null");

        throw $r3;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.http.auth.UsernamePasswordCredentials r0, r4;
        boolean $z0, $z1;
        org.apache.http.auth.BasicUserPrincipal $r1, $r2;
        java.lang.Object r3;

        r0 := @this: org.apache.http.auth.UsernamePasswordCredentials;

        r3 := @parameter0: java.lang.Object;

        if r3 != null goto label1;

        return 0;

     label1:
        if r0 != r3 goto label2;

        return 1;

     label2:
        $z0 = r3 instanceof org.apache.http.auth.UsernamePasswordCredentials;

        if $z0 == 0 goto label3;

        r4 = (org.apache.http.auth.UsernamePasswordCredentials) r3;

        $r2 = r0.<org.apache.http.auth.UsernamePasswordCredentials: org.apache.http.auth.BasicUserPrincipal principal>;

        $r1 = r4.<org.apache.http.auth.UsernamePasswordCredentials: org.apache.http.auth.BasicUserPrincipal principal>;

        $z1 = staticinvoke <org.apache.http.util.LangUtils: boolean equals(java.lang.Object,java.lang.Object)>($r2, $r1);

        if $z1 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public java.lang.String getPassword()
    {
        org.apache.http.auth.UsernamePasswordCredentials r0;
        java.lang.String $r1;

        r0 := @this: org.apache.http.auth.UsernamePasswordCredentials;

        $r1 = r0.<org.apache.http.auth.UsernamePasswordCredentials: java.lang.String password>;

        return $r1;
    }

    public java.lang.String getUserName()
    {
        org.apache.http.auth.UsernamePasswordCredentials r0;
        org.apache.http.auth.BasicUserPrincipal $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.http.auth.UsernamePasswordCredentials;

        $r1 = r0.<org.apache.http.auth.UsernamePasswordCredentials: org.apache.http.auth.BasicUserPrincipal principal>;

        $r2 = virtualinvoke $r1.<org.apache.http.auth.BasicUserPrincipal: java.lang.String getName()>();

        return $r2;
    }

    public java.security.Principal getUserPrincipal()
    {
        org.apache.http.auth.UsernamePasswordCredentials r0;
        org.apache.http.auth.BasicUserPrincipal $r1;

        r0 := @this: org.apache.http.auth.UsernamePasswordCredentials;

        $r1 = r0.<org.apache.http.auth.UsernamePasswordCredentials: org.apache.http.auth.BasicUserPrincipal principal>;

        return $r1;
    }

    public int hashCode()
    {
        org.apache.http.auth.UsernamePasswordCredentials r0;
        org.apache.http.auth.BasicUserPrincipal $r1;
        int $i0;

        r0 := @this: org.apache.http.auth.UsernamePasswordCredentials;

        $r1 = r0.<org.apache.http.auth.UsernamePasswordCredentials: org.apache.http.auth.BasicUserPrincipal principal>;

        $i0 = virtualinvoke $r1.<org.apache.http.auth.BasicUserPrincipal: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        org.apache.http.auth.UsernamePasswordCredentials r0;
        org.apache.http.auth.BasicUserPrincipal $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.http.auth.UsernamePasswordCredentials;

        $r1 = r0.<org.apache.http.auth.UsernamePasswordCredentials: org.apache.http.auth.BasicUserPrincipal principal>;

        $r2 = virtualinvoke $r1.<org.apache.http.auth.BasicUserPrincipal: java.lang.String toString()>();

        return $r2;
    }
}
