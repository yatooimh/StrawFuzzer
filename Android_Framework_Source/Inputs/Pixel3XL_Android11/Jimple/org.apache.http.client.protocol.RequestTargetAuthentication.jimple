public class org.apache.http.client.protocol.RequestTargetAuthentication extends java.lang.Object implements org.apache.http.HttpRequestInterceptor
{
    private final org.apache.commons.logging.Log log;

    public void <init>()
    {
        org.apache.http.client.protocol.RequestTargetAuthentication r0;
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;

        r0 := @this: org.apache.http.client.protocol.RequestTargetAuthentication;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        r0.<org.apache.http.client.protocol.RequestTargetAuthentication: org.apache.commons.logging.Log log> = $r2;

        return;
    }

    public void process(org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.client.protocol.RequestTargetAuthentication r0;
        org.apache.http.auth.Credentials r1;
        java.lang.IllegalArgumentException $r2, $r3;
        boolean $z0, $z1, $z2;
        java.lang.Object $r4;
        org.apache.http.auth.AuthScope $r5;
        org.apache.http.Header $r6;
        org.apache.commons.logging.Log $r7, $r9, r20;
        org.apache.http.auth.AuthenticationException $r8;
        java.lang.StringBuilder $r10;
        java.lang.String $r12, $r14;
        org.apache.http.HttpRequest r15;
        org.apache.http.protocol.HttpContext r16;
        org.apache.http.auth.AuthState r17;
        org.apache.http.auth.AuthScheme r18;

        r0 := @this: org.apache.http.client.protocol.RequestTargetAuthentication;

        r15 := @parameter0: org.apache.http.HttpRequest;

        r16 := @parameter1: org.apache.http.protocol.HttpContext;

        if r15 == null goto label10;

        if r16 == null goto label09;

        $z0 = interfaceinvoke r15.<org.apache.http.HttpRequest: boolean containsHeader(java.lang.String)>("Authorization");

        if $z0 == 0 goto label01;

        return;

     label01:
        $r4 = interfaceinvoke r16.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.auth.target-scope");

        r17 = (org.apache.http.auth.AuthState) $r4;

        if r17 != null goto label02;

        return;

     label02:
        r18 = virtualinvoke r17.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme getAuthScheme()>();

        if r18 != null goto label03;

        return;

     label03:
        r1 = virtualinvoke r17.<org.apache.http.auth.AuthState: org.apache.http.auth.Credentials getCredentials()>();

        if r1 != null goto label04;

        $r7 = r0.<org.apache.http.client.protocol.RequestTargetAuthentication: org.apache.commons.logging.Log log>;

        interfaceinvoke $r7.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("User credentials not available");

        return;

     label04:
        $r5 = virtualinvoke r17.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScope getAuthScope()>();

        if $r5 != null goto label05;

        $z1 = interfaceinvoke r18.<org.apache.http.auth.AuthScheme: boolean isConnectionBased()>();

        if $z1 != 0 goto label08;

     label05:
        $r6 = interfaceinvoke r18.<org.apache.http.auth.AuthScheme: org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>(r1, r15);

        interfaceinvoke r15.<org.apache.http.HttpRequest: void addHeader(org.apache.http.Header)>($r6);

     label06:
        goto label08;

     label07:
        $r8 := @caughtexception;

        $r9 = r0.<org.apache.http.client.protocol.RequestTargetAuthentication: org.apache.commons.logging.Log log>;

        $z2 = interfaceinvoke $r9.<org.apache.commons.logging.Log: boolean isErrorEnabled()>();

        if $z2 == 0 goto label08;

        r20 = r0.<org.apache.http.client.protocol.RequestTargetAuthentication: org.apache.commons.logging.Log log>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Authentication error: ");

        $r12 = virtualinvoke $r8.<org.apache.http.auth.AuthenticationException: java.lang.String getMessage()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r20.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r14);

     label08:
        return;

     label09:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP context may not be null");

        throw $r3;

     label10:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP request may not be null");

        throw $r2;

        catch org.apache.http.auth.AuthenticationException from label05 to label06 with label07;
    }
}
