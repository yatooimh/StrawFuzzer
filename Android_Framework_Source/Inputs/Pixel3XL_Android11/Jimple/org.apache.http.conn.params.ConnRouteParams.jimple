public class org.apache.http.conn.params.ConnRouteParams extends java.lang.Object implements org.apache.http.conn.params.ConnRoutePNames
{
    public static final org.apache.http.HttpHost NO_HOST;
    public static final org.apache.http.conn.routing.HttpRoute NO_ROUTE;

    static void <clinit>()
    {
        org.apache.http.HttpHost $r1;
        org.apache.http.conn.routing.HttpRoute $r2;

        $r1 = new org.apache.http.HttpHost;

        specialinvoke $r1.<org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>("127.0.0.255", 0, "no-host");

        <org.apache.http.conn.params.ConnRouteParams: org.apache.http.HttpHost NO_HOST> = $r1;

        $r2 = new org.apache.http.conn.routing.HttpRoute;

        specialinvoke $r2.<org.apache.http.conn.routing.HttpRoute: void <init>(org.apache.http.HttpHost)>($r1);

        <org.apache.http.conn.params.ConnRouteParams: org.apache.http.conn.routing.HttpRoute NO_ROUTE> = $r2;

        return;
    }

    private void <init>()
    {
        org.apache.http.conn.params.ConnRouteParams r0;

        r0 := @this: org.apache.http.conn.params.ConnRouteParams;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.http.HttpHost getDefaultProxy(org.apache.http.params.HttpParams)
    {
        org.apache.http.HttpHost r0, $r3, r5;
        java.lang.IllegalArgumentException $r1;
        java.lang.Object $r2;
        boolean $z0;
        org.apache.http.params.HttpParams r4;

        r4 := @parameter0: org.apache.http.params.HttpParams;

        if r4 == null goto label2;

        $r2 = interfaceinvoke r4.<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.route.default-proxy");

        r0 = (org.apache.http.HttpHost) $r2;

        r5 = r0;

        if r0 == null goto label1;

        r5 = r0;

        $r3 = <org.apache.http.conn.params.ConnRouteParams: org.apache.http.HttpHost NO_HOST>;

        $z0 = virtualinvoke $r3.<org.apache.http.HttpHost: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        r5 = null;

     label1:
        return r5;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameters must not be null.");

        throw $r1;
    }

    public static org.apache.http.conn.routing.HttpRoute getForcedRoute(org.apache.http.params.HttpParams)
    {
        org.apache.http.conn.routing.HttpRoute r0, $r3, r5;
        java.lang.IllegalArgumentException $r1;
        java.lang.Object $r2;
        boolean $z0;
        org.apache.http.params.HttpParams r4;

        r4 := @parameter0: org.apache.http.params.HttpParams;

        if r4 == null goto label2;

        $r2 = interfaceinvoke r4.<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.route.forced-route");

        r0 = (org.apache.http.conn.routing.HttpRoute) $r2;

        r5 = r0;

        if r0 == null goto label1;

        r5 = r0;

        $r3 = <org.apache.http.conn.params.ConnRouteParams: org.apache.http.conn.routing.HttpRoute NO_ROUTE>;

        $z0 = virtualinvoke $r3.<org.apache.http.conn.routing.HttpRoute: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        r5 = null;

     label1:
        return r5;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameters must not be null.");

        throw $r1;
    }

    public static java.net.InetAddress getLocalAddress(org.apache.http.params.HttpParams)
    {
        org.apache.http.params.HttpParams r0;
        java.lang.IllegalArgumentException $r1;
        java.lang.Object $r2;
        java.net.InetAddress $r3;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        if r0 == null goto label1;

        $r2 = interfaceinvoke r0.<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.route.local-address");

        $r3 = (java.net.InetAddress) $r2;

        return $r3;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameters must not be null.");

        throw $r1;
    }

    public static void setDefaultProxy(org.apache.http.params.HttpParams, org.apache.http.HttpHost)
    {
        org.apache.http.params.HttpParams r0;
        org.apache.http.HttpHost r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        r1 := @parameter1: org.apache.http.HttpHost;

        if r0 == null goto label1;

        interfaceinvoke r0.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.route.default-proxy", r1);

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameters must not be null.");

        throw $r2;
    }

    public static void setForcedRoute(org.apache.http.params.HttpParams, org.apache.http.conn.routing.HttpRoute)
    {
        org.apache.http.params.HttpParams r0;
        org.apache.http.conn.routing.HttpRoute r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        r1 := @parameter1: org.apache.http.conn.routing.HttpRoute;

        if r0 == null goto label1;

        interfaceinvoke r0.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.route.forced-route", r1);

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameters must not be null.");

        throw $r2;
    }

    public static void setLocalAddress(org.apache.http.params.HttpParams, java.net.InetAddress)
    {
        org.apache.http.params.HttpParams r0;
        java.net.InetAddress r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        r1 := @parameter1: java.net.InetAddress;

        if r0 == null goto label1;

        interfaceinvoke r0.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.route.local-address", r1);

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameters must not be null.");

        throw $r2;
    }
}
