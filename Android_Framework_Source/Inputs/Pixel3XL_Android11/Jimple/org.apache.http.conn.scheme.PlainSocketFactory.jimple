public final class org.apache.http.conn.scheme.PlainSocketFactory extends java.lang.Object implements org.apache.http.conn.scheme.SocketFactory
{
    private static final org.apache.http.conn.scheme.PlainSocketFactory DEFAULT_FACTORY;
    private final org.apache.http.conn.scheme.HostNameResolver nameResolver;

    static void <clinit>()
    {
        org.apache.http.conn.scheme.PlainSocketFactory $r0;

        $r0 = new org.apache.http.conn.scheme.PlainSocketFactory;

        specialinvoke $r0.<org.apache.http.conn.scheme.PlainSocketFactory: void <init>()>();

        <org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory DEFAULT_FACTORY> = $r0;

        return;
    }

    public void <init>()
    {
        org.apache.http.conn.scheme.PlainSocketFactory r0;

        r0 := @this: org.apache.http.conn.scheme.PlainSocketFactory;

        specialinvoke r0.<org.apache.http.conn.scheme.PlainSocketFactory: void <init>(org.apache.http.conn.scheme.HostNameResolver)>(null);

        return;
    }

    public void <init>(org.apache.http.conn.scheme.HostNameResolver)
    {
        org.apache.http.conn.scheme.PlainSocketFactory r0;
        org.apache.http.conn.scheme.HostNameResolver r1;

        r0 := @this: org.apache.http.conn.scheme.PlainSocketFactory;

        r1 := @parameter0: org.apache.http.conn.scheme.HostNameResolver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.HostNameResolver nameResolver> = r1;

        return;
    }

    public static org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()
    {
        org.apache.http.conn.scheme.PlainSocketFactory $r0;

        $r0 = <org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory DEFAULT_FACTORY>;

        return $r0;
    }

    public java.net.Socket connectSocket(java.net.Socket, java.lang.String, int, java.net.InetAddress, int, org.apache.http.params.HttpParams) throws java.io.IOException
    {
        org.apache.http.conn.scheme.PlainSocketFactory r0;
        int i0, i1, i2, i3;
        java.net.InetAddress r1, $r9;
        org.apache.http.params.HttpParams r2;
        java.lang.IllegalArgumentException $r3, $r4;
        java.net.InetSocketAddress $r5, $r6, $r7, r21;
        org.apache.http.conn.scheme.HostNameResolver $r8, $r20;
        java.lang.Throwable $r10;
        java.lang.StringBuilder $r11;
        org.apache.http.conn.ConnectTimeoutException $r15;
        java.lang.String $r16, r18;
        java.net.Socket r17, r19;

        r0 := @this: org.apache.http.conn.scheme.PlainSocketFactory;

        r17 := @parameter0: java.net.Socket;

        r18 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r1 := @parameter3: java.net.InetAddress;

        i1 := @parameter4: int;

        r2 := @parameter5: org.apache.http.params.HttpParams;

        if r18 == null goto label10;

        if r2 == null goto label09;

        r19 = r17;

        if r17 != null goto label01;

        r19 = virtualinvoke r0.<org.apache.http.conn.scheme.PlainSocketFactory: java.net.Socket createSocket()>();

     label01:
        if r1 != null goto label02;

        if i1 <= 0 goto label04;

     label02:
        i2 = i1;

        if i1 >= 0 goto label03;

        i2 = 0;

     label03:
        $r5 = new java.net.InetSocketAddress;

        specialinvoke $r5.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>(r1, i2);

        virtualinvoke r19.<java.net.Socket: void bind(java.net.SocketAddress)>($r5);

     label04:
        i3 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getConnectionTimeout(org.apache.http.params.HttpParams)>(r2);

        $r20 = r0.<org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.HostNameResolver nameResolver>;

        if $r20 == null goto label05;

        $r7 = new java.net.InetSocketAddress;

        $r8 = r0.<org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.HostNameResolver nameResolver>;

        $r9 = interfaceinvoke $r8.<org.apache.http.conn.scheme.HostNameResolver: java.net.InetAddress resolve(java.lang.String)>(r18);

        specialinvoke $r7.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r9, i0);

        r21 = $r7;

        goto label06;

     label05:
        $r6 = new java.net.InetSocketAddress;

        specialinvoke $r6.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>(r18, i0);

        r21 = $r6;

     label06:
        virtualinvoke r19.<java.net.Socket: void connect(java.net.SocketAddress,int)>(r21, i3);

     label07:
        return r19;

     label08:
        $r10 := @caughtexception;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Connect to ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r21);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" timed out");

        $r15 = new org.apache.http.conn.ConnectTimeoutException;

        $r16 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<org.apache.http.conn.ConnectTimeoutException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label09:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameters may not be null.");

        throw $r4;

     label10:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Target host may not be null.");

        throw $r3;

        catch java.net.SocketTimeoutException from label06 to label07 with label08;
    }

    public java.net.Socket createSocket()
    {
        org.apache.http.conn.scheme.PlainSocketFactory r0;
        java.net.Socket $r1;

        r0 := @this: org.apache.http.conn.scheme.PlainSocketFactory;

        $r1 = new java.net.Socket;

        specialinvoke $r1.<java.net.Socket: void <init>()>();

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.http.conn.scheme.PlainSocketFactory r0;
        java.lang.Object r1;
        boolean z0;

        r0 := @this: org.apache.http.conn.scheme.PlainSocketFactory;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    public int hashCode()
    {
        org.apache.http.conn.scheme.PlainSocketFactory r0;
        java.lang.Class $r1;
        int $i0;

        r0 := @this: org.apache.http.conn.scheme.PlainSocketFactory;

        $r1 = class "Lorg/apache/http/conn/scheme/PlainSocketFactory;";

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public final boolean isSecure(java.net.Socket) throws java.lang.IllegalArgumentException
    {
        org.apache.http.conn.scheme.PlainSocketFactory r0;
        java.net.Socket r1;
        java.lang.IllegalArgumentException $r2, $r4, $r5;
        java.lang.Class $r3;
        boolean $z0;

        r0 := @this: org.apache.http.conn.scheme.PlainSocketFactory;

        r1 := @parameter0: java.net.Socket;

        if r1 == null goto label3;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 != class "Ljava/net/Socket;" goto label2;

        $z0 = virtualinvoke r1.<java.net.Socket: boolean isClosed()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Socket is closed.");

        throw $r5;

     label2:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Socket not created by this factory.");

        throw $r4;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Socket may not be null.");

        throw $r2;
    }
}
