public abstract class org.apache.http.impl.auth.AuthSchemeBase extends java.lang.Object implements org.apache.http.auth.AuthScheme
{
    private boolean proxy;

    public void <init>()
    {
        org.apache.http.impl.auth.AuthSchemeBase r0;

        r0 := @this: org.apache.http.impl.auth.AuthSchemeBase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean isProxy()
    {
        org.apache.http.impl.auth.AuthSchemeBase r0;
        boolean $z0;

        r0 := @this: org.apache.http.impl.auth.AuthSchemeBase;

        $z0 = r0.<org.apache.http.impl.auth.AuthSchemeBase: boolean proxy>;

        return $z0;
    }

    protected abstract void parseChallenge(org.apache.http.util.CharArrayBuffer, int, int) throws org.apache.http.auth.MalformedChallengeException;

    public void processChallenge(org.apache.http.Header) throws org.apache.http.auth.MalformedChallengeException
    {
        org.apache.http.impl.auth.AuthSchemeBase r0;
        java.lang.IllegalArgumentException $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r2, $r10;
        org.apache.http.auth.MalformedChallengeException $r5, $r7, $r13;
        java.lang.String $r6, $r9, $r14, r18, r21, r22;
        org.apache.http.util.CharArrayBuffer $r8, r19, r20;
        int $i0, $i1, i4, $i5, i6, $i7;
        char $c2, $c3;
        org.apache.http.FormattedHeader $r15, $r16;
        org.apache.http.Header r17;

        r0 := @this: org.apache.http.impl.auth.AuthSchemeBase;

        r17 := @parameter0: org.apache.http.Header;

        if r17 == null goto label11;

        r18 = interfaceinvoke r17.<org.apache.http.Header: java.lang.String getName()>();

        $z0 = virtualinvoke r18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("WWW-Authenticate");

        if $z0 == 0 goto label01;

        r0.<org.apache.http.impl.auth.AuthSchemeBase: boolean proxy> = 0;

        goto label02;

     label01:
        $z1 = virtualinvoke r18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Proxy-Authenticate");

        if $z1 == 0 goto label10;

        r0.<org.apache.http.impl.auth.AuthSchemeBase: boolean proxy> = 1;

     label02:
        $z2 = r17 instanceof org.apache.http.FormattedHeader;

        if $z2 == 0 goto label03;

        $r15 = (org.apache.http.FormattedHeader) r17;

        r19 = interfaceinvoke $r15.<org.apache.http.FormattedHeader: org.apache.http.util.CharArrayBuffer getBuffer()>();

        $r16 = (org.apache.http.FormattedHeader) r17;

        i4 = interfaceinvoke $r16.<org.apache.http.FormattedHeader: int getValuePos()>();

        r20 = r19;

        goto label04;

     label03:
        r21 = interfaceinvoke r17.<org.apache.http.Header: java.lang.String getValue()>();

        if r21 == null goto label09;

        $r8 = new org.apache.http.util.CharArrayBuffer;

        $i0 = virtualinvoke r21.<java.lang.String: int length()>();

        specialinvoke $r8.<org.apache.http.util.CharArrayBuffer: void <init>(int)>($i0);

        r20 = $r8;

        virtualinvoke $r8.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>(r21);

        i4 = 0;

     label04:
        $i5 = virtualinvoke r20.<org.apache.http.util.CharArrayBuffer: int length()>();

        if i4 >= $i5 goto label05;

        $c3 = virtualinvoke r20.<org.apache.http.util.CharArrayBuffer: char charAt(int)>(i4);

        $z5 = staticinvoke <org.apache.http.protocol.HTTP: boolean isWhitespace(char)>($c3);

        if $z5 == 0 goto label05;

        i4 = i4 + 1;

        goto label04;

     label05:
        i6 = i4;

     label06:
        $i7 = virtualinvoke r20.<org.apache.http.util.CharArrayBuffer: int length()>();

        if i6 >= $i7 goto label07;

        $c2 = virtualinvoke r20.<org.apache.http.util.CharArrayBuffer: char charAt(int)>(i6);

        $z4 = staticinvoke <org.apache.http.protocol.HTTP: boolean isWhitespace(char)>($c2);

        if $z4 != 0 goto label07;

        i6 = i6 + 1;

        goto label06;

     label07:
        r22 = virtualinvoke r20.<org.apache.http.util.CharArrayBuffer: java.lang.String substring(int,int)>(i4, i6);

        $r9 = virtualinvoke r0.<org.apache.http.impl.auth.AuthSchemeBase: java.lang.String getSchemeName()>();

        $z3 = virtualinvoke r22.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r9);

        if $z3 == 0 goto label08;

        $i1 = virtualinvoke r20.<org.apache.http.util.CharArrayBuffer: int length()>();

        virtualinvoke r0.<org.apache.http.impl.auth.AuthSchemeBase: void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int)>(r20, i6, $i1);

        return;

     label08:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid scheme identifier: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        $r13 = new org.apache.http.auth.MalformedChallengeException;

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<org.apache.http.auth.MalformedChallengeException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label09:
        $r7 = new org.apache.http.auth.MalformedChallengeException;

        specialinvoke $r7.<org.apache.http.auth.MalformedChallengeException: void <init>(java.lang.String)>("Header value is null");

        throw $r7;

     label10:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected header name: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r5 = new org.apache.http.auth.MalformedChallengeException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.apache.http.auth.MalformedChallengeException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label11:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Header may not be null");

        throw $r1;
    }
}
