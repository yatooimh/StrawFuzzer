public class org.apache.http.impl.auth.DigestScheme extends org.apache.http.impl.auth.RFC2617Scheme
{
    private static final char[] HEXADECIMAL;
    private static final java.lang.String NC;
    private static final int QOP_AUTH;
    private static final int QOP_AUTH_INT;
    private static final int QOP_MISSING;
    private java.lang.String cnonce;
    private boolean complete;
    private int qopVariant;

    static void <clinit>()
    {
        char[] $r0;

        <org.apache.http.impl.auth.DigestScheme: int QOP_MISSING> = 0;

        <org.apache.http.impl.auth.DigestScheme: int QOP_AUTH_INT> = 1;

        <org.apache.http.impl.auth.DigestScheme: int QOP_AUTH> = 2;

        <org.apache.http.impl.auth.DigestScheme: java.lang.String NC> = "00000001";

        $r0 = newarray (char)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 97;

        $r0[11] = 98;

        $r0[12] = 99;

        $r0[13] = 100;

        $r0[14] = 101;

        $r0[15] = 102;

        <org.apache.http.impl.auth.DigestScheme: char[] HEXADECIMAL> = $r0;

        return;
    }

    public void <init>()
    {
        org.apache.http.impl.auth.DigestScheme r0;

        r0 := @this: org.apache.http.impl.auth.DigestScheme;

        specialinvoke r0.<org.apache.http.impl.auth.RFC2617Scheme: void <init>()>();

        r0.<org.apache.http.impl.auth.DigestScheme: int qopVariant> = 0;

        r0.<org.apache.http.impl.auth.DigestScheme: boolean complete> = 0;

        return;
    }

    public static java.lang.String createCnonce()
    {
        java.security.MessageDigest $r0;
        long $l0;
        java.lang.String $r1, $r4;
        byte[] $r2, $r3;

        $r0 = staticinvoke <org.apache.http.impl.auth.DigestScheme: java.security.MessageDigest createMessageDigest(java.lang.String)>("MD5");

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        $r2 = staticinvoke <org.apache.http.util.EncodingUtils: byte[] getAsciiBytes(java.lang.String)>($r1);

        $r3 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest(byte[])>($r2);

        $r4 = staticinvoke <org.apache.http.impl.auth.DigestScheme: java.lang.String encode(byte[])>($r3);

        return $r4;
    }

    private java.lang.String createDigest(org.apache.http.auth.Credentials) throws org.apache.http.auth.AuthenticationException
    {
        org.apache.http.impl.auth.DigestScheme r0;
        java.lang.String r1, r2, r3, $r20, $r30, $r44, r60, r61, r62, r63, r64, r65, r66, r69, r70, r71, r73, r74, r76, r78, r79, r80;
        java.lang.IllegalStateException $r4, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31;
        org.apache.http.auth.AuthenticationException $r7, $r19;
        java.security.Principal $r8;
        java.lang.StringBuilder $r9, $r15, $r23, $r29, $r45, $r53;
        boolean $z0, $z1;
        byte[] $r21, $r22, $r27, $r28, $r42, $r43, $r51, $r52;
        org.apache.http.auth.Credentials r59;
        java.security.MessageDigest r67;

        r0 := @this: org.apache.http.impl.auth.DigestScheme;

        r59 := @parameter0: org.apache.http.auth.Credentials;

        r60 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("uri");

        r61 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("realm");

        r1 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("nonce");

        r62 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("methodname");

        r63 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("algorithm");

        if r60 == null goto label13;

        if r61 == null goto label12;

        if r1 == null goto label11;

        r64 = r63;

        if r63 != null goto label01;

        r64 = "MD5";

     label01:
        r65 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("charset");

        r66 = r65;

        if r65 != null goto label02;

        r66 = "ISO-8859-1";

     label02:
        $i0 = r0.<org.apache.http.impl.auth.DigestScheme: int qopVariant>;

        if $i0 == 1 goto label10;

        r67 = staticinvoke <org.apache.http.impl.auth.DigestScheme: java.security.MessageDigest createMessageDigest(java.lang.String)>("MD5");

        $r8 = interfaceinvoke r59.<org.apache.http.auth.Credentials: java.security.Principal getUserPrincipal()>();

        r2 = interfaceinvoke $r8.<java.security.Principal: java.lang.String getName()>();

        r3 = interfaceinvoke r59.<org.apache.http.auth.Credentials: java.lang.String getPassword()>();

        $r9 = new java.lang.StringBuilder;

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        $i2 = virtualinvoke r61.<java.lang.String: int length()>();

        $i3 = $i1 + $i2;

        $i4 = virtualinvoke r3.<java.lang.String: int length()>();

        $i5 = $i3 + $i4;

        $i6 = $i5 + 2;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(int)>($i6);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r61);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        r69 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke r64.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("MD5-sess");

        if $z0 == 0 goto label03;

        r70 = specialinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getCnonce()>();

        $r51 = staticinvoke <org.apache.http.util.EncodingUtils: byte[] getBytes(java.lang.String,java.lang.String)>(r69, r66);

        $r52 = virtualinvoke r67.<java.security.MessageDigest: byte[] digest(byte[])>($r51);

        r71 = staticinvoke <org.apache.http.impl.auth.DigestScheme: java.lang.String encode(byte[])>($r52);

        $r53 = new java.lang.StringBuilder;

        $i26 = virtualinvoke r71.<java.lang.String: int length()>();

        $i27 = virtualinvoke r1.<java.lang.String: int length()>();

        $i28 = $i26 + $i27;

        $i29 = virtualinvoke r70.<java.lang.String: int length()>();

        $i30 = $i28 + $i29;

        $i31 = $i30 + 2;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>(int)>($i31);

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71);

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r70);

        r69 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label04;

     label03:
        $z1 = virtualinvoke r64.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("MD5");

        if $z1 == 0 goto label09;

     label04:
        $r21 = staticinvoke <org.apache.http.util.EncodingUtils: byte[] getBytes(java.lang.String,java.lang.String)>(r69, r66);

        $r22 = virtualinvoke r67.<java.security.MessageDigest: byte[] digest(byte[])>($r21);

        r73 = staticinvoke <org.apache.http.impl.auth.DigestScheme: java.lang.String encode(byte[])>($r22);

        r74 = null;

        $i7 = r0.<org.apache.http.impl.auth.DigestScheme: int qopVariant>;

        if $i7 != 1 goto label05;

        goto label06;

     label05:
        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r62);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r60);

        r74 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

     label06:
        $r27 = staticinvoke <org.apache.http.util.EncodingUtils: byte[] getAsciiBytes(java.lang.String)>(r74);

        $r28 = virtualinvoke r67.<java.security.MessageDigest: byte[] digest(byte[])>($r27);

        r76 = staticinvoke <org.apache.http.impl.auth.DigestScheme: java.lang.String encode(byte[])>($r28);

        $i8 = r0.<org.apache.http.impl.auth.DigestScheme: int qopVariant>;

        if $i8 != 0 goto label07;

        $r45 = new java.lang.StringBuilder;

        $i21 = virtualinvoke r73.<java.lang.String: int length()>();

        $i22 = virtualinvoke r1.<java.lang.String: int length()>();

        $i23 = $i21 + $i22;

        $i24 = virtualinvoke r76.<java.lang.String: int length()>();

        $i25 = $i23 + $i24;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>(int)>($i25);

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r73);

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r76);

        r78 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label08;

     label07:
        r79 = specialinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getQopVariantString()>();

        r80 = specialinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getCnonce()>();

        $r29 = new java.lang.StringBuilder;

        $i9 = virtualinvoke r73.<java.lang.String: int length()>();

        $i10 = virtualinvoke r1.<java.lang.String: int length()>();

        $i11 = $i9 + $i10;

        $r30 = "00000001";

        $i12 = virtualinvoke $r30.<java.lang.String: int length()>();

        $i13 = $i11 + $i12;

        $i14 = virtualinvoke r80.<java.lang.String: int length()>();

        $i15 = $i13 + $i14;

        $i16 = virtualinvoke r79.<java.lang.String: int length()>();

        $i17 = $i15 + $i16;

        $i18 = virtualinvoke r76.<java.lang.String: int length()>();

        $i19 = $i17 + $i18;

        $i20 = $i19 + 5;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>(int)>($i20);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r73);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("00000001");

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r80);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r79);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r76);

        r78 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

     label08:
        $r42 = staticinvoke <org.apache.http.util.EncodingUtils: byte[] getAsciiBytes(java.lang.String)>(r78);

        $r43 = virtualinvoke r67.<java.security.MessageDigest: byte[] digest(byte[])>($r42);

        $r44 = staticinvoke <org.apache.http.impl.auth.DigestScheme: java.lang.String encode(byte[])>($r43);

        return $r44;

     label09:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled algorithm ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r64);

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requested");

        $r19 = new org.apache.http.auth.AuthenticationException;

        $r20 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<org.apache.http.auth.AuthenticationException: void <init>(java.lang.String)>($r20);

        throw $r19;

     label10:
        $r7 = new org.apache.http.auth.AuthenticationException;

        specialinvoke $r7.<org.apache.http.auth.AuthenticationException: void <init>(java.lang.String)>("Unsupported qop in HTTP Digest authentication");

        throw $r7;

     label11:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Nonce may not be null");

        throw $r6;

     label12:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Realm may not be null");

        throw $r5;

     label13:
        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("URI may not be null");

        throw $r4;
    }

    private org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials, java.lang.String) throws org.apache.http.auth.AuthenticationException
    {
        org.apache.http.impl.auth.DigestScheme r0;
        java.lang.String r1, r2, r3, r4, r5, r6, $r18, $r19, $r21, $r22, $r26, $r29, r31;
        org.apache.http.util.CharArrayBuffer $r8;
        boolean $z0, $z6, $z7, z13, z14;
        java.security.Principal $r9;
        java.util.ArrayList $r10;
        org.apache.http.message.BasicNameValuePair $r11, $r12, $r13, $r14, $r15, $r23, $r24, $r25, $r27, $r28, r34;
        int $i0, i1, $i2;
        org.apache.http.message.BufferedHeader $r16;
        java.lang.Object $r17;
        org.apache.http.auth.Credentials r30;
        org.apache.http.message.BasicHeaderValueFormatter r35;

        r0 := @this: org.apache.http.impl.auth.DigestScheme;

        r30 := @parameter0: org.apache.http.auth.Credentials;

        r31 := @parameter1: java.lang.String;

        $r8 = new org.apache.http.util.CharArrayBuffer;

        specialinvoke $r8.<org.apache.http.util.CharArrayBuffer: void <init>(int)>(128);

        $z0 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: boolean isProxy()>();

        if $z0 == 0 goto label01;

        virtualinvoke $r8.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("Proxy-Authorization");

        goto label02;

     label01:
        virtualinvoke $r8.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("Authorization");

     label02:
        virtualinvoke $r8.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>(": Digest ");

        r1 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("uri");

        r2 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("realm");

        r3 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("nonce");

        r4 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("opaque");

        r5 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("algorithm");

        $r9 = interfaceinvoke r30.<org.apache.http.auth.Credentials: java.security.Principal getUserPrincipal()>();

        r6 = interfaceinvoke $r9.<java.security.Principal: java.lang.String getName()>();

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>(20);

        $r11 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r11.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("username", r6);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r12 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r12.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("realm", r2);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r13 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r13.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("nonce", r3);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r13);

        $r14 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r14.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("uri", r1);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r15 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r15.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("response", r31);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r15);

        $i0 = r0.<org.apache.http.impl.auth.DigestScheme: int qopVariant>;

        if $i0 == 0 goto label03;

        $r25 = new org.apache.http.message.BasicNameValuePair;

        $r26 = specialinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getQopVariantString()>();

        specialinvoke $r25.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("qop", $r26);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r25);

        $r27 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r27.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("nc", "00000001");

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r27);

        $r28 = new org.apache.http.message.BasicNameValuePair;

        $r29 = specialinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getCnonce()>();

        specialinvoke $r28.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("cnonce", $r29);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r28);

     label03:
        if r5 == null goto label04;

        $r24 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r24.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("algorithm", r5);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r24);

     label04:
        if r4 == null goto label05;

        $r23 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r23.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("opaque", r4);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r23);

     label05:
        i1 = 0;

     label06:
        $i2 = interfaceinvoke $r10.<java.util.List: int size()>();

        if i1 >= $i2 goto label13;

        $r17 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i1);

        r34 = (org.apache.http.message.BasicNameValuePair) $r17;

        if i1 <= 0 goto label07;

        virtualinvoke $r8.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>(", ");

        goto label07;

     label07:
        $r18 = "nc";

        $r19 = virtualinvoke r34.<org.apache.http.message.BasicNameValuePair: java.lang.String getName()>();

        $z6 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r19);

        if $z6 != 0 goto label09;

        $r21 = "qop";

        $r22 = virtualinvoke r34.<org.apache.http.message.BasicNameValuePair: java.lang.String getName()>();

        $z7 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r22);

        if $z7 == 0 goto label08;

        goto label09;

     label08:
        z13 = 0;

        goto label10;

     label09:
        z13 = 1;

     label10:
        r35 = <org.apache.http.message.BasicHeaderValueFormatter: org.apache.http.message.BasicHeaderValueFormatter DEFAULT>;

        if z13 != 0 goto label11;

        z14 = 1;

        goto label12;

     label11:
        z14 = 0;

     label12:
        virtualinvoke r35.<org.apache.http.message.BasicHeaderValueFormatter: org.apache.http.util.CharArrayBuffer formatNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair,boolean)>($r8, r34, z14);

        i1 = i1 + 1;

        goto label06;

     label13:
        $r16 = new org.apache.http.message.BufferedHeader;

        specialinvoke $r16.<org.apache.http.message.BufferedHeader: void <init>(org.apache.http.util.CharArrayBuffer)>($r8);

        return $r16;
    }

    private static java.security.MessageDigest createMessageDigest(java.lang.String) throws org.apache.http.impl.auth.UnsupportedDigestAlgorithmException
    {
        java.lang.String r0, $r6;
        java.lang.Exception $r1;
        java.lang.StringBuilder $r2;
        org.apache.http.impl.auth.UnsupportedDigestAlgorithmException $r5;
        java.security.MessageDigest r7;

        r0 := @parameter0: java.lang.String;

     label1:
        r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0);

     label2:
        return r7;

     label3:
        $r1 := @caughtexception;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported algorithm in HTTP Digest authentication: ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = new org.apache.http.impl.auth.UnsupportedDigestAlgorithmException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.apache.http.impl.auth.UnsupportedDigestAlgorithmException: void <init>(java.lang.String)>($r6);

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static java.lang.String encode(byte[])
    {
        byte[] r0;
        char[] r1, r2;
        byte b0, b1, $b9;
        int $i2, $i7, $i8, $i12, i13;
        java.lang.String $r3;
        short $s3, $s4;
        char $c5, $c6, $c10, $c11;

        r0 := @parameter0: byte[];

        $i2 = lengthof r0;

        if $i2 == 16 goto label1;

        return null;

     label1:
        r1 = newarray (char)[32];

        i13 = 0;

     label2:
        if i13 >= 16 goto label3;

        b0 = r0[i13];

        b1 = r0[i13];

        r2 = <org.apache.http.impl.auth.DigestScheme: char[] HEXADECIMAL>;

        $i7 = i13 * 2;

        $s3 = b1 & 240;

        $s4 = $s3 >> 4;

        $c5 = r2[$s4];

        $c6 = (char) $c5;

        r1[$i7] = $c6;

        $i8 = i13 * 2;

        $i12 = $i8 + 1;

        $b9 = b0 & 15;

        $c10 = r2[$b9];

        $c11 = (char) $c10;

        r1[$i12] = $c11;

        i13 = i13 + 1;

        goto label2;

     label3:
        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(char[])>(r1);

        return $r3;
    }

    private java.lang.String getCnonce()
    {
        org.apache.http.impl.auth.DigestScheme r0;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: org.apache.http.impl.auth.DigestScheme;

        $r1 = r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String cnonce>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <org.apache.http.impl.auth.DigestScheme: java.lang.String createCnonce()>();

        r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String cnonce> = $r3;

     label1:
        $r2 = r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String cnonce>;

        return $r2;
    }

    private java.lang.String getQopVariantString()
    {
        org.apache.http.impl.auth.DigestScheme r0;
        int $i0;
        java.lang.String r1;

        r0 := @this: org.apache.http.impl.auth.DigestScheme;

        $i0 = r0.<org.apache.http.impl.auth.DigestScheme: int qopVariant>;

        if $i0 != 1 goto label1;

        r1 = "auth-int";

        goto label2;

     label1:
        r1 = "auth";

     label2:
        return r1;
    }

    public org.apache.http.Header authenticate(org.apache.http.auth.Credentials, org.apache.http.HttpRequest) throws org.apache.http.auth.AuthenticationException
    {
        org.apache.http.impl.auth.DigestScheme r0;
        org.apache.http.auth.Credentials r1;
        java.lang.IllegalArgumentException $r2, $r3;
        java.util.Map $r4, $r8, $r16;
        org.apache.http.RequestLine $r5, $r9;
        java.lang.String $r6, $r10, $r12, $r13, r19;
        org.apache.http.Header $r14;
        org.apache.http.params.HttpParams $r15;
        org.apache.http.HttpRequest r18;

        r0 := @this: org.apache.http.impl.auth.DigestScheme;

        r1 := @parameter0: org.apache.http.auth.Credentials;

        r18 := @parameter1: org.apache.http.HttpRequest;

        if r1 == null goto label3;

        if r18 == null goto label2;

        $r4 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.util.Map getParameters()>();

        $r5 = interfaceinvoke r18.<org.apache.http.HttpRequest: org.apache.http.RequestLine getRequestLine()>();

        $r6 = interfaceinvoke $r5.<org.apache.http.RequestLine: java.lang.String getMethod()>();

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("methodname", $r6);

        $r8 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.util.Map getParameters()>();

        $r9 = interfaceinvoke r18.<org.apache.http.HttpRequest: org.apache.http.RequestLine getRequestLine()>();

        $r10 = interfaceinvoke $r9.<org.apache.http.RequestLine: java.lang.String getUri()>();

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("uri", $r10);

        $r12 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("charset");

        if $r12 != null goto label1;

        $r15 = interfaceinvoke r18.<org.apache.http.HttpRequest: org.apache.http.params.HttpParams getParams()>();

        r19 = staticinvoke <org.apache.http.auth.params.AuthParams: java.lang.String getCredentialCharset(org.apache.http.params.HttpParams)>($r15);

        $r16 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.util.Map getParameters()>();

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("charset", r19);

     label1:
        $r13 = specialinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String createDigest(org.apache.http.auth.Credentials)>(r1);

        $r14 = specialinvoke r0.<org.apache.http.impl.auth.DigestScheme: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,java.lang.String)>(r1, $r13);

        return $r14;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP request may not be null");

        throw $r3;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Credentials may not be null");

        throw $r2;
    }

    public java.lang.String getSchemeName()
    {
        org.apache.http.impl.auth.DigestScheme r0;

        r0 := @this: org.apache.http.impl.auth.DigestScheme;

        return "digest";
    }

    public boolean isComplete()
    {
        org.apache.http.impl.auth.DigestScheme r0;
        java.lang.String $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.http.impl.auth.DigestScheme;

        $r1 = "true";

        $r2 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("stale");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z1 = r0.<org.apache.http.impl.auth.DigestScheme: boolean complete>;

        return $z1;
    }

    public boolean isConnectionBased()
    {
        org.apache.http.impl.auth.DigestScheme r0;

        r0 := @this: org.apache.http.impl.auth.DigestScheme;

        return 0;
    }

    public void overrideParamter(java.lang.String, java.lang.String)
    {
        org.apache.http.impl.auth.DigestScheme r0;
        java.lang.String r1, r2;
        java.util.Map $r3;

        r0 := @this: org.apache.http.impl.auth.DigestScheme;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.util.Map getParameters()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void processChallenge(org.apache.http.Header) throws org.apache.http.auth.MalformedChallengeException
    {
        org.apache.http.impl.auth.DigestScheme r0;
        java.lang.String r1, $r2, $r4, $r8, r10;
        org.apache.http.auth.MalformedChallengeException $r3, $r5, $r6;
        int $i0;
        java.util.StringTokenizer $r7;
        boolean $z0, $z1, $z2, z3, z4;
        org.apache.http.Header r9;

        r0 := @this: org.apache.http.impl.auth.DigestScheme;

        r9 := @parameter0: org.apache.http.Header;

        specialinvoke r0.<org.apache.http.impl.auth.RFC2617Scheme: void processChallenge(org.apache.http.Header)>(r9);

        $r2 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("realm");

        if $r2 == null goto label9;

        $r4 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("nonce");

        if $r4 == null goto label8;

        z3 = 0;

        z4 = 0;

        r10 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("qop");

        if r10 == null goto label5;

        $r7 = new java.util.StringTokenizer;

        specialinvoke $r7.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r10, ",");

     label1:
        z3 = z4;

        $z0 = virtualinvoke $r7.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label5;

        $r8 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        r1 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("auth");

        if $z1 == 0 goto label2;

        r0.<org.apache.http.impl.auth.DigestScheme: int qopVariant> = 2;

        z3 = z4;

        goto label5;

     label2:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("auth-int");

        if $z2 == 0 goto label3;

        r0.<org.apache.http.impl.auth.DigestScheme: int qopVariant> = 1;

        goto label4;

     label3:
        z4 = 1;

     label4:
        goto label1;

     label5:
        if z3 == 0 goto label7;

        $i0 = r0.<org.apache.http.impl.auth.DigestScheme: int qopVariant>;

        if $i0 == 0 goto label6;

        goto label7;

     label6:
        $r6 = new org.apache.http.auth.MalformedChallengeException;

        specialinvoke $r6.<org.apache.http.auth.MalformedChallengeException: void <init>(java.lang.String)>("None of the qop methods is supported");

        throw $r6;

     label7:
        r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String cnonce> = null;

        r0.<org.apache.http.impl.auth.DigestScheme: boolean complete> = 1;

        return;

     label8:
        $r5 = new org.apache.http.auth.MalformedChallengeException;

        specialinvoke $r5.<org.apache.http.auth.MalformedChallengeException: void <init>(java.lang.String)>("missing nonce in challange");

        throw $r5;

     label9:
        $r3 = new org.apache.http.auth.MalformedChallengeException;

        specialinvoke $r3.<org.apache.http.auth.MalformedChallengeException: void <init>(java.lang.String)>("missing realm in challange");

        throw $r3;
    }
}
