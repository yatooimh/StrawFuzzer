public class org.apache.http.impl.auth.NTLMScheme extends org.apache.http.impl.auth.AuthSchemeBase
{
    private java.lang.String challenge;
    private final org.apache.http.impl.auth.NTLMEngine engine;
    private org.apache.http.impl.auth.NTLMScheme$State state;

    public void <init>(org.apache.http.impl.auth.NTLMEngine)
    {
        org.apache.http.impl.auth.NTLMScheme r0;
        org.apache.http.impl.auth.NTLMEngine r1;
        java.lang.IllegalArgumentException $r2;
        org.apache.http.impl.auth.NTLMScheme$State $r3;

        r0 := @this: org.apache.http.impl.auth.NTLMScheme;

        r1 := @parameter0: org.apache.http.impl.auth.NTLMEngine;

        specialinvoke r0.<org.apache.http.impl.auth.AuthSchemeBase: void <init>()>();

        if r1 == null goto label1;

        r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMEngine engine> = r1;

        $r3 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State UNINITIATED>;

        r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state> = $r3;

        r0.<org.apache.http.impl.auth.NTLMScheme: java.lang.String challenge> = null;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("NTLM engine may not be null");

        throw $r2;
    }

    public org.apache.http.Header authenticate(org.apache.http.auth.Credentials, org.apache.http.HttpRequest) throws org.apache.http.auth.AuthenticationException
    {
        org.apache.http.impl.auth.NTLMScheme r0;
        org.apache.http.impl.auth.NTLMScheme$State $r1, $r2, $r6, $r8, $r9, $r10, $r11, $r14, $r24;
        org.apache.http.impl.auth.NTLMEngine $r3, $r18;
        java.lang.String $r4, $r5, $r17, $r19, $r20, $r21, $r22, $r23, $r29, $r32, r36;
        org.apache.http.message.BufferedHeader $r7;
        java.lang.StringBuilder $r12, $r26;
        org.apache.http.auth.AuthenticationException $r16;
        java.lang.ClassCastException $r25;
        java.lang.Class $r28;
        org.apache.http.auth.InvalidCredentialsException $r31;
        org.apache.http.auth.Credentials r33;
        org.apache.http.HttpRequest r34;
        org.apache.http.auth.NTCredentials r35;
        org.apache.http.util.CharArrayBuffer $r38;
        boolean $z0;

        r0 := @this: org.apache.http.impl.auth.NTLMScheme;

        r33 := @parameter0: org.apache.http.auth.Credentials;

        r34 := @parameter1: org.apache.http.HttpRequest;

     label1:
        r35 = (org.apache.http.auth.NTCredentials) r33;

     label2:
        $r2 = r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state>;

        $r1 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State CHALLENGE_RECEIVED>;

        if $r2 == $r1 goto label5;

        $r9 = r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state>;

        $r8 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State FAILED>;

        if $r9 != $r8 goto label3;

        goto label5;

     label3:
        $r11 = r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state>;

        $r10 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE2_RECEVIED>;

        if $r11 != $r10 goto label4;

        $r18 = r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMEngine engine>;

        $r19 = virtualinvoke r35.<org.apache.http.auth.NTCredentials: java.lang.String getUserName()>();

        $r20 = virtualinvoke r35.<org.apache.http.auth.NTCredentials: java.lang.String getPassword()>();

        $r21 = virtualinvoke r35.<org.apache.http.auth.NTCredentials: java.lang.String getDomain()>();

        $r22 = virtualinvoke r35.<org.apache.http.auth.NTCredentials: java.lang.String getWorkstation()>();

        $r23 = r0.<org.apache.http.impl.auth.NTLMScheme: java.lang.String challenge>;

        r36 = interfaceinvoke $r18.<org.apache.http.impl.auth.NTLMEngine: java.lang.String generateType3Msg(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r19, $r20, $r21, $r22, $r23);

        $r24 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE3_GENERATED>;

        r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state> = $r24;

        goto label6;

     label4:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected state: ");

        $r14 = r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state>;

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = new org.apache.http.auth.AuthenticationException;

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<org.apache.http.auth.AuthenticationException: void <init>(java.lang.String)>($r17);

        throw $r16;

     label5:
        $r3 = r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMEngine engine>;

        $r4 = virtualinvoke r35.<org.apache.http.auth.NTCredentials: java.lang.String getDomain()>();

        $r5 = virtualinvoke r35.<org.apache.http.auth.NTCredentials: java.lang.String getWorkstation()>();

        r36 = interfaceinvoke $r3.<org.apache.http.impl.auth.NTLMEngine: java.lang.String generateType1Msg(java.lang.String,java.lang.String)>($r4, $r5);

        $r6 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE1_GENERATED>;

        r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state> = $r6;

     label6:
        $r38 = new org.apache.http.util.CharArrayBuffer;

        specialinvoke $r38.<org.apache.http.util.CharArrayBuffer: void <init>(int)>(32);

        $z0 = virtualinvoke r0.<org.apache.http.impl.auth.NTLMScheme: boolean isProxy()>();

        if $z0 == 0 goto label7;

        virtualinvoke $r38.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("Proxy-Authorization");

        goto label8;

     label7:
        virtualinvoke $r38.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("Authorization");

     label8:
        virtualinvoke $r38.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>(": NTLM ");

        virtualinvoke $r38.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>(r36);

        $r7 = new org.apache.http.message.BufferedHeader;

        specialinvoke $r7.<org.apache.http.message.BufferedHeader: void <init>(org.apache.http.util.CharArrayBuffer)>($r38);

        return $r7;

     label9:
        $r25 := @caughtexception;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Credentials cannot be used for NTLM authentication: ");

        $r28 = virtualinvoke r33.<java.lang.Object: java.lang.Class getClass()>();

        $r29 = virtualinvoke $r28.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = new org.apache.http.auth.InvalidCredentialsException;

        $r32 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<org.apache.http.auth.InvalidCredentialsException: void <init>(java.lang.String)>($r32);

        throw $r31;

        catch java.lang.ClassCastException from label1 to label2 with label9;
    }

    public java.lang.String getParameter(java.lang.String)
    {
        org.apache.http.impl.auth.NTLMScheme r0;
        java.lang.String r1;

        r0 := @this: org.apache.http.impl.auth.NTLMScheme;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public java.lang.String getRealm()
    {
        org.apache.http.impl.auth.NTLMScheme r0;

        r0 := @this: org.apache.http.impl.auth.NTLMScheme;

        return null;
    }

    public java.lang.String getSchemeName()
    {
        org.apache.http.impl.auth.NTLMScheme r0;

        r0 := @this: org.apache.http.impl.auth.NTLMScheme;

        return "ntlm";
    }

    public boolean isComplete()
    {
        org.apache.http.impl.auth.NTLMScheme r0;
        org.apache.http.impl.auth.NTLMScheme$State $r1, $r2, $r3, $r4;
        boolean z0;

        r0 := @this: org.apache.http.impl.auth.NTLMScheme;

        $r2 = r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state>;

        $r1 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE3_GENERATED>;

        if $r2 == $r1 goto label2;

        $r4 = r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state>;

        $r3 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State FAILED>;

        if $r4 != $r3 goto label1;

        goto label2;

     label1:
        z0 = 0;

        goto label3;

     label2:
        z0 = 1;

     label3:
        return z0;
    }

    public boolean isConnectionBased()
    {
        org.apache.http.impl.auth.NTLMScheme r0;

        r0 := @this: org.apache.http.impl.auth.NTLMScheme;

        return 1;
    }

    protected void parseChallenge(org.apache.http.util.CharArrayBuffer, int, int) throws org.apache.http.auth.MalformedChallengeException
    {
        org.apache.http.impl.auth.NTLMScheme r0;
        int i0, i1, $i2;
        org.apache.http.impl.auth.NTLMScheme$State $r1, $r2, $r3, $r4, $r5;
        org.apache.http.util.CharArrayBuffer r6;
        java.lang.String r7;

        r0 := @this: org.apache.http.impl.auth.NTLMScheme;

        r6 := @parameter0: org.apache.http.util.CharArrayBuffer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r7 = virtualinvoke r6.<org.apache.http.util.CharArrayBuffer: java.lang.String substringTrimmed(int,int)>(i0, i1);

        $i2 = virtualinvoke r7.<java.lang.String: int length()>();

        if $i2 != 0 goto label3;

        $r3 = r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state>;

        $r2 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State UNINITIATED>;

        if $r3 != $r2 goto label1;

        $r5 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State CHALLENGE_RECEIVED>;

        r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state> = $r5;

        goto label2;

     label1:
        $r4 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State FAILED>;

        r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state> = $r4;

     label2:
        r0.<org.apache.http.impl.auth.NTLMScheme: java.lang.String challenge> = null;

        goto label4;

     label3:
        $r1 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE2_RECEVIED>;

        r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state> = $r1;

        r0.<org.apache.http.impl.auth.NTLMScheme: java.lang.String challenge> = r7;

     label4:
        return;
    }
}
