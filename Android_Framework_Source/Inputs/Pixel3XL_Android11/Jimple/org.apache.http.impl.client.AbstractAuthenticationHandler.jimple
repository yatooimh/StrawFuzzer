public abstract class org.apache.http.impl.client.AbstractAuthenticationHandler extends java.lang.Object implements org.apache.http.client.AuthenticationHandler
{
    private static final java.util.List DEFAULT_SCHEME_PRIORITY;
    private final org.apache.commons.logging.Log log;

    static void <clinit>()
    {
        java.lang.String[] $r0;
        java.util.List $r1;

        $r0 = newarray (java.lang.String)[3];

        $r0[0] = "ntlm";

        $r0[1] = "digest";

        $r0[2] = "basic";

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        <org.apache.http.impl.client.AbstractAuthenticationHandler: java.util.List DEFAULT_SCHEME_PRIORITY> = $r1;

        return;
    }

    public void <init>()
    {
        org.apache.http.impl.client.AbstractAuthenticationHandler r0;
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;

        r0 := @this: org.apache.http.impl.client.AbstractAuthenticationHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        r0.<org.apache.http.impl.client.AbstractAuthenticationHandler: org.apache.commons.logging.Log log> = $r2;

        return;
    }

    protected java.util.List getAuthPreferences()
    {
        org.apache.http.impl.client.AbstractAuthenticationHandler r0;
        java.util.List $r1;

        r0 := @this: org.apache.http.impl.client.AbstractAuthenticationHandler;

        $r1 = <org.apache.http.impl.client.AbstractAuthenticationHandler: java.util.List DEFAULT_SCHEME_PRIORITY>;

        return $r1;
    }

    protected java.util.Map parseChallenges(org.apache.http.Header[]) throws org.apache.http.auth.MalformedChallengeException
    {
        org.apache.http.impl.client.AbstractAuthenticationHandler r0;
        org.apache.http.Header[] r1;
        int i0, $i1, $i2, i5, i6, $i7, i8, $i9;
        org.apache.http.Header r3;
        java.lang.String r4, $r8, $r10;
        java.util.HashMap $r5;
        boolean $z0, $z1, $z2;
        org.apache.http.auth.MalformedChallengeException $r6;
        org.apache.http.util.CharArrayBuffer $r7, r14;
        java.util.Locale $r9;
        char $c3, $c4;
        org.apache.http.FormattedHeader $r12, $r13;

        r0 := @this: org.apache.http.impl.client.AbstractAuthenticationHandler;

        r1 := @parameter0: org.apache.http.Header[];

        $r5 = new java.util.HashMap;

        $i1 = lengthof r1;

        specialinvoke $r5.<java.util.HashMap: void <init>(int)>($i1);

        i0 = lengthof r1;

        i5 = 0;

     label1:
        if i5 >= i0 goto label8;

        r3 = r1[i5];

        $z0 = r3 instanceof org.apache.http.FormattedHeader;

        if $z0 == 0 goto label2;

        $r12 = (org.apache.http.FormattedHeader) r3;

        r14 = interfaceinvoke $r12.<org.apache.http.FormattedHeader: org.apache.http.util.CharArrayBuffer getBuffer()>();

        $r13 = (org.apache.http.FormattedHeader) r3;

        i6 = interfaceinvoke $r13.<org.apache.http.FormattedHeader: int getValuePos()>();

        goto label3;

     label2:
        r4 = interfaceinvoke r3.<org.apache.http.Header: java.lang.String getValue()>();

        if r4 == null goto label7;

        $r7 = new org.apache.http.util.CharArrayBuffer;

        $i2 = virtualinvoke r4.<java.lang.String: int length()>();

        specialinvoke $r7.<org.apache.http.util.CharArrayBuffer: void <init>(int)>($i2);

        r14 = $r7;

        virtualinvoke $r7.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>(r4);

        i6 = 0;

     label3:
        $i7 = virtualinvoke r14.<org.apache.http.util.CharArrayBuffer: int length()>();

        if i6 >= $i7 goto label4;

        $c4 = virtualinvoke r14.<org.apache.http.util.CharArrayBuffer: char charAt(int)>(i6);

        $z2 = staticinvoke <org.apache.http.protocol.HTTP: boolean isWhitespace(char)>($c4);

        if $z2 == 0 goto label4;

        i6 = i6 + 1;

        goto label3;

     label4:
        i8 = i6;

     label5:
        $i9 = virtualinvoke r14.<org.apache.http.util.CharArrayBuffer: int length()>();

        if i8 >= $i9 goto label6;

        $c3 = virtualinvoke r14.<org.apache.http.util.CharArrayBuffer: char charAt(int)>(i8);

        $z1 = staticinvoke <org.apache.http.protocol.HTTP: boolean isWhitespace(char)>($c3);

        if $z1 != 0 goto label6;

        i8 = i8 + 1;

        goto label5;

     label6:
        $r8 = virtualinvoke r14.<org.apache.http.util.CharArrayBuffer: java.lang.String substring(int,int)>(i6, i8);

        $r9 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r10 = virtualinvoke $r8.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r9);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, r3);

        i5 = i5 + 1;

        goto label1;

     label7:
        $r6 = new org.apache.http.auth.MalformedChallengeException;

        specialinvoke $r6.<org.apache.http.auth.MalformedChallengeException: void <init>(java.lang.String)>("Header value is null");

        throw $r6;

     label8:
        return $r5;
    }

    public org.apache.http.auth.AuthScheme selectScheme(java.util.Map, org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) throws org.apache.http.auth.AuthenticationException
    {
        org.apache.http.impl.client.AbstractAuthenticationHandler r0;
        java.util.Map r1;
        org.apache.http.auth.AuthSchemeRegistry r2;
        java.lang.String r3, $r10, $r13, $r18, $r22, $r24, $r28;
        java.lang.Object $r4, $r6, $r11, $r14;
        java.lang.IllegalStateException $r5;
        org.apache.commons.logging.Log $r7, $r16, $r19, $r26, r33, r36, r38, r40;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r8, $r17, $r21, $r23, $r27;
        org.apache.http.auth.AuthenticationException $r9;
        java.util.Locale $r12;
        org.apache.http.Header $r15;
        org.apache.http.params.HttpParams $r20;
        java.lang.Throwable $r25;
        org.apache.http.HttpResponse r29;
        org.apache.http.protocol.HttpContext r30;
        java.util.List r31, r32;
        int i0, $i1;
        org.apache.http.auth.AuthScheme r35;

        r0 := @this: org.apache.http.impl.client.AbstractAuthenticationHandler;

        r1 := @parameter0: java.util.Map;

        r29 := @parameter1: org.apache.http.HttpResponse;

        r30 := @parameter2: org.apache.http.protocol.HttpContext;

        $r4 = interfaceinvoke r30.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.authscheme-registry");

        r2 = (org.apache.http.auth.AuthSchemeRegistry) $r4;

        if r2 == null goto label12;

        $r6 = interfaceinvoke r30.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.auth.scheme-pref");

        r31 = (java.util.List) $r6;

        r32 = r31;

        if r31 != null goto label01;

        r32 = virtualinvoke r0.<org.apache.http.impl.client.AbstractAuthenticationHandler: java.util.List getAuthPreferences()>();

     label01:
        $r7 = r0.<org.apache.http.impl.client.AbstractAuthenticationHandler: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r7.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label02;

        r33 = r0.<org.apache.http.impl.client.AbstractAuthenticationHandler: org.apache.commons.logging.Log log>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Authentication schemes in the order of preference: ");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r32);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r33.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r24);

     label02:
        i0 = 0;

     label03:
        r35 = null;

        $i1 = interfaceinvoke r32.<java.util.List: int size()>();

        if i0 >= $i1 goto label10;

        $r11 = interfaceinvoke r32.<java.util.List: java.lang.Object get(int)>(i0);

        r3 = (java.lang.String) $r11;

        $r12 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r13 = virtualinvoke r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r12);

        $r14 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13);

        $r15 = (org.apache.http.Header) $r14;

        if $r15 == null goto label08;

        $r19 = r0.<org.apache.http.impl.client.AbstractAuthenticationHandler: org.apache.commons.logging.Log log>;

        $z2 = interfaceinvoke $r19.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z2 == 0 goto label04;

        r36 = r0.<org.apache.http.impl.client.AbstractAuthenticationHandler: org.apache.commons.logging.Log log>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" authentication scheme selected");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r36.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r22);

     label04:
        $r20 = interfaceinvoke r29.<org.apache.http.HttpResponse: org.apache.http.params.HttpParams getParams()>();

        r35 = virtualinvoke r2.<org.apache.http.auth.AuthSchemeRegistry: org.apache.http.auth.AuthScheme getAuthScheme(java.lang.String,org.apache.http.params.HttpParams)>(r3, $r20);

     label05:
        goto label10;

     label06:
        $r25 := @caughtexception;

        $r26 = r0.<org.apache.http.impl.client.AbstractAuthenticationHandler: org.apache.commons.logging.Log log>;

        $z3 = interfaceinvoke $r26.<org.apache.commons.logging.Log: boolean isWarnEnabled()>();

        if $z3 == 0 goto label07;

        r38 = r0.<org.apache.http.impl.client.AbstractAuthenticationHandler: org.apache.commons.logging.Log log>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Authentication scheme ");

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not supported");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r38.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r28);

     label07:
        goto label09;

     label08:
        $r16 = r0.<org.apache.http.impl.client.AbstractAuthenticationHandler: org.apache.commons.logging.Log log>;

        $z1 = interfaceinvoke $r16.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label09;

        r40 = r0.<org.apache.http.impl.client.AbstractAuthenticationHandler: org.apache.commons.logging.Log log>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Challenge for ");

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" authentication scheme not available");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r40.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r18);

     label09:
        i0 = i0 + 1;

        goto label03;

     label10:
        if r35 == null goto label11;

        return r35;

     label11:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to respond to any of these challenges: ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = new org.apache.http.auth.AuthenticationException;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.apache.http.auth.AuthenticationException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label12:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("AuthScheme registry not set in HTTP context");

        throw $r5;

        catch java.lang.IllegalStateException from label04 to label05 with label06;
    }
}
