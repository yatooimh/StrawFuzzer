public class org.apache.http.impl.client.BasicResponseHandler extends java.lang.Object implements org.apache.http.client.ResponseHandler
{

    public void <init>()
    {
        org.apache.http.impl.client.BasicResponseHandler r0;

        r0 := @this: org.apache.http.impl.client.BasicResponseHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public volatile java.lang.Object handleResponse(org.apache.http.HttpResponse) throws org.apache.http.client.ClientProtocolException, java.io.IOException
    {
        org.apache.http.impl.client.BasicResponseHandler r0;
        org.apache.http.HttpResponse r1;
        java.lang.String $r2;

        r0 := @this: org.apache.http.impl.client.BasicResponseHandler;

        r1 := @parameter0: org.apache.http.HttpResponse;

        $r2 = virtualinvoke r0.<org.apache.http.impl.client.BasicResponseHandler: java.lang.String handleResponse(org.apache.http.HttpResponse)>(r1);

        return $r2;
    }

    public java.lang.String handleResponse(org.apache.http.HttpResponse) throws org.apache.http.client.HttpResponseException, java.io.IOException
    {
        org.apache.http.impl.client.BasicResponseHandler r0;
        org.apache.http.StatusLine r1;
        int $i0, $i1;
        org.apache.http.client.HttpResponseException $r2;
        java.lang.String $r3, r6;
        org.apache.http.HttpResponse r4;
        org.apache.http.HttpEntity r5;

        r0 := @this: org.apache.http.impl.client.BasicResponseHandler;

        r4 := @parameter0: org.apache.http.HttpResponse;

        r1 = interfaceinvoke r4.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke r1.<org.apache.http.StatusLine: int getStatusCode()>();

        if $i0 >= 300 goto label3;

        r5 = interfaceinvoke r4.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        if r5 != null goto label1;

        r6 = null;

        goto label2;

     label1:
        r6 = staticinvoke <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)>(r5);

     label2:
        return r6;

     label3:
        $r2 = new org.apache.http.client.HttpResponseException;

        $i1 = interfaceinvoke r1.<org.apache.http.StatusLine: int getStatusCode()>();

        $r3 = interfaceinvoke r1.<org.apache.http.StatusLine: java.lang.String getReasonPhrase()>();

        specialinvoke $r2.<org.apache.http.client.HttpResponseException: void <init>(int,java.lang.String)>($i1, $r3);

        throw $r2;
    }
}
