public class org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy extends java.lang.Object implements org.apache.http.conn.ConnectionKeepAliveStrategy
{

    public void <init>()
    {
        org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy r0;

        r0 := @this: org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public long getKeepAliveDuration(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)
    {
        org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy r0;
        long l0, $l1;
        java.lang.IllegalArgumentException $r1;
        org.apache.http.message.BasicHeaderElementIterator $r2;
        org.apache.http.HeaderIterator $r3;
        boolean $z0, $z1;
        java.lang.Throwable $r4;
        org.apache.http.HttpResponse r5;
        org.apache.http.protocol.HttpContext r6;
        org.apache.http.HeaderElement r8;
        java.lang.String r9, r10;

        r0 := @this: org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy;

        r5 := @parameter0: org.apache.http.HttpResponse;

        r6 := @parameter1: org.apache.http.protocol.HttpContext;

        if r5 == null goto label7;

        $r2 = new org.apache.http.message.BasicHeaderElementIterator;

        $r3 = interfaceinvoke r5.<org.apache.http.HttpResponse: org.apache.http.HeaderIterator headerIterator(java.lang.String)>("Keep-Alive");

        specialinvoke $r2.<org.apache.http.message.BasicHeaderElementIterator: void <init>(org.apache.http.HeaderIterator)>($r3);

     label1:
        $z0 = interfaceinvoke $r2.<org.apache.http.HeaderElementIterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        r8 = interfaceinvoke $r2.<org.apache.http.HeaderElementIterator: org.apache.http.HeaderElement nextElement()>();

        r9 = interfaceinvoke r8.<org.apache.http.HeaderElement: java.lang.String getName()>();

        r10 = interfaceinvoke r8.<org.apache.http.HeaderElement: java.lang.String getValue()>();

        if r10 == null goto label5;

        $z1 = virtualinvoke r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("timeout");

        if $z1 == 0 goto label5;

     label2:
        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r10);

     label3:
        $l1 = l0 * 1000L;

        return $l1;

     label4:
        $r4 := @caughtexception;

     label5:
        goto label1;

     label6:
        return -1L;

     label7:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP response may not be null");

        throw $r1;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }
}
