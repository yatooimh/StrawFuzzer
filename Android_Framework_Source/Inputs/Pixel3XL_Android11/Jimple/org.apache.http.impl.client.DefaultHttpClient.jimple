public class org.apache.http.impl.client.DefaultHttpClient extends org.apache.http.impl.client.AbstractHttpClient
{

    public void <init>()
    {
        org.apache.http.impl.client.DefaultHttpClient r0;

        r0 := @this: org.apache.http.impl.client.DefaultHttpClient;

        specialinvoke r0.<org.apache.http.impl.client.AbstractHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>(null, null);

        return;
    }

    public void <init>(org.apache.http.conn.ClientConnectionManager, org.apache.http.params.HttpParams)
    {
        org.apache.http.impl.client.DefaultHttpClient r0;
        org.apache.http.conn.ClientConnectionManager r1;
        org.apache.http.params.HttpParams r2;

        r0 := @this: org.apache.http.impl.client.DefaultHttpClient;

        r1 := @parameter0: org.apache.http.conn.ClientConnectionManager;

        r2 := @parameter1: org.apache.http.params.HttpParams;

        specialinvoke r0.<org.apache.http.impl.client.AbstractHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>(r1, r2);

        return;
    }

    public void <init>(org.apache.http.params.HttpParams)
    {
        org.apache.http.impl.client.DefaultHttpClient r0;
        org.apache.http.params.HttpParams r1;

        r0 := @this: org.apache.http.impl.client.DefaultHttpClient;

        r1 := @parameter0: org.apache.http.params.HttpParams;

        specialinvoke r0.<org.apache.http.impl.client.AbstractHttpClient: void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams)>(null, r1);

        return;
    }

    protected org.apache.http.auth.AuthSchemeRegistry createAuthSchemeRegistry()
    {
        org.apache.http.impl.client.DefaultHttpClient r0;
        org.apache.http.auth.AuthSchemeRegistry $r2;
        org.apache.http.impl.auth.BasicSchemeFactory $r3;
        org.apache.http.impl.auth.DigestSchemeFactory $r4;

        r0 := @this: org.apache.http.impl.client.DefaultHttpClient;

        $r2 = new org.apache.http.auth.AuthSchemeRegistry;

        specialinvoke $r2.<org.apache.http.auth.AuthSchemeRegistry: void <init>()>();

        $r3 = new org.apache.http.impl.auth.BasicSchemeFactory;

        specialinvoke $r3.<org.apache.http.impl.auth.BasicSchemeFactory: void <init>()>();

        virtualinvoke $r2.<org.apache.http.auth.AuthSchemeRegistry: void register(java.lang.String,org.apache.http.auth.AuthSchemeFactory)>("Basic", $r3);

        $r4 = new org.apache.http.impl.auth.DigestSchemeFactory;

        specialinvoke $r4.<org.apache.http.impl.auth.DigestSchemeFactory: void <init>()>();

        virtualinvoke $r2.<org.apache.http.auth.AuthSchemeRegistry: void register(java.lang.String,org.apache.http.auth.AuthSchemeFactory)>("Digest", $r4);

        return $r2;
    }

    protected org.apache.http.conn.ClientConnectionManager createClientConnectionManager()
    {
        org.apache.http.impl.client.DefaultHttpClient r0;
        org.apache.http.params.HttpParams r2, $r14;
        org.apache.http.conn.ClientConnectionManagerFactory r3, r30;
        java.lang.String r4, $r20, $r23, $r29;
        org.apache.http.conn.scheme.PlainSocketFactory $r7;
        org.apache.http.conn.ssl.SSLSocketFactory $r10;
        java.lang.Object $r12, $r15, $r17;
        java.lang.Class $r16;
        java.lang.Throwable $r18, $r21;
        java.lang.ClassNotFoundException $r24;
        org.apache.http.conn.ClientConnectionManager r35;
        org.apache.http.conn.scheme.SchemeRegistry r36;
        org.apache.http.conn.scheme.Scheme r37, r38;
        java.lang.InstantiationError r39;
        java.lang.IllegalAccessError r40;
        java.lang.StringBuilder r41;
        java.lang.IllegalStateException r42;
        org.apache.http.impl.conn.SingleClientConnManager r43;
        java.lang.InstantiationException r44;
        java.lang.IllegalAccessException r45;

        r0 := @this: org.apache.http.impl.client.DefaultHttpClient;

        r36 = new org.apache.http.conn.scheme.SchemeRegistry;

        specialinvoke r36.<org.apache.http.conn.scheme.SchemeRegistry: void <init>()>();

        r37 = new org.apache.http.conn.scheme.Scheme;

        $r7 = staticinvoke <org.apache.http.conn.scheme.PlainSocketFactory: org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory()>();

        specialinvoke r37.<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>("http", $r7, 80);

        virtualinvoke r36.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>(r37);

        r38 = new org.apache.http.conn.scheme.Scheme;

        $r10 = staticinvoke <org.apache.http.conn.ssl.SSLSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory()>();

        specialinvoke r38.<org.apache.http.conn.scheme.Scheme: void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int)>("https", $r10, 443);

        virtualinvoke r36.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme)>(r38);

        r2 = virtualinvoke r0.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.params.HttpParams getParams()>();

        $r12 = interfaceinvoke r2.<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.connection-manager.factory-object");

        r3 = (org.apache.http.conn.ClientConnectionManagerFactory) $r12;

        r30 = r3;

        if r3 != null goto label6;

        $r15 = interfaceinvoke r2.<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.connection-manager.factory-class-name");

        r4 = (java.lang.String) $r15;

        r30 = r3;

        if r4 == null goto label6;

     label1:
        $r16 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r4);

        $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.Object newInstance()>();

        r30 = (org.apache.http.conn.ClientConnectionManagerFactory) $r17;

     label2:
        goto label6;

     label3:
        $r21 := @caughtexception;

        r39 = new java.lang.InstantiationError;

        r44 = (java.lang.InstantiationException) $r21;

        $r23 = virtualinvoke r44.<java.lang.InstantiationException: java.lang.String getMessage()>();

        specialinvoke r39.<java.lang.InstantiationError: void <init>(java.lang.String)>($r23);

        throw r39;

     label4:
        $r18 := @caughtexception;

        r40 = new java.lang.IllegalAccessError;

        r45 = (java.lang.IllegalAccessException) $r18;

        $r20 = virtualinvoke r45.<java.lang.IllegalAccessException: java.lang.String getMessage()>();

        specialinvoke r40.<java.lang.IllegalAccessError: void <init>(java.lang.String)>($r20);

        throw r40;

     label5:
        $r24 := @caughtexception;

        r41 = new java.lang.StringBuilder;

        specialinvoke r41.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid class name: ");

        virtualinvoke r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r42 = new java.lang.IllegalStateException;

        $r29 = virtualinvoke r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r42.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r29);

        throw r42;

     label6:
        if r30 == null goto label7;

        r35 = interfaceinvoke r30.<org.apache.http.conn.ClientConnectionManagerFactory: org.apache.http.conn.ClientConnectionManager newInstance(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)>(r2, r36);

        goto label8;

     label7:
        r43 = new org.apache.http.impl.conn.SingleClientConnManager;

        $r14 = virtualinvoke r0.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.params.HttpParams getParams()>();

        specialinvoke r43.<org.apache.http.impl.conn.SingleClientConnManager: void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry)>($r14, r36);

        r35 = r43;

     label8:
        return r35;

        catch java.lang.ClassNotFoundException from label1 to label2 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.InstantiationException from label1 to label2 with label3;
    }

    protected org.apache.http.conn.ConnectionKeepAliveStrategy createConnectionKeepAliveStrategy()
    {
        org.apache.http.impl.client.DefaultHttpClient r0;
        org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy $r1;

        r0 := @this: org.apache.http.impl.client.DefaultHttpClient;

        $r1 = new org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy;

        specialinvoke $r1.<org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy: void <init>()>();

        return $r1;
    }

    protected org.apache.http.ConnectionReuseStrategy createConnectionReuseStrategy()
    {
        org.apache.http.impl.client.DefaultHttpClient r0;
        org.apache.http.impl.DefaultConnectionReuseStrategy $r1;

        r0 := @this: org.apache.http.impl.client.DefaultHttpClient;

        $r1 = new org.apache.http.impl.DefaultConnectionReuseStrategy;

        specialinvoke $r1.<org.apache.http.impl.DefaultConnectionReuseStrategy: void <init>()>();

        return $r1;
    }

    protected org.apache.http.cookie.CookieSpecRegistry createCookieSpecRegistry()
    {
        org.apache.http.impl.client.DefaultHttpClient r0;
        org.apache.http.cookie.CookieSpecRegistry $r2;
        org.apache.http.impl.cookie.BestMatchSpecFactory $r3;
        org.apache.http.impl.cookie.BrowserCompatSpecFactory $r4;
        org.apache.http.impl.cookie.NetscapeDraftSpecFactory $r5;
        org.apache.http.impl.cookie.RFC2109SpecFactory $r6;
        org.apache.http.impl.cookie.RFC2965SpecFactory $r7;

        r0 := @this: org.apache.http.impl.client.DefaultHttpClient;

        $r2 = new org.apache.http.cookie.CookieSpecRegistry;

        specialinvoke $r2.<org.apache.http.cookie.CookieSpecRegistry: void <init>()>();

        $r3 = new org.apache.http.impl.cookie.BestMatchSpecFactory;

        specialinvoke $r3.<org.apache.http.impl.cookie.BestMatchSpecFactory: void <init>()>();

        virtualinvoke $r2.<org.apache.http.cookie.CookieSpecRegistry: void register(java.lang.String,org.apache.http.cookie.CookieSpecFactory)>("best-match", $r3);

        $r4 = new org.apache.http.impl.cookie.BrowserCompatSpecFactory;

        specialinvoke $r4.<org.apache.http.impl.cookie.BrowserCompatSpecFactory: void <init>()>();

        virtualinvoke $r2.<org.apache.http.cookie.CookieSpecRegistry: void register(java.lang.String,org.apache.http.cookie.CookieSpecFactory)>("compatibility", $r4);

        $r5 = new org.apache.http.impl.cookie.NetscapeDraftSpecFactory;

        specialinvoke $r5.<org.apache.http.impl.cookie.NetscapeDraftSpecFactory: void <init>()>();

        virtualinvoke $r2.<org.apache.http.cookie.CookieSpecRegistry: void register(java.lang.String,org.apache.http.cookie.CookieSpecFactory)>("netscape", $r5);

        $r6 = new org.apache.http.impl.cookie.RFC2109SpecFactory;

        specialinvoke $r6.<org.apache.http.impl.cookie.RFC2109SpecFactory: void <init>()>();

        virtualinvoke $r2.<org.apache.http.cookie.CookieSpecRegistry: void register(java.lang.String,org.apache.http.cookie.CookieSpecFactory)>("rfc2109", $r6);

        $r7 = new org.apache.http.impl.cookie.RFC2965SpecFactory;

        specialinvoke $r7.<org.apache.http.impl.cookie.RFC2965SpecFactory: void <init>()>();

        virtualinvoke $r2.<org.apache.http.cookie.CookieSpecRegistry: void register(java.lang.String,org.apache.http.cookie.CookieSpecFactory)>("rfc2965", $r7);

        return $r2;
    }

    protected org.apache.http.client.CookieStore createCookieStore()
    {
        org.apache.http.impl.client.DefaultHttpClient r0;
        org.apache.http.impl.client.BasicCookieStore $r1;

        r0 := @this: org.apache.http.impl.client.DefaultHttpClient;

        $r1 = new org.apache.http.impl.client.BasicCookieStore;

        specialinvoke $r1.<org.apache.http.impl.client.BasicCookieStore: void <init>()>();

        return $r1;
    }

    protected org.apache.http.client.CredentialsProvider createCredentialsProvider()
    {
        org.apache.http.impl.client.DefaultHttpClient r0;
        org.apache.http.impl.client.BasicCredentialsProvider $r1;

        r0 := @this: org.apache.http.impl.client.DefaultHttpClient;

        $r1 = new org.apache.http.impl.client.BasicCredentialsProvider;

        specialinvoke $r1.<org.apache.http.impl.client.BasicCredentialsProvider: void <init>()>();

        return $r1;
    }

    protected org.apache.http.protocol.HttpContext createHttpContext()
    {
        org.apache.http.impl.client.DefaultHttpClient r0;
        org.apache.http.protocol.BasicHttpContext $r2;
        org.apache.http.auth.AuthSchemeRegistry $r3;
        org.apache.http.cookie.CookieSpecRegistry $r4;
        org.apache.http.client.CookieStore $r5;
        org.apache.http.client.CredentialsProvider $r6;

        r0 := @this: org.apache.http.impl.client.DefaultHttpClient;

        $r2 = new org.apache.http.protocol.BasicHttpContext;

        specialinvoke $r2.<org.apache.http.protocol.BasicHttpContext: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.auth.AuthSchemeRegistry getAuthSchemes()>();

        interfaceinvoke $r2.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.authscheme-registry", $r3);

        $r4 = virtualinvoke r0.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.cookie.CookieSpecRegistry getCookieSpecs()>();

        interfaceinvoke $r2.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.cookiespec-registry", $r4);

        $r5 = virtualinvoke r0.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.client.CookieStore getCookieStore()>();

        interfaceinvoke $r2.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.cookie-store", $r5);

        $r6 = virtualinvoke r0.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.client.CredentialsProvider getCredentialsProvider()>();

        interfaceinvoke $r2.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.auth.credentials-provider", $r6);

        return $r2;
    }

    protected org.apache.http.params.HttpParams createHttpParams()
    {
        org.apache.http.impl.client.DefaultHttpClient r0;
        org.apache.http.params.BasicHttpParams $r3;
        org.apache.http.HttpVersion $r4;
        java.lang.Class $r5;
        java.lang.ClassLoader $r6;
        java.lang.StringBuilder $r7;
        java.lang.String $r11, r13;
        org.apache.http.util.VersionInfo r12;

        r0 := @this: org.apache.http.impl.client.DefaultHttpClient;

        $r3 = new org.apache.http.params.BasicHttpParams;

        specialinvoke $r3.<org.apache.http.params.BasicHttpParams: void <init>()>();

        $r4 = <org.apache.http.HttpVersion: org.apache.http.HttpVersion HTTP_1_1>;

        staticinvoke <org.apache.http.params.HttpProtocolParams: void setVersion(org.apache.http.params.HttpParams,org.apache.http.ProtocolVersion)>($r3, $r4);

        staticinvoke <org.apache.http.params.HttpProtocolParams: void setContentCharset(org.apache.http.params.HttpParams,java.lang.String)>($r3, "ISO-8859-1");

        staticinvoke <org.apache.http.params.HttpProtocolParams: void setUseExpectContinue(org.apache.http.params.HttpParams,boolean)>($r3, 0);

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r12 = staticinvoke <org.apache.http.util.VersionInfo: org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader)>("org.apache.http.client", $r6);

        if r12 == null goto label1;

        r13 = virtualinvoke r12.<org.apache.http.util.VersionInfo: java.lang.String getRelease()>();

        goto label2;

     label1:
        r13 = "UNAVAILABLE";

     label2:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Apache-HttpClient/");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (java 1.4)");

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.http.params.HttpProtocolParams: void setUserAgent(org.apache.http.params.HttpParams,java.lang.String)>($r3, $r11);

        return $r3;
    }

    protected org.apache.http.protocol.BasicHttpProcessor createHttpProcessor()
    {
        org.apache.http.impl.client.DefaultHttpClient r0;
        org.apache.http.protocol.BasicHttpProcessor $r2;
        org.apache.http.client.protocol.RequestDefaultHeaders $r3;
        org.apache.http.protocol.RequestContent $r4;
        org.apache.http.protocol.RequestTargetHost $r5;
        org.apache.http.protocol.RequestConnControl $r6;
        org.apache.http.protocol.RequestUserAgent $r7;
        org.apache.http.protocol.RequestExpectContinue $r8;
        org.apache.http.client.protocol.RequestAddCookies $r9;
        org.apache.http.client.protocol.ResponseProcessCookies $r10;
        org.apache.http.client.protocol.RequestTargetAuthentication $r11;
        org.apache.http.client.protocol.RequestProxyAuthentication $r12;

        r0 := @this: org.apache.http.impl.client.DefaultHttpClient;

        $r2 = new org.apache.http.protocol.BasicHttpProcessor;

        specialinvoke $r2.<org.apache.http.protocol.BasicHttpProcessor: void <init>()>();

        $r3 = new org.apache.http.client.protocol.RequestDefaultHeaders;

        specialinvoke $r3.<org.apache.http.client.protocol.RequestDefaultHeaders: void <init>()>();

        virtualinvoke $r2.<org.apache.http.protocol.BasicHttpProcessor: void addInterceptor(org.apache.http.HttpRequestInterceptor)>($r3);

        $r4 = new org.apache.http.protocol.RequestContent;

        specialinvoke $r4.<org.apache.http.protocol.RequestContent: void <init>()>();

        virtualinvoke $r2.<org.apache.http.protocol.BasicHttpProcessor: void addInterceptor(org.apache.http.HttpRequestInterceptor)>($r4);

        $r5 = new org.apache.http.protocol.RequestTargetHost;

        specialinvoke $r5.<org.apache.http.protocol.RequestTargetHost: void <init>()>();

        virtualinvoke $r2.<org.apache.http.protocol.BasicHttpProcessor: void addInterceptor(org.apache.http.HttpRequestInterceptor)>($r5);

        $r6 = new org.apache.http.protocol.RequestConnControl;

        specialinvoke $r6.<org.apache.http.protocol.RequestConnControl: void <init>()>();

        virtualinvoke $r2.<org.apache.http.protocol.BasicHttpProcessor: void addInterceptor(org.apache.http.HttpRequestInterceptor)>($r6);

        $r7 = new org.apache.http.protocol.RequestUserAgent;

        specialinvoke $r7.<org.apache.http.protocol.RequestUserAgent: void <init>()>();

        virtualinvoke $r2.<org.apache.http.protocol.BasicHttpProcessor: void addInterceptor(org.apache.http.HttpRequestInterceptor)>($r7);

        $r8 = new org.apache.http.protocol.RequestExpectContinue;

        specialinvoke $r8.<org.apache.http.protocol.RequestExpectContinue: void <init>()>();

        virtualinvoke $r2.<org.apache.http.protocol.BasicHttpProcessor: void addInterceptor(org.apache.http.HttpRequestInterceptor)>($r8);

        $r9 = new org.apache.http.client.protocol.RequestAddCookies;

        specialinvoke $r9.<org.apache.http.client.protocol.RequestAddCookies: void <init>()>();

        virtualinvoke $r2.<org.apache.http.protocol.BasicHttpProcessor: void addInterceptor(org.apache.http.HttpRequestInterceptor)>($r9);

        $r10 = new org.apache.http.client.protocol.ResponseProcessCookies;

        specialinvoke $r10.<org.apache.http.client.protocol.ResponseProcessCookies: void <init>()>();

        virtualinvoke $r2.<org.apache.http.protocol.BasicHttpProcessor: void addInterceptor(org.apache.http.HttpResponseInterceptor)>($r10);

        $r11 = new org.apache.http.client.protocol.RequestTargetAuthentication;

        specialinvoke $r11.<org.apache.http.client.protocol.RequestTargetAuthentication: void <init>()>();

        virtualinvoke $r2.<org.apache.http.protocol.BasicHttpProcessor: void addInterceptor(org.apache.http.HttpRequestInterceptor)>($r11);

        $r12 = new org.apache.http.client.protocol.RequestProxyAuthentication;

        specialinvoke $r12.<org.apache.http.client.protocol.RequestProxyAuthentication: void <init>()>();

        virtualinvoke $r2.<org.apache.http.protocol.BasicHttpProcessor: void addInterceptor(org.apache.http.HttpRequestInterceptor)>($r12);

        return $r2;
    }

    protected org.apache.http.client.HttpRequestRetryHandler createHttpRequestRetryHandler()
    {
        org.apache.http.impl.client.DefaultHttpClient r0;
        org.apache.http.impl.client.DefaultHttpRequestRetryHandler $r1;

        r0 := @this: org.apache.http.impl.client.DefaultHttpClient;

        $r1 = new org.apache.http.impl.client.DefaultHttpRequestRetryHandler;

        specialinvoke $r1.<org.apache.http.impl.client.DefaultHttpRequestRetryHandler: void <init>()>();

        return $r1;
    }

    protected org.apache.http.conn.routing.HttpRoutePlanner createHttpRoutePlanner()
    {
        org.apache.http.impl.client.DefaultHttpClient r0;
        org.apache.http.impl.conn.ProxySelectorRoutePlanner $r1;
        org.apache.http.conn.ClientConnectionManager $r2;
        org.apache.http.conn.scheme.SchemeRegistry $r3;

        r0 := @this: org.apache.http.impl.client.DefaultHttpClient;

        $r1 = new org.apache.http.impl.conn.ProxySelectorRoutePlanner;

        $r2 = virtualinvoke r0.<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>();

        $r3 = interfaceinvoke $r2.<org.apache.http.conn.ClientConnectionManager: org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry()>();

        specialinvoke $r1.<org.apache.http.impl.conn.ProxySelectorRoutePlanner: void <init>(org.apache.http.conn.scheme.SchemeRegistry,java.net.ProxySelector)>($r3, null);

        return $r1;
    }

    protected org.apache.http.client.AuthenticationHandler createProxyAuthenticationHandler()
    {
        org.apache.http.impl.client.DefaultHttpClient r0;
        org.apache.http.impl.client.DefaultProxyAuthenticationHandler $r1;

        r0 := @this: org.apache.http.impl.client.DefaultHttpClient;

        $r1 = new org.apache.http.impl.client.DefaultProxyAuthenticationHandler;

        specialinvoke $r1.<org.apache.http.impl.client.DefaultProxyAuthenticationHandler: void <init>()>();

        return $r1;
    }

    protected org.apache.http.client.RedirectHandler createRedirectHandler()
    {
        org.apache.http.impl.client.DefaultHttpClient r0;
        org.apache.http.impl.client.DefaultRedirectHandler $r1;

        r0 := @this: org.apache.http.impl.client.DefaultHttpClient;

        $r1 = new org.apache.http.impl.client.DefaultRedirectHandler;

        specialinvoke $r1.<org.apache.http.impl.client.DefaultRedirectHandler: void <init>()>();

        return $r1;
    }

    protected org.apache.http.protocol.HttpRequestExecutor createRequestExecutor()
    {
        org.apache.http.impl.client.DefaultHttpClient r0;
        org.apache.http.protocol.HttpRequestExecutor $r1;

        r0 := @this: org.apache.http.impl.client.DefaultHttpClient;

        $r1 = new org.apache.http.protocol.HttpRequestExecutor;

        specialinvoke $r1.<org.apache.http.protocol.HttpRequestExecutor: void <init>()>();

        return $r1;
    }

    protected org.apache.http.client.AuthenticationHandler createTargetAuthenticationHandler()
    {
        org.apache.http.impl.client.DefaultHttpClient r0;
        org.apache.http.impl.client.DefaultTargetAuthenticationHandler $r1;

        r0 := @this: org.apache.http.impl.client.DefaultHttpClient;

        $r1 = new org.apache.http.impl.client.DefaultTargetAuthenticationHandler;

        specialinvoke $r1.<org.apache.http.impl.client.DefaultTargetAuthenticationHandler: void <init>()>();

        return $r1;
    }

    protected org.apache.http.client.UserTokenHandler createUserTokenHandler()
    {
        org.apache.http.impl.client.DefaultHttpClient r0;
        org.apache.http.impl.client.DefaultUserTokenHandler $r1;

        r0 := @this: org.apache.http.impl.client.DefaultHttpClient;

        $r1 = new org.apache.http.impl.client.DefaultUserTokenHandler;

        specialinvoke $r1.<org.apache.http.impl.client.DefaultUserTokenHandler: void <init>()>();

        return $r1;
    }
}
