public class org.apache.http.impl.client.DefaultRedirectHandler extends java.lang.Object implements org.apache.http.client.RedirectHandler
{
    private static final java.lang.String REDIRECT_LOCATIONS;
    private final org.apache.commons.logging.Log log;

    public void <init>()
    {
        org.apache.http.impl.client.DefaultRedirectHandler r0;
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;

        r0 := @this: org.apache.http.impl.client.DefaultRedirectHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        r0.<org.apache.http.impl.client.DefaultRedirectHandler: org.apache.commons.logging.Log log> = $r2;

        return;
    }

    public java.net.URI getLocationURI(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) throws org.apache.http.ProtocolException
    {
        org.apache.http.impl.client.DefaultRedirectHandler r0;
        org.apache.http.HttpRequest r1;
        org.apache.http.StatusLine $r5;
        java.lang.String $r9, $r13, $r19, $r20, $r21, $r28, $r33, $r39, $r42, $r45, $r51, r55;
        org.apache.commons.logging.Log $r10, r56;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r12, $r29, $r31;
        int $i0;
        org.apache.http.RequestLine $r32;
        java.net.URI $r34, r60, r68, r75, r76;
        java.lang.Throwable $r40, $r43, $r46;
        org.apache.http.HttpResponse r52;
        org.apache.http.protocol.HttpContext r53;
        org.apache.http.Header r54;
        org.apache.http.params.HttpParams r59;
        org.apache.http.HttpHost r61, r82;
        org.apache.http.impl.client.RedirectLocations r65, r66, r81;
        java.lang.StringBuilder r74, r79, r84, r86, r88;
        org.apache.http.ProtocolException r77, r80, r83, r87, r89;
        java.lang.IllegalStateException r78;
        org.apache.http.client.CircularRedirectException r85;
        java.lang.IllegalArgumentException r90;
        java.net.URISyntaxException r91, r92;

        r0 := @this: org.apache.http.impl.client.DefaultRedirectHandler;

        r52 := @parameter0: org.apache.http.HttpResponse;

        r53 := @parameter1: org.apache.http.protocol.HttpContext;

        if r52 == null goto label19;

        r54 = interfaceinvoke r52.<org.apache.http.HttpResponse: org.apache.http.Header getFirstHeader(java.lang.String)>("location");

        if r54 == null goto label18;

        r55 = interfaceinvoke r54.<org.apache.http.Header: java.lang.String getValue()>();

        $r10 = r0.<org.apache.http.impl.client.DefaultRedirectHandler: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r10.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label01;

        r56 = r0.<org.apache.http.impl.client.DefaultRedirectHandler: org.apache.commons.logging.Log log>;

        r74 = new java.lang.StringBuilder;

        specialinvoke r74.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Redirect requested to location \'");

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r55);

        virtualinvoke r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r39 = virtualinvoke r74.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r56.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r39);

     label01:
        r75 = new java.net.URI;

        specialinvoke r75.<java.net.URI: void <init>(java.lang.String)>(r55);

     label02:
        r59 = interfaceinvoke r52.<org.apache.http.HttpResponse: org.apache.http.params.HttpParams getParams()>();

        r60 = r75;

        $z1 = virtualinvoke r75.<java.net.URI: boolean isAbsolute()>();

        if $z1 != 0 goto label08;

        $z4 = interfaceinvoke r59.<org.apache.http.params.HttpParams: boolean isParameterTrue(java.lang.String)>("http.protocol.reject-relative-redirect");

        if $z4 != 0 goto label07;

        $r29 = interfaceinvoke r53.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.target_host");

        r61 = (org.apache.http.HttpHost) $r29;

        if r61 == null goto label06;

        $r31 = interfaceinvoke r53.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.request");

        r1 = (org.apache.http.HttpRequest) $r31;

     label03:
        r76 = new java.net.URI;

        $r32 = interfaceinvoke r1.<org.apache.http.HttpRequest: org.apache.http.RequestLine getRequestLine()>();

        $r33 = interfaceinvoke $r32.<org.apache.http.RequestLine: java.lang.String getUri()>();

        specialinvoke r76.<java.net.URI: void <init>(java.lang.String)>($r33);

        $r34 = staticinvoke <org.apache.http.client.utils.URIUtils: java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost,boolean)>(r76, r61, 1);

        r60 = staticinvoke <org.apache.http.client.utils.URIUtils: java.net.URI resolve(java.net.URI,java.net.URI)>($r34, r75);

     label04:
        goto label08;

     label05:
        $r40 := @caughtexception;

        r77 = new org.apache.http.ProtocolException;

        r91 = (java.net.URISyntaxException) $r40;

        $r42 = virtualinvoke r91.<java.net.URISyntaxException: java.lang.String getMessage()>();

        specialinvoke r77.<org.apache.http.ProtocolException: void <init>(java.lang.String,java.lang.Throwable)>($r42, $r40);

        throw r77;

     label06:
        r78 = new java.lang.IllegalStateException;

        specialinvoke r78.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Target host not available in the HTTP context");

        throw r78;

     label07:
        r79 = new java.lang.StringBuilder;

        specialinvoke r79.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Relative redirect location \'");

        virtualinvoke r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r75);

        virtualinvoke r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' not allowed");

        r80 = new org.apache.http.ProtocolException;

        $r28 = virtualinvoke r79.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r80.<org.apache.http.ProtocolException: void <init>(java.lang.String)>($r28);

        throw r80;

     label08:
        $z2 = interfaceinvoke r59.<org.apache.http.params.HttpParams: boolean isParameterFalse(java.lang.String)>("http.protocol.allow-circular-redirects");

        if $z2 == 0 goto label16;

        $r12 = interfaceinvoke r53.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.protocol.redirect-locations");

        r65 = (org.apache.http.impl.client.RedirectLocations) $r12;

        r66 = r65;

        if r65 != null goto label09;

        r81 = new org.apache.http.impl.client.RedirectLocations;

        specialinvoke r81.<org.apache.http.impl.client.RedirectLocations: void <init>()>();

        r66 = r81;

        interfaceinvoke r53.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.protocol.redirect-locations", r81);

     label09:
        $r13 = virtualinvoke r60.<java.net.URI: java.lang.String getFragment()>();

        if $r13 == null goto label13;

     label10:
        r82 = new org.apache.http.HttpHost;

        $r20 = virtualinvoke r60.<java.net.URI: java.lang.String getHost()>();

        $i0 = virtualinvoke r60.<java.net.URI: int getPort()>();

        $r21 = virtualinvoke r60.<java.net.URI: java.lang.String getScheme()>();

        specialinvoke r82.<org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>($r20, $i0, $r21);

        r68 = staticinvoke <org.apache.http.client.utils.URIUtils: java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost,boolean)>(r60, r82, 1);

     label11:
        goto label14;

     label12:
        $r43 := @caughtexception;

        r83 = new org.apache.http.ProtocolException;

        r92 = (java.net.URISyntaxException) $r43;

        $r45 = virtualinvoke r92.<java.net.URISyntaxException: java.lang.String getMessage()>();

        specialinvoke r83.<org.apache.http.ProtocolException: void <init>(java.lang.String,java.lang.Throwable)>($r45, $r43);

        throw r83;

     label13:
        r68 = r60;

     label14:
        $z3 = virtualinvoke r66.<org.apache.http.impl.client.RedirectLocations: boolean contains(java.net.URI)>(r68);

        if $z3 != 0 goto label15;

        virtualinvoke r66.<org.apache.http.impl.client.RedirectLocations: void add(java.net.URI)>(r68);

        goto label16;

     label15:
        r84 = new java.lang.StringBuilder;

        specialinvoke r84.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Circular redirect to \'");

        virtualinvoke r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r68);

        virtualinvoke r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        r85 = new org.apache.http.client.CircularRedirectException;

        $r19 = virtualinvoke r84.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r85.<org.apache.http.client.CircularRedirectException: void <init>(java.lang.String)>($r19);

        throw r85;

     label16:
        return r60;

     label17:
        $r46 := @caughtexception;

        r86 = new java.lang.StringBuilder;

        specialinvoke r86.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid redirect URI: ");

        virtualinvoke r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r55);

        r87 = new org.apache.http.ProtocolException;

        $r51 = virtualinvoke r86.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r87.<org.apache.http.ProtocolException: void <init>(java.lang.String,java.lang.Throwable)>($r51, $r46);

        throw r87;

     label18:
        r88 = new java.lang.StringBuilder;

        specialinvoke r88.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Received redirect response ");

        $r5 = interfaceinvoke r52.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        virtualinvoke r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        virtualinvoke r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but no location header");

        r89 = new org.apache.http.ProtocolException;

        $r9 = virtualinvoke r88.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r89.<org.apache.http.ProtocolException: void <init>(java.lang.String)>($r9);

        throw r89;

     label19:
        r90 = new java.lang.IllegalArgumentException;

        specialinvoke r90.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP response may not be null");

        throw r90;

        catch java.net.URISyntaxException from label01 to label02 with label17;
        catch java.net.URISyntaxException from label03 to label04 with label05;
        catch java.net.URISyntaxException from label10 to label11 with label12;
    }

    public boolean isRedirectRequested(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)
    {
        org.apache.http.impl.client.DefaultRedirectHandler r0;
        org.apache.http.HttpResponse r1;
        org.apache.http.protocol.HttpContext r2;
        int i0;
        java.lang.IllegalArgumentException $r3;
        org.apache.http.StatusLine $r4;

        r0 := @this: org.apache.http.impl.client.DefaultRedirectHandler;

        r1 := @parameter0: org.apache.http.HttpResponse;

        r2 := @parameter1: org.apache.http.protocol.HttpContext;

        if r1 == null goto label3;

        $r4 = interfaceinvoke r1.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        i0 = interfaceinvoke $r4.<org.apache.http.StatusLine: int getStatusCode()>();

        if i0 == 307 goto label2;

        tableswitch(i0)
        {
            case 301: goto label2;
            case 302: goto label2;
            case 303: goto label2;
            default: goto label1;
        };

     label1:
        return 0;

     label2:
        return 1;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP response may not be null");

        throw $r3;
    }

    public static void <clinit>()
    {
        <org.apache.http.impl.client.DefaultRedirectHandler: java.lang.String REDIRECT_LOCATIONS> = "http.protocol.redirect-locations";

        return;
    }
}
