public class org.apache.http.impl.client.DefaultRequestDirector extends java.lang.Object implements org.apache.http.client.RequestDirector
{
    private static java.lang.reflect.Method cleartextTrafficPermittedMethod;
    private static java.lang.Object networkSecurityPolicy;
    protected final org.apache.http.conn.ClientConnectionManager connManager;
    protected final org.apache.http.protocol.HttpProcessor httpProcessor;
    protected final org.apache.http.conn.ConnectionKeepAliveStrategy keepAliveStrategy;
    private final org.apache.commons.logging.Log log;
    protected org.apache.http.conn.ManagedClientConnection managedConn;
    private int maxRedirects;
    protected final org.apache.http.params.HttpParams params;
    private final org.apache.http.client.AuthenticationHandler proxyAuthHandler;
    private final org.apache.http.auth.AuthState proxyAuthState;
    private int redirectCount;
    protected final org.apache.http.client.RedirectHandler redirectHandler;
    protected final org.apache.http.protocol.HttpRequestExecutor requestExec;
    protected final org.apache.http.client.HttpRequestRetryHandler retryHandler;
    protected final org.apache.http.ConnectionReuseStrategy reuseStrategy;
    protected final org.apache.http.conn.routing.HttpRoutePlanner routePlanner;
    private final org.apache.http.client.AuthenticationHandler targetAuthHandler;
    private final org.apache.http.auth.AuthState targetAuthState;
    private final org.apache.http.client.UserTokenHandler userTokenHandler;

    public void <init>(org.apache.http.protocol.HttpRequestExecutor, org.apache.http.conn.ClientConnectionManager, org.apache.http.ConnectionReuseStrategy, org.apache.http.conn.ConnectionKeepAliveStrategy, org.apache.http.conn.routing.HttpRoutePlanner, org.apache.http.protocol.HttpProcessor, org.apache.http.client.HttpRequestRetryHandler, org.apache.http.client.RedirectHandler, org.apache.http.client.AuthenticationHandler, org.apache.http.client.AuthenticationHandler, org.apache.http.client.UserTokenHandler, org.apache.http.params.HttpParams)
    {
        org.apache.http.impl.client.DefaultRequestDirector r0;
        org.apache.http.protocol.HttpRequestExecutor r1;
        org.apache.http.conn.ClientConnectionManager r2;
        org.apache.http.ConnectionReuseStrategy r3;
        org.apache.http.conn.ConnectionKeepAliveStrategy r4;
        org.apache.http.conn.routing.HttpRoutePlanner r5;
        org.apache.http.protocol.HttpProcessor r6;
        org.apache.http.client.HttpRequestRetryHandler r7;
        org.apache.http.client.RedirectHandler r8;
        org.apache.http.client.AuthenticationHandler r9, r10;
        org.apache.http.client.UserTokenHandler r11;
        org.apache.http.params.HttpParams r12;
        java.lang.Class $r13;
        org.apache.commons.logging.Log $r14;
        java.lang.IllegalArgumentException $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26;
        int $i0;
        org.apache.http.auth.AuthState $r27, $r28;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r1 := @parameter0: org.apache.http.protocol.HttpRequestExecutor;

        r2 := @parameter1: org.apache.http.conn.ClientConnectionManager;

        r3 := @parameter2: org.apache.http.ConnectionReuseStrategy;

        r4 := @parameter3: org.apache.http.conn.ConnectionKeepAliveStrategy;

        r5 := @parameter4: org.apache.http.conn.routing.HttpRoutePlanner;

        r6 := @parameter5: org.apache.http.protocol.HttpProcessor;

        r7 := @parameter6: org.apache.http.client.HttpRequestRetryHandler;

        r8 := @parameter7: org.apache.http.client.RedirectHandler;

        r9 := @parameter8: org.apache.http.client.AuthenticationHandler;

        r10 := @parameter9: org.apache.http.client.AuthenticationHandler;

        r11 := @parameter10: org.apache.http.client.UserTokenHandler;

        r12 := @parameter11: org.apache.http.params.HttpParams;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r13 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r13);

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log> = $r14;

        if r1 == null goto label12;

        if r2 == null goto label11;

        if r3 == null goto label10;

        if r4 == null goto label09;

        if r5 == null goto label08;

        if r6 == null goto label07;

        if r7 == null goto label06;

        if r8 == null goto label05;

        if r9 == null goto label04;

        if r10 == null goto label03;

        if r11 == null goto label02;

        if r12 == null goto label01;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.protocol.HttpRequestExecutor requestExec> = r1;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ClientConnectionManager connManager> = r2;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.ConnectionReuseStrategy reuseStrategy> = r3;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ConnectionKeepAliveStrategy keepAliveStrategy> = r4;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.routing.HttpRoutePlanner routePlanner> = r5;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.protocol.HttpProcessor httpProcessor> = r6;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.HttpRequestRetryHandler retryHandler> = r7;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.RedirectHandler redirectHandler> = r8;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationHandler targetAuthHandler> = r9;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationHandler proxyAuthHandler> = r10;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.UserTokenHandler userTokenHandler> = r11;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params> = r12;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn> = null;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: int redirectCount> = 0;

        $i0 = interfaceinvoke r12.<org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>("http.protocol.max-redirects", 100);

        r0.<org.apache.http.impl.client.DefaultRequestDirector: int maxRedirects> = $i0;

        $r27 = new org.apache.http.auth.AuthState;

        specialinvoke $r27.<org.apache.http.auth.AuthState: void <init>()>();

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState targetAuthState> = $r27;

        $r28 = new org.apache.http.auth.AuthState;

        specialinvoke $r28.<org.apache.http.auth.AuthState: void <init>()>();

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState> = $r28;

        return;

     label01:
        $r26 = new java.lang.IllegalArgumentException;

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r26;

     label02:
        $r25 = new java.lang.IllegalArgumentException;

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("User token handler may not be null.");

        throw $r25;

     label03:
        $r24 = new java.lang.IllegalArgumentException;

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Proxy authentication handler may not be null.");

        throw $r24;

     label04:
        $r23 = new java.lang.IllegalArgumentException;

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Target authentication handler may not be null.");

        throw $r23;

     label05:
        $r22 = new java.lang.IllegalArgumentException;

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Redirect handler may not be null.");

        throw $r22;

     label06:
        $r21 = new java.lang.IllegalArgumentException;

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP request retry handler may not be null.");

        throw $r21;

     label07:
        $r20 = new java.lang.IllegalArgumentException;

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP protocol processor may not be null.");

        throw $r20;

     label08:
        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Route planner may not be null.");

        throw $r19;

     label09:
        $r18 = new java.lang.IllegalArgumentException;

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection keep alive strategy may not be null.");

        throw $r18;

     label10:
        $r17 = new java.lang.IllegalArgumentException;

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection reuse strategy may not be null.");

        throw $r17;

     label11:
        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Client connection manager may not be null.");

        throw $r16;

     label12:
        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Request executor may not be null.");

        throw $r15;
    }

    private void abortConnection()
    {
        org.apache.http.impl.client.DefaultRequestDirector r0;
        org.apache.http.conn.ManagedClientConnection r1;
        java.lang.Throwable $r2, $r6;
        org.apache.commons.logging.Log $r3, $r4, $r7;
        boolean $z0;
        java.lang.String $r5;
        java.io.IOException r10;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r1 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        if r1 == null goto label7;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn> = null;

     label1:
        interfaceinvoke r1.<org.apache.http.conn.ManagedClientConnection: void abortConnection()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r3.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label4;

        $r4 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        r10 = (java.io.IOException) $r2;

        $r5 = virtualinvoke r10.<java.io.IOException: java.lang.String getMessage()>();

        interfaceinvoke $r4.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>($r5, $r2);

     label4:
        interfaceinvoke r1.<org.apache.http.conn.ManagedClientConnection: void releaseConnection()>();

     label5:
        goto label7;

     label6:
        $r6 := @caughtexception;

        $r7 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r7.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("Error releasing connection", $r6);

     label7:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.io.IOException from label4 to label5 with label6;
    }

    private static boolean isCleartextTrafficPermitted(java.lang.String)
    {
        java.lang.reflect.Method r0, $r1, $r6, $r10;
        boolean z0;
        java.lang.Object[] $r2, $r7;
        java.lang.Object $r3, $r8, r15;
        java.lang.Boolean $r4;
        java.lang.Class[] $r5, $r9;
        java.lang.Throwable $r11, $r12;
        java.lang.String r13;
        java.lang.Class r14;

        r13 := @parameter0: java.lang.String;

     label1:
        entermonitor class "Lorg/apache/http/impl/client/DefaultRequestDirector;";

     label2:
        $r1 = <org.apache.http.impl.client.DefaultRequestDirector: java.lang.reflect.Method cleartextTrafficPermittedMethod>;

        if $r1 != null goto label3;

        r14 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("android.security.NetworkSecurityPolicy");

        $r5 = newarray (java.lang.Class)[0];

        $r6 = virtualinvoke r14.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getInstance", $r5);

        $r7 = newarray (java.lang.Object)[0];

        $r8 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r7);

        <org.apache.http.impl.client.DefaultRequestDirector: java.lang.Object networkSecurityPolicy> = $r8;

        $r9 = newarray (java.lang.Class)[1];

        $r9[0] = class "Ljava/lang/String;";

        $r10 = virtualinvoke r14.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("isCleartextTrafficPermitted", $r9);

        <org.apache.http.impl.client.DefaultRequestDirector: java.lang.reflect.Method cleartextTrafficPermittedMethod> = $r10;

     label3:
        r15 = <org.apache.http.impl.client.DefaultRequestDirector: java.lang.Object networkSecurityPolicy>;

        r0 = <org.apache.http.impl.client.DefaultRequestDirector: java.lang.reflect.Method cleartextTrafficPermittedMethod>;

        exitmonitor class "Lorg/apache/http/impl/client/DefaultRequestDirector;";

     label4:
        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r13;

        $r3 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r15, $r2);

        $r4 = (java.lang.Boolean) $r3;

        z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

     label5:
        return z0;

     label6:
        $r12 := @caughtexception;

     label7:
        exitmonitor class "Lorg/apache/http/impl/client/DefaultRequestDirector;";

     label8:
        throw $r12;

     label9:
        $r11 := @caughtexception;

        return 1;

        catch java.lang.ReflectiveOperationException from label1 to label2 with label9;
        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.ReflectiveOperationException from label4 to label5 with label9;
        catch java.lang.Throwable from label7 to label8 with label6;
        catch java.lang.ReflectiveOperationException from label8 to label9 with label9;
    }

    private void processChallenges(java.util.Map, org.apache.http.auth.AuthState, org.apache.http.client.AuthenticationHandler, org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) throws org.apache.http.auth.MalformedChallengeException, org.apache.http.auth.AuthenticationException
    {
        org.apache.http.impl.client.DefaultRequestDirector r0;
        org.apache.http.client.AuthenticationHandler r1;
        org.apache.http.HttpResponse r2;
        org.apache.http.protocol.HttpContext r3;
        org.apache.http.auth.AuthScheme r4, r16;
        java.util.Locale $r5;
        java.lang.String $r6, $r12, r17;
        java.lang.Object $r7;
        java.lang.StringBuilder $r8;
        org.apache.http.auth.AuthenticationException $r11;
        org.apache.commons.logging.Log $r13;
        java.util.Map r14;
        org.apache.http.auth.AuthState r15;
        org.apache.http.Header r18;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r14 := @parameter0: java.util.Map;

        r15 := @parameter1: org.apache.http.auth.AuthState;

        r1 := @parameter2: org.apache.http.client.AuthenticationHandler;

        r2 := @parameter3: org.apache.http.HttpResponse;

        r3 := @parameter4: org.apache.http.protocol.HttpContext;

        r4 = virtualinvoke r15.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme getAuthScheme()>();

        r16 = r4;

        if r4 != null goto label1;

        r16 = interfaceinvoke r1.<org.apache.http.client.AuthenticationHandler: org.apache.http.auth.AuthScheme selectScheme(java.util.Map,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r14, r2, r3);

        virtualinvoke r15.<org.apache.http.auth.AuthState: void setAuthScheme(org.apache.http.auth.AuthScheme)>(r16);

     label1:
        r17 = interfaceinvoke r16.<org.apache.http.auth.AuthScheme: java.lang.String getSchemeName()>();

        $r5 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r6 = virtualinvoke r17.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r5);

        $r7 = interfaceinvoke r14.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        r18 = (org.apache.http.Header) $r7;

        if r18 == null goto label2;

        interfaceinvoke r16.<org.apache.http.auth.AuthScheme: void processChallenge(org.apache.http.Header)>(r18);

        $r13 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r13.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Authorization challenge processed");

        return;

     label2:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" authorization challenge expected, but not found");

        $r11 = new org.apache.http.auth.AuthenticationException;

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<org.apache.http.auth.AuthenticationException: void <init>(java.lang.String)>($r12);

        throw $r11;
    }

    private void updateAuthState(org.apache.http.auth.AuthState, org.apache.http.HttpHost, org.apache.http.client.CredentialsProvider)
    {
        org.apache.http.impl.client.DefaultRequestDirector r0;
        org.apache.http.auth.AuthState r1;
        int i0, i1;
        org.apache.http.auth.AuthScheme r2;
        org.apache.commons.logging.Log r3, $r7, $r8, $r9, $r10, $r11;
        boolean $z0, $z1, $z2, $z3;
        org.apache.http.auth.AuthScope $r4;
        java.lang.String $r5, $r6, $r15, r21;
        java.lang.StringBuilder $r12;
        org.apache.http.conn.ClientConnectionManager $r16;
        org.apache.http.conn.scheme.SchemeRegistry $r17;
        org.apache.http.conn.scheme.Scheme $r18;
        org.apache.http.HttpHost r19;
        org.apache.http.client.CredentialsProvider r20;
        org.apache.http.auth.Credentials r24, r25;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r1 := @parameter0: org.apache.http.auth.AuthState;

        r19 := @parameter1: org.apache.http.HttpHost;

        r20 := @parameter2: org.apache.http.client.CredentialsProvider;

        $z0 = virtualinvoke r1.<org.apache.http.auth.AuthState: boolean isValid()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        r21 = virtualinvoke r19.<org.apache.http.HttpHost: java.lang.String getHostName()>();

        i0 = virtualinvoke r19.<org.apache.http.HttpHost: int getPort()>();

        i1 = i0;

        if i0 >= 0 goto label2;

        $r16 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ClientConnectionManager connManager>;

        $r17 = interfaceinvoke $r16.<org.apache.http.conn.ClientConnectionManager: org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry()>();

        $r18 = virtualinvoke $r17.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme getScheme(org.apache.http.HttpHost)>(r19);

        i1 = virtualinvoke $r18.<org.apache.http.conn.scheme.Scheme: int getDefaultPort()>();

     label2:
        r2 = virtualinvoke r1.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme getAuthScheme()>();

        $r4 = new org.apache.http.auth.AuthScope;

        $r5 = interfaceinvoke r2.<org.apache.http.auth.AuthScheme: java.lang.String getRealm()>();

        $r6 = interfaceinvoke r2.<org.apache.http.auth.AuthScheme: java.lang.String getSchemeName()>();

        specialinvoke $r4.<org.apache.http.auth.AuthScope: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>(r21, i1, $r5, $r6);

        $r7 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z1 = interfaceinvoke $r7.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label3;

        r3 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Authentication scope: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r3.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r15);

     label3:
        r24 = virtualinvoke r1.<org.apache.http.auth.AuthState: org.apache.http.auth.Credentials getCredentials()>();

        if r24 != null goto label5;

        r25 = interfaceinvoke r20.<org.apache.http.client.CredentialsProvider: org.apache.http.auth.Credentials getCredentials(org.apache.http.auth.AuthScope)>($r4);

        r24 = r25;

        $r9 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z3 = interfaceinvoke $r9.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z3 == 0 goto label6;

        if r25 == null goto label4;

        $r11 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Found credentials");

        r24 = r25;

        goto label6;

     label4:
        $r10 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Credentials not found");

        r24 = r25;

        goto label6;

     label5:
        $z2 = interfaceinvoke r2.<org.apache.http.auth.AuthScheme: boolean isComplete()>();

        if $z2 == 0 goto label6;

        $r8 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Authentication failed");

        r24 = null;

     label6:
        virtualinvoke r1.<org.apache.http.auth.AuthState: void setAuthScope(org.apache.http.auth.AuthScope)>($r4);

        virtualinvoke r1.<org.apache.http.auth.AuthState: void setCredentials(org.apache.http.auth.Credentials)>(r24);

        return;
    }

    private org.apache.http.impl.client.RequestWrapper wrapRequest(org.apache.http.HttpRequest) throws org.apache.http.ProtocolException
    {
        org.apache.http.impl.client.DefaultRequestDirector r0;
        org.apache.http.HttpRequest r1;
        boolean $z0;
        org.apache.http.impl.client.RequestWrapper $r2;
        org.apache.http.impl.client.EntityEnclosingRequestWrapper $r3;
        org.apache.http.HttpEntityEnclosingRequest $r4;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r1 := @parameter0: org.apache.http.HttpRequest;

        $z0 = r1 instanceof org.apache.http.HttpEntityEnclosingRequest;

        if $z0 == 0 goto label1;

        $r3 = new org.apache.http.impl.client.EntityEnclosingRequestWrapper;

        $r4 = (org.apache.http.HttpEntityEnclosingRequest) r1;

        specialinvoke $r3.<org.apache.http.impl.client.EntityEnclosingRequestWrapper: void <init>(org.apache.http.HttpEntityEnclosingRequest)>($r4);

        return $r3;

     label1:
        $r2 = new org.apache.http.impl.client.RequestWrapper;

        specialinvoke $r2.<org.apache.http.impl.client.RequestWrapper: void <init>(org.apache.http.HttpRequest)>(r1);

        return $r2;
    }

    protected org.apache.http.HttpRequest createConnectRequest(org.apache.http.conn.routing.HttpRoute, org.apache.http.protocol.HttpContext)
    {
        org.apache.http.impl.client.DefaultRequestDirector r0;
        int i0, $i1, $i2, i3;
        java.lang.StringBuilder $r1;
        java.lang.String $r4, $r7, $r12, r17;
        org.apache.http.message.BasicHttpRequest $r6;
        org.apache.http.params.HttpParams $r8;
        org.apache.http.ProtocolVersion $r9;
        org.apache.http.conn.ClientConnectionManager $r10;
        org.apache.http.conn.scheme.SchemeRegistry $r11;
        org.apache.http.conn.scheme.Scheme $r13;
        org.apache.http.conn.routing.HttpRoute r14;
        org.apache.http.protocol.HttpContext r15;
        org.apache.http.HttpHost r16;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r14 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        r15 := @parameter1: org.apache.http.protocol.HttpContext;

        r16 = virtualinvoke r14.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getTargetHost()>();

        r17 = virtualinvoke r16.<org.apache.http.HttpHost: java.lang.String getHostName()>();

        i0 = virtualinvoke r16.<org.apache.http.HttpHost: int getPort()>();

        i3 = i0;

        if i0 >= 0 goto label1;

        $r10 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ClientConnectionManager connManager>;

        $r11 = interfaceinvoke $r10.<org.apache.http.conn.ClientConnectionManager: org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry()>();

        $r12 = virtualinvoke r16.<org.apache.http.HttpHost: java.lang.String getSchemeName()>();

        $r13 = virtualinvoke $r11.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme getScheme(java.lang.String)>($r12);

        i3 = virtualinvoke $r13.<org.apache.http.conn.scheme.Scheme: int getDefaultPort()>();

     label1:
        $r1 = new java.lang.StringBuilder;

        $i1 = virtualinvoke r17.<java.lang.String: int length()>();

        $i2 = $i1 + 6;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i3);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = new org.apache.http.message.BasicHttpRequest;

        $r7 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        $r9 = staticinvoke <org.apache.http.params.HttpProtocolParams: org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams)>($r8);

        specialinvoke $r6.<org.apache.http.message.BasicHttpRequest: void <init>(java.lang.String,java.lang.String,org.apache.http.ProtocolVersion)>("CONNECT", $r7, $r9);

        return $r6;
    }

    protected boolean createTunnelToProxy(org.apache.http.conn.routing.HttpRoute, int, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.impl.client.DefaultRequestDirector r0;
        org.apache.http.conn.routing.HttpRoute r1;
        int i0;
        org.apache.http.protocol.HttpContext r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r1 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.http.protocol.HttpContext;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Proxy chains are not supported.");

        throw $r3;
    }

    protected boolean createTunnelToTarget(org.apache.http.conn.routing.HttpRoute, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.impl.client.DefaultRequestDirector r0;
        org.apache.http.HttpHost r1, r2;
        java.util.Map r3;
        org.apache.http.StatusLine $r4, $r9, $r22, $r68;
        int $i0, $i1;
        org.apache.http.conn.ManagedClientConnection $r5, $r6, $r14, $r35, $r39, $r67;
        java.lang.StringBuilder $r7, $r20, $r42, $r50;
        org.apache.http.impl.client.TunnelRefusedException $r11;
        java.lang.String $r12, $r16, $r25, $r44, $r46, $r52, $r54, r59;
        org.apache.http.entity.BufferedHttpEntity $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7;
        org.apache.http.params.HttpParams $r15, $r27, $r38;
        org.apache.http.auth.AuthState $r17, $r18, $r19, $r29, $r32, $r33, r70;
        org.apache.http.HttpException $r24;
        java.lang.Object $r26;
        org.apache.http.client.AuthenticationHandler $r28, $r31, r71;
        org.apache.commons.logging.Log $r30, $r36, $r41, $r49, r64, r73;
        org.apache.http.auth.Credentials $r34, r62;
        org.apache.http.Header $r37;
        org.apache.http.auth.AuthenticationException $r40, $r47, $r48, r72;
        org.apache.http.conn.routing.HttpRoute r55;
        org.apache.http.protocol.HttpContext r56;
        org.apache.http.HttpResponse r57;
        org.apache.http.HttpRequest r58;
        org.apache.http.auth.AuthScheme r60;
        org.apache.http.auth.AuthScope r61;
        org.apache.http.protocol.HttpRequestExecutor $r66;
        org.apache.http.client.CredentialsProvider r69;
        org.apache.http.ConnectionReuseStrategy r75;
        org.apache.http.HttpEntity r77, r79;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r55 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        r56 := @parameter1: org.apache.http.protocol.HttpContext;

        r1 = virtualinvoke r55.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getProxyHost()>();

        r2 = virtualinvoke r55.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getTargetHost()>();

        r57 = null;

        z7 = 0;

     label01:
        if z7 != 0 goto label22;

        z7 = 1;

        $r14 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $z0 = interfaceinvoke $r14.<org.apache.http.conn.ManagedClientConnection: boolean isOpen()>();

        if $z0 != 0 goto label02;

        $r39 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $r38 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r39.<org.apache.http.conn.ManagedClientConnection: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>(r55, r56, $r38);

        goto label02;

     label02:
        r58 = virtualinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpRequest createConnectRequest(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext)>(r55, r56);

        $r15 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        r59 = staticinvoke <org.apache.http.params.HttpProtocolParams: java.lang.String getUserAgent(org.apache.http.params.HttpParams)>($r15);

        if r59 == null goto label03;

        interfaceinvoke r58.<org.apache.http.HttpRequest: void addHeader(java.lang.String,java.lang.String)>("User-Agent", r59);

     label03:
        $r16 = virtualinvoke r2.<org.apache.http.HttpHost: java.lang.String toHostString()>();

        interfaceinvoke r58.<org.apache.http.HttpRequest: void addHeader(java.lang.String,java.lang.String)>("Host", $r16);

        $r17 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        r60 = virtualinvoke $r17.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme getAuthScheme()>();

        $r18 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        r61 = virtualinvoke $r18.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScope getAuthScope()>();

        $r19 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        r62 = virtualinvoke $r19.<org.apache.http.auth.AuthState: org.apache.http.auth.Credentials getCredentials()>();

        if r62 == null goto label07;

        if r61 != null goto label04;

        $z4 = interfaceinvoke r60.<org.apache.http.auth.AuthScheme: boolean isConnectionBased()>();

        if $z4 != 0 goto label07;

     label04:
        $r37 = interfaceinvoke r60.<org.apache.http.auth.AuthScheme: org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>(r62, r58);

        interfaceinvoke r58.<org.apache.http.HttpRequest: void addHeader(org.apache.http.Header)>($r37);

     label05:
        goto label07;

     label06:
        $r48 := @caughtexception;

        $r49 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z6 = interfaceinvoke $r49.<org.apache.commons.logging.Log: boolean isErrorEnabled()>();

        if $z6 == 0 goto label07;

        r64 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Proxy authentication error: ");

        $r52 = virtualinvoke $r48.<org.apache.http.auth.AuthenticationException: java.lang.String getMessage()>();

        virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r64.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r54);

     label07:
        $r66 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.protocol.HttpRequestExecutor requestExec>;

        $r67 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        r57 = virtualinvoke $r66.<org.apache.http.protocol.HttpRequestExecutor: org.apache.http.HttpResponse execute(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext)>(r58, $r67, r56);

        $r68 = interfaceinvoke r57.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i1 = interfaceinvoke $r68.<org.apache.http.StatusLine: int getStatusCode()>();

        if $i1 < 200 goto label21;

        $r26 = interfaceinvoke r56.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.auth.credentials-provider");

        r69 = (org.apache.http.client.CredentialsProvider) $r26;

        if r69 == null goto label19;

        $r27 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        $z1 = staticinvoke <org.apache.http.client.params.HttpClientParams: boolean isAuthenticating(org.apache.http.params.HttpParams)>($r27);

        if $z1 == 0 goto label19;

        $r28 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationHandler proxyAuthHandler>;

        $z2 = interfaceinvoke $r28.<org.apache.http.client.AuthenticationHandler: boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r57, r56);

        if $z2 == 0 goto label18;

        $r30 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r30.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Proxy requested authentication");

        $r31 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationHandler proxyAuthHandler>;

        r3 = interfaceinvoke $r31.<org.apache.http.client.AuthenticationHandler: java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r57, r56);

     label08:
        r70 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        r71 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationHandler proxyAuthHandler>;

     label09:
        specialinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: void processChallenges(java.util.Map,org.apache.http.auth.AuthState,org.apache.http.client.AuthenticationHandler,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r3, r70, r71, r57, r56);

     label10:
        goto label14;

     label11:
        $r40 := @caughtexception;

        r72 = $r40;

        goto label13;

     label12:
        $r47 := @caughtexception;

        r72 = $r47;

     label13:
        $r41 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z5 = interfaceinvoke $r41.<org.apache.commons.logging.Log: boolean isWarnEnabled()>();

        if $z5 == 0 goto label14;

        r73 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Authentication error: ");

        $r44 = virtualinvoke r72.<org.apache.http.auth.AuthenticationException: java.lang.String getMessage()>();

        virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r73.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r46);

        goto label22;

     label14:
        $r32 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        specialinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: void updateAuthState(org.apache.http.auth.AuthState,org.apache.http.HttpHost,org.apache.http.client.CredentialsProvider)>($r32, r1, r69);

        $r33 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        $r34 = virtualinvoke $r33.<org.apache.http.auth.AuthState: org.apache.http.auth.Credentials getCredentials()>();

        if $r34 == null goto label17;

        z7 = 0;

        r75 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.ConnectionReuseStrategy reuseStrategy>;

        $z3 = interfaceinvoke r75.<org.apache.http.ConnectionReuseStrategy: boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r57, r56);

        if $z3 == 0 goto label16;

        $r36 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r36.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Connection kept alive");

        r77 = interfaceinvoke r57.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        if r77 == null goto label15;

        interfaceinvoke r77.<org.apache.http.HttpEntity: void consumeContent()>();

     label15:
        goto label17;

     label16:
        $r35 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r35.<org.apache.http.conn.ManagedClientConnection: void close()>();

        goto label17;

     label17:
        goto label20;

     label18:
        $r29 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        virtualinvoke $r29.<org.apache.http.auth.AuthState: void setAuthScope(org.apache.http.auth.AuthScope)>(null);

        goto label19;

     label19:
        z7 = 1;

     label20:
        goto label01;

     label21:
        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected response to CONNECT request: ");

        $r22 = interfaceinvoke r57.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r24 = new org.apache.http.HttpException;

        $r25 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<org.apache.http.HttpException: void <init>(java.lang.String)>($r25);

        throw $r24;

     label22:
        $r4 = interfaceinvoke r57.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r4.<org.apache.http.StatusLine: int getStatusCode()>();

        if $i0 <= 299 goto label24;

        r79 = interfaceinvoke r57.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        if r79 == null goto label23;

        $r13 = new org.apache.http.entity.BufferedHttpEntity;

        specialinvoke $r13.<org.apache.http.entity.BufferedHttpEntity: void <init>(org.apache.http.HttpEntity)>(r79);

        interfaceinvoke r57.<org.apache.http.HttpResponse: void setEntity(org.apache.http.HttpEntity)>($r13);

     label23:
        $r6 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r6.<org.apache.http.conn.ManagedClientConnection: void close()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CONNECT refused by proxy: ");

        $r9 = interfaceinvoke r57.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = new org.apache.http.impl.client.TunnelRefusedException;

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<org.apache.http.impl.client.TunnelRefusedException: void <init>(java.lang.String,org.apache.http.HttpResponse)>($r12, r57);

        throw $r11;

     label24:
        $r5 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r5.<org.apache.http.conn.ManagedClientConnection: void markReusable()>();

        return 0;

        catch org.apache.http.auth.AuthenticationException from label04 to label05 with label06;
        catch org.apache.http.auth.AuthenticationException from label08 to label09 with label12;
        catch org.apache.http.auth.AuthenticationException from label09 to label10 with label11;
    }

    protected org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException
    {
        org.apache.http.impl.client.DefaultRequestDirector r0;
        org.apache.http.conn.routing.HttpRoutePlanner $r1;
        org.apache.http.conn.routing.HttpRoute $r2;
        boolean $z0;
        org.apache.http.client.methods.HttpUriRequest $r3;
        org.apache.http.params.HttpParams $r4;
        java.lang.Object $r5;
        org.apache.http.HttpHost r6, r9;
        org.apache.http.HttpRequest r7;
        org.apache.http.protocol.HttpContext r8;
        java.lang.String r10, r11, r12, $r17;
        java.net.URI r13;
        java.lang.StringBuilder $r14;
        java.lang.IllegalStateException $r16;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r6 := @parameter0: org.apache.http.HttpHost;

        r7 := @parameter1: org.apache.http.HttpRequest;

        r8 := @parameter2: org.apache.http.protocol.HttpContext;

        r9 = r6;

        if r6 != null goto label1;

        $r4 = interfaceinvoke r7.<org.apache.http.HttpRequest: org.apache.http.params.HttpParams getParams()>();

        $r5 = interfaceinvoke $r4.<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.default-host");

        r9 = (org.apache.http.HttpHost) $r5;

     label1:
        if r9 != null goto label3;

        r10 = null;

        r11 = null;

        r12 = null;

        $z0 = r7 instanceof org.apache.http.client.methods.HttpUriRequest;

        if $z0 == 0 goto label2;

        $r3 = (org.apache.http.client.methods.HttpUriRequest) r7;

        r13 = interfaceinvoke $r3.<org.apache.http.client.methods.HttpUriRequest: java.net.URI getURI()>();

        r10 = null;

        r11 = null;

        r12 = null;

        if r13 == null goto label2;

        r10 = virtualinvoke r13.<java.net.URI: java.lang.String getScheme()>();

        r11 = virtualinvoke r13.<java.net.URI: java.lang.String getHost()>();

        r12 = virtualinvoke r13.<java.net.URI: java.lang.String getPath()>();

     label2:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Target host must not be null, or set in parameters. scheme=");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", host=");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", path=");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        $r16 = new java.lang.IllegalStateException;

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r17);

        throw $r16;

     label3:
        $r1 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.routing.HttpRoutePlanner routePlanner>;

        $r2 = interfaceinvoke $r1.<org.apache.http.conn.routing.HttpRoutePlanner: org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>(r9, r7, r8);

        return $r2;
    }

    protected void establishRoute(org.apache.http.conn.routing.HttpRoute, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.impl.client.DefaultRequestDirector r0;
        org.apache.http.conn.routing.HttpRoute r2, r29;
        int i0, i1, $i2;
        org.apache.http.conn.routing.BasicRouteDirector $r3;
        org.apache.http.conn.ManagedClientConnection $r4, $r6, $r8, $r13, $r15;
        org.apache.http.params.HttpParams $r5, $r10, $r12, $r14;
        org.apache.commons.logging.Log $r7, $r11;
        org.apache.http.HttpHost $r9;
        java.lang.StringBuilder $r16, $r23;
        java.lang.IllegalStateException $r21, $r27;
        java.lang.String $r22, $r28;
        org.apache.http.protocol.HttpContext r30;
        boolean z0, z1;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r29 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        r30 := @parameter1: org.apache.http.protocol.HttpContext;

        $r3 = new org.apache.http.conn.routing.BasicRouteDirector;

        specialinvoke $r3.<org.apache.http.conn.routing.BasicRouteDirector: void <init>()>();

     label1:
        $r4 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        r2 = interfaceinvoke $r4.<org.apache.http.conn.ManagedClientConnection: org.apache.http.conn.routing.HttpRoute getRoute()>();

        i0 = interfaceinvoke $r3.<org.apache.http.conn.routing.HttpRouteDirector: int nextStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo)>(r29, r2);

        tableswitch(i0)
        {
            case -1: goto label8;
            case 0: goto label7;
            case 1: goto label6;
            case 2: goto label6;
            case 3: goto label5;
            case 4: goto label4;
            case 5: goto label3;
            default: goto label2;
        };

     label2:
        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown step indicator ");

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from RouteDirector.");

        $r27 = new java.lang.IllegalStateException;

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r28);

        throw $r27;

     label3:
        $r6 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $r5 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r6.<org.apache.http.conn.ManagedClientConnection: void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>(r30, $r5);

        goto label7;

     label4:
        $i2 = virtualinvoke r2.<org.apache.http.conn.routing.HttpRoute: int getHopCount()>();

        i1 = $i2 - 1;

        z0 = virtualinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: boolean createTunnelToProxy(org.apache.http.conn.routing.HttpRoute,int,org.apache.http.protocol.HttpContext)>(r29, i1, r30);

        $r7 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r7.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Tunnel to proxy created.");

        $r8 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $r9 = virtualinvoke r29.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getHopTarget(int)>(i1);

        $r10 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r8.<org.apache.http.conn.ManagedClientConnection: void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams)>($r9, z0, $r10);

        goto label7;

     label5:
        z1 = virtualinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: boolean createTunnelToTarget(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext)>(r29, r30);

        $r11 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Tunnel to target created.");

        $r13 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $r12 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r13.<org.apache.http.conn.ManagedClientConnection: void tunnelTarget(boolean,org.apache.http.params.HttpParams)>(z1, $r12);

        goto label7;

     label6:
        $r15 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $r14 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r15.<org.apache.http.conn.ManagedClientConnection: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>(r29, r30, $r14);

        goto label7;

     label7:
        if i0 > 0 goto label1;

        return;

     label8:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to establish route.\nplanned = ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r29);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\ncurrent = ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r21 = new java.lang.IllegalStateException;

        $r22 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r22);

        throw $r21;
    }

    public org.apache.http.HttpResponse execute(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.impl.client.DefaultRequestDirector r0;
        org.apache.http.impl.client.RequestWrapper r1, r3;
        long l0, l47;
        org.apache.http.conn.routing.HttpRoute r4, $r29, $r30, r126;
        int i1, $i2, $i3, i4;
        org.apache.commons.logging.Log r5, $r32, $r37, $r57, $r59, $r86, $r87, $r97, $r100, $r101, $r102, $r103, $r106, r144;
        org.apache.http.params.HttpParams $r7, $r9, $r15, $r17, $r24, $r50, $r56, $r104;
        org.apache.http.conn.ManagedClientConnection $r10, $r13, $r14, $r16, $r19, $r28, $r31, $r33, $r36, $r38, $r51, $r52, $r55, $r58, $r60, $r98, $r105, r130, $r241;
        org.apache.http.HttpEntity $r11, $r12, r214, r265;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, z13, z14, z15, z16, z17;
        java.lang.Object $r18, r129, r234;
        org.apache.http.auth.AuthState $r20, $r21;
        org.apache.http.protocol.HttpProcessor $r22, $r25;
        org.apache.http.protocol.HttpRequestExecutor $r23, $r26, $r39;
        org.apache.http.ConnectionReuseStrategy $r27;
        org.apache.http.conn.ConnectionKeepAliveStrategy $r34;
        java.util.concurrent.TimeUnit $r35, $r54;
        org.apache.http.HttpHost $r40, $r43, r123, r140, r141;
        java.lang.String $r41, $r45, $r49, $r88, $r107, $r110, $r113, $r115;
        org.apache.http.client.methods.AbortableHttpRequest $r53, $r61;
        java.lang.RuntimeException $r62, $r64, $r68, $r69, $r73, $r80, $r83, $r90, $r94, $r116, $r119, r136;
        java.lang.Throwable $r63, $r65, $r66, $r70, $r75, $r77, $r78, $r81, $r84, $r89, $r96, $r117, $r118, $r120, $r121, r137, r149;
        org.apache.http.HttpException $r67, $r71, $r72, $r74, $r76, $r79, $r91, $r92, $r93, $r95, $r122, r138;
        org.apache.http.impl.client.TunnelRefusedException $r85;
        org.apache.http.client.HttpRequestRetryHandler $r99;
        java.lang.Class $r109;
        org.apache.http.HttpRequest r124;
        org.apache.http.protocol.HttpContext r125;
        org.apache.http.impl.client.RoutedRequest r127, r207, r282;
        org.apache.http.HttpResponse r128, r142, r148, r255;
        org.apache.http.conn.ClientConnectionManager r131;
        org.apache.http.conn.ClientConnectionRequest r132;
        org.apache.http.client.UserTokenHandler $r233;
        java.io.InterruptedIOException r283;
        org.apache.http.client.NonRepeatableRequestException r284;
        java.lang.StringBuilder r285, r286, r288;
        java.io.IOException r287, r290, r291, r292;
        org.apache.http.conn.BasicManagedEntity r289;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r123 := @parameter0: org.apache.http.HttpHost;

        r124 := @parameter1: org.apache.http.HttpRequest;

        r125 := @parameter2: org.apache.http.protocol.HttpContext;

        r1 = specialinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.impl.client.RequestWrapper wrapRequest(org.apache.http.HttpRequest)>(r124);

        $r7 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        virtualinvoke r1.<org.apache.http.impl.client.RequestWrapper: void setParams(org.apache.http.params.HttpParams)>($r7);

        r126 = virtualinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>(r123, r1, r125);

        r282 = new org.apache.http.impl.client.RoutedRequest;

        specialinvoke r282.<org.apache.http.impl.client.RoutedRequest: void <init>(org.apache.http.impl.client.RequestWrapper,org.apache.http.conn.routing.HttpRoute)>(r1, r126);

        r127 = r282;

        $r9 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        l0 = staticinvoke <org.apache.http.conn.params.ConnManagerParams: long getTimeout(org.apache.http.params.HttpParams)>($r9);

        i4 = 0;

        z13 = 0;

        r128 = null;

        z14 = 0;

     label001:
        if z14 != 0 goto label135;

     label002:
        r3 = virtualinvoke r127.<org.apache.http.impl.client.RoutedRequest: org.apache.http.impl.client.RequestWrapper getRequest()>();

        r4 = virtualinvoke r127.<org.apache.http.impl.client.RoutedRequest: org.apache.http.conn.routing.HttpRoute getRoute()>();

        r129 = interfaceinvoke r125.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.user-token");

     label003:
        r130 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

     label004:
        if r130 != null goto label022;

     label005:
        r131 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ClientConnectionManager connManager>;

     label006:
        r132 = interfaceinvoke r131.<org.apache.http.conn.ClientConnectionManager: org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)>(r4, r129);

        $z6 = r124 instanceof org.apache.http.client.methods.AbortableHttpRequest;

        if $z6 == 0 goto label007;

        $r61 = (org.apache.http.client.methods.AbortableHttpRequest) r124;

        interfaceinvoke $r61.<org.apache.http.client.methods.AbortableHttpRequest: void setConnectionRequest(org.apache.http.conn.ClientConnectionRequest)>(r132);

     label007:
        $r54 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $r55 = interfaceinvoke r132.<org.apache.http.conn.ClientConnectionRequest: org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit)>(l0, $r54);

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn> = $r55;

     label008:
        $r56 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        $z7 = staticinvoke <org.apache.http.params.HttpConnectionParams: boolean isStaleCheckingEnabled(org.apache.http.params.HttpParams)>($r56);

        if $z7 == 0 goto label012;

        $r57 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r57.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Stale connection check");

        $r58 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $z8 = interfaceinvoke $r58.<org.apache.http.conn.ManagedClientConnection: boolean isStale()>();

        if $z8 == 0 goto label022;

        $r59 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r59.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Stale connection detected");

     label009:
        $r60 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r60.<org.apache.http.conn.ManagedClientConnection: void close()>();

     label010:
        goto label022;

     label011:
        $r84 := @caughtexception;

        goto label022;

     label012:
        goto label022;

     label013:
        $r81 := @caughtexception;

     label014:
        r283 = new java.io.InterruptedIOException;

        specialinvoke r283.<java.io.InterruptedIOException: void <init>()>();

        virtualinvoke r283.<java.io.InterruptedIOException: java.lang.Throwable initCause(java.lang.Throwable)>($r81);

     label015:
        throw r283;

     label016:
        $r64 := @caughtexception;

        r136 = $r64;

        goto label152;

     label017:
        $r63 := @caughtexception;

        r137 = $r63;

        goto label153;

     label018:
        $r91 := @caughtexception;

        r138 = $r91;

        goto label154;

     label019:
        $r94 := @caughtexception;

        r136 = $r94;

        goto label152;

     label020:
        $r118 := @caughtexception;

        r137 = $r118;

        goto label153;

     label021:
        $r93 := @caughtexception;

        r138 = $r93;

        goto label154;

     label022:
        z15 = r124 instanceof org.apache.http.client.methods.AbortableHttpRequest;

     label023:
        if z15 == 0 goto label025;

     label024:
        $r53 = (org.apache.http.client.methods.AbortableHttpRequest) r124;

        $r52 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r53.<org.apache.http.client.methods.AbortableHttpRequest: void setReleaseTrigger(org.apache.http.conn.ConnectionReleaseTrigger)>($r52);

     label025:
        $r14 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        z16 = interfaceinvoke $r14.<org.apache.http.conn.ManagedClientConnection: boolean isOpen()>();

     label026:
        if z16 != 0 goto label029;

     label027:
        $r51 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $r50 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r51.<org.apache.http.conn.ManagedClientConnection: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>(r4, r125, $r50);

     label028:
        goto label030;

     label029:
        $r16 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $r15 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        $i2 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>($r15);

        interfaceinvoke $r16.<org.apache.http.conn.ManagedClientConnection: void setSocketTimeout(int)>($i2);

     label030:
        virtualinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: void establishRoute(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext)>(r4, r125);

     label031:
        virtualinvoke r3.<org.apache.http.impl.client.RequestWrapper: void resetHeaders()>();

        virtualinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: void rewriteRequestURI(org.apache.http.impl.client.RequestWrapper,org.apache.http.conn.routing.HttpRoute)>(r3, r4);

        $r17 = virtualinvoke r3.<org.apache.http.impl.client.RequestWrapper: org.apache.http.params.HttpParams getParams()>();

        $r18 = interfaceinvoke $r17.<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.virtual-host");

        r140 = (org.apache.http.HttpHost) $r18;

     label032:
        r123 = r140;

        if r140 != null goto label038;

     label033:
        r123 = virtualinvoke r4.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getTargetHost()>();

     label034:
        goto label038;

     label035:
        $r68 := @caughtexception;

        r136 = $r68;

        goto label152;

     label036:
        $r117 := @caughtexception;

        r137 = $r117;

        goto label153;

     label037:
        $r95 := @caughtexception;

        r138 = $r95;

        goto label154;

     label038:
        r141 = virtualinvoke r4.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getProxyHost()>();

     label039:
        interfaceinvoke r125.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.target_host", r123);

        interfaceinvoke r125.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.proxy_host", r141);

     label040:
        $r19 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke r125.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.connection", $r19);

     label041:
        $r20 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState targetAuthState>;

        interfaceinvoke r125.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.auth.target-scope", $r20);

     label042:
        $r21 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        interfaceinvoke r125.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.auth.proxy-scope", $r21);

     label043:
        $r23 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.protocol.HttpRequestExecutor requestExec>;

        $r22 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.protocol.HttpProcessor httpProcessor>;

        virtualinvoke $r23.<org.apache.http.protocol.HttpRequestExecutor: void preProcess(org.apache.http.HttpRequest,org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpContext)>(r3, $r22, r125);

     label044:
        interfaceinvoke r125.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.request", r3);

     label045:
        z17 = 1;

        r142 = r128;

     label046:
        if z17 == 0 goto label088;

        i4 = i4 + 1;

     label047:
        virtualinvoke r3.<org.apache.http.impl.client.RequestWrapper: void incrementExecCount()>();

     label048:
        i1 = virtualinvoke r3.<org.apache.http.impl.client.RequestWrapper: int getExecCount()>();

     label049:
        if i1 <= 1 goto label054;

     label050:
        $z5 = virtualinvoke r3.<org.apache.http.impl.client.RequestWrapper: boolean isRepeatable()>();

        if $z5 == 0 goto label052;

     label051:
        goto label054;

     label052:
        r284 = new org.apache.http.client.NonRepeatableRequestException;

        specialinvoke r284.<org.apache.http.client.NonRepeatableRequestException: void <init>(java.lang.String)>("Cannot retry request with a non-repeatable request entity");

        throw r284;

     label053:
        $r77 := @caughtexception;

        r137 = $r77;

        goto label153;

     label054:
        $r37 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z2 = interfaceinvoke $r37.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z2 == 0 goto label057;

        r144 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        r285 = new java.lang.StringBuilder;

        specialinvoke r285.<java.lang.StringBuilder: void <init>()>();

     label055:
        virtualinvoke r285.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt ");

        virtualinvoke r285.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        virtualinvoke r285.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to execute request");

        $r49 = virtualinvoke r285.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r144.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r49);

     label056:
        goto label057;

     label057:
        $z3 = virtualinvoke r4.<org.apache.http.conn.routing.HttpRoute: boolean isSecure()>();

        if $z3 != 0 goto label060;

        $r40 = virtualinvoke r4.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getTargetHost()>();

        $r41 = virtualinvoke $r40.<org.apache.http.HttpHost: java.lang.String getHostName()>();

        $z4 = staticinvoke <org.apache.http.impl.client.DefaultRequestDirector: boolean isCleartextTrafficPermitted(java.lang.String)>($r41);

        if $z4 == 0 goto label059;

     label058:
        goto label060;

     label059:
        r287 = new java.io.IOException;

        r286 = new java.lang.StringBuilder;

        specialinvoke r286.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r286.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cleartext traffic not permitted: ");

        $r43 = virtualinvoke r4.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getTargetHost()>();

        virtualinvoke r286.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r43);

        $r45 = virtualinvoke r286.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r287.<java.io.IOException: void <init>(java.lang.String)>($r45);

        throw r287;

     label060:
        $r39 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.protocol.HttpRequestExecutor requestExec>;

        $r38 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        r148 = virtualinvoke $r39.<org.apache.http.protocol.HttpRequestExecutor: org.apache.http.HttpResponse execute(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext)>(r3, $r38, r125);

     label061:
        r142 = r148;

        z17 = 0;

        goto label046;

     label062:
        $r96 := @caughtexception;

        r149 = $r96;

        goto label066;

     label063:
        $r90 := @caughtexception;

        r136 = $r90;

        goto label152;

     label064:
        $r72 := @caughtexception;

        r138 = $r72;

        goto label154;

     label065:
        $r120 := @caughtexception;

        r149 = $r120;

     label066:
        $r97 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r97.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Closing the connection.");

     label067:
        $r98 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r98.<org.apache.http.conn.ManagedClientConnection: void close()>();

     label068:
        $r99 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.HttpRequestRetryHandler retryHandler>;

        r290 = (java.io.IOException) r149;

        $z10 = interfaceinvoke $r99.<org.apache.http.client.HttpRequestRetryHandler: boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext)>(r290, i4, r125);

        if $z10 == 0 goto label087;

     label069:
        $r100 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z11 = interfaceinvoke $r100.<org.apache.commons.logging.Log: boolean isInfoEnabled()>();

        if $z11 == 0 goto label079;

     label070:
        r5 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

     label071:
        r288 = new java.lang.StringBuilder;

     label072:
        specialinvoke r288.<java.lang.StringBuilder: void <init>()>();

     label073:
        virtualinvoke r288.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("I/O exception (");

     label074:
        $r109 = virtualinvoke r149.<java.lang.Object: java.lang.Class getClass()>();

        $r110 = virtualinvoke $r109.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r288.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r110);

     label075:
        virtualinvoke r288.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") caught when processing request: ");

     label076:
        r291 = (java.io.IOException) r149;

        $r113 = virtualinvoke r291.<java.io.IOException: java.lang.String getMessage()>();

        virtualinvoke r288.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r113);

     label077:
        $r115 = virtualinvoke r288.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r5.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r115);

     label078:
        goto label079;

     label079:
        $r101 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z12 = interfaceinvoke $r101.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z12 == 0 goto label081;

     label080:
        $r106 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        r292 = (java.io.IOException) r149;

        $r107 = virtualinvoke r292.<java.io.IOException: java.lang.String getMessage()>();

        interfaceinvoke $r106.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>($r107, r149);

     label081:
        $r102 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r102.<org.apache.commons.logging.Log: void info(java.lang.Object)>("Retrying request");

     label082:
        $i3 = virtualinvoke r4.<org.apache.http.conn.routing.HttpRoute: int getHopCount()>();

        if $i3 != 1 goto label086;

     label083:
        $r103 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r103.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Reopening the direct connection.");

     label084:
        $r105 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $r104 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r105.<org.apache.http.conn.ManagedClientConnection: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>(r4, r125, $r104);

     label085:
        goto label046;

     label086:
        throw r149;

     label087:
        throw r149;

     label088:
        $r24 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        interfaceinvoke r142.<org.apache.http.HttpResponse: void setParams(org.apache.http.params.HttpParams)>($r24);

     label089:
        $r26 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.protocol.HttpRequestExecutor requestExec>;

        $r25 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.protocol.HttpProcessor httpProcessor>;

        virtualinvoke $r26.<org.apache.http.protocol.HttpRequestExecutor: void postProcess(org.apache.http.HttpResponse,org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpContext)>(r142, $r25, r125);

     label090:
        $r27 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.ConnectionReuseStrategy reuseStrategy>;

        z13 = interfaceinvoke $r27.<org.apache.http.ConnectionReuseStrategy: boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r142, r125);

     label091:
        if z13 == 0 goto label094;

     label092:
        $r34 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ConnectionKeepAliveStrategy keepAliveStrategy>;

        l47 = interfaceinvoke $r34.<org.apache.http.conn.ConnectionKeepAliveStrategy: long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r142, r125);

     label093:
        $r36 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $r35 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        interfaceinvoke $r36.<org.apache.http.conn.ManagedClientConnection: void setIdleDuration(long,java.util.concurrent.TimeUnit)>(l47, $r35);

     label094:
        r207 = virtualinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.impl.client.RoutedRequest handleResponse(org.apache.http.impl.client.RoutedRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r127, r142, r125);

     label095:
        if r207 != null goto label096;

        z14 = 1;

        goto label107;

     label096:
        if z13 == 0 goto label103;

     label097:
        $r32 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r32.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Connection kept alive");

     label098:
        r214 = interfaceinvoke r142.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

     label099:
        if r214 == null goto label101;

     label100:
        interfaceinvoke r214.<org.apache.http.HttpEntity: void consumeContent()>();

     label101:
        $r33 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r33.<org.apache.http.conn.ManagedClientConnection: void markReusable()>();

     label102:
        goto label104;

     label103:
        $r28 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r28.<org.apache.http.conn.ManagedClientConnection: void close()>();

     label104:
        $r29 = virtualinvoke r207.<org.apache.http.impl.client.RoutedRequest: org.apache.http.conn.routing.HttpRoute getRoute()>();

        $r30 = virtualinvoke r127.<org.apache.http.impl.client.RoutedRequest: org.apache.http.conn.routing.HttpRoute getRoute()>();

        $z1 = virtualinvoke $r29.<org.apache.http.conn.routing.HttpRoute: boolean equals(java.lang.Object)>($r30);

        if $z1 != 0 goto label106;

     label105:
        virtualinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: void releaseConnection()>();

     label106:
        r127 = r207;

     label107:
        $r233 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.UserTokenHandler userTokenHandler>;

        r234 = interfaceinvoke $r233.<org.apache.http.client.UserTokenHandler: java.lang.Object getUserToken(org.apache.http.protocol.HttpContext)>(r125);

     label108:
        interfaceinvoke r125.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.user-token", r234);

     label109:
        $r241 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        if $r241 == null goto label111;

     label110:
        $r31 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r31.<org.apache.http.conn.ManagedClientConnection: void setState(java.lang.Object)>(r234);

     label111:
        r128 = r142;

        goto label001;

     label112:
        $r69 := @caughtexception;

        r136 = $r69;

        goto label152;

     label113:
        $r89 := @caughtexception;

        r137 = $r89;

        goto label153;

     label114:
        $r76 := @caughtexception;

        r138 = $r76;

        goto label154;

     label115:
        $r119 := @caughtexception;

        r136 = $r119;

        goto label152;

     label116:
        $r121 := @caughtexception;

        r137 = $r121;

        goto label153;

     label117:
        $r122 := @caughtexception;

        r138 = $r122;

        goto label154;

     label118:
        $r73 := @caughtexception;

        r136 = $r73;

        goto label152;

     label119:
        $r65 := @caughtexception;

        r137 = $r65;

        goto label153;

     label120:
        $r71 := @caughtexception;

        r138 = $r71;

        goto label154;

     label121:
        $r85 := @caughtexception;

     label122:
        $r86 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z9 = interfaceinvoke $r86.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z9 == 0 goto label124;

     label123:
        $r87 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $r88 = virtualinvoke $r85.<org.apache.http.impl.client.TunnelRefusedException: java.lang.String getMessage()>();

        interfaceinvoke $r87.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r88);

     label124:
        r255 = virtualinvoke $r85.<org.apache.http.impl.client.TunnelRefusedException: org.apache.http.HttpResponse getResponse()>();

     label125:
        goto label136;

     label126:
        $r80 := @caughtexception;

        r136 = $r80;

        goto label152;

     label127:
        $r66 := @caughtexception;

        r137 = $r66;

        goto label153;

     label128:
        $r67 := @caughtexception;

        r138 = $r67;

        goto label154;

     label129:
        $r62 := @caughtexception;

        r136 = $r62;

        goto label152;

     label130:
        $r78 := @caughtexception;

        r137 = $r78;

        goto label153;

     label131:
        $r92 := @caughtexception;

        r138 = $r92;

        goto label154;

     label132:
        $r83 := @caughtexception;

        r136 = $r83;

        goto label152;

     label133:
        $r70 := @caughtexception;

        r137 = $r70;

        goto label153;

     label134:
        $r79 := @caughtexception;

        r138 = $r79;

        goto label154;

     label135:
        r255 = r128;

     label136:
        if r255 == null goto label148;

     label137:
        $r11 = interfaceinvoke r255.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        if $r11 == null goto label148;

     label138:
        $r12 = interfaceinvoke r255.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $z0 = interfaceinvoke $r12.<org.apache.http.HttpEntity: boolean isStreaming()>();

        if $z0 != 0 goto label140;

     label139:
        goto label148;

     label140:
        r265 = interfaceinvoke r255.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

     label141:
        r289 = new org.apache.http.conn.BasicManagedEntity;

     label142:
        $r13 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        specialinvoke r289.<org.apache.http.conn.BasicManagedEntity: void <init>(org.apache.http.HttpEntity,org.apache.http.conn.ManagedClientConnection,boolean)>(r265, $r13, z13);

     label143:
        interfaceinvoke r255.<org.apache.http.HttpResponse: void setEntity(org.apache.http.HttpEntity)>(r289);

     label144:
        goto label151;

     label145:
        $r116 := @caughtexception;

        r136 = $r116;

        goto label152;

     label146:
        $r75 := @caughtexception;

        r137 = $r75;

        goto label153;

     label147:
        $r74 := @caughtexception;

        r138 = $r74;

        goto label154;

     label148:
        if z13 == 0 goto label150;

     label149:
        $r10 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r10.<org.apache.http.conn.ManagedClientConnection: void markReusable()>();

     label150:
        virtualinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: void releaseConnection()>();

     label151:
        return r255;

     label152:
        specialinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: void abortConnection()>();

        throw r136;

     label153:
        specialinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: void abortConnection()>();

        throw r137;

     label154:
        specialinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: void abortConnection()>();

        throw r138;

        catch org.apache.http.HttpException from label002 to label003 with label134;
        catch java.io.IOException from label002 to label003 with label133;
        catch java.lang.RuntimeException from label002 to label003 with label132;
        catch org.apache.http.HttpException from label003 to label004 with label131;
        catch java.io.IOException from label003 to label004 with label130;
        catch java.lang.RuntimeException from label003 to label004 with label129;
        catch org.apache.http.HttpException from label005 to label006 with label021;
        catch java.io.IOException from label005 to label006 with label020;
        catch java.lang.RuntimeException from label005 to label006 with label019;
        catch org.apache.http.HttpException from label006 to label007 with label018;
        catch java.io.IOException from label006 to label007 with label017;
        catch java.lang.RuntimeException from label006 to label007 with label016;
        catch java.lang.InterruptedException from label007 to label008 with label013;
        catch org.apache.http.HttpException from label007 to label008 with label018;
        catch java.io.IOException from label007 to label008 with label017;
        catch java.lang.RuntimeException from label007 to label008 with label016;
        catch org.apache.http.HttpException from label008 to label009 with label018;
        catch java.io.IOException from label008 to label009 with label017;
        catch java.lang.RuntimeException from label008 to label009 with label016;
        catch java.io.IOException from label009 to label010 with label011;
        catch org.apache.http.HttpException from label009 to label010 with label018;
        catch java.lang.RuntimeException from label009 to label010 with label016;
        catch org.apache.http.HttpException from label014 to label015 with label018;
        catch java.io.IOException from label014 to label015 with label017;
        catch java.lang.RuntimeException from label014 to label015 with label016;
        catch org.apache.http.HttpException from label015 to label016 with label018;
        catch java.io.IOException from label015 to label016 with label017;
        catch java.lang.RuntimeException from label015 to label016 with label016;
        catch org.apache.http.HttpException from label022 to label023 with label128;
        catch java.io.IOException from label022 to label023 with label127;
        catch java.lang.RuntimeException from label022 to label023 with label126;
        catch org.apache.http.HttpException from label024 to label025 with label018;
        catch java.io.IOException from label024 to label025 with label017;
        catch java.lang.RuntimeException from label024 to label025 with label016;
        catch org.apache.http.HttpException from label025 to label026 with label128;
        catch java.io.IOException from label025 to label026 with label127;
        catch java.lang.RuntimeException from label025 to label026 with label126;
        catch org.apache.http.HttpException from label027 to label028 with label018;
        catch java.io.IOException from label027 to label028 with label017;
        catch java.lang.RuntimeException from label027 to label028 with label016;
        catch org.apache.http.HttpException from label029 to label030 with label128;
        catch java.io.IOException from label029 to label030 with label127;
        catch java.lang.RuntimeException from label029 to label030 with label126;
        catch org.apache.http.impl.client.TunnelRefusedException from label030 to label031 with label121;
        catch org.apache.http.HttpException from label030 to label031 with label128;
        catch java.io.IOException from label030 to label031 with label127;
        catch java.lang.RuntimeException from label030 to label031 with label126;
        catch org.apache.http.HttpException from label031 to label032 with label128;
        catch java.io.IOException from label031 to label032 with label127;
        catch java.lang.RuntimeException from label031 to label032 with label126;
        catch org.apache.http.HttpException from label033 to label034 with label037;
        catch java.io.IOException from label033 to label034 with label036;
        catch java.lang.RuntimeException from label033 to label034 with label035;
        catch org.apache.http.HttpException from label038 to label039 with label120;
        catch java.io.IOException from label038 to label039 with label119;
        catch java.lang.RuntimeException from label038 to label039 with label118;
        catch org.apache.http.HttpException from label039 to label040 with label117;
        catch java.io.IOException from label039 to label040 with label116;
        catch java.lang.RuntimeException from label039 to label040 with label115;
        catch org.apache.http.HttpException from label040 to label041 with label114;
        catch java.io.IOException from label040 to label041 with label113;
        catch java.lang.RuntimeException from label040 to label041 with label112;
        catch org.apache.http.HttpException from label041 to label042 with label114;
        catch java.io.IOException from label041 to label042 with label113;
        catch java.lang.RuntimeException from label041 to label042 with label112;
        catch org.apache.http.HttpException from label042 to label043 with label114;
        catch java.io.IOException from label042 to label043 with label113;
        catch java.lang.RuntimeException from label042 to label043 with label112;
        catch org.apache.http.HttpException from label043 to label044 with label114;
        catch java.io.IOException from label043 to label044 with label113;
        catch java.lang.RuntimeException from label043 to label044 with label112;
        catch org.apache.http.HttpException from label044 to label045 with label114;
        catch java.io.IOException from label044 to label045 with label113;
        catch java.lang.RuntimeException from label044 to label045 with label112;
        catch org.apache.http.HttpException from label047 to label048 with label114;
        catch java.io.IOException from label047 to label048 with label113;
        catch java.lang.RuntimeException from label047 to label048 with label112;
        catch org.apache.http.HttpException from label048 to label049 with label114;
        catch java.io.IOException from label048 to label049 with label113;
        catch java.lang.RuntimeException from label048 to label049 with label112;
        catch org.apache.http.HttpException from label050 to label051 with label064;
        catch java.io.IOException from label050 to label051 with label053;
        catch java.lang.RuntimeException from label050 to label051 with label063;
        catch org.apache.http.HttpException from label052 to label053 with label064;
        catch java.io.IOException from label052 to label053 with label053;
        catch java.lang.RuntimeException from label052 to label053 with label063;
        catch java.io.IOException from label054 to label055 with label065;
        catch org.apache.http.HttpException from label054 to label055 with label064;
        catch java.lang.RuntimeException from label054 to label055 with label063;
        catch java.io.IOException from label055 to label056 with label062;
        catch org.apache.http.HttpException from label055 to label056 with label064;
        catch java.lang.RuntimeException from label055 to label056 with label063;
        catch java.io.IOException from label057 to label058 with label062;
        catch org.apache.http.HttpException from label057 to label058 with label064;
        catch java.lang.RuntimeException from label057 to label058 with label063;
        catch java.io.IOException from label059 to label060 with label062;
        catch org.apache.http.HttpException from label059 to label060 with label064;
        catch java.lang.RuntimeException from label059 to label060 with label063;
        catch java.io.IOException from label060 to label061 with label062;
        catch org.apache.http.HttpException from label060 to label061 with label064;
        catch java.lang.RuntimeException from label060 to label061 with label063;
        catch org.apache.http.HttpException from label066 to label067 with label114;
        catch java.io.IOException from label066 to label067 with label113;
        catch java.lang.RuntimeException from label066 to label067 with label112;
        catch org.apache.http.HttpException from label067 to label068 with label114;
        catch java.io.IOException from label067 to label068 with label113;
        catch java.lang.RuntimeException from label067 to label068 with label112;
        catch org.apache.http.HttpException from label068 to label069 with label114;
        catch java.io.IOException from label068 to label069 with label113;
        catch java.lang.RuntimeException from label068 to label069 with label112;
        catch org.apache.http.HttpException from label069 to label070 with label114;
        catch java.io.IOException from label069 to label070 with label113;
        catch java.lang.RuntimeException from label069 to label070 with label112;
        catch org.apache.http.HttpException from label070 to label071 with label114;
        catch java.io.IOException from label070 to label071 with label113;
        catch java.lang.RuntimeException from label070 to label071 with label112;
        catch org.apache.http.HttpException from label071 to label072 with label114;
        catch java.io.IOException from label071 to label072 with label113;
        catch java.lang.RuntimeException from label071 to label072 with label112;
        catch org.apache.http.HttpException from label072 to label073 with label114;
        catch java.io.IOException from label072 to label073 with label113;
        catch java.lang.RuntimeException from label072 to label073 with label112;
        catch org.apache.http.HttpException from label073 to label074 with label147;
        catch java.io.IOException from label073 to label074 with label146;
        catch java.lang.RuntimeException from label073 to label074 with label145;
        catch org.apache.http.HttpException from label074 to label075 with label147;
        catch java.io.IOException from label074 to label075 with label146;
        catch java.lang.RuntimeException from label074 to label075 with label145;
        catch org.apache.http.HttpException from label075 to label076 with label147;
        catch java.io.IOException from label075 to label076 with label146;
        catch java.lang.RuntimeException from label075 to label076 with label145;
        catch org.apache.http.HttpException from label076 to label077 with label147;
        catch java.io.IOException from label076 to label077 with label146;
        catch java.lang.RuntimeException from label076 to label077 with label145;
        catch org.apache.http.HttpException from label077 to label078 with label147;
        catch java.io.IOException from label077 to label078 with label146;
        catch java.lang.RuntimeException from label077 to label078 with label145;
        catch org.apache.http.HttpException from label079 to label080 with label147;
        catch java.io.IOException from label079 to label080 with label146;
        catch java.lang.RuntimeException from label079 to label080 with label145;
        catch org.apache.http.HttpException from label080 to label081 with label147;
        catch java.io.IOException from label080 to label081 with label146;
        catch java.lang.RuntimeException from label080 to label081 with label145;
        catch org.apache.http.HttpException from label081 to label082 with label147;
        catch java.io.IOException from label081 to label082 with label146;
        catch java.lang.RuntimeException from label081 to label082 with label145;
        catch org.apache.http.HttpException from label082 to label083 with label147;
        catch java.io.IOException from label082 to label083 with label146;
        catch java.lang.RuntimeException from label082 to label083 with label145;
        catch org.apache.http.HttpException from label083 to label084 with label147;
        catch java.io.IOException from label083 to label084 with label146;
        catch java.lang.RuntimeException from label083 to label084 with label145;
        catch org.apache.http.HttpException from label084 to label085 with label147;
        catch java.io.IOException from label084 to label085 with label146;
        catch java.lang.RuntimeException from label084 to label085 with label145;
        catch org.apache.http.HttpException from label086 to label087 with label147;
        catch java.io.IOException from label086 to label087 with label146;
        catch java.lang.RuntimeException from label086 to label087 with label145;
        catch org.apache.http.HttpException from label087 to label088 with label147;
        catch java.io.IOException from label087 to label088 with label146;
        catch java.lang.RuntimeException from label087 to label088 with label145;
        catch org.apache.http.HttpException from label088 to label089 with label147;
        catch java.io.IOException from label088 to label089 with label146;
        catch java.lang.RuntimeException from label088 to label089 with label145;
        catch org.apache.http.HttpException from label089 to label090 with label147;
        catch java.io.IOException from label089 to label090 with label146;
        catch java.lang.RuntimeException from label089 to label090 with label145;
        catch org.apache.http.HttpException from label090 to label091 with label147;
        catch java.io.IOException from label090 to label091 with label146;
        catch java.lang.RuntimeException from label090 to label091 with label145;
        catch org.apache.http.HttpException from label092 to label093 with label147;
        catch java.io.IOException from label092 to label093 with label146;
        catch java.lang.RuntimeException from label092 to label093 with label145;
        catch org.apache.http.HttpException from label093 to label094 with label147;
        catch java.io.IOException from label093 to label094 with label146;
        catch java.lang.RuntimeException from label093 to label094 with label145;
        catch org.apache.http.HttpException from label094 to label095 with label147;
        catch java.io.IOException from label094 to label095 with label146;
        catch java.lang.RuntimeException from label094 to label095 with label145;
        catch org.apache.http.HttpException from label097 to label098 with label147;
        catch java.io.IOException from label097 to label098 with label146;
        catch java.lang.RuntimeException from label097 to label098 with label145;
        catch org.apache.http.HttpException from label098 to label099 with label147;
        catch java.io.IOException from label098 to label099 with label146;
        catch java.lang.RuntimeException from label098 to label099 with label145;
        catch org.apache.http.HttpException from label100 to label101 with label147;
        catch java.io.IOException from label100 to label101 with label146;
        catch java.lang.RuntimeException from label100 to label101 with label145;
        catch org.apache.http.HttpException from label101 to label102 with label147;
        catch java.io.IOException from label101 to label102 with label146;
        catch java.lang.RuntimeException from label101 to label102 with label145;
        catch org.apache.http.HttpException from label103 to label104 with label147;
        catch java.io.IOException from label103 to label104 with label146;
        catch java.lang.RuntimeException from label103 to label104 with label145;
        catch org.apache.http.HttpException from label104 to label105 with label147;
        catch java.io.IOException from label104 to label105 with label146;
        catch java.lang.RuntimeException from label104 to label105 with label145;
        catch org.apache.http.HttpException from label105 to label106 with label147;
        catch java.io.IOException from label105 to label106 with label146;
        catch java.lang.RuntimeException from label105 to label106 with label145;
        catch org.apache.http.HttpException from label107 to label108 with label147;
        catch java.io.IOException from label107 to label108 with label146;
        catch java.lang.RuntimeException from label107 to label108 with label145;
        catch org.apache.http.HttpException from label108 to label109 with label147;
        catch java.io.IOException from label108 to label109 with label146;
        catch java.lang.RuntimeException from label108 to label109 with label145;
        catch org.apache.http.HttpException from label109 to label110 with label147;
        catch java.io.IOException from label109 to label110 with label146;
        catch java.lang.RuntimeException from label109 to label110 with label145;
        catch org.apache.http.HttpException from label110 to label111 with label147;
        catch java.io.IOException from label110 to label111 with label146;
        catch java.lang.RuntimeException from label110 to label111 with label145;
        catch org.apache.http.HttpException from label122 to label123 with label147;
        catch java.io.IOException from label122 to label123 with label146;
        catch java.lang.RuntimeException from label122 to label123 with label145;
        catch org.apache.http.HttpException from label123 to label124 with label147;
        catch java.io.IOException from label123 to label124 with label146;
        catch java.lang.RuntimeException from label123 to label124 with label145;
        catch org.apache.http.HttpException from label124 to label125 with label147;
        catch java.io.IOException from label124 to label125 with label146;
        catch java.lang.RuntimeException from label124 to label125 with label145;
        catch org.apache.http.HttpException from label137 to label138 with label147;
        catch java.io.IOException from label137 to label138 with label146;
        catch java.lang.RuntimeException from label137 to label138 with label145;
        catch org.apache.http.HttpException from label138 to label139 with label147;
        catch java.io.IOException from label138 to label139 with label146;
        catch java.lang.RuntimeException from label138 to label139 with label145;
        catch org.apache.http.HttpException from label140 to label141 with label147;
        catch java.io.IOException from label140 to label141 with label146;
        catch java.lang.RuntimeException from label140 to label141 with label145;
        catch org.apache.http.HttpException from label141 to label142 with label147;
        catch java.io.IOException from label141 to label142 with label146;
        catch java.lang.RuntimeException from label141 to label142 with label145;
        catch org.apache.http.HttpException from label142 to label143 with label147;
        catch java.io.IOException from label142 to label143 with label146;
        catch java.lang.RuntimeException from label142 to label143 with label145;
        catch org.apache.http.HttpException from label143 to label144 with label147;
        catch java.io.IOException from label143 to label144 with label146;
        catch java.lang.RuntimeException from label143 to label144 with label145;
        catch org.apache.http.HttpException from label149 to label150 with label147;
        catch java.io.IOException from label149 to label150 with label146;
        catch java.lang.RuntimeException from label149 to label150 with label145;
        catch org.apache.http.HttpException from label150 to label151 with label147;
        catch java.io.IOException from label150 to label151 with label146;
        catch java.lang.RuntimeException from label150 to label151 with label145;
    }

    protected org.apache.http.impl.client.RoutedRequest handleResponse(org.apache.http.impl.client.RoutedRequest, org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.impl.client.DefaultRequestDirector r0;
        int i0, $i1, $i2, $i3, $i4;
        org.apache.http.auth.AuthState r1, $r4, $r6, $r10, $r11, $r12, $r17, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Object $r2, $r14;
        org.apache.http.client.AuthenticationHandler $r3, $r5, $r8, $r9, $r16, r77;
        org.apache.commons.logging.Log $r7, $r15, $r36, $r44, $r51, r71, r79, r83;
        org.apache.http.auth.Credentials $r13, $r19;
        org.apache.http.client.RedirectHandler $r20, $r27;
        java.lang.StringBuilder $r21, $r37, $r45, $r52;
        org.apache.http.client.RedirectException $r25;
        java.lang.String $r26, $r29, $r30, $r42, $r47, $r49, $r54, $r56;
        org.apache.http.HttpHost $r28, r62, r75;
        org.apache.http.client.methods.HttpGet $r31;
        org.apache.http.HttpRequest $r32;
        org.apache.http.Header[] $r33;
        org.apache.http.impl.client.RequestWrapper $r34, r63;
        org.apache.http.impl.client.RoutedRequest $r35, r58;
        org.apache.http.auth.AuthenticationException $r43, $r50, $r57, r78;
        org.apache.http.HttpResponse r59;
        org.apache.http.protocol.HttpContext r60;
        org.apache.http.conn.routing.HttpRoute r61, r69;
        org.apache.http.params.HttpParams r64;
        java.net.URI r65;
        org.apache.http.client.CredentialsProvider r74;
        java.util.Map r76, r81;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r58 := @parameter0: org.apache.http.impl.client.RoutedRequest;

        r59 := @parameter1: org.apache.http.HttpResponse;

        r60 := @parameter2: org.apache.http.protocol.HttpContext;

        r61 = virtualinvoke r58.<org.apache.http.impl.client.RoutedRequest: org.apache.http.conn.routing.HttpRoute getRoute()>();

        r62 = virtualinvoke r61.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getProxyHost()>();

        r63 = virtualinvoke r58.<org.apache.http.impl.client.RoutedRequest: org.apache.http.impl.client.RequestWrapper getRequest()>();

        r64 = virtualinvoke r63.<org.apache.http.impl.client.RequestWrapper: org.apache.http.params.HttpParams getParams()>();

        $z0 = staticinvoke <org.apache.http.client.params.HttpClientParams: boolean isRedirecting(org.apache.http.params.HttpParams)>(r64);

        if $z0 == 0 goto label03;

        $r20 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.RedirectHandler redirectHandler>;

        $z4 = interfaceinvoke $r20.<org.apache.http.client.RedirectHandler: boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r59, r60);

        if $z4 == 0 goto label03;

        i0 = r0.<org.apache.http.impl.client.DefaultRequestDirector: int redirectCount>;

        $i1 = r0.<org.apache.http.impl.client.DefaultRequestDirector: int maxRedirects>;

        if i0 >= $i1 goto label02;

        $i3 = i0 + 1;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: int redirectCount> = $i3;

        $r27 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.RedirectHandler redirectHandler>;

        r65 = interfaceinvoke $r27.<org.apache.http.client.RedirectHandler: java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r59, r60);

        $r28 = new org.apache.http.HttpHost;

        $r29 = virtualinvoke r65.<java.net.URI: java.lang.String getHost()>();

        $i4 = virtualinvoke r65.<java.net.URI: int getPort()>();

        $r30 = virtualinvoke r65.<java.net.URI: java.lang.String getScheme()>();

        specialinvoke $r28.<org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>($r29, $i4, $r30);

        $r31 = new org.apache.http.client.methods.HttpGet;

        specialinvoke $r31.<org.apache.http.client.methods.HttpGet: void <init>(java.net.URI)>(r65);

        $r32 = virtualinvoke r63.<org.apache.http.impl.client.RequestWrapper: org.apache.http.HttpRequest getOriginal()>();

        $r33 = interfaceinvoke $r32.<org.apache.http.HttpRequest: org.apache.http.Header[] getAllHeaders()>();

        virtualinvoke $r31.<org.apache.http.client.methods.HttpGet: void setHeaders(org.apache.http.Header[])>($r33);

        $r34 = new org.apache.http.impl.client.RequestWrapper;

        specialinvoke $r34.<org.apache.http.impl.client.RequestWrapper: void <init>(org.apache.http.HttpRequest)>($r31);

        virtualinvoke $r34.<org.apache.http.impl.client.RequestWrapper: void setParams(org.apache.http.params.HttpParams)>(r64);

        r69 = virtualinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>($r28, $r34, r60);

        $r35 = new org.apache.http.impl.client.RoutedRequest;

        specialinvoke $r35.<org.apache.http.impl.client.RoutedRequest: void <init>(org.apache.http.impl.client.RequestWrapper,org.apache.http.conn.routing.HttpRoute)>($r34, r69);

        $r36 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z5 = interfaceinvoke $r36.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z5 == 0 goto label01;

        r71 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Redirecting to \'");

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r65);

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' via ");

        virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r69);

        $r42 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r71.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r42);

        goto label01;

     label01:
        return $r35;

     label02:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Maximum redirects (");

        $i2 = r0.<org.apache.http.impl.client.DefaultRequestDirector: int maxRedirects>;

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") exceeded");

        $r25 = new org.apache.http.client.RedirectException;

        $r26 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<org.apache.http.client.RedirectException: void <init>(java.lang.String)>($r26);

        throw $r25;

     label03:
        $r2 = interfaceinvoke r60.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.auth.credentials-provider");

        r74 = (org.apache.http.client.CredentialsProvider) $r2;

        if r74 == null goto label20;

        $z1 = staticinvoke <org.apache.http.client.params.HttpClientParams: boolean isAuthenticating(org.apache.http.params.HttpParams)>(r64);

        if $z1 == 0 goto label20;

        $r3 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationHandler targetAuthHandler>;

        $z2 = interfaceinvoke $r3.<org.apache.http.client.AuthenticationHandler: boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r59, r60);

        if $z2 == 0 goto label13;

        $r14 = interfaceinvoke r60.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.target_host");

        r75 = (org.apache.http.HttpHost) $r14;

        if r75 != null goto label04;

        r75 = virtualinvoke r61.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getTargetHost()>();

        goto label04;

     label04:
        $r15 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Target requested authentication");

        $r16 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationHandler targetAuthHandler>;

        r76 = interfaceinvoke $r16.<org.apache.http.client.AuthenticationHandler: java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r59, r60);

     label05:
        r1 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState targetAuthState>;

        r77 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationHandler targetAuthHandler>;

     label06:
        specialinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: void processChallenges(java.util.Map,org.apache.http.auth.AuthState,org.apache.http.client.AuthenticationHandler,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r76, r1, r77, r59, r60);

     label07:
        goto label11;

     label08:
        $r57 := @caughtexception;

        r78 = $r57;

        goto label10;

     label09:
        $r43 := @caughtexception;

        r78 = $r43;

     label10:
        $r44 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z6 = interfaceinvoke $r44.<org.apache.commons.logging.Log: boolean isWarnEnabled()>();

        if $z6 == 0 goto label11;

        r79 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Authentication error: ");

        $r47 = virtualinvoke r78.<org.apache.http.auth.AuthenticationException: java.lang.String getMessage()>();

        virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r79.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r49);

        return null;

     label11:
        $r17 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState targetAuthState>;

        specialinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: void updateAuthState(org.apache.http.auth.AuthState,org.apache.http.HttpHost,org.apache.http.client.CredentialsProvider)>($r17, r75, r74);

        $r18 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState targetAuthState>;

        $r19 = virtualinvoke $r18.<org.apache.http.auth.AuthState: org.apache.http.auth.Credentials getCredentials()>();

        if $r19 == null goto label12;

        return r58;

     label12:
        return null;

     label13:
        $r4 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState targetAuthState>;

        virtualinvoke $r4.<org.apache.http.auth.AuthState: void setAuthScope(org.apache.http.auth.AuthScope)>(null);

        $r5 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationHandler proxyAuthHandler>;

        $z3 = interfaceinvoke $r5.<org.apache.http.client.AuthenticationHandler: boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r59, r60);

        if $z3 == 0 goto label19;

        $r7 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r7.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Proxy requested authentication");

        $r8 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationHandler proxyAuthHandler>;

        r81 = interfaceinvoke $r8.<org.apache.http.client.AuthenticationHandler: java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r59, r60);

     label14:
        $r10 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        $r9 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationHandler proxyAuthHandler>;

        specialinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: void processChallenges(java.util.Map,org.apache.http.auth.AuthState,org.apache.http.client.AuthenticationHandler,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r81, $r10, $r9, r59, r60);

     label15:
        goto label17;

     label16:
        $r50 := @caughtexception;

        $r51 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z7 = interfaceinvoke $r51.<org.apache.commons.logging.Log: boolean isWarnEnabled()>();

        if $z7 == 0 goto label17;

        r83 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Authentication error: ");

        $r54 = virtualinvoke $r50.<org.apache.http.auth.AuthenticationException: java.lang.String getMessage()>();

        virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r56 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r83.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r56);

        return null;

     label17:
        $r11 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        specialinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: void updateAuthState(org.apache.http.auth.AuthState,org.apache.http.HttpHost,org.apache.http.client.CredentialsProvider)>($r11, r62, r74);

        $r12 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        $r13 = virtualinvoke $r12.<org.apache.http.auth.AuthState: org.apache.http.auth.Credentials getCredentials()>();

        if $r13 == null goto label18;

        return r58;

     label18:
        return null;

     label19:
        $r6 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        virtualinvoke $r6.<org.apache.http.auth.AuthState: void setAuthScope(org.apache.http.auth.AuthScope)>(null);

        goto label20;

     label20:
        return null;

        catch org.apache.http.auth.AuthenticationException from label05 to label06 with label09;
        catch org.apache.http.auth.AuthenticationException from label06 to label07 with label08;
        catch org.apache.http.auth.AuthenticationException from label14 to label15 with label16;
    }

    protected void releaseConnection()
    {
        org.apache.http.impl.client.DefaultRequestDirector r0;
        org.apache.http.conn.ManagedClientConnection $r2;
        java.lang.Throwable $r3;
        org.apache.commons.logging.Log $r4;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

     label1:
        $r2 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r2.<org.apache.http.conn.ManagedClientConnection: void releaseConnection()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r4.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("IOException releasing connection", $r3);

     label4:
        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn> = null;

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected void rewriteRequestURI(org.apache.http.impl.client.RequestWrapper, org.apache.http.conn.routing.HttpRoute) throws org.apache.http.ProtocolException
    {
        org.apache.http.impl.client.DefaultRequestDirector r0;
        org.apache.http.impl.client.RequestWrapper r1;
        org.apache.http.HttpHost $r2, $r4;
        boolean $z0, $z1, $z2;
        java.net.URI $r3, $r5, r15;
        java.lang.Throwable $r6;
        java.lang.StringBuilder $r7;
        org.apache.http.RequestLine $r9;
        java.lang.String $r10, $r13;
        org.apache.http.ProtocolException $r12;
        org.apache.http.conn.routing.HttpRoute r14;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r1 := @parameter0: org.apache.http.impl.client.RequestWrapper;

        r14 := @parameter1: org.apache.http.conn.routing.HttpRoute;

     label1:
        r15 = virtualinvoke r1.<org.apache.http.impl.client.RequestWrapper: java.net.URI getURI()>();

        $r2 = virtualinvoke r14.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getProxyHost()>();

        if $r2 == null goto label3;

        $z1 = virtualinvoke r14.<org.apache.http.conn.routing.HttpRoute: boolean isTunnelled()>();

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke r15.<java.net.URI: boolean isAbsolute()>();

        if $z2 != 0 goto label4;

        $r4 = virtualinvoke r14.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getTargetHost()>();

        $r5 = staticinvoke <org.apache.http.client.utils.URIUtils: java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost)>(r15, $r4);

        virtualinvoke r1.<org.apache.http.impl.client.RequestWrapper: void setURI(java.net.URI)>($r5);

     label2:
        goto label4;

     label3:
        $z0 = virtualinvoke r15.<java.net.URI: boolean isAbsolute()>();

        if $z0 == 0 goto label4;

        $r3 = staticinvoke <org.apache.http.client.utils.URIUtils: java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost)>(r15, null);

        virtualinvoke r1.<org.apache.http.impl.client.RequestWrapper: void setURI(java.net.URI)>($r3);

     label4:
        return;

     label5:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid URI: ");

        $r9 = virtualinvoke r1.<org.apache.http.impl.client.RequestWrapper: org.apache.http.RequestLine getRequestLine()>();

        $r10 = interfaceinvoke $r9.<org.apache.http.RequestLine: java.lang.String getUri()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = new org.apache.http.ProtocolException;

        $r13 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<org.apache.http.ProtocolException: void <init>(java.lang.String,java.lang.Throwable)>($r13, $r6);

        throw $r12;

        catch java.net.URISyntaxException from label1 to label2 with label5;
        catch java.net.URISyntaxException from label3 to label4 with label5;
    }
}
