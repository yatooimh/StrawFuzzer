public class org.apache.http.impl.client.DefaultTargetAuthenticationHandler extends org.apache.http.impl.client.AbstractAuthenticationHandler
{

    public void <init>()
    {
        org.apache.http.impl.client.DefaultTargetAuthenticationHandler r0;

        r0 := @this: org.apache.http.impl.client.DefaultTargetAuthenticationHandler;

        specialinvoke r0.<org.apache.http.impl.client.AbstractAuthenticationHandler: void <init>()>();

        return;
    }

    public java.util.Map getChallenges(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) throws org.apache.http.auth.MalformedChallengeException
    {
        org.apache.http.impl.client.DefaultTargetAuthenticationHandler r0;
        org.apache.http.HttpResponse r1;
        org.apache.http.protocol.HttpContext r2;
        java.lang.IllegalArgumentException $r3;
        org.apache.http.Header[] $r4;
        java.util.Map $r5;

        r0 := @this: org.apache.http.impl.client.DefaultTargetAuthenticationHandler;

        r1 := @parameter0: org.apache.http.HttpResponse;

        r2 := @parameter1: org.apache.http.protocol.HttpContext;

        if r1 == null goto label1;

        $r4 = interfaceinvoke r1.<org.apache.http.HttpResponse: org.apache.http.Header[] getHeaders(java.lang.String)>("WWW-Authenticate");

        $r5 = virtualinvoke r0.<org.apache.http.impl.client.DefaultTargetAuthenticationHandler: java.util.Map parseChallenges(org.apache.http.Header[])>($r4);

        return $r5;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP response may not be null");

        throw $r3;
    }

    public boolean isAuthenticationRequested(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext)
    {
        org.apache.http.impl.client.DefaultTargetAuthenticationHandler r0;
        org.apache.http.HttpResponse r1;
        org.apache.http.protocol.HttpContext r2;
        java.lang.IllegalArgumentException $r3;
        org.apache.http.StatusLine $r4;
        int $i0;
        boolean z0;

        r0 := @this: org.apache.http.impl.client.DefaultTargetAuthenticationHandler;

        r1 := @parameter0: org.apache.http.HttpResponse;

        r2 := @parameter1: org.apache.http.protocol.HttpContext;

        if r1 == null goto label3;

        $r4 = interfaceinvoke r1.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i0 = interfaceinvoke $r4.<org.apache.http.StatusLine: int getStatusCode()>();

        if $i0 != 401 goto label1;

        z0 = 1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP response may not be null");

        throw $r3;
    }
}
