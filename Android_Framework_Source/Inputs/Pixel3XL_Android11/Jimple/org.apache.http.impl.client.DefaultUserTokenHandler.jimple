public class org.apache.http.impl.client.DefaultUserTokenHandler extends java.lang.Object implements org.apache.http.client.UserTokenHandler
{

    public void <init>()
    {
        org.apache.http.impl.client.DefaultUserTokenHandler r0;

        r0 := @this: org.apache.http.impl.client.DefaultUserTokenHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.security.Principal getAuthPrincipal(org.apache.http.auth.AuthState)
    {
        org.apache.http.auth.AuthScheme r0;
        boolean $z0, $z1;
        java.security.Principal $r1;
        org.apache.http.auth.AuthState r2;
        org.apache.http.auth.Credentials r3;

        r2 := @parameter0: org.apache.http.auth.AuthState;

        r0 = virtualinvoke r2.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme getAuthScheme()>();

        if r0 == null goto label1;

        $z0 = interfaceinvoke r0.<org.apache.http.auth.AuthScheme: boolean isComplete()>();

        if $z0 == 0 goto label1;

        $z1 = interfaceinvoke r0.<org.apache.http.auth.AuthScheme: boolean isConnectionBased()>();

        if $z1 == 0 goto label1;

        r3 = virtualinvoke r2.<org.apache.http.auth.AuthState: org.apache.http.auth.Credentials getCredentials()>();

        if r3 == null goto label1;

        $r1 = interfaceinvoke r3.<org.apache.http.auth.Credentials: java.security.Principal getUserPrincipal()>();

        return $r1;

     label1:
        return null;
    }

    public java.lang.Object getUserToken(org.apache.http.protocol.HttpContext)
    {
        org.apache.http.impl.client.DefaultUserTokenHandler r0;
        java.lang.Object $r1, $r2, $r3;
        boolean $z0;
        org.apache.http.auth.AuthState $r4, r7;
        org.apache.http.protocol.HttpContext r5;
        java.security.Principal r6, r8, r9;
        org.apache.http.conn.ManagedClientConnection r10;
        javax.net.ssl.SSLSession r11;

        r0 := @this: org.apache.http.impl.client.DefaultUserTokenHandler;

        r5 := @parameter0: org.apache.http.protocol.HttpContext;

        r6 = null;

        $r1 = interfaceinvoke r5.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.auth.target-scope");

        r7 = (org.apache.http.auth.AuthState) $r1;

        if r7 == null goto label1;

        r8 = staticinvoke <org.apache.http.impl.client.DefaultUserTokenHandler: java.security.Principal getAuthPrincipal(org.apache.http.auth.AuthState)>(r7);

        r6 = r8;

        if r8 != null goto label1;

        $r3 = interfaceinvoke r5.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.auth.proxy-scope");

        $r4 = (org.apache.http.auth.AuthState) $r3;

        r6 = staticinvoke <org.apache.http.impl.client.DefaultUserTokenHandler: java.security.Principal getAuthPrincipal(org.apache.http.auth.AuthState)>($r4);

     label1:
        r9 = r6;

        if r6 != null goto label2;

        $r2 = interfaceinvoke r5.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.connection");

        r10 = (org.apache.http.conn.ManagedClientConnection) $r2;

        r9 = r6;

        $z0 = interfaceinvoke r10.<org.apache.http.conn.ManagedClientConnection: boolean isOpen()>();

        if $z0 == 0 goto label2;

        r11 = interfaceinvoke r10.<org.apache.http.conn.ManagedClientConnection: javax.net.ssl.SSLSession getSSLSession()>();

        r9 = r6;

        if r11 == null goto label2;

        r9 = interfaceinvoke r11.<javax.net.ssl.SSLSession: java.security.Principal getLocalPrincipal()>();

     label2:
        return r9;
    }
}
