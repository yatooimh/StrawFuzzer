public class org.apache.http.impl.client.RequestWrapper extends org.apache.http.message.AbstractHttpMessage implements org.apache.http.client.methods.HttpUriRequest
{
    private int execCount;
    private java.lang.String method;
    private final org.apache.http.HttpRequest original;
    private java.net.URI uri;
    private org.apache.http.ProtocolVersion version;

    public void <init>(org.apache.http.HttpRequest) throws org.apache.http.ProtocolException
    {
        org.apache.http.impl.client.RequestWrapper r0;
        org.apache.http.RequestLine r1;
        java.lang.IllegalArgumentException $r2;
        org.apache.http.params.HttpParams $r3;
        boolean $z0;
        java.lang.String $r4, $r5, $r10, $r14, $r17;
        org.apache.http.ProtocolVersion $r6;
        org.apache.http.client.methods.HttpUriRequest $r7, $r9;
        java.net.URI $r8, r19;
        java.lang.Throwable $r11;
        java.lang.StringBuilder $r12;
        org.apache.http.ProtocolException $r16;
        org.apache.http.HttpRequest r18;

        r0 := @this: org.apache.http.impl.client.RequestWrapper;

        r18 := @parameter0: org.apache.http.HttpRequest;

        specialinvoke r0.<org.apache.http.message.AbstractHttpMessage: void <init>()>();

        if r18 == null goto label6;

        r0.<org.apache.http.impl.client.RequestWrapper: org.apache.http.HttpRequest original> = r18;

        $r3 = interfaceinvoke r18.<org.apache.http.HttpRequest: org.apache.http.params.HttpParams getParams()>();

        virtualinvoke r0.<org.apache.http.impl.client.RequestWrapper: void setParams(org.apache.http.params.HttpParams)>($r3);

        $z0 = r18 instanceof org.apache.http.client.methods.HttpUriRequest;

        if $z0 == 0 goto label1;

        $r7 = (org.apache.http.client.methods.HttpUriRequest) r18;

        $r8 = interfaceinvoke $r7.<org.apache.http.client.methods.HttpUriRequest: java.net.URI getURI()>();

        r0.<org.apache.http.impl.client.RequestWrapper: java.net.URI uri> = $r8;

        $r9 = (org.apache.http.client.methods.HttpUriRequest) r18;

        $r10 = interfaceinvoke $r9.<org.apache.http.client.methods.HttpUriRequest: java.lang.String getMethod()>();

        r0.<org.apache.http.impl.client.RequestWrapper: java.lang.String method> = $r10;

        r0.<org.apache.http.impl.client.RequestWrapper: org.apache.http.ProtocolVersion version> = null;

        goto label4;

     label1:
        r1 = interfaceinvoke r18.<org.apache.http.HttpRequest: org.apache.http.RequestLine getRequestLine()>();

     label2:
        r19 = new java.net.URI;

        $r4 = interfaceinvoke r1.<org.apache.http.RequestLine: java.lang.String getUri()>();

        specialinvoke r19.<java.net.URI: void <init>(java.lang.String)>($r4);

        r0.<org.apache.http.impl.client.RequestWrapper: java.net.URI uri> = r19;

     label3:
        $r5 = interfaceinvoke r1.<org.apache.http.RequestLine: java.lang.String getMethod()>();

        r0.<org.apache.http.impl.client.RequestWrapper: java.lang.String method> = $r5;

        $r6 = interfaceinvoke r18.<org.apache.http.HttpRequest: org.apache.http.ProtocolVersion getProtocolVersion()>();

        r0.<org.apache.http.impl.client.RequestWrapper: org.apache.http.ProtocolVersion version> = $r6;

     label4:
        r0.<org.apache.http.impl.client.RequestWrapper: int execCount> = 0;

        return;

     label5:
        $r11 := @caughtexception;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid request URI: ");

        $r14 = interfaceinvoke r1.<org.apache.http.RequestLine: java.lang.String getUri()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = new org.apache.http.ProtocolException;

        $r17 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<org.apache.http.ProtocolException: void <init>(java.lang.String,java.lang.Throwable)>($r17, $r11);

        throw $r16;

     label6:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP request may not be null");

        throw $r2;

        catch java.net.URISyntaxException from label2 to label3 with label5;
    }

    public void abort() throws java.lang.UnsupportedOperationException
    {
        org.apache.http.impl.client.RequestWrapper r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.apache.http.impl.client.RequestWrapper;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public int getExecCount()
    {
        org.apache.http.impl.client.RequestWrapper r0;
        int $i0;

        r0 := @this: org.apache.http.impl.client.RequestWrapper;

        $i0 = r0.<org.apache.http.impl.client.RequestWrapper: int execCount>;

        return $i0;
    }

    public java.lang.String getMethod()
    {
        org.apache.http.impl.client.RequestWrapper r0;
        java.lang.String $r1;

        r0 := @this: org.apache.http.impl.client.RequestWrapper;

        $r1 = r0.<org.apache.http.impl.client.RequestWrapper: java.lang.String method>;

        return $r1;
    }

    public org.apache.http.HttpRequest getOriginal()
    {
        org.apache.http.impl.client.RequestWrapper r0;
        org.apache.http.HttpRequest $r1;

        r0 := @this: org.apache.http.impl.client.RequestWrapper;

        $r1 = r0.<org.apache.http.impl.client.RequestWrapper: org.apache.http.HttpRequest original>;

        return $r1;
    }

    public org.apache.http.ProtocolVersion getProtocolVersion()
    {
        org.apache.http.impl.client.RequestWrapper r0;
        org.apache.http.ProtocolVersion r1, $r3;
        org.apache.http.params.HttpParams $r2;

        r0 := @this: org.apache.http.impl.client.RequestWrapper;

        r1 = r0.<org.apache.http.impl.client.RequestWrapper: org.apache.http.ProtocolVersion version>;

        if r1 == null goto label1;

        return r1;

     label1:
        $r2 = virtualinvoke r0.<org.apache.http.impl.client.RequestWrapper: org.apache.http.params.HttpParams getParams()>();

        $r3 = staticinvoke <org.apache.http.params.HttpProtocolParams: org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams)>($r2);

        return $r3;
    }

    public org.apache.http.RequestLine getRequestLine()
    {
        org.apache.http.impl.client.RequestWrapper r0;
        java.lang.String r1, r3, r5;
        org.apache.http.ProtocolVersion r2;
        int $i0;
        java.net.URI r4;
        org.apache.http.message.BasicRequestLine $r6;

        r0 := @this: org.apache.http.impl.client.RequestWrapper;

        r1 = virtualinvoke r0.<org.apache.http.impl.client.RequestWrapper: java.lang.String getMethod()>();

        r2 = virtualinvoke r0.<org.apache.http.impl.client.RequestWrapper: org.apache.http.ProtocolVersion getProtocolVersion()>();

        r3 = null;

        r4 = r0.<org.apache.http.impl.client.RequestWrapper: java.net.URI uri>;

        if r4 == null goto label1;

        r3 = virtualinvoke r4.<java.net.URI: java.lang.String toASCIIString()>();

     label1:
        if r3 == null goto label2;

        r5 = r3;

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

     label2:
        r5 = "/";

     label3:
        $r6 = new org.apache.http.message.BasicRequestLine;

        specialinvoke $r6.<org.apache.http.message.BasicRequestLine: void <init>(java.lang.String,java.lang.String,org.apache.http.ProtocolVersion)>(r1, r5, r2);

        return $r6;
    }

    public java.net.URI getURI()
    {
        org.apache.http.impl.client.RequestWrapper r0;
        java.net.URI $r1;

        r0 := @this: org.apache.http.impl.client.RequestWrapper;

        $r1 = r0.<org.apache.http.impl.client.RequestWrapper: java.net.URI uri>;

        return $r1;
    }

    public void incrementExecCount()
    {
        org.apache.http.impl.client.RequestWrapper r0;
        int $i0, $i1;

        r0 := @this: org.apache.http.impl.client.RequestWrapper;

        $i0 = r0.<org.apache.http.impl.client.RequestWrapper: int execCount>;

        $i1 = $i0 + 1;

        r0.<org.apache.http.impl.client.RequestWrapper: int execCount> = $i1;

        return;
    }

    public boolean isAborted()
    {
        org.apache.http.impl.client.RequestWrapper r0;

        r0 := @this: org.apache.http.impl.client.RequestWrapper;

        return 0;
    }

    public boolean isRepeatable()
    {
        org.apache.http.impl.client.RequestWrapper r0;

        r0 := @this: org.apache.http.impl.client.RequestWrapper;

        return 1;
    }

    public void resetHeaders()
    {
        org.apache.http.impl.client.RequestWrapper r0;
        org.apache.http.message.HeaderGroup $r1;
        org.apache.http.HttpRequest $r2;
        org.apache.http.Header[] $r3;

        r0 := @this: org.apache.http.impl.client.RequestWrapper;

        $r1 = r0.<org.apache.http.impl.client.RequestWrapper: org.apache.http.message.HeaderGroup headergroup>;

        virtualinvoke $r1.<org.apache.http.message.HeaderGroup: void clear()>();

        $r2 = r0.<org.apache.http.impl.client.RequestWrapper: org.apache.http.HttpRequest original>;

        $r3 = interfaceinvoke $r2.<org.apache.http.HttpRequest: org.apache.http.Header[] getAllHeaders()>();

        virtualinvoke r0.<org.apache.http.impl.client.RequestWrapper: void setHeaders(org.apache.http.Header[])>($r3);

        return;
    }

    public void setMethod(java.lang.String)
    {
        org.apache.http.impl.client.RequestWrapper r0;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.http.impl.client.RequestWrapper;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        r0.<org.apache.http.impl.client.RequestWrapper: java.lang.String method> = r1;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Method name may not be null");

        throw $r2;
    }

    public void setProtocolVersion(org.apache.http.ProtocolVersion)
    {
        org.apache.http.impl.client.RequestWrapper r0;
        org.apache.http.ProtocolVersion r1;

        r0 := @this: org.apache.http.impl.client.RequestWrapper;

        r1 := @parameter0: org.apache.http.ProtocolVersion;

        r0.<org.apache.http.impl.client.RequestWrapper: org.apache.http.ProtocolVersion version> = r1;

        return;
    }

    public void setURI(java.net.URI)
    {
        org.apache.http.impl.client.RequestWrapper r0;
        java.net.URI r1;

        r0 := @this: org.apache.http.impl.client.RequestWrapper;

        r1 := @parameter0: java.net.URI;

        r0.<org.apache.http.impl.client.RequestWrapper: java.net.URI uri> = r1;

        return;
    }
}
