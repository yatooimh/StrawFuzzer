public class org.apache.http.impl.conn.DefaultClientConnectionOperator extends java.lang.Object implements org.apache.http.conn.ClientConnectionOperator
{
    private static final org.apache.http.conn.scheme.PlainSocketFactory staticPlainSocketFactory;
    protected org.apache.http.conn.scheme.SchemeRegistry schemeRegistry;

    static void <clinit>()
    {
        org.apache.http.conn.scheme.PlainSocketFactory $r0;

        $r0 = new org.apache.http.conn.scheme.PlainSocketFactory;

        specialinvoke $r0.<org.apache.http.conn.scheme.PlainSocketFactory: void <init>()>();

        <org.apache.http.impl.conn.DefaultClientConnectionOperator: org.apache.http.conn.scheme.PlainSocketFactory staticPlainSocketFactory> = $r0;

        return;
    }

    public void <init>(org.apache.http.conn.scheme.SchemeRegistry)
    {
        org.apache.http.impl.conn.DefaultClientConnectionOperator r0;
        org.apache.http.conn.scheme.SchemeRegistry r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.http.impl.conn.DefaultClientConnectionOperator;

        r1 := @parameter0: org.apache.http.conn.scheme.SchemeRegistry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        r0.<org.apache.http.impl.conn.DefaultClientConnectionOperator: org.apache.http.conn.scheme.SchemeRegistry schemeRegistry> = r1;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Scheme registry must not be null.");

        throw $r2;
    }

    public org.apache.http.conn.OperatedClientConnection createConnection()
    {
        org.apache.http.impl.conn.DefaultClientConnectionOperator r0;
        org.apache.http.impl.conn.DefaultClientConnection $r1;

        r0 := @this: org.apache.http.impl.conn.DefaultClientConnectionOperator;

        $r1 = new org.apache.http.impl.conn.DefaultClientConnection;

        specialinvoke $r1.<org.apache.http.impl.conn.DefaultClientConnection: void <init>()>();

        return $r1;
    }

    public void openConnection(org.apache.http.conn.OperatedClientConnection, org.apache.http.HttpHost, java.net.InetAddress, org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams) throws java.io.IOException
    {
        org.apache.http.impl.conn.DefaultClientConnectionOperator r0;
        org.apache.http.HttpHost r1;
        java.net.InetAddress r2, r36;
        org.apache.http.protocol.HttpContext r3;
        org.apache.http.params.HttpParams r4;
        org.apache.http.conn.scheme.Scheme r5;
        org.apache.http.conn.scheme.SocketFactory r6, r7, r31;
        java.lang.String r8, $r14, $r15, $r20, r41;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.http.conn.scheme.SchemeRegistry $r13;
        int $i0, $i1, i2, $i3, i4, i5, i6, i7, $i8, $i9, $i10;
        org.apache.http.conn.ConnectTimeoutException $r16, $r17, $r23, $r27, $r28, r39;
        java.lang.Throwable $r18, $r24, $r25, $r26, $r29, r40;
        org.apache.http.conn.OperatedClientConnection r30;
        org.apache.http.conn.scheme.LayeredSocketFactory r32;
        java.net.InetAddress[] r33;
        java.net.Socket r35, r38, r42;
        java.net.ConnectException r43, r44;
        org.apache.http.conn.HttpHostConnectException r45;
        java.lang.IllegalArgumentException r46, r47, r48, r49;
        java.net.SocketException r50;

        r0 := @this: org.apache.http.impl.conn.DefaultClientConnectionOperator;

        r30 := @parameter0: org.apache.http.conn.OperatedClientConnection;

        r1 := @parameter1: org.apache.http.HttpHost;

        r2 := @parameter2: java.net.InetAddress;

        r3 := @parameter3: org.apache.http.protocol.HttpContext;

        r4 := @parameter4: org.apache.http.params.HttpParams;

        if r30 == null goto label41;

        if r1 == null goto label40;

        if r4 == null goto label39;

        $z0 = interfaceinvoke r30.<org.apache.http.conn.OperatedClientConnection: boolean isOpen()>();

        if $z0 != 0 goto label38;

        $r13 = r0.<org.apache.http.impl.conn.DefaultClientConnectionOperator: org.apache.http.conn.scheme.SchemeRegistry schemeRegistry>;

        $r14 = virtualinvoke r1.<org.apache.http.HttpHost: java.lang.String getSchemeName()>();

        r5 = virtualinvoke $r13.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme getScheme(java.lang.String)>($r14);

        r6 = virtualinvoke r5.<org.apache.http.conn.scheme.Scheme: org.apache.http.conn.scheme.SocketFactory getSocketFactory()>();

        $z1 = r6 instanceof org.apache.http.conn.scheme.LayeredSocketFactory;

        if $z1 == 0 goto label01;

        r31 = <org.apache.http.impl.conn.DefaultClientConnectionOperator: org.apache.http.conn.scheme.PlainSocketFactory staticPlainSocketFactory>;

        r32 = (org.apache.http.conn.scheme.LayeredSocketFactory) r6;

        goto label02;

     label01:
        r31 = r6;

        r32 = null;

     label02:
        $r15 = virtualinvoke r1.<org.apache.http.HttpHost: java.lang.String getHostName()>();

        r33 = staticinvoke <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>($r15);

        i2 = 0;

        r7 = r31;

     label03:
        $i3 = lengthof r33;

        if i2 >= $i3 goto label37;

        r35 = interfaceinvoke r7.<org.apache.http.conn.scheme.SocketFactory: java.net.Socket createSocket()>();

        interfaceinvoke r30.<org.apache.http.conn.OperatedClientConnection: void opening(java.net.Socket,org.apache.http.HttpHost)>(r35, r1);

        r36 = r33[i2];

     label04:
        r8 = virtualinvoke r36.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $i0 = virtualinvoke r1.<org.apache.http.HttpHost: int getPort()>();

        i4 = virtualinvoke r5.<org.apache.http.conn.scheme.Scheme: int resolvePort(int)>($i0);

     label05:
        i5 = i2;

     label06:
        r38 = interfaceinvoke r7.<org.apache.http.conn.scheme.SocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>(r35, r8, i4, r2, 0, r4);

     label07:
        if r35 == r38 goto label12;

        r35 = r38;

     label08:
        interfaceinvoke r30.<org.apache.http.conn.OperatedClientConnection: void opening(java.net.Socket,org.apache.http.HttpHost)>(r38, r1);

     label09:
        goto label12;

     label10:
        $r28 := @caughtexception;

        r39 = $r28;

        goto label25;

     label11:
        $r29 := @caughtexception;

        r40 = $r29;

        i2 = i5;

        goto label33;

     label12:
        virtualinvoke r0.<org.apache.http.impl.conn.DefaultClientConnectionOperator: void prepareSocket(java.net.Socket,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>(r35, r3, r4);

     label13:
        if r32 == null goto label20;

     label14:
        r41 = virtualinvoke r1.<org.apache.http.HttpHost: java.lang.String getHostName()>();

        $i1 = virtualinvoke r1.<org.apache.http.HttpHost: int getPort()>();

        i6 = virtualinvoke r5.<org.apache.http.conn.scheme.Scheme: int resolvePort(int)>($i1);

     label15:
        r42 = interfaceinvoke r32.<org.apache.http.conn.scheme.LayeredSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>(r35, r41, i6, 1);

     label16:
        if r42 == r35 goto label18;

     label17:
        interfaceinvoke r30.<org.apache.http.conn.OperatedClientConnection: void opening(java.net.Socket,org.apache.http.HttpHost)>(r42, r1);

     label18:
        $z3 = interfaceinvoke r6.<org.apache.http.conn.scheme.SocketFactory: boolean isSecure(java.net.Socket)>(r42);

        interfaceinvoke r30.<org.apache.http.conn.OperatedClientConnection: void openCompleted(boolean,org.apache.http.params.HttpParams)>($z3, r4);

     label19:
        goto label21;

     label20:
        $z2 = interfaceinvoke r6.<org.apache.http.conn.scheme.SocketFactory: boolean isSecure(java.net.Socket)>(r35);

        interfaceinvoke r30.<org.apache.http.conn.OperatedClientConnection: void openCompleted(boolean,org.apache.http.params.HttpParams)>($z2, r4);

     label21:
        goto label37;

     label22:
        $r23 := @caughtexception;

        r39 = $r23;

        goto label31;

     label23:
        $r24 := @caughtexception;

        r40 = $r24;

        i2 = i5;

        goto label33;

     label24:
        $r17 := @caughtexception;

        r39 = $r17;

     label25:
        goto label31;

     label26:
        $r26 := @caughtexception;

        r40 = $r26;

        i2 = i5;

        goto label33;

     label27:
        $r27 := @caughtexception;

        r39 = $r27;

        goto label31;

     label28:
        $r18 := @caughtexception;

        r40 = $r18;

        i2 = i5;

        goto label33;

     label29:
        $r25 := @caughtexception;

        r40 = $r25;

        goto label33;

     label30:
        $r16 := @caughtexception;

        r39 = $r16;

     label31:
        i7 = lengthof r33;

        $i8 = i7 - 1;

        if i2 == $i8 goto label32;

        goto label36;

     label32:
        throw r39;

     label33:
        $i9 = lengthof r33;

        $i10 = $i9 - 1;

        if i2 != $i10 goto label36;

        $z4 = r40 instanceof java.net.ConnectException;

        if $z4 == 0 goto label34;

        r43 = (java.net.ConnectException) r40;

        goto label35;

     label34:
        r44 = new java.net.ConnectException;

        r50 = (java.net.SocketException) r40;

        $r20 = virtualinvoke r50.<java.net.SocketException: java.lang.String getMessage()>();

        specialinvoke r44.<java.net.ConnectException: void <init>(java.lang.String)>($r20);

        r43 = r44;

        virtualinvoke r44.<java.net.ConnectException: java.lang.Throwable initCause(java.lang.Throwable)>(r40);

     label35:
        r45 = new org.apache.http.conn.HttpHostConnectException;

        specialinvoke r45.<org.apache.http.conn.HttpHostConnectException: void <init>(org.apache.http.HttpHost,java.net.ConnectException)>(r1, r43);

        throw r45;

     label36:
        i2 = i2 + 1;

        goto label03;

     label37:
        return;

     label38:
        r46 = new java.lang.IllegalArgumentException;

        specialinvoke r46.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection must not be open.");

        throw r46;

     label39:
        r47 = new java.lang.IllegalArgumentException;

        specialinvoke r47.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameters must not be null.");

        throw r47;

     label40:
        r48 = new java.lang.IllegalArgumentException;

        specialinvoke r48.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Target host must not be null.");

        throw r48;

     label41:
        r49 = new java.lang.IllegalArgumentException;

        specialinvoke r49.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection must not be null.");

        throw r49;

        catch java.net.SocketException from label04 to label05 with label29;
        catch org.apache.http.conn.ConnectTimeoutException from label04 to label05 with label30;
        catch java.net.SocketException from label06 to label07 with label28;
        catch org.apache.http.conn.ConnectTimeoutException from label06 to label07 with label27;
        catch java.net.SocketException from label08 to label09 with label11;
        catch org.apache.http.conn.ConnectTimeoutException from label08 to label09 with label10;
        catch java.net.SocketException from label12 to label13 with label26;
        catch org.apache.http.conn.ConnectTimeoutException from label12 to label13 with label24;
        catch java.net.SocketException from label14 to label15 with label26;
        catch org.apache.http.conn.ConnectTimeoutException from label14 to label15 with label24;
        catch java.net.SocketException from label15 to label16 with label23;
        catch org.apache.http.conn.ConnectTimeoutException from label15 to label16 with label22;
        catch java.net.SocketException from label17 to label18 with label23;
        catch org.apache.http.conn.ConnectTimeoutException from label17 to label18 with label22;
        catch java.net.SocketException from label18 to label19 with label23;
        catch org.apache.http.conn.ConnectTimeoutException from label18 to label19 with label22;
        catch java.net.SocketException from label20 to label21 with label23;
        catch org.apache.http.conn.ConnectTimeoutException from label20 to label21 with label22;
    }

    protected void prepareSocket(java.net.Socket, org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams) throws java.io.IOException
    {
        org.apache.http.impl.conn.DefaultClientConnectionOperator r0;
        java.net.Socket r1;
        org.apache.http.protocol.HttpContext r2;
        org.apache.http.params.HttpParams r3;
        int i0, $i1;
        boolean $z0, z1;

        r0 := @this: org.apache.http.impl.conn.DefaultClientConnectionOperator;

        r1 := @parameter0: java.net.Socket;

        r2 := @parameter1: org.apache.http.protocol.HttpContext;

        r3 := @parameter2: org.apache.http.params.HttpParams;

        $z0 = staticinvoke <org.apache.http.params.HttpConnectionParams: boolean getTcpNoDelay(org.apache.http.params.HttpParams)>(r3);

        virtualinvoke r1.<java.net.Socket: void setTcpNoDelay(boolean)>($z0);

        $i1 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>(r3);

        virtualinvoke r1.<java.net.Socket: void setSoTimeout(int)>($i1);

        i0 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getLinger(org.apache.http.params.HttpParams)>(r3);

        if i0 < 0 goto label3;

        if i0 <= 0 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        virtualinvoke r1.<java.net.Socket: void setSoLinger(boolean,int)>(z1, i0);

     label3:
        return;
    }

    public void updateSecureConnection(org.apache.http.conn.OperatedClientConnection, org.apache.http.HttpHost, org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams) throws java.io.IOException
    {
        org.apache.http.impl.conn.DefaultClientConnectionOperator r0;
        org.apache.http.HttpHost r1;
        org.apache.http.protocol.HttpContext r2;
        org.apache.http.params.HttpParams r3;
        org.apache.http.conn.scheme.LayeredSocketFactory r4;
        boolean $z0, $z1, $z2;
        org.apache.http.conn.scheme.SchemeRegistry $r9;
        java.lang.String $r10, $r14, $r18, $r21;
        org.apache.http.conn.scheme.SocketFactory $r11, $r19;
        java.net.Socket $r20, r26;
        int $i0, $i1;
        java.lang.Throwable $r22;
        org.apache.http.conn.OperatedClientConnection r24;
        org.apache.http.conn.scheme.Scheme r25;
        org.apache.http.conn.HttpHostConnectException r29;
        java.lang.StringBuilder r30;
        java.lang.IllegalArgumentException r31, r32, r33, r34, r35;
        java.net.ConnectException r36;

        r0 := @this: org.apache.http.impl.conn.DefaultClientConnectionOperator;

        r24 := @parameter0: org.apache.http.conn.OperatedClientConnection;

        r1 := @parameter1: org.apache.http.HttpHost;

        r2 := @parameter2: org.apache.http.protocol.HttpContext;

        r3 := @parameter3: org.apache.http.params.HttpParams;

        if r24 == null goto label8;

        if r1 == null goto label7;

        if r3 == null goto label6;

        $z0 = interfaceinvoke r24.<org.apache.http.conn.OperatedClientConnection: boolean isOpen()>();

        if $z0 == 0 goto label5;

        $r9 = r0.<org.apache.http.impl.conn.DefaultClientConnectionOperator: org.apache.http.conn.scheme.SchemeRegistry schemeRegistry>;

        $r10 = virtualinvoke r1.<org.apache.http.HttpHost: java.lang.String getSchemeName()>();

        r25 = virtualinvoke $r9.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme getScheme(java.lang.String)>($r10);

        $r11 = virtualinvoke r25.<org.apache.http.conn.scheme.Scheme: org.apache.http.conn.scheme.SocketFactory getSocketFactory()>();

        $z1 = $r11 instanceof org.apache.http.conn.scheme.LayeredSocketFactory;

        if $z1 == 0 goto label4;

        $r19 = virtualinvoke r25.<org.apache.http.conn.scheme.Scheme: org.apache.http.conn.scheme.SocketFactory getSocketFactory()>();

        r4 = (org.apache.http.conn.scheme.LayeredSocketFactory) $r19;

     label1:
        $r20 = interfaceinvoke r24.<org.apache.http.conn.OperatedClientConnection: java.net.Socket getSocket()>();

        $r21 = virtualinvoke r1.<org.apache.http.HttpHost: java.lang.String getHostName()>();

        $i0 = virtualinvoke r1.<org.apache.http.HttpHost: int getPort()>();

        $i1 = virtualinvoke r25.<org.apache.http.conn.scheme.Scheme: int resolvePort(int)>($i0);

        r26 = interfaceinvoke r4.<org.apache.http.conn.scheme.LayeredSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>($r20, $r21, $i1, 1);

     label2:
        virtualinvoke r0.<org.apache.http.impl.conn.DefaultClientConnectionOperator: void prepareSocket(java.net.Socket,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>(r26, r2, r3);

        $z2 = interfaceinvoke r4.<org.apache.http.conn.scheme.LayeredSocketFactory: boolean isSecure(java.net.Socket)>(r26);

        interfaceinvoke r24.<org.apache.http.conn.OperatedClientConnection: void update(java.net.Socket,org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams)>(r26, r1, $z2, r3);

        return;

     label3:
        $r22 := @caughtexception;

        r29 = new org.apache.http.conn.HttpHostConnectException;

        r36 = (java.net.ConnectException) $r22;

        specialinvoke r29.<org.apache.http.conn.HttpHostConnectException: void <init>(org.apache.http.HttpHost,java.net.ConnectException)>(r1, r36);

        throw r29;

     label4:
        r30 = new java.lang.StringBuilder;

        specialinvoke r30.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Target scheme (");

        $r14 = virtualinvoke r25.<org.apache.http.conn.scheme.Scheme: java.lang.String getName()>();

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        virtualinvoke r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") must have layered socket factory.");

        r31 = new java.lang.IllegalArgumentException;

        $r18 = virtualinvoke r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r31.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw r31;

     label5:
        r32 = new java.lang.IllegalArgumentException;

        specialinvoke r32.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection must be open.");

        throw r32;

     label6:
        r33 = new java.lang.IllegalArgumentException;

        specialinvoke r33.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameters must not be null.");

        throw r33;

     label7:
        r34 = new java.lang.IllegalArgumentException;

        specialinvoke r34.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Target host must not be null.");

        throw r34;

     label8:
        r35 = new java.lang.IllegalArgumentException;

        specialinvoke r35.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection must not be null.");

        throw r35;

        catch java.net.ConnectException from label1 to label2 with label3;
    }
}
