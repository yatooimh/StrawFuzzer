public class org.apache.http.impl.conn.DefaultHttpRoutePlanner extends java.lang.Object implements org.apache.http.conn.routing.HttpRoutePlanner
{
    protected org.apache.http.conn.scheme.SchemeRegistry schemeRegistry;

    public void <init>(org.apache.http.conn.scheme.SchemeRegistry)
    {
        org.apache.http.impl.conn.DefaultHttpRoutePlanner r0;
        org.apache.http.conn.scheme.SchemeRegistry r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.http.impl.conn.DefaultHttpRoutePlanner;

        r1 := @parameter0: org.apache.http.conn.scheme.SchemeRegistry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        r0.<org.apache.http.impl.conn.DefaultHttpRoutePlanner: org.apache.http.conn.scheme.SchemeRegistry schemeRegistry> = r1;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("SchemeRegistry must not be null.");

        throw $r2;
    }

    public org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException
    {
        org.apache.http.impl.conn.DefaultHttpRoutePlanner r0;
        boolean z0;
        java.lang.IllegalStateException $r1, $r3;
        org.apache.http.params.HttpParams $r2, $r4, $r5;
        org.apache.http.conn.scheme.SchemeRegistry $r6;
        java.lang.String $r7;
        org.apache.http.conn.scheme.Scheme $r8;
        org.apache.http.conn.routing.HttpRoute $r9, $r10, r14, r17;
        org.apache.http.HttpHost r11, r16;
        org.apache.http.HttpRequest r12;
        org.apache.http.protocol.HttpContext r13;
        java.net.InetAddress r15;

        r0 := @this: org.apache.http.impl.conn.DefaultHttpRoutePlanner;

        r11 := @parameter0: org.apache.http.HttpHost;

        r12 := @parameter1: org.apache.http.HttpRequest;

        r13 := @parameter2: org.apache.http.protocol.HttpContext;

        if r12 == null goto label5;

        $r2 = interfaceinvoke r12.<org.apache.http.HttpRequest: org.apache.http.params.HttpParams getParams()>();

        r14 = staticinvoke <org.apache.http.conn.params.ConnRouteParams: org.apache.http.conn.routing.HttpRoute getForcedRoute(org.apache.http.params.HttpParams)>($r2);

        if r14 == null goto label1;

        return r14;

     label1:
        if r11 == null goto label4;

        $r4 = interfaceinvoke r12.<org.apache.http.HttpRequest: org.apache.http.params.HttpParams getParams()>();

        r15 = staticinvoke <org.apache.http.conn.params.ConnRouteParams: java.net.InetAddress getLocalAddress(org.apache.http.params.HttpParams)>($r4);

        $r5 = interfaceinvoke r12.<org.apache.http.HttpRequest: org.apache.http.params.HttpParams getParams()>();

        r16 = staticinvoke <org.apache.http.conn.params.ConnRouteParams: org.apache.http.HttpHost getDefaultProxy(org.apache.http.params.HttpParams)>($r5);

        $r6 = r0.<org.apache.http.impl.conn.DefaultHttpRoutePlanner: org.apache.http.conn.scheme.SchemeRegistry schemeRegistry>;

        $r7 = virtualinvoke r11.<org.apache.http.HttpHost: java.lang.String getSchemeName()>();

        $r8 = virtualinvoke $r6.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme getScheme(java.lang.String)>($r7);

        z0 = virtualinvoke $r8.<org.apache.http.conn.scheme.Scheme: boolean isLayered()>();

        if r16 != null goto label2;

        $r10 = new org.apache.http.conn.routing.HttpRoute;

        specialinvoke $r10.<org.apache.http.conn.routing.HttpRoute: void <init>(org.apache.http.HttpHost,java.net.InetAddress,boolean)>(r11, r15, z0);

        r17 = $r10;

        goto label3;

     label2:
        $r9 = new org.apache.http.conn.routing.HttpRoute;

        specialinvoke $r9.<org.apache.http.conn.routing.HttpRoute: void <init>(org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.HttpHost,boolean)>(r11, r15, r16, z0);

        r17 = $r9;

     label3:
        return r17;

     label4:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Target host must not be null.");

        throw $r3;

     label5:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Request must not be null.");

        throw $r1;
    }
}
