public class org.apache.http.impl.conn.IdleConnectionHandler extends java.lang.Object
{
    private final java.util.Map connectionToTimes;
    private final org.apache.commons.logging.Log log;

    public void <init>()
    {
        org.apache.http.impl.conn.IdleConnectionHandler r0;
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;
        java.util.HashMap $r3;

        r0 := @this: org.apache.http.impl.conn.IdleConnectionHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.http.impl.conn.IdleConnectionHandler: java.util.Map connectionToTimes> = $r3;

        return;
    }

    public void add(org.apache.http.HttpConnection, long, java.util.concurrent.TimeUnit)
    {
        org.apache.http.impl.conn.IdleConnectionHandler r0;
        org.apache.http.HttpConnection r1;
        long l0, $l1, $l2;
        java.util.concurrent.TimeUnit r2;
        java.lang.Long r3;
        org.apache.commons.logging.Log r4, $r6;
        boolean $z0;
        org.apache.http.impl.conn.IdleConnectionHandler$TimeValues $r7;
        java.util.Map $r8;
        java.lang.StringBuilder $r10;
        java.lang.String $r13;

        r0 := @this: org.apache.http.impl.conn.IdleConnectionHandler;

        r1 := @parameter0: org.apache.http.HttpConnection;

        l0 := @parameter1: long;

        r2 := @parameter2: java.util.concurrent.TimeUnit;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r6 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r6.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        r4 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adding connection at: ");

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r13);

     label1:
        $r8 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: java.util.Map connectionToTimes>;

        $r7 = new org.apache.http.impl.conn.IdleConnectionHandler$TimeValues;

        $l2 = virtualinvoke r3.<java.lang.Long: long longValue()>();

        specialinvoke $r7.<org.apache.http.impl.conn.IdleConnectionHandler$TimeValues: void <init>(long,long,java.util.concurrent.TimeUnit)>($l2, l0, r2);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r7);

        return;
    }

    public void closeExpiredConnections()
    {
        org.apache.http.impl.conn.IdleConnectionHandler r0;
        long l0, $l1, $l3;
        org.apache.http.HttpConnection r1;
        org.apache.http.impl.conn.IdleConnectionHandler$TimeValues r2;
        org.apache.commons.logging.Log r3, $r4, $r10, $r20, r21;
        boolean $z0, $z1, $z2;
        java.util.Map $r5, $r8;
        java.util.Set $r6;
        java.lang.Object $r7, $r9;
        byte $b2;
        java.lang.StringBuilder $r11, $r15;
        java.lang.String $r14, $r18;
        java.lang.Throwable $r19;
        java.util.Iterator r23;

        r0 := @this: org.apache.http.impl.conn.IdleConnectionHandler;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r4 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        r21 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking for expired connections, now: ");

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r21.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r18);

     label1:
        $r5 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: java.util.Map connectionToTimes>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>();

        r23 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label8;

        $r7 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>();

        r1 = (org.apache.http.HttpConnection) $r7;

        $r8 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: java.util.Map connectionToTimes>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (org.apache.http.impl.conn.IdleConnectionHandler$TimeValues) $r9;

        $l1 = staticinvoke <org.apache.http.impl.conn.IdleConnectionHandler$TimeValues: long access$000(org.apache.http.impl.conn.IdleConnectionHandler$TimeValues)>(r2);

        $b2 = $l1 cmp l0;

        if $b2 > 0 goto label7;

        $r10 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        $z1 = interfaceinvoke $r10.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label3;

        r3 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing connection, expired @: ");

        $l3 = staticinvoke <org.apache.http.impl.conn.IdleConnectionHandler$TimeValues: long access$000(org.apache.http.impl.conn.IdleConnectionHandler$TimeValues)>(r2);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r3.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r14);

     label3:
        interfaceinvoke r23.<java.util.Iterator: void remove()>();

     label4:
        interfaceinvoke r1.<org.apache.http.HttpConnection: void close()>();

     label5:
        goto label7;

     label6:
        $r19 := @caughtexception;

        $r20 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        interfaceinvoke $r20.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("I/O error closing connection", $r19);

     label7:
        goto label2;

     label8:
        return;

        catch java.io.IOException from label4 to label5 with label6;
    }

    public void closeIdleConnections(long)
    {
        org.apache.http.impl.conn.IdleConnectionHandler r0;
        org.apache.http.HttpConnection r1;
        org.apache.commons.logging.Log r2, $r4, $r11, $r21, r22;
        long $l0, $l1, $l2, l4, l5;
        boolean $z0, $z1, $z2;
        java.util.Map $r5, $r8;
        java.util.Set $r6;
        java.lang.Object $r7, $r9;
        org.apache.http.impl.conn.IdleConnectionHandler$TimeValues $r10;
        byte $b3;
        java.lang.StringBuilder $r12, $r16;
        java.lang.String $r15, $r19;
        java.lang.Throwable $r20;
        java.util.Iterator r24;
        java.lang.Long r25;

        r0 := @this: org.apache.http.impl.conn.IdleConnectionHandler;

        l4 := @parameter0: long;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l5 = $l0 - l4;

        $r4 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        r22 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking for connections, idleTimeout: ");

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l5);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r22.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r19);

     label1:
        $r5 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: java.util.Map connectionToTimes>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>();

        r24 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label8;

        $r7 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        r1 = (org.apache.http.HttpConnection) $r7;

        $r8 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: java.util.Map connectionToTimes>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r10 = (org.apache.http.impl.conn.IdleConnectionHandler$TimeValues) $r9;

        $l1 = staticinvoke <org.apache.http.impl.conn.IdleConnectionHandler$TimeValues: long access$100(org.apache.http.impl.conn.IdleConnectionHandler$TimeValues)>($r10);

        r25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $l2 = virtualinvoke r25.<java.lang.Long: long longValue()>();

        $b3 = $l2 cmp l5;

        if $b3 > 0 goto label7;

        $r11 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        $z1 = interfaceinvoke $r11.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label3;

        r2 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing connection, connection time: ");

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r25);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r15);

     label3:
        interfaceinvoke r24.<java.util.Iterator: void remove()>();

     label4:
        interfaceinvoke r1.<org.apache.http.HttpConnection: void close()>();

     label5:
        goto label7;

     label6:
        $r20 := @caughtexception;

        $r21 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        interfaceinvoke $r21.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("I/O error closing connection", $r20);

     label7:
        goto label2;

     label8:
        return;

        catch java.io.IOException from label4 to label5 with label6;
    }

    public boolean remove(org.apache.http.HttpConnection)
    {
        org.apache.http.impl.conn.IdleConnectionHandler r0;
        java.util.Map $r1;
        java.lang.Object $r2;
        long $l0, $l1;
        byte $b2;
        org.apache.commons.logging.Log $r3;
        org.apache.http.HttpConnection r4;
        org.apache.http.impl.conn.IdleConnectionHandler$TimeValues r5;
        boolean z0;

        r0 := @this: org.apache.http.impl.conn.IdleConnectionHandler;

        r4 := @parameter0: org.apache.http.HttpConnection;

        $r1 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: java.util.Map connectionToTimes>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r4);

        r5 = (org.apache.http.impl.conn.IdleConnectionHandler$TimeValues) $r2;

        z0 = 1;

        if r5 != null goto label1;

        $r3 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: org.apache.commons.logging.Log log>;

        interfaceinvoke $r3.<org.apache.commons.logging.Log: void warn(java.lang.Object)>("Removing a connection that never existed!");

        return 1;

     label1:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = staticinvoke <org.apache.http.impl.conn.IdleConnectionHandler$TimeValues: long access$000(org.apache.http.impl.conn.IdleConnectionHandler$TimeValues)>(r5);

        $b2 = $l0 cmp $l1;

        if $b2 > 0 goto label2;

        goto label3;

     label2:
        z0 = 0;

     label3:
        return z0;
    }

    public void removeAll()
    {
        org.apache.http.impl.conn.IdleConnectionHandler r0;
        java.util.Map $r1;

        r0 := @this: org.apache.http.impl.conn.IdleConnectionHandler;

        $r1 = r0.<org.apache.http.impl.conn.IdleConnectionHandler: java.util.Map connectionToTimes>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        return;
    }
}
