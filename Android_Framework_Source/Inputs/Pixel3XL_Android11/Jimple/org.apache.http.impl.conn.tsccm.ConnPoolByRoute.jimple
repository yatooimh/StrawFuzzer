public class org.apache.http.impl.conn.tsccm.ConnPoolByRoute extends org.apache.http.impl.conn.tsccm.AbstractConnPool
{
    private final org.apache.http.conn.params.ConnPerRoute connPerRoute;
    protected java.util.Queue freeConnections;
    private final org.apache.commons.logging.Log log;
    protected final int maxTotalConnections;
    protected final org.apache.http.conn.ClientConnectionOperator operator;
    protected final java.util.Map routeToPool;
    protected java.util.Queue waitingThreads;

    public void <init>(org.apache.http.conn.ClientConnectionOperator, org.apache.http.params.HttpParams)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        org.apache.http.conn.ClientConnectionOperator r1;
        org.apache.http.params.HttpParams r2;
        java.lang.Class $r3;
        org.apache.commons.logging.Log $r4;
        java.lang.IllegalArgumentException $r5;
        java.util.Queue $r6, $r7;
        java.util.Map $r8;
        int $i0;
        org.apache.http.conn.params.ConnPerRoute $r9;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r1 := @parameter0: org.apache.http.conn.ClientConnectionOperator;

        r2 := @parameter1: org.apache.http.params.HttpParams;

        specialinvoke r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: void <init>()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r3);

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log> = $r4;

        if r1 == null goto label1;

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.conn.ClientConnectionOperator operator> = r1;

        $r6 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue createFreeConnQueue()>();

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections> = $r6;

        $r7 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue createWaitingThreadQueue()>();

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads> = $r7;

        $r8 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map createRouteToPoolMap()>();

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map routeToPool> = $r8;

        $i0 = staticinvoke <org.apache.http.conn.params.ConnManagerParams: int getMaxTotalConnections(org.apache.http.params.HttpParams)>(r2);

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int maxTotalConnections> = $i0;

        $r9 = staticinvoke <org.apache.http.conn.params.ConnManagerParams: org.apache.http.conn.params.ConnPerRoute getMaxConnectionsPerRoute(org.apache.http.params.HttpParams)>(r2);

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.conn.params.ConnPerRoute connPerRoute> = $r9;

        return;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection operator may not be null");

        throw $r5;
    }

    protected org.apache.http.impl.conn.tsccm.BasicPoolEntry createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool, org.apache.http.conn.ClientConnectionOperator)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        org.apache.commons.logging.Log r1, $r3;
        boolean $z0;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry $r4;
        org.apache.http.conn.routing.HttpRoute $r5, $r13;
        java.lang.ref.ReferenceQueue $r6;
        java.util.concurrent.locks.Lock $r7, $r10, $r18;
        int $i0, $i1;
        java.util.Set $r8;
        org.apache.http.impl.conn.tsccm.BasicPoolEntryRef $r9;
        java.lang.StringBuilder $r11;
        java.lang.String $r16;
        java.lang.Throwable $r17;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool r19;
        org.apache.http.conn.ClientConnectionOperator r20;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r19 := @parameter0: org.apache.http.impl.conn.tsccm.RouteSpecificPool;

        r20 := @parameter1: org.apache.http.conn.ClientConnectionOperator;

        $r3 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r3.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        r1 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating new connection [");

        $r13 = virtualinvoke r19.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r16 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r16);

     label1:
        $r4 = new org.apache.http.impl.conn.tsccm.BasicPoolEntry;

        $r5 = virtualinvoke r19.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()>();

        $r6 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.lang.ref.ReferenceQueue refQueue>;

        specialinvoke $r4.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: void <init>(org.apache.http.conn.ClientConnectionOperator,org.apache.http.conn.routing.HttpRoute,java.lang.ref.ReferenceQueue)>(r20, $r5, $r6);

        $r7 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void lock()>();

     label2:
        virtualinvoke r19.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void createdEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry)>($r4);

        $i0 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections>;

        $i1 = $i0 + 1;

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections> = $i1;

        $r8 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Set issuedConnections>;

        $r9 = virtualinvoke $r4.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.impl.conn.tsccm.BasicPoolEntryRef getWeakRef()>();

        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r9);

     label3:
        $r10 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r10.<java.util.concurrent.locks.Lock: void unlock()>();

        return $r4;

     label4:
        $r17 := @caughtexception;

        $r18 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r18.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r17;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    protected java.util.Queue createFreeConnQueue()
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        java.util.LinkedList $r1;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        return $r1;
    }

    protected java.util.Map createRouteToPoolMap()
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        java.util.HashMap $r1;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        return $r1;
    }

    protected java.util.Queue createWaitingThreadQueue()
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        java.util.LinkedList $r1;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        return $r1;
    }

    public void deleteClosedConnections()
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry r1;
        java.util.concurrent.locks.Lock $r2, $r4, $r8;
        java.util.Queue $r3;
        boolean $z0, $z1;
        java.lang.Object $r5;
        org.apache.http.conn.OperatedClientConnection $r6;
        java.lang.Throwable $r7;
        java.util.Iterator r9;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r2 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r3 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

        r9 = interfaceinvoke $r3.<java.util.Queue: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r1 = (org.apache.http.impl.conn.tsccm.BasicPoolEntry) $r5;

        $r6 = virtualinvoke r1.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>();

        $z1 = interfaceinvoke $r6.<org.apache.http.conn.OperatedClientConnection: boolean isOpen()>();

        if $z1 != 0 goto label3;

        interfaceinvoke r9.<java.util.Iterator: void remove()>();

        virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry)>(r1);

     label3:
        goto label2;

     label4:
        $r4 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label5:
        $r7 := @caughtexception;

        $r8 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r8.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label2 to label3 with label5;
    }

    protected void deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        org.apache.http.conn.routing.HttpRoute r1;
        org.apache.commons.logging.Log $r3, r22;
        boolean $z0, $z2;
        java.util.concurrent.locks.Lock $r4, $r8, $r20;
        org.apache.http.conn.OperatedClientConnection $r5, $r7;
        int $i0, $i1;
        org.apache.http.impl.conn.IdleConnectionHandler $r6;
        java.util.Map $r9;
        java.lang.StringBuilder $r11;
        java.lang.Object $r15;
        java.lang.String $r18;
        java.lang.Throwable $r19;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry r21;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool r23;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r21 := @parameter0: org.apache.http.impl.conn.tsccm.BasicPoolEntry;

        r1 = virtualinvoke r21.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.routing.HttpRoute getPlannedRoute()>();

        $r3 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r3.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        r22 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting connection [");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $r15 = virtualinvoke r21.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: java.lang.Object getState()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r18 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r22.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r18);

     label1:
        $r4 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void lock()>();

     label2:
        $r5 = virtualinvoke r21.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>();

        virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void closeConnection(org.apache.http.conn.OperatedClientConnection)>($r5);

        r23 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean)>(r1, 1);

        virtualinvoke r23.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: boolean deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry)>(r21);

        $i0 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections>;

        $i1 = $i0 - 1;

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections> = $i1;

        $z2 = virtualinvoke r23.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: boolean isUnused()>();

        if $z2 == 0 goto label3;

        $r9 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map routeToPool>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

     label3:
        $r6 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.IdleConnectionHandler idleConnHandler>;

        $r7 = virtualinvoke r21.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>();

        virtualinvoke $r6.<org.apache.http.impl.conn.IdleConnectionHandler: boolean remove(org.apache.http.HttpConnection)>($r7);

     label4:
        $r8 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r8.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label5:
        $r19 := @caughtexception;

        $r20 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r20.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r19;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    protected void deleteLeastUsedEntry()
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        java.util.concurrent.locks.Lock $r1, $r7, $r9;
        java.util.Queue $r2;
        java.lang.Object $r3;
        org.apache.commons.logging.Log $r4, $r5;
        boolean $z0;
        java.lang.Throwable $r6;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry r8;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

     label1:
        $r1 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void lock()>();

        $r2 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

        $r3 = interfaceinvoke $r2.<java.util.Queue: java.lang.Object remove()>();

        r8 = (org.apache.http.impl.conn.tsccm.BasicPoolEntry) $r3;

     label2:
        if r8 == null goto label5;

     label3:
        virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry)>(r8);

     label4:
        goto label6;

     label5:
        $r4 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label6;

        $r5 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        interfaceinvoke $r5.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("No free connection to delete.");

     label6:
        $r9 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r9.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label7:
        $r6 := @caughtexception;

        $r7 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry, boolean, long, java.util.concurrent.TimeUnit)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        boolean z0, $z1, $z2;
        long l0;
        java.util.concurrent.TimeUnit r1;
        org.apache.commons.logging.Log r2, $r4;
        java.util.concurrent.locks.Lock $r5, $r8, $r13, $r23;
        java.util.Set $r6;
        org.apache.http.impl.conn.tsccm.BasicPoolEntryRef $r7;
        int $i1, $i2;
        java.util.Queue $r9;
        org.apache.http.impl.conn.IdleConnectionHandler $r10;
        org.apache.http.conn.OperatedClientConnection $r11, $r12;
        java.lang.StringBuilder $r14;
        java.lang.Object $r18;
        java.lang.String $r21;
        java.lang.Throwable $r22;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry r24;
        org.apache.http.conn.routing.HttpRoute r25;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool r26;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r24 := @parameter0: org.apache.http.impl.conn.tsccm.BasicPoolEntry;

        z0 := @parameter1: boolean;

        l0 := @parameter2: long;

        r1 := @parameter3: java.util.concurrent.TimeUnit;

        r25 = virtualinvoke r24.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.routing.HttpRoute getPlannedRoute()>();

        $r4 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z1 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label01;

        r2 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Freeing connection [");

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r25);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $r18 = virtualinvoke r24.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: java.lang.Object getState()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r21 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r2.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r21);

     label01:
        $r5 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void lock()>();

     label02:
        $z2 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: boolean isShutDown>;

        if $z2 == 0 goto label04;

        $r12 = virtualinvoke r24.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>();

        virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void closeConnection(org.apache.http.conn.OperatedClientConnection)>($r12);

     label03:
        $r13 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r13.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label04:
        $r6 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Set issuedConnections>;

        $r7 = virtualinvoke r24.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.impl.conn.tsccm.BasicPoolEntryRef getWeakRef()>();

        interfaceinvoke $r6.<java.util.Set: boolean remove(java.lang.Object)>($r7);

        r26 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean)>(r25, 1);

     label05:
        if z0 == 0 goto label08;

     label06:
        virtualinvoke r26.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry)>(r24);

        $r9 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

        interfaceinvoke $r9.<java.util.Queue: boolean add(java.lang.Object)>(r24);

        $r10 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.IdleConnectionHandler idleConnHandler>;

        $r11 = virtualinvoke r24.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>();

        virtualinvoke $r10.<org.apache.http.impl.conn.IdleConnectionHandler: void add(org.apache.http.HttpConnection,long,java.util.concurrent.TimeUnit)>($r11, l0, r1);

     label07:
        goto label09;

     label08:
        virtualinvoke r26.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void dropEntry()>();

        $i1 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections>;

        $i2 = $i1 - 1;

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections> = $i2;

     label09:
        virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void notifyWaitingThread(org.apache.http.impl.conn.tsccm.RouteSpecificPool)>(r26);

     label10:
        $r8 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r8.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label11:
        $r22 := @caughtexception;

        $r23 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r23.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r22;

        catch java.lang.Throwable from label02 to label03 with label11;
        catch java.lang.Throwable from label04 to label05 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.lang.Throwable from label08 to label09 with label11;
        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        java.util.concurrent.locks.Lock $r1, $r2, $r4;
        java.lang.Throwable $r3;
        org.apache.http.conn.routing.HttpRoute r5;
        int i0;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool r6;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r5 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        $r1 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void lock()>();

        i0 = 0;

     label1:
        r6 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean)>(r5, 0);

     label2:
        if r6 == null goto label4;

     label3:
        i0 = virtualinvoke r6.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getEntryCount()>();

     label4:
        $r2 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void unlock()>();

        return i0;

     label5:
        $r3 := @caughtexception;

        $r4 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    protected org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntryBlocking(org.apache.http.conn.routing.HttpRoute, java.lang.Object, long, java.util.concurrent.TimeUnit, org.apache.http.impl.conn.tsccm.WaitingThreadAborter) throws org.apache.http.conn.ConnectionPoolTimeoutException, java.lang.InterruptedException
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        java.lang.Object r1;
        long l0, $l3, $l4, $l14, $l15, $l16;
        org.apache.http.impl.conn.tsccm.WaitingThreadAborter r2;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool r3;
        byte $b1, $b5;
        java.util.concurrent.locks.Lock $r4, $r5, $r11, $r47;
        boolean $z0, $z1, $z4, z6, z7, z8, z9;
        org.apache.commons.logging.Log $r6, $r7, $r8, r56, r58, r60, r63, r66;
        int $i2, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.util.Queue $r9, $r10, $r19, $r33, $r50;
        java.util.concurrent.locks.Condition $r12;
        java.lang.String $r18, $r31, $r35, $r39, $r44;
        org.apache.http.conn.ClientConnectionOperator $r20, $r21;
        java.util.Set $r37;
        java.util.Date $r45, r53;
        java.lang.Throwable $r46, $r48, $r49, r71;
        org.apache.http.conn.routing.HttpRoute r51;
        java.util.concurrent.TimeUnit r52;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry r54, r62;
        org.apache.http.impl.conn.tsccm.WaitingThread r55, r65;
        java.lang.StringBuilder r57, r59, r61, r64, r67;
        org.apache.http.conn.ConnectionPoolTimeoutException r68;
        java.lang.IllegalStateException r70;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r51 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        r1 := @parameter1: java.lang.Object;

        l0 := @parameter2: long;

        r52 := @parameter3: java.util.concurrent.TimeUnit;

        r2 := @parameter4: org.apache.http.impl.conn.tsccm.WaitingThreadAborter;

        $b1 = l0 cmp 0L;

        if $b1 <= 0 goto label01;

        $r45 = new java.util.Date;

        $l14 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l15 = virtualinvoke r52.<java.util.concurrent.TimeUnit: long toMillis(long)>(l0);

        $l16 = $l14 + $l15;

        specialinvoke $r45.<java.util.Date: void <init>(long)>($l16);

        r53 = $r45;

        goto label02;

     label01:
        r53 = null;

     label02:
        r54 = null;

        $r4 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void lock()>();

     label03:
        r3 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean)>(r51, 1);

     label04:
        r55 = null;

     label05:
        if r54 != null goto label40;

     label06:
        $z0 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: boolean isShutDown>;

        if $z0 != 0 goto label38;

        $r6 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        z6 = interfaceinvoke $r6.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

     label07:
        if z6 == 0 goto label09;

     label08:
        r56 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        r57 = new java.lang.StringBuilder;

        specialinvoke r57.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total connections kept alive: ");

        $r33 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

        $i10 = interfaceinvoke $r33.<java.util.Queue: int size()>();

        virtualinvoke r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r35 = virtualinvoke r57.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r56.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r35);

        r58 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        r59 = new java.lang.StringBuilder;

        specialinvoke r59.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total issued connections: ");

        $r37 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Set issuedConnections>;

        $i11 = interfaceinvoke $r37.<java.util.Set: int size()>();

        virtualinvoke r59.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r39 = virtualinvoke r59.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r58.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r39);

        r60 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        r61 = new java.lang.StringBuilder;

        specialinvoke r61.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total allocated connection: ");

        $i12 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections>;

        virtualinvoke r61.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        virtualinvoke r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" out of ");

        $i13 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int maxTotalConnections>;

        virtualinvoke r61.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r44 = virtualinvoke r61.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r60.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r44);

     label09:
        r62 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry getFreeEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,java.lang.Object)>(r3, r1);

     label10:
        if r62 == null goto label11;

        r54 = r62;

        goto label40;

     label11:
        $i2 = virtualinvoke r3.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getCapacity()>();

        if $i2 <= 0 goto label13;

     label12:
        z7 = 1;

        goto label14;

     label13:
        z7 = 0;

     label14:
        $r7 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        z8 = interfaceinvoke $r7.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

     label15:
        if z8 == 0 goto label17;

     label16:
        r63 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        r64 = new java.lang.StringBuilder;

        specialinvoke r64.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Available capacity: ");

        $i8 = virtualinvoke r3.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getCapacity()>();

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" out of ");

        $i9 = virtualinvoke r3.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getMaxEntries()>();

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r51);

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r31 = virtualinvoke r64.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r63.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r31);

     label17:
        if z7 == 0 goto label20;

     label18:
        $i7 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections>;

        $i6 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int maxTotalConnections>;

        if $i7 >= $i6 goto label20;

        $r21 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.conn.ClientConnectionOperator operator>;

        r54 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,org.apache.http.conn.ClientConnectionOperator)>(r3, $r21);

     label19:
        r65 = r55;

        goto label34;

     label20:
        if z7 == 0 goto label23;

     label21:
        $r19 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

        $z4 = interfaceinvoke $r19.<java.util.Queue: boolean isEmpty()>();

        if $z4 != 0 goto label23;

        virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void deleteLeastUsedEntry()>();

        $r20 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.conn.ClientConnectionOperator operator>;

        r54 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,org.apache.http.conn.ClientConnectionOperator)>(r3, $r20);

     label22:
        r65 = r55;

        goto label34;

     label23:
        $r8 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z1 = interfaceinvoke $r8.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label24;

        r66 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        r67 = new java.lang.StringBuilder;

        specialinvoke r67.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Need to wait for connection [");

        virtualinvoke r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r51);

        virtualinvoke r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        virtualinvoke r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r18 = virtualinvoke r67.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r66.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r18);

     label24:
        if r55 != null goto label28;

     label25:
        $r11 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        $r12 = interfaceinvoke $r11.<java.util.concurrent.locks.Lock: java.util.concurrent.locks.Condition newCondition()>();

        r55 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.WaitingThread newWaitingThread(java.util.concurrent.locks.Condition,org.apache.http.impl.conn.tsccm.RouteSpecificPool)>($r12, r3);

     label26:
        virtualinvoke r2.<org.apache.http.impl.conn.tsccm.WaitingThreadAborter: void setWaitingThread(org.apache.http.impl.conn.tsccm.WaitingThread)>(r55);

     label27:
        goto label28;

     label28:
        virtualinvoke r3.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void queueThread(org.apache.http.impl.conn.tsccm.WaitingThread)>(r55);

        $r9 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads>;

        interfaceinvoke $r9.<java.util.Queue: boolean add(java.lang.Object)>(r55);

        z9 = virtualinvoke r55.<org.apache.http.impl.conn.tsccm.WaitingThread: boolean await(java.util.Date)>(r53);

     label29:
        virtualinvoke r3.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void removeThread(org.apache.http.impl.conn.tsccm.WaitingThread)>(r55);

        $r10 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads>;

        interfaceinvoke $r10.<java.util.Queue: boolean remove(java.lang.Object)>(r55);

     label30:
        r54 = r62;

        r65 = r55;

        if z9 != 0 goto label34;

        r54 = r62;

        r65 = r55;

        if r53 == null goto label34;

     label31:
        $l3 = virtualinvoke r53.<java.util.Date: long getTime()>();

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $b5 = $l3 cmp $l4;

        if $b5 <= 0 goto label33;

     label32:
        r54 = r62;

        r65 = r55;

        goto label34;

     label33:
        r68 = new org.apache.http.conn.ConnectionPoolTimeoutException;

        specialinvoke r68.<org.apache.http.conn.ConnectionPoolTimeoutException: void <init>(java.lang.String)>("Timeout waiting for connection");

        throw r68;

     label34:
        r55 = r65;

        goto label05;

     label35:
        $r49 := @caughtexception;

     label36:
        virtualinvoke r3.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void removeThread(org.apache.http.impl.conn.tsccm.WaitingThread)>(r55);

        $r50 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads>;

        interfaceinvoke $r50.<java.util.Queue: boolean remove(java.lang.Object)>(r55);

     label37:
        throw $r49;

     label38:
        r70 = new java.lang.IllegalStateException;

        specialinvoke r70.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Connection pool shut down.");

        throw r70;

     label39:
        $r48 := @caughtexception;

        r71 = $r48;

        goto label42;

     label40:
        $r5 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void unlock()>();

        return r54;

     label41:
        $r46 := @caughtexception;

        r71 = $r46;

     label42:
        $r47 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r47.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r71;

        catch java.lang.Throwable from label03 to label04 with label41;
        catch java.lang.Throwable from label06 to label07 with label41;
        catch java.lang.Throwable from label08 to label09 with label41;
        catch java.lang.Throwable from label09 to label10 with label41;
        catch java.lang.Throwable from label11 to label12 with label41;
        catch java.lang.Throwable from label14 to label15 with label41;
        catch java.lang.Throwable from label16 to label17 with label41;
        catch java.lang.Throwable from label18 to label19 with label41;
        catch java.lang.Throwable from label21 to label22 with label41;
        catch java.lang.Throwable from label23 to label24 with label41;
        catch java.lang.Throwable from label25 to label26 with label41;
        catch java.lang.Throwable from label26 to label27 with label39;
        catch java.lang.Throwable from label28 to label29 with label35;
        catch java.lang.Throwable from label29 to label30 with label39;
        catch java.lang.Throwable from label31 to label32 with label39;
        catch java.lang.Throwable from label33 to label34 with label39;
        catch java.lang.Throwable from label36 to label37 with label39;
        catch java.lang.Throwable from label37 to label38 with label39;
        catch java.lang.Throwable from label38 to label39 with label39;
    }

    protected org.apache.http.impl.conn.tsccm.BasicPoolEntry getFreeEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool, java.lang.Object)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        java.lang.Object r1;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry r2, r38;
        java.util.concurrent.locks.Lock $r3, $r4, $r36;
        org.apache.commons.logging.Log $r5, $r13, $r19, r39, r41, r43;
        boolean $z1, $z2, $z4, $z6, z7;
        org.apache.http.conn.routing.HttpRoute $r7, $r22, $r29;
        java.lang.String $r12, $r27, $r34;
        java.util.Queue $r14;
        org.apache.http.impl.conn.IdleConnectionHandler $r15;
        org.apache.http.conn.OperatedClientConnection $r16, $r20;
        java.util.Set $r17;
        org.apache.http.impl.conn.tsccm.BasicPoolEntryRef $r18;
        int $i0, $i1;
        java.lang.Throwable $r35;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool r37;
        java.lang.StringBuilder r40, r42, r44;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r37 := @parameter0: org.apache.http.impl.conn.tsccm.RouteSpecificPool;

        r1 := @parameter1: java.lang.Object;

        r38 = null;

        $r3 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void lock()>();

        z7 = 0;

     label01:
        if z7 != 0 goto label15;

     label02:
        r2 = virtualinvoke r37.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.impl.conn.tsccm.BasicPoolEntry allocEntry(java.lang.Object)>(r1);

     label03:
        if r2 == null goto label11;

     label04:
        $r13 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z2 = interfaceinvoke $r13.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z2 == 0 goto label05;

        r39 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        r40 = new java.lang.StringBuilder;

        specialinvoke r40.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Getting free connection [");

        $r29 = virtualinvoke r37.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()>();

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r34 = virtualinvoke r40.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r39.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r34);

     label05:
        $r14 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

        interfaceinvoke $r14.<java.util.Queue: boolean remove(java.lang.Object)>(r2);

        $r15 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.IdleConnectionHandler idleConnHandler>;

        $r16 = virtualinvoke r2.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>();

        $z4 = virtualinvoke $r15.<org.apache.http.impl.conn.IdleConnectionHandler: boolean remove(org.apache.http.HttpConnection)>($r16);

        if $z4 != 0 goto label08;

        $r19 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z6 = interfaceinvoke $r19.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z6 == 0 goto label06;

        r41 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        r42 = new java.lang.StringBuilder;

        specialinvoke r42.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing expired free connection [");

        $r22 = virtualinvoke r37.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()>();

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r27 = virtualinvoke r42.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r41.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r27);

     label06:
        $r20 = virtualinvoke r2.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>();

        virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void closeConnection(org.apache.http.conn.OperatedClientConnection)>($r20);

        virtualinvoke r37.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void dropEntry()>();

        $i0 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections>;

        $i1 = $i0 - 1;

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections> = $i1;

     label07:
        goto label10;

     label08:
        $r17 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Set issuedConnections>;

        $r18 = virtualinvoke r2.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.impl.conn.tsccm.BasicPoolEntryRef getWeakRef()>();

        interfaceinvoke $r17.<java.util.Set: boolean add(java.lang.Object)>($r18);

     label09:
        z7 = 1;

     label10:
        r38 = r2;

        goto label01;

     label11:
        r38 = r2;

        z7 = 1;

     label12:
        $r5 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z1 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label01;

        r43 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        r44 = new java.lang.StringBuilder;

        specialinvoke r44.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No free connections [");

        $r7 = virtualinvoke r37.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()>();

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        virtualinvoke r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r12 = virtualinvoke r44.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r43.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r12);

     label13:
        r38 = r2;

        z7 = 1;

        goto label01;

     label14:
        $r35 := @caughtexception;

        $r36 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r36.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r35;

     label15:
        $r4 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void unlock()>();

        return r38;

        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.lang.Throwable from label04 to label05 with label14;
        catch java.lang.Throwable from label05 to label06 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
    }

    protected org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute, boolean)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        boolean z0;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool r1, r10;
        java.util.concurrent.locks.Lock $r2, $r8, $r11;
        java.util.Map $r3, $r5;
        java.lang.Object $r4;
        java.lang.Throwable $r7;
        org.apache.http.conn.routing.HttpRoute r9;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r9 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        z0 := @parameter1: boolean;

        $r2 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r3 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map routeToPool>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9);

        r1 = (org.apache.http.impl.conn.tsccm.RouteSpecificPool) $r4;

     label2:
        r10 = r1;

        if r1 != null goto label4;

        r10 = r1;

        if z0 == 0 goto label4;

     label3:
        r10 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool newRouteSpecificPool(org.apache.http.conn.routing.HttpRoute)>(r9);

        $r5 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map routeToPool>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r10);

     label4:
        $r11 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r11.<java.util.concurrent.locks.Lock: void unlock()>();

        return r10;

     label5:
        $r7 := @caughtexception;

        $r8 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r8.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }

    protected void handleLostEntry(org.apache.http.conn.routing.HttpRoute)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool r1;
        java.util.concurrent.locks.Lock $r2, $r3, $r7;
        boolean $z0;
        int $i0, $i1;
        java.util.Map $r4;
        java.lang.Throwable $r6;
        org.apache.http.conn.routing.HttpRoute r8;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r8 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        $r2 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        r1 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean)>(r8, 1);

        virtualinvoke r1.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void dropEntry()>();

        $z0 = virtualinvoke r1.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: boolean isUnused()>();

        if $z0 == 0 goto label2;

        $r4 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map routeToPool>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r8);

     label2:
        $i0 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections>;

        $i1 = $i0 - 1;

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections> = $i1;

        virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void notifyWaitingThread(org.apache.http.impl.conn.tsccm.RouteSpecificPool)>(r1);

     label3:
        $r3 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label4:
        $r6 := @caughtexception;

        $r7 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label2 to label3 with label4;
    }

    protected org.apache.http.impl.conn.tsccm.RouteSpecificPool newRouteSpecificPool(org.apache.http.conn.routing.HttpRoute)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        org.apache.http.conn.routing.HttpRoute r1;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool $r2;
        org.apache.http.conn.params.ConnPerRoute $r3;
        int $i0;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r1 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        $r2 = new org.apache.http.impl.conn.tsccm.RouteSpecificPool;

        $r3 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.conn.params.ConnPerRoute connPerRoute>;

        $i0 = interfaceinvoke $r3.<org.apache.http.conn.params.ConnPerRoute: int getMaxForRoute(org.apache.http.conn.routing.HttpRoute)>(r1);

        specialinvoke $r2.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void <init>(org.apache.http.conn.routing.HttpRoute,int)>(r1, $i0);

        return $r2;
    }

    protected org.apache.http.impl.conn.tsccm.WaitingThread newWaitingThread(java.util.concurrent.locks.Condition, org.apache.http.impl.conn.tsccm.RouteSpecificPool)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        java.util.concurrent.locks.Condition r1;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool r2;
        org.apache.http.impl.conn.tsccm.WaitingThread $r3;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r1 := @parameter0: java.util.concurrent.locks.Condition;

        r2 := @parameter1: org.apache.http.impl.conn.tsccm.RouteSpecificPool;

        $r3 = new org.apache.http.impl.conn.tsccm.WaitingThread;

        specialinvoke $r3.<org.apache.http.impl.conn.tsccm.WaitingThread: void <init>(java.util.concurrent.locks.Condition,org.apache.http.impl.conn.tsccm.RouteSpecificPool)>(r1, r2);

        return $r3;
    }

    protected void notifyWaitingThread(org.apache.http.impl.conn.tsccm.RouteSpecificPool)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        java.lang.StringBuilder r1;
        java.util.concurrent.locks.Lock $r2, $r5, $r15;
        java.util.Queue $r3, $r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.commons.logging.Log $r4, $r6, $r7, $r10, $r11, r17;
        java.lang.Object $r9;
        org.apache.http.conn.routing.HttpRoute $r12;
        java.lang.String $r13;
        java.lang.Throwable $r14;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool r16;
        org.apache.http.impl.conn.tsccm.WaitingThread r18;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r16 := @parameter0: org.apache.http.impl.conn.tsccm.RouteSpecificPool;

        $r2 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r2.<java.util.concurrent.locks.Lock: void lock()>();

        if r16 == null goto label04;

     label01:
        $z3 = virtualinvoke r16.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: boolean hasThread()>();

        if $z3 == 0 goto label04;

        $r11 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z4 = interfaceinvoke $r11.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z4 == 0 goto label02;

        r17 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Notifying thread waiting on pool [");

        $r12 = virtualinvoke r16.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r13 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r17.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r13);

     label02:
        r18 = virtualinvoke r16.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.impl.conn.tsccm.WaitingThread nextThread()>();

     label03:
        goto label10;

     label04:
        $r3 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads>;

        $z0 = interfaceinvoke $r3.<java.util.Queue: boolean isEmpty()>();

        if $z0 != 0 goto label07;

        $r7 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z2 = interfaceinvoke $r7.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z2 == 0 goto label05;

        $r10 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        interfaceinvoke $r10.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Notifying thread waiting on any pool");

     label05:
        $r8 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads>;

        $r9 = interfaceinvoke $r8.<java.util.Queue: java.lang.Object remove()>();

        r18 = (org.apache.http.impl.conn.tsccm.WaitingThread) $r9;

     label06:
        goto label10;

     label07:
        r18 = null;

     label08:
        $r4 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z1 = interfaceinvoke $r4.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label10;

        $r6 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        interfaceinvoke $r6.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Notifying no-one, there are no waiting threads");

     label09:
        r18 = null;

     label10:
        if r18 == null goto label12;

     label11:
        virtualinvoke r18.<org.apache.http.impl.conn.tsccm.WaitingThread: void wakeup()>();

     label12:
        $r5 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label13:
        $r14 := @caughtexception;

        $r15 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r15.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r14;

        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label04 to label05 with label13;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label08 to label09 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
    }

    public org.apache.http.impl.conn.tsccm.PoolEntryRequest requestPoolEntry(org.apache.http.conn.routing.HttpRoute, java.lang.Object)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        org.apache.http.conn.routing.HttpRoute r1;
        java.lang.Object r2;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute$1 $r3;
        org.apache.http.impl.conn.tsccm.WaitingThreadAborter $r4;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r1 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        r2 := @parameter1: java.lang.Object;

        $r3 = new org.apache.http.impl.conn.tsccm.ConnPoolByRoute$1;

        $r4 = new org.apache.http.impl.conn.tsccm.WaitingThreadAborter;

        specialinvoke $r4.<org.apache.http.impl.conn.tsccm.WaitingThreadAborter: void <init>()>();

        specialinvoke $r3.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute$1: void <init>(org.apache.http.impl.conn.tsccm.ConnPoolByRoute,org.apache.http.impl.conn.tsccm.WaitingThreadAborter,org.apache.http.conn.routing.HttpRoute,java.lang.Object)>(r0, $r4, r1, r2);

        return $r3;
    }

    public void shutdown()
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        java.util.concurrent.locks.Lock $r1, $r5, $r10;
        java.util.Queue $r2, $r3;
        boolean $z0, $z1;
        java.util.Map $r4;
        java.lang.Object $r6, $r7;
        org.apache.http.conn.OperatedClientConnection $r8;
        java.lang.Throwable $r9;
        java.util.Iterator r11, r13;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry r12;
        org.apache.http.impl.conn.tsccm.WaitingThread r14;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r1 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r1.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        specialinvoke r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: void shutdown()>();

        $r2 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

        r11 = interfaceinvoke $r2.<java.util.Queue: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.apache.http.impl.conn.tsccm.BasicPoolEntry) $r7;

        interfaceinvoke r11.<java.util.Iterator: void remove()>();

        $r8 = virtualinvoke r12.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>();

        virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void closeConnection(org.apache.http.conn.OperatedClientConnection)>($r8);

     label3:
        goto label2;

     label4:
        $r3 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads>;

        r13 = interfaceinvoke $r3.<java.util.Queue: java.util.Iterator iterator()>();

     label5:
        $z1 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r6 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        r14 = (org.apache.http.impl.conn.tsccm.WaitingThread) $r6;

        interfaceinvoke r13.<java.util.Iterator: void remove()>();

        virtualinvoke r14.<org.apache.http.impl.conn.tsccm.WaitingThread: void wakeup()>();

     label6:
        goto label5;

     label7:
        $r4 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map routeToPool>;

        interfaceinvoke $r4.<java.util.Map: void clear()>();

     label8:
        $r5 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label9:
        $r9 := @caughtexception;

        $r10 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r10.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label9;
        catch java.lang.Throwable from label2 to label3 with label9;
        catch java.lang.Throwable from label4 to label5 with label9;
        catch java.lang.Throwable from label5 to label6 with label9;
        catch java.lang.Throwable from label7 to label8 with label9;
    }
}
