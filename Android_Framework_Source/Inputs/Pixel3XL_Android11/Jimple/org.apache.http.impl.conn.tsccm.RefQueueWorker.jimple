public class org.apache.http.impl.conn.tsccm.RefQueueWorker extends java.lang.Object implements java.lang.Runnable
{
    private final org.apache.commons.logging.Log log;
    protected final org.apache.http.impl.conn.tsccm.RefQueueHandler refHandler;
    protected final java.lang.ref.ReferenceQueue refQueue;
    protected volatile java.lang.Thread workerThread;

    public void <init>(java.lang.ref.ReferenceQueue, org.apache.http.impl.conn.tsccm.RefQueueHandler)
    {
        org.apache.http.impl.conn.tsccm.RefQueueWorker r0;
        java.lang.ref.ReferenceQueue r1;
        org.apache.http.impl.conn.tsccm.RefQueueHandler r2;
        java.lang.Class $r3;
        org.apache.commons.logging.Log $r4;
        java.lang.IllegalArgumentException $r5, $r6;

        r0 := @this: org.apache.http.impl.conn.tsccm.RefQueueWorker;

        r1 := @parameter0: java.lang.ref.ReferenceQueue;

        r2 := @parameter1: org.apache.http.impl.conn.tsccm.RefQueueHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r3);

        r0.<org.apache.http.impl.conn.tsccm.RefQueueWorker: org.apache.commons.logging.Log log> = $r4;

        if r1 == null goto label2;

        if r2 == null goto label1;

        r0.<org.apache.http.impl.conn.tsccm.RefQueueWorker: java.lang.ref.ReferenceQueue refQueue> = r1;

        r0.<org.apache.http.impl.conn.tsccm.RefQueueWorker: org.apache.http.impl.conn.tsccm.RefQueueHandler refHandler> = r2;

        return;

     label1:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Handler must not be null.");

        throw $r6;

     label2:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Queue must not be null.");

        throw $r5;
    }

    public void run()
    {
        org.apache.http.impl.conn.tsccm.RefQueueWorker r0;
        java.lang.Thread $r3, $r6, $r14, $r15;
        java.lang.ref.ReferenceQueue $r4;
        org.apache.http.impl.conn.tsccm.RefQueueHandler $r5;
        java.lang.Throwable $r7;
        org.apache.commons.logging.Log $r8, r17;
        boolean $z0;
        java.lang.StringBuilder $r9;
        java.lang.String $r10, $r13;
        java.lang.ref.Reference r16;

        r0 := @this: org.apache.http.impl.conn.tsccm.RefQueueWorker;

        $r3 = r0.<org.apache.http.impl.conn.tsccm.RefQueueWorker: java.lang.Thread workerThread>;

        if $r3 != null goto label1;

        $r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r0.<org.apache.http.impl.conn.tsccm.RefQueueWorker: java.lang.Thread workerThread> = $r6;

     label1:
        $r14 = r0.<org.apache.http.impl.conn.tsccm.RefQueueWorker: java.lang.Thread workerThread>;

        $r15 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        if $r14 != $r15 goto label6;

     label2:
        $r4 = r0.<org.apache.http.impl.conn.tsccm.RefQueueWorker: java.lang.ref.ReferenceQueue refQueue>;

        r16 = virtualinvoke $r4.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference remove()>();

        $r5 = r0.<org.apache.http.impl.conn.tsccm.RefQueueWorker: org.apache.http.impl.conn.tsccm.RefQueueHandler refHandler>;

        interfaceinvoke $r5.<org.apache.http.impl.conn.tsccm.RefQueueHandler: void handleReference(java.lang.ref.Reference)>(r16);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        $r8 = r0.<org.apache.http.impl.conn.tsccm.RefQueueWorker: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r8.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label5;

        r17 = r0.<org.apache.http.impl.conn.tsccm.RefQueueWorker: org.apache.commons.logging.Log log>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.RefQueueWorker: java.lang.String toString()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" interrupted");

        $r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r17.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>($r13, $r7);

     label5:
        goto label1;

     label6:
        return;

        catch java.lang.InterruptedException from label2 to label3 with label4;
    }

    public void shutdown()
    {
        org.apache.http.impl.conn.tsccm.RefQueueWorker r0;
        java.lang.Thread r1;

        r0 := @this: org.apache.http.impl.conn.tsccm.RefQueueWorker;

        r1 = r0.<org.apache.http.impl.conn.tsccm.RefQueueWorker: java.lang.Thread workerThread>;

        if r1 == null goto label1;

        r0.<org.apache.http.impl.conn.tsccm.RefQueueWorker: java.lang.Thread workerThread> = null;

        virtualinvoke r1.<java.lang.Thread: void interrupt()>();

     label1:
        return;
    }

    public java.lang.String toString()
    {
        org.apache.http.impl.conn.tsccm.RefQueueWorker r0;
        java.lang.StringBuilder $r2;
        java.lang.Thread $r4;
        java.lang.String $r6;

        r0 := @this: org.apache.http.impl.conn.tsccm.RefQueueWorker;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RefQueueWorker::");

        $r4 = r0.<org.apache.http.impl.conn.tsccm.RefQueueWorker: java.lang.Thread workerThread>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
