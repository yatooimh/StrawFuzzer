class org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1 extends java.lang.Object implements org.apache.http.conn.ClientConnectionRequest
{
    final org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager this$0;
    final org.apache.http.impl.conn.tsccm.PoolEntryRequest val$poolRequest;
    final org.apache.http.conn.routing.HttpRoute val$route;

    void <init>(org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager, org.apache.http.impl.conn.tsccm.PoolEntryRequest, org.apache.http.conn.routing.HttpRoute)
    {
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1 r0;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager r1;
        org.apache.http.impl.conn.tsccm.PoolEntryRequest r2;
        org.apache.http.conn.routing.HttpRoute r3;

        r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1;

        r1 := @parameter0: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        r2 := @parameter1: org.apache.http.impl.conn.tsccm.PoolEntryRequest;

        r3 := @parameter2: org.apache.http.conn.routing.HttpRoute;

        r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager this$0> = r1;

        r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.impl.conn.tsccm.PoolEntryRequest val$poolRequest> = r2;

        r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.conn.routing.HttpRoute val$route> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void abortRequest()
    {
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1 r0;
        org.apache.http.impl.conn.tsccm.PoolEntryRequest $r1;

        r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1;

        $r1 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.impl.conn.tsccm.PoolEntryRequest val$poolRequest>;

        interfaceinvoke $r1.<org.apache.http.impl.conn.tsccm.PoolEntryRequest: void abortRequest()>();

        return;
    }

    public org.apache.http.conn.ManagedClientConnection getConnection(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, org.apache.http.conn.ConnectionPoolTimeoutException
    {
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1 r0;
        long l0;
        org.apache.http.conn.routing.HttpRoute $r2, $r13;
        java.lang.IllegalArgumentException $r3;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager $r4, $r9, $r10, $r19;
        org.apache.commons.logging.Log $r5, $r20, r22;
        boolean $z0;
        org.apache.http.impl.conn.tsccm.PoolEntryRequest $r6;
        org.apache.http.conn.OperatedClientConnection $r7;
        org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter $r8;
        java.lang.StringBuilder $r11;
        java.lang.String $r17;
        java.lang.Throwable $r18;
        java.util.concurrent.TimeUnit r21;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry r23;
        java.net.Socket r24;

        r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1;

        l0 := @parameter0: long;

        r21 := @parameter1: java.util.concurrent.TimeUnit;

        $r2 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.conn.routing.HttpRoute val$route>;

        if $r2 == null goto label8;

        $r4 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager this$0>;

        $r5 = staticinvoke <org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log access$000(org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager)>($r4);

        $z0 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r10 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager this$0>;

        r22 = staticinvoke <org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log access$000(org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager)>($r10);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ThreadSafeClientConnManager.getConnection: ");

        $r13 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.conn.routing.HttpRoute val$route>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", timeout = ");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r17 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r22.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r17);

     label1:
        $r6 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.impl.conn.tsccm.PoolEntryRequest val$poolRequest>;

        r23 = interfaceinvoke $r6.<org.apache.http.impl.conn.tsccm.PoolEntryRequest: org.apache.http.impl.conn.tsccm.BasicPoolEntry getPoolEntry(long,java.util.concurrent.TimeUnit)>(l0, r21);

     label2:
        $r7 = virtualinvoke r23.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>();

        r24 = interfaceinvoke $r7.<org.apache.http.conn.OperatedClientConnection: java.net.Socket getSocket()>();

     label3:
        if r24 == null goto label5;

     label4:
        staticinvoke <android.net.TrafficStats: void tagSocket(java.net.Socket)>(r24);

     label5:
        goto label7;

     label6:
        $r18 := @caughtexception;

        $r19 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager this$0>;

        $r20 = staticinvoke <org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log access$000(org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager)>($r19);

        interfaceinvoke $r20.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("Problem tagging socket.", $r18);

     label7:
        $r8 = new org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter;

        $r9 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager this$0>;

        specialinvoke $r8.<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: void <init>(org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager,org.apache.http.impl.conn.AbstractPoolEntry)>($r9, r23);

        return $r8;

     label8:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Route may not be null.");

        throw $r3;

        catch java.io.IOException from label2 to label3 with label6;
        catch java.io.IOException from label4 to label5 with label6;
    }
}
