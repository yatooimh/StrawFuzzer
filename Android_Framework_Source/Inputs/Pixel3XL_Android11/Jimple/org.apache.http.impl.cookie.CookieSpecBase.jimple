public abstract class org.apache.http.impl.cookie.CookieSpecBase extends org.apache.http.impl.cookie.AbstractCookieSpec
{

    public void <init>()
    {
        org.apache.http.impl.cookie.CookieSpecBase r0;

        r0 := @this: org.apache.http.impl.cookie.CookieSpecBase;

        specialinvoke r0.<org.apache.http.impl.cookie.AbstractCookieSpec: void <init>()>();

        return;
    }

    protected static java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin)
    {
        org.apache.http.cookie.CookieOrigin r0;
        java.lang.String $r1;

        r0 := @parameter0: org.apache.http.cookie.CookieOrigin;

        $r1 = virtualinvoke r0.<org.apache.http.cookie.CookieOrigin: java.lang.String getHost()>();

        return $r1;
    }

    protected static java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin)
    {
        java.lang.String r0, r2;
        int i0, i1;
        org.apache.http.cookie.CookieOrigin r1;

        r1 := @parameter0: org.apache.http.cookie.CookieOrigin;

        r0 = virtualinvoke r1.<org.apache.http.cookie.CookieOrigin: java.lang.String getPath()>();

        i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(47);

        r2 = r0;

        if i0 < 0 goto label2;

        i1 = i0;

        if i0 != 0 goto label1;

        i1 = 1;

     label1:
        r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

     label2:
        return r2;
    }

    public boolean match(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)
    {
        org.apache.http.impl.cookie.CookieSpecBase r0;
        org.apache.http.cookie.Cookie r1;
        org.apache.http.cookie.CookieOrigin r2;
        java.util.Iterator r3;
        java.lang.IllegalArgumentException $r4, $r5;
        java.util.Collection $r6;
        boolean $z0, $z1;
        java.lang.Object $r7;
        org.apache.http.cookie.CookieAttributeHandler $r8;

        r0 := @this: org.apache.http.impl.cookie.CookieSpecBase;

        r1 := @parameter0: org.apache.http.cookie.Cookie;

        r2 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if r1 == null goto label5;

        if r2 == null goto label4;

        $r6 = virtualinvoke r0.<org.apache.http.impl.cookie.CookieSpecBase: java.util.Collection getAttribHandlers()>();

        r3 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (org.apache.http.cookie.CookieAttributeHandler) $r7;

        $z1 = interfaceinvoke $r8.<org.apache.http.cookie.CookieAttributeHandler: boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>(r1, r2);

        if $z1 != 0 goto label2;

        return 0;

     label2:
        goto label1;

     label3:
        return 1;

     label4:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r5;

     label5:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r4;
    }

    protected java.util.List parse(org.apache.http.HeaderElement[], org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.impl.cookie.CookieSpecBase r0;
        org.apache.http.HeaderElement[] r1;
        org.apache.http.cookie.CookieOrigin r2;
        int i0, $i1, $i2, $i3, i4, i5;
        java.util.ArrayList $r4;
        org.apache.http.cookie.MalformedCookieException $r5;
        org.apache.http.impl.cookie.BasicClientCookie $r6;
        java.lang.String $r7, $r8, $r9, $r11, $r12, r14, r15, r19;
        java.util.Locale $r10;
        org.apache.http.HeaderElement r13;
        org.apache.http.NameValuePair[] r17;
        org.apache.http.NameValuePair r18;
        org.apache.http.cookie.CookieAttributeHandler r20;

        r0 := @this: org.apache.http.impl.cookie.CookieSpecBase;

        r1 := @parameter0: org.apache.http.HeaderElement[];

        r2 := @parameter1: org.apache.http.cookie.CookieOrigin;

        $r4 = new java.util.ArrayList;

        $i1 = lengthof r1;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i1);

        i0 = lengthof r1;

        i4 = 0;

     label1:
        if i4 >= i0 goto label6;

        r13 = r1[i4];

        r14 = interfaceinvoke r13.<org.apache.http.HeaderElement: java.lang.String getName()>();

        r15 = interfaceinvoke r13.<org.apache.http.HeaderElement: java.lang.String getValue()>();

        if r14 == null goto label5;

        $i2 = virtualinvoke r14.<java.lang.String: int length()>();

        if $i2 == 0 goto label5;

        $r6 = new org.apache.http.impl.cookie.BasicClientCookie;

        specialinvoke $r6.<org.apache.http.impl.cookie.BasicClientCookie: void <init>(java.lang.String,java.lang.String)>(r14, r15);

        $r7 = staticinvoke <org.apache.http.impl.cookie.CookieSpecBase: java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin)>(r2);

        virtualinvoke $r6.<org.apache.http.impl.cookie.BasicClientCookie: void setPath(java.lang.String)>($r7);

        $r8 = staticinvoke <org.apache.http.impl.cookie.CookieSpecBase: java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin)>(r2);

        virtualinvoke $r6.<org.apache.http.impl.cookie.BasicClientCookie: void setDomain(java.lang.String)>($r8);

        r17 = interfaceinvoke r13.<org.apache.http.HeaderElement: org.apache.http.NameValuePair[] getParameters()>();

        $i3 = lengthof r17;

        i5 = $i3 - 1;

     label2:
        if i5 < 0 goto label4;

        r18 = r17[i5];

        $r9 = interfaceinvoke r18.<org.apache.http.NameValuePair: java.lang.String getName()>();

        $r10 = <java.util.Locale: java.util.Locale ENGLISH>;

        r19 = virtualinvoke $r9.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r10);

        $r11 = interfaceinvoke r18.<org.apache.http.NameValuePair: java.lang.String getValue()>();

        virtualinvoke $r6.<org.apache.http.impl.cookie.BasicClientCookie: void setAttribute(java.lang.String,java.lang.String)>(r19, $r11);

        r20 = virtualinvoke r0.<org.apache.http.impl.cookie.CookieSpecBase: org.apache.http.cookie.CookieAttributeHandler findAttribHandler(java.lang.String)>(r19);

        if r20 == null goto label3;

        $r12 = interfaceinvoke r18.<org.apache.http.NameValuePair: java.lang.String getValue()>();

        interfaceinvoke r20.<org.apache.http.cookie.CookieAttributeHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)>($r6, $r12);

     label3:
        i5 = i5 + -1;

        goto label2;

     label4:
        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r6);

        i4 = i4 + 1;

        goto label1;

     label5:
        $r5 = new org.apache.http.cookie.MalformedCookieException;

        specialinvoke $r5.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>("Cookie name may not be empty");

        throw $r5;

     label6:
        return $r4;
    }

    public void validate(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.impl.cookie.CookieSpecBase r0;
        org.apache.http.cookie.Cookie r1;
        org.apache.http.cookie.CookieOrigin r2;
        java.util.Iterator r3;
        java.lang.IllegalArgumentException $r4, $r5;
        java.util.Collection $r6;
        boolean $z0;
        java.lang.Object $r7;
        org.apache.http.cookie.CookieAttributeHandler $r8;

        r0 := @this: org.apache.http.impl.cookie.CookieSpecBase;

        r1 := @parameter0: org.apache.http.cookie.Cookie;

        r2 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if r1 == null goto label4;

        if r2 == null goto label3;

        $r6 = virtualinvoke r0.<org.apache.http.impl.cookie.CookieSpecBase: java.util.Collection getAttribHandlers()>();

        r3 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (org.apache.http.cookie.CookieAttributeHandler) $r7;

        interfaceinvoke $r8.<org.apache.http.cookie.CookieAttributeHandler: void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>(r1, r2);

        goto label1;

     label2:
        return;

     label3:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r5;

     label4:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r4;
    }
}
