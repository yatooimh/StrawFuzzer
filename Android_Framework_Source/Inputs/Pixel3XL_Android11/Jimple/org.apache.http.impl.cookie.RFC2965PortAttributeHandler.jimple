public class org.apache.http.impl.cookie.RFC2965PortAttributeHandler extends java.lang.Object implements org.apache.http.cookie.CookieAttributeHandler
{

    public void <init>()
    {
        org.apache.http.impl.cookie.RFC2965PortAttributeHandler r0;

        r0 := @this: org.apache.http.impl.cookie.RFC2965PortAttributeHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static int[] parsePortAttribute(java.lang.String) throws org.apache.http.cookie.MalformedCookieException
    {
        int $i0, $i1, $i2, i3;
        boolean $z0;
        java.lang.String $r1, $r2, $r6, $r9, r10;
        java.lang.Throwable $r3;
        int[] r12;
        java.util.StringTokenizer r16;
        org.apache.http.cookie.MalformedCookieException r17, r19;
        java.lang.StringBuilder r18;
        java.lang.NumberFormatException r20;

        r10 := @parameter0: java.lang.String;

        r16 = new java.util.StringTokenizer;

        specialinvoke r16.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r10, ",");

        $i0 = virtualinvoke r16.<java.util.StringTokenizer: int countTokens()>();

        r12 = newarray (int)[$i0];

        i3 = 0;

     label1:
        $z0 = virtualinvoke r16.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label4;

        $r1 = virtualinvoke r16.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        r12[i3] = $i1;

     label2:
        $i2 = r12[i3];

        if $i2 < 0 goto label3;

        i3 = i3 + 1;

        goto label1;

     label3:
        r17 = new org.apache.http.cookie.MalformedCookieException;

        specialinvoke r17.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>("Invalid Port attribute.");

        throw r17;

     label4:
        return r12;

     label5:
        $r3 := @caughtexception;

        r18 = new java.lang.StringBuilder;

        specialinvoke r18.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid Port attribute: ");

        r20 = (java.lang.NumberFormatException) $r3;

        $r6 = virtualinvoke r20.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        r19 = new org.apache.http.cookie.MalformedCookieException;

        $r9 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r19.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>($r9);

        throw r19;

        catch java.lang.NumberFormatException from label1 to label2 with label5;
        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }

    private static boolean portMatch(int, int[])
    {
        int i0, i1, $i2, i3;
        int[] r0;
        boolean z1;

        i0 := @parameter0: int;

        r0 := @parameter1: int[];

        i3 = 0;

        i1 = lengthof r0;

     label1:
        z1 = 0;

        if i3 >= i1 goto label3;

        $i2 = r0[i3];

        if i0 != $i2 goto label2;

        z1 = 1;

        goto label3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return z1;
    }

    public boolean match(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)
    {
        org.apache.http.impl.cookie.RFC2965PortAttributeHandler r0;
        org.apache.http.cookie.Cookie r1;
        org.apache.http.cookie.CookieOrigin r2;
        int i0;
        java.lang.IllegalArgumentException $r3, $r4;
        boolean $z0, $z1, $z2;
        org.apache.http.cookie.ClientCookie $r5;
        int[] $r6, $r7;

        r0 := @this: org.apache.http.impl.cookie.RFC2965PortAttributeHandler;

        r1 := @parameter0: org.apache.http.cookie.Cookie;

        r2 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if r1 == null goto label4;

        if r2 == null goto label3;

        i0 = virtualinvoke r2.<org.apache.http.cookie.CookieOrigin: int getPort()>();

        $z0 = r1 instanceof org.apache.http.cookie.ClientCookie;

        if $z0 == 0 goto label2;

        $r5 = (org.apache.http.cookie.ClientCookie) r1;

        $z1 = interfaceinvoke $r5.<org.apache.http.cookie.ClientCookie: boolean containsAttribute(java.lang.String)>("port");

        if $z1 == 0 goto label2;

        $r6 = interfaceinvoke r1.<org.apache.http.cookie.Cookie: int[] getPorts()>();

        if $r6 != null goto label1;

        return 0;

     label1:
        $r7 = interfaceinvoke r1.<org.apache.http.cookie.Cookie: int[] getPorts()>();

        $z2 = staticinvoke <org.apache.http.impl.cookie.RFC2965PortAttributeHandler: boolean portMatch(int,int[])>(i0, $r7);

        if $z2 != 0 goto label2;

        return 0;

     label2:
        return 1;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r4;

     label4:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r3;
    }

    public void parse(org.apache.http.cookie.SetCookie, java.lang.String) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.impl.cookie.RFC2965PortAttributeHandler r0;
        java.lang.String r1, $r3;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;
        int $i0;
        int[] $r4;
        org.apache.http.cookie.SetCookie r5;
        org.apache.http.cookie.SetCookie2 r6;

        r0 := @this: org.apache.http.impl.cookie.RFC2965PortAttributeHandler;

        r5 := @parameter0: org.apache.http.cookie.SetCookie;

        r1 := @parameter1: java.lang.String;

        if r5 == null goto label2;

        $z0 = r5 instanceof org.apache.http.cookie.SetCookie2;

        if $z0 == 0 goto label1;

        r6 = (org.apache.http.cookie.SetCookie2) r5;

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r4 = staticinvoke <org.apache.http.impl.cookie.RFC2965PortAttributeHandler: int[] parsePortAttribute(java.lang.String)>(r1);

        interfaceinvoke r6.<org.apache.http.cookie.SetCookie2: void setPorts(int[])>($r4);

     label1:
        return;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r2;
    }

    public void validate(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.impl.cookie.RFC2965PortAttributeHandler r0;
        org.apache.http.cookie.Cookie r1;
        org.apache.http.cookie.CookieOrigin r2;
        int i0;
        java.lang.IllegalArgumentException $r3, $r4;
        boolean $z0, $z1, $z2;
        org.apache.http.cookie.ClientCookie $r5;
        int[] $r6;
        org.apache.http.cookie.MalformedCookieException $r7;

        r0 := @this: org.apache.http.impl.cookie.RFC2965PortAttributeHandler;

        r1 := @parameter0: org.apache.http.cookie.Cookie;

        r2 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if r1 == null goto label4;

        if r2 == null goto label3;

        i0 = virtualinvoke r2.<org.apache.http.cookie.CookieOrigin: int getPort()>();

        $z0 = r1 instanceof org.apache.http.cookie.ClientCookie;

        if $z0 == 0 goto label2;

        $r5 = (org.apache.http.cookie.ClientCookie) r1;

        $z1 = interfaceinvoke $r5.<org.apache.http.cookie.ClientCookie: boolean containsAttribute(java.lang.String)>("port");

        if $z1 == 0 goto label2;

        $r6 = interfaceinvoke r1.<org.apache.http.cookie.Cookie: int[] getPorts()>();

        $z2 = staticinvoke <org.apache.http.impl.cookie.RFC2965PortAttributeHandler: boolean portMatch(int,int[])>(i0, $r6);

        if $z2 == 0 goto label1;

        goto label2;

     label1:
        $r7 = new org.apache.http.cookie.MalformedCookieException;

        specialinvoke $r7.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>("Port attribute violates RFC 2965: Request port not found in cookie\'s port list.");

        throw $r7;

     label2:
        return;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r4;

     label4:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r3;
    }
}
