public class org.apache.http.impl.cookie.RFC2965Spec extends org.apache.http.impl.cookie.RFC2109Spec
{

    public void <init>()
    {
        org.apache.http.impl.cookie.RFC2965Spec r0;

        r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        specialinvoke r0.<org.apache.http.impl.cookie.RFC2965Spec: void <init>(java.lang.String[],boolean)>(null, 0);

        return;
    }

    public void <init>(java.lang.String[], boolean)
    {
        org.apache.http.impl.cookie.RFC2965Spec r0;
        java.lang.String[] r1;
        boolean z0;
        org.apache.http.impl.cookie.RFC2965DomainAttributeHandler $r2;
        org.apache.http.impl.cookie.RFC2965PortAttributeHandler $r3;
        org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler $r4;
        org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler $r5;
        org.apache.http.impl.cookie.RFC2965VersionAttributeHandler $r6;

        r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        r1 := @parameter0: java.lang.String[];

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.http.impl.cookie.RFC2109Spec: void <init>(java.lang.String[],boolean)>(r1, z0);

        $r2 = new org.apache.http.impl.cookie.RFC2965DomainAttributeHandler;

        specialinvoke $r2.<org.apache.http.impl.cookie.RFC2965DomainAttributeHandler: void <init>()>();

        virtualinvoke r0.<org.apache.http.impl.cookie.RFC2965Spec: void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler)>("domain", $r2);

        $r3 = new org.apache.http.impl.cookie.RFC2965PortAttributeHandler;

        specialinvoke $r3.<org.apache.http.impl.cookie.RFC2965PortAttributeHandler: void <init>()>();

        virtualinvoke r0.<org.apache.http.impl.cookie.RFC2965Spec: void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler)>("port", $r3);

        $r4 = new org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler;

        specialinvoke $r4.<org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler: void <init>()>();

        virtualinvoke r0.<org.apache.http.impl.cookie.RFC2965Spec: void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler)>("commenturl", $r4);

        $r5 = new org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler;

        specialinvoke $r5.<org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler: void <init>()>();

        virtualinvoke r0.<org.apache.http.impl.cookie.RFC2965Spec: void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler)>("discard", $r5);

        $r6 = new org.apache.http.impl.cookie.RFC2965VersionAttributeHandler;

        specialinvoke $r6.<org.apache.http.impl.cookie.RFC2965VersionAttributeHandler: void <init>()>();

        virtualinvoke r0.<org.apache.http.impl.cookie.RFC2965Spec: void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler)>("version", $r6);

        return;
    }

    private static org.apache.http.cookie.CookieOrigin adjustEffectiveHost(org.apache.http.cookie.CookieOrigin)
    {
        org.apache.http.cookie.CookieOrigin r0, $r6;
        java.lang.String r1, $r7, $r8;
        int $i0, $i1, i2;
        java.lang.StringBuilder $r3;
        boolean $z1, z2;
        char c3;

        r0 := @parameter0: org.apache.http.cookie.CookieOrigin;

        r1 = virtualinvoke r0.<org.apache.http.cookie.CookieOrigin: java.lang.String getHost()>();

        i2 = 0;

     label1:
        z2 = 1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i2 >= $i0 goto label4;

        c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        if c3 == 46 goto label3;

        if c3 != 58 goto label2;

        goto label3;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        z2 = 0;

     label4:
        if z2 == 0 goto label5;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".local");

        $r6 = new org.apache.http.cookie.CookieOrigin;

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = virtualinvoke r0.<org.apache.http.cookie.CookieOrigin: int getPort()>();

        $r8 = virtualinvoke r0.<org.apache.http.cookie.CookieOrigin: java.lang.String getPath()>();

        $z1 = virtualinvoke r0.<org.apache.http.cookie.CookieOrigin: boolean isSecure()>();

        specialinvoke $r6.<org.apache.http.cookie.CookieOrigin: void <init>(java.lang.String,int,java.lang.String,boolean)>($r7, $i1, $r8, $z1);

        return $r6;

     label5:
        return r0;
    }

    private org.apache.http.impl.cookie.BasicClientCookie createCookie(java.lang.String, java.lang.String, org.apache.http.cookie.CookieOrigin)
    {
        org.apache.http.impl.cookie.RFC2965Spec r0;
        java.lang.String r1, $r4, $r5, r6;
        org.apache.http.cookie.CookieOrigin r2;
        org.apache.http.impl.cookie.BasicClientCookie $r3;

        r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.apache.http.cookie.CookieOrigin;

        $r3 = new org.apache.http.impl.cookie.BasicClientCookie;

        specialinvoke $r3.<org.apache.http.impl.cookie.BasicClientCookie: void <init>(java.lang.String,java.lang.String)>(r6, r1);

        $r4 = staticinvoke <org.apache.http.impl.cookie.RFC2965Spec: java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin)>(r2);

        virtualinvoke $r3.<org.apache.http.impl.cookie.BasicClientCookie: void setPath(java.lang.String)>($r4);

        $r5 = staticinvoke <org.apache.http.impl.cookie.RFC2965Spec: java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin)>(r2);

        virtualinvoke $r3.<org.apache.http.impl.cookie.BasicClientCookie: void setDomain(java.lang.String)>($r5);

        return $r3;
    }

    private org.apache.http.impl.cookie.BasicClientCookie createCookie2(java.lang.String, java.lang.String, org.apache.http.cookie.CookieOrigin)
    {
        org.apache.http.impl.cookie.RFC2965Spec r0;
        java.lang.String r1, $r4, $r5, r7;
        org.apache.http.cookie.CookieOrigin r2;
        org.apache.http.impl.cookie.BasicClientCookie2 $r3;
        int[] $r6;
        int $i0;

        r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: org.apache.http.cookie.CookieOrigin;

        $r3 = new org.apache.http.impl.cookie.BasicClientCookie2;

        specialinvoke $r3.<org.apache.http.impl.cookie.BasicClientCookie2: void <init>(java.lang.String,java.lang.String)>(r7, r1);

        $r4 = staticinvoke <org.apache.http.impl.cookie.RFC2965Spec: java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin)>(r2);

        virtualinvoke $r3.<org.apache.http.impl.cookie.BasicClientCookie2: void setPath(java.lang.String)>($r4);

        $r5 = staticinvoke <org.apache.http.impl.cookie.RFC2965Spec: java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin)>(r2);

        virtualinvoke $r3.<org.apache.http.impl.cookie.BasicClientCookie2: void setDomain(java.lang.String)>($r5);

        $r6 = newarray (int)[1];

        $i0 = virtualinvoke r2.<org.apache.http.cookie.CookieOrigin: int getPort()>();

        $r6[0] = $i0;

        virtualinvoke $r3.<org.apache.http.impl.cookie.BasicClientCookie2: void setPorts(int[])>($r6);

        return $r3;
    }

    protected void formatCookieAsVer(org.apache.http.util.CharArrayBuffer, org.apache.http.cookie.Cookie, int)
    {
        org.apache.http.impl.cookie.RFC2965Spec r0;
        org.apache.http.util.CharArrayBuffer r1;
        java.lang.String r2, $r4, $r5;
        int i0, $i1, $i2, i3, i4;
        boolean $z0;
        org.apache.http.cookie.ClientCookie $r3;
        org.apache.http.cookie.Cookie r6;
        int[] r7;

        r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        r1 := @parameter0: org.apache.http.util.CharArrayBuffer;

        r6 := @parameter1: org.apache.http.cookie.Cookie;

        i3 := @parameter2: int;

        specialinvoke r0.<org.apache.http.impl.cookie.RFC2109Spec: void formatCookieAsVer(org.apache.http.util.CharArrayBuffer,org.apache.http.cookie.Cookie,int)>(r1, r6, i3);

        $z0 = r6 instanceof org.apache.http.cookie.ClientCookie;

        if $z0 == 0 goto label4;

        $r3 = (org.apache.http.cookie.ClientCookie) r6;

        r2 = interfaceinvoke $r3.<org.apache.http.cookie.ClientCookie: java.lang.String getAttribute(java.lang.String)>("port");

        if r2 == null goto label4;

        virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("; $Port");

        virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("=\"");

        $r4 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i1 <= 0 goto label3;

        r7 = interfaceinvoke r6.<org.apache.http.cookie.Cookie: int[] getPorts()>();

        if r7 == null goto label3;

        i4 = 0;

        i0 = lengthof r7;

     label1:
        if i4 >= i0 goto label3;

        if i4 <= 0 goto label2;

        virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>(",");

     label2:
        $i2 = r7[i4];

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r5);

        i4 = i4 + 1;

        goto label1;

     label3:
        virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("\"");

     label4:
        return;
    }

    public int getVersion()
    {
        org.apache.http.impl.cookie.RFC2965Spec r0;

        r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        return 1;
    }

    public org.apache.http.Header getVersionHeader()
    {
        org.apache.http.impl.cookie.RFC2965Spec r0;
        org.apache.http.util.CharArrayBuffer $r2;
        int $i0;
        java.lang.String $r3;
        org.apache.http.message.BufferedHeader $r4;

        r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        $r2 = new org.apache.http.util.CharArrayBuffer;

        specialinvoke $r2.<org.apache.http.util.CharArrayBuffer: void <init>(int)>(40);

        virtualinvoke $r2.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("Cookie2");

        virtualinvoke $r2.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>(": ");

        virtualinvoke $r2.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("$Version=");

        $i0 = virtualinvoke r0.<org.apache.http.impl.cookie.RFC2965Spec: int getVersion()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke $r2.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r3);

        $r4 = new org.apache.http.message.BufferedHeader;

        specialinvoke $r4.<org.apache.http.message.BufferedHeader: void <init>(org.apache.http.util.CharArrayBuffer)>($r2);

        return $r4;
    }

    public boolean match(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)
    {
        org.apache.http.impl.cookie.RFC2965Spec r0;
        org.apache.http.cookie.Cookie r1;
        org.apache.http.cookie.CookieOrigin r2, $r5;
        java.lang.IllegalArgumentException $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        r1 := @parameter0: org.apache.http.cookie.Cookie;

        r2 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if r1 == null goto label2;

        if r2 == null goto label1;

        $r5 = staticinvoke <org.apache.http.impl.cookie.RFC2965Spec: org.apache.http.cookie.CookieOrigin adjustEffectiveHost(org.apache.http.cookie.CookieOrigin)>(r2);

        $z0 = specialinvoke r0.<org.apache.http.impl.cookie.RFC2109Spec: boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>(r1, $r5);

        return $z0;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r4;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r3;
    }

    public java.util.List parse(org.apache.http.Header, org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.impl.cookie.RFC2965Spec r0;
        org.apache.http.Header r1;
        org.apache.http.cookie.CookieOrigin r2, r23;
        org.apache.http.HeaderElement[] r3;
        int i0, $i1, $i2, $i3, $i4, i5, i6;
        java.lang.IllegalArgumentException $r5, $r6;
        java.util.ArrayList $r7;
        org.apache.http.cookie.MalformedCookieException $r8;
        java.lang.String $r9, $r15, $r17, $r18, $r19, $r21, r26, r27, r34;
        boolean $z0, $z1;
        java.util.HashMap $r10;
        java.util.Set $r11;
        java.lang.Object $r12, $r14;
        java.util.Map$Entry $r13;
        java.util.Locale $r16, $r20;
        org.apache.http.HeaderElement r25;
        org.apache.http.impl.cookie.BasicClientCookie r28;
        org.apache.http.NameValuePair[] r29;
        org.apache.http.NameValuePair r31, r33;
        java.util.Iterator r32;
        org.apache.http.cookie.CookieAttributeHandler r35;

        r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        r1 := @parameter0: org.apache.http.Header;

        r23 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if r1 == null goto label12;

        if r23 == null goto label11;

        r2 = staticinvoke <org.apache.http.impl.cookie.RFC2965Spec: org.apache.http.cookie.CookieOrigin adjustEffectiveHost(org.apache.http.cookie.CookieOrigin)>(r23);

        r3 = interfaceinvoke r1.<org.apache.http.Header: org.apache.http.HeaderElement[] getElements()>();

        $r7 = new java.util.ArrayList;

        $i1 = lengthof r3;

        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($i1);

        i0 = lengthof r3;

        i5 = 0;

     label01:
        if i5 >= i0 goto label10;

        r25 = r3[i5];

        r26 = interfaceinvoke r25.<org.apache.http.HeaderElement: java.lang.String getName()>();

        r27 = interfaceinvoke r25.<org.apache.http.HeaderElement: java.lang.String getValue()>();

        if r26 == null goto label09;

        $i2 = virtualinvoke r26.<java.lang.String: int length()>();

        if $i2 == 0 goto label09;

        $r9 = interfaceinvoke r1.<org.apache.http.Header: java.lang.String getName()>();

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("Set-Cookie2");

        if $z0 == 0 goto label02;

        r28 = specialinvoke r0.<org.apache.http.impl.cookie.RFC2965Spec: org.apache.http.impl.cookie.BasicClientCookie createCookie2(java.lang.String,java.lang.String,org.apache.http.cookie.CookieOrigin)>(r26, r27, r2);

        goto label03;

     label02:
        r28 = specialinvoke r0.<org.apache.http.impl.cookie.RFC2965Spec: org.apache.http.impl.cookie.BasicClientCookie createCookie(java.lang.String,java.lang.String,org.apache.http.cookie.CookieOrigin)>(r26, r27, r2);

     label03:
        r29 = interfaceinvoke r25.<org.apache.http.HeaderElement: org.apache.http.NameValuePair[] getParameters()>();

        $r10 = new java.util.HashMap;

        $i3 = lengthof r29;

        specialinvoke $r10.<java.util.HashMap: void <init>(int)>($i3);

        $i4 = lengthof r29;

        i6 = $i4 - 1;

     label04:
        if i6 < 0 goto label05;

        r31 = r29[i6];

        $r19 = interfaceinvoke r31.<org.apache.http.NameValuePair: java.lang.String getName()>();

        $r20 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r21 = virtualinvoke $r19.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r20);

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, r31);

        i6 = i6 + -1;

        goto label04;

     label05:
        $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set entrySet()>();

        r32 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r12 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (java.util.Map$Entry) $r12;

        $r14 = interfaceinvoke $r13.<java.util.Map$Entry: java.lang.Object getValue()>();

        r33 = (org.apache.http.NameValuePair) $r14;

        $r15 = interfaceinvoke r33.<org.apache.http.NameValuePair: java.lang.String getName()>();

        $r16 = <java.util.Locale: java.util.Locale ENGLISH>;

        r34 = virtualinvoke $r15.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r16);

        $r17 = interfaceinvoke r33.<org.apache.http.NameValuePair: java.lang.String getValue()>();

        virtualinvoke r28.<org.apache.http.impl.cookie.BasicClientCookie: void setAttribute(java.lang.String,java.lang.String)>(r34, $r17);

        r35 = virtualinvoke r0.<org.apache.http.impl.cookie.RFC2965Spec: org.apache.http.cookie.CookieAttributeHandler findAttribHandler(java.lang.String)>(r34);

        if r35 == null goto label07;

        $r18 = interfaceinvoke r33.<org.apache.http.NameValuePair: java.lang.String getValue()>();

        interfaceinvoke r35.<org.apache.http.cookie.CookieAttributeHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)>(r28, $r18);

     label07:
        goto label06;

     label08:
        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r28);

        i5 = i5 + 1;

        goto label01;

     label09:
        $r8 = new org.apache.http.cookie.MalformedCookieException;

        specialinvoke $r8.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>("Cookie name may not be empty");

        throw $r8;

     label10:
        return $r7;

     label11:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r6;

     label12:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Header may not be null");

        throw $r5;
    }

    public void validate(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.impl.cookie.RFC2965Spec r0;
        org.apache.http.cookie.Cookie r1;
        org.apache.http.cookie.CookieOrigin r2, $r5;
        java.lang.IllegalArgumentException $r3, $r4;

        r0 := @this: org.apache.http.impl.cookie.RFC2965Spec;

        r1 := @parameter0: org.apache.http.cookie.Cookie;

        r2 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if r1 == null goto label2;

        if r2 == null goto label1;

        $r5 = staticinvoke <org.apache.http.impl.cookie.RFC2965Spec: org.apache.http.cookie.CookieOrigin adjustEffectiveHost(org.apache.http.cookie.CookieOrigin)>(r2);

        specialinvoke r0.<org.apache.http.impl.cookie.RFC2109Spec: void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>(r1, $r5);

        return;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r4;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r3;
    }
}
