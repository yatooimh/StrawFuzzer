public abstract class org.apache.http.impl.io.AbstractMessageWriter extends java.lang.Object implements org.apache.http.io.HttpMessageWriter
{
    protected final org.apache.http.util.CharArrayBuffer lineBuf;
    protected final org.apache.http.message.LineFormatter lineFormatter;
    protected final org.apache.http.io.SessionOutputBuffer sessionBuffer;

    public void <init>(org.apache.http.io.SessionOutputBuffer, org.apache.http.message.LineFormatter, org.apache.http.params.HttpParams)
    {
        org.apache.http.impl.io.AbstractMessageWriter r0;
        org.apache.http.message.LineFormatter r1, r6;
        org.apache.http.params.HttpParams r2;
        java.lang.IllegalArgumentException $r3;
        org.apache.http.util.CharArrayBuffer $r4;
        org.apache.http.io.SessionOutputBuffer r5;

        r0 := @this: org.apache.http.impl.io.AbstractMessageWriter;

        r5 := @parameter0: org.apache.http.io.SessionOutputBuffer;

        r1 := @parameter1: org.apache.http.message.LineFormatter;

        r2 := @parameter2: org.apache.http.params.HttpParams;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r5 == null goto label3;

        r0.<org.apache.http.impl.io.AbstractMessageWriter: org.apache.http.io.SessionOutputBuffer sessionBuffer> = r5;

        $r4 = new org.apache.http.util.CharArrayBuffer;

        specialinvoke $r4.<org.apache.http.util.CharArrayBuffer: void <init>(int)>(128);

        r0.<org.apache.http.impl.io.AbstractMessageWriter: org.apache.http.util.CharArrayBuffer lineBuf> = $r4;

        if r1 == null goto label1;

        r6 = r1;

        goto label2;

     label1:
        r6 = <org.apache.http.message.BasicLineFormatter: org.apache.http.message.BasicLineFormatter DEFAULT>;

     label2:
        r0.<org.apache.http.impl.io.AbstractMessageWriter: org.apache.http.message.LineFormatter lineFormatter> = r6;

        return;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Session input buffer may not be null");

        throw $r3;
    }

    public void write(org.apache.http.HttpMessage) throws java.io.IOException, org.apache.http.HttpException
    {
        org.apache.http.impl.io.AbstractMessageWriter r0;
        org.apache.http.HeaderIterator r1;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;
        org.apache.http.util.CharArrayBuffer $r3, $r4, $r7, $r10;
        org.apache.http.io.SessionOutputBuffer $r5, $r9;
        java.lang.Object $r6;
        org.apache.http.message.LineFormatter $r8;
        org.apache.http.HttpMessage r11;
        org.apache.http.Header r12;

        r0 := @this: org.apache.http.impl.io.AbstractMessageWriter;

        r11 := @parameter0: org.apache.http.HttpMessage;

        if r11 == null goto label3;

        virtualinvoke r0.<org.apache.http.impl.io.AbstractMessageWriter: void writeHeadLine(org.apache.http.HttpMessage)>(r11);

        r1 = interfaceinvoke r11.<org.apache.http.HttpMessage: org.apache.http.HeaderIterator headerIterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.apache.http.Header) $r6;

        $r9 = r0.<org.apache.http.impl.io.AbstractMessageWriter: org.apache.http.io.SessionOutputBuffer sessionBuffer>;

        $r8 = r0.<org.apache.http.impl.io.AbstractMessageWriter: org.apache.http.message.LineFormatter lineFormatter>;

        $r7 = r0.<org.apache.http.impl.io.AbstractMessageWriter: org.apache.http.util.CharArrayBuffer lineBuf>;

        $r10 = interfaceinvoke $r8.<org.apache.http.message.LineFormatter: org.apache.http.util.CharArrayBuffer formatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header)>($r7, r12);

        interfaceinvoke $r9.<org.apache.http.io.SessionOutputBuffer: void writeLine(org.apache.http.util.CharArrayBuffer)>($r10);

        goto label1;

     label2:
        $r3 = r0.<org.apache.http.impl.io.AbstractMessageWriter: org.apache.http.util.CharArrayBuffer lineBuf>;

        virtualinvoke $r3.<org.apache.http.util.CharArrayBuffer: void clear()>();

        $r5 = r0.<org.apache.http.impl.io.AbstractMessageWriter: org.apache.http.io.SessionOutputBuffer sessionBuffer>;

        $r4 = r0.<org.apache.http.impl.io.AbstractMessageWriter: org.apache.http.util.CharArrayBuffer lineBuf>;

        interfaceinvoke $r5.<org.apache.http.io.SessionOutputBuffer: void writeLine(org.apache.http.util.CharArrayBuffer)>($r4);

        return;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP message may not be null");

        throw $r2;
    }

    protected abstract void writeHeadLine(org.apache.http.HttpMessage) throws java.io.IOException;
}
