public class org.apache.http.message.BasicHeaderElementIterator extends java.lang.Object implements org.apache.http.HeaderElementIterator
{
    private org.apache.http.util.CharArrayBuffer buffer;
    private org.apache.http.HeaderElement currentElement;
    private org.apache.http.message.ParserCursor cursor;
    private final org.apache.http.HeaderIterator headerIt;
    private final org.apache.http.message.HeaderValueParser parser;

    public void <init>(org.apache.http.HeaderIterator)
    {
        org.apache.http.message.BasicHeaderElementIterator r0;
        org.apache.http.HeaderIterator r1;
        org.apache.http.message.BasicHeaderValueParser $r2;

        r0 := @this: org.apache.http.message.BasicHeaderElementIterator;

        r1 := @parameter0: org.apache.http.HeaderIterator;

        $r2 = <org.apache.http.message.BasicHeaderValueParser: org.apache.http.message.BasicHeaderValueParser DEFAULT>;

        specialinvoke r0.<org.apache.http.message.BasicHeaderElementIterator: void <init>(org.apache.http.HeaderIterator,org.apache.http.message.HeaderValueParser)>(r1, $r2);

        return;
    }

    public void <init>(org.apache.http.HeaderIterator, org.apache.http.message.HeaderValueParser)
    {
        org.apache.http.message.BasicHeaderElementIterator r0;
        org.apache.http.HeaderIterator r1;
        org.apache.http.message.HeaderValueParser r2;
        java.lang.IllegalArgumentException $r3, $r4;

        r0 := @this: org.apache.http.message.BasicHeaderElementIterator;

        r1 := @parameter0: org.apache.http.HeaderIterator;

        r2 := @parameter1: org.apache.http.message.HeaderValueParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.HeaderElement currentElement> = null;

        r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.util.CharArrayBuffer buffer> = null;

        r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.message.ParserCursor cursor> = null;

        if r1 == null goto label2;

        if r2 == null goto label1;

        r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.HeaderIterator headerIt> = r1;

        r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.message.HeaderValueParser parser> = r2;

        return;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parser may not be null");

        throw $r4;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Header iterator may not be null");

        throw $r3;
    }

    private void bufferHeaderValue()
    {
        org.apache.http.message.BasicHeaderElementIterator r0;
        org.apache.http.HeaderIterator $r1, $r2;
        boolean $z0, $z1;
        org.apache.http.util.CharArrayBuffer $r3, $r5, r10;
        int $i0, $i1, $i2, $i3;
        org.apache.http.message.ParserCursor $r4, $r7;
        org.apache.http.FormattedHeader $r6, $r8;
        org.apache.http.Header r9;
        java.lang.String r12;

        r0 := @this: org.apache.http.message.BasicHeaderElementIterator;

        r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.message.ParserCursor cursor> = null;

        r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.util.CharArrayBuffer buffer> = null;

     label1:
        $r1 = r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.HeaderIterator headerIt>;

        $z0 = interfaceinvoke $r1.<org.apache.http.HeaderIterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.HeaderIterator headerIt>;

        r9 = interfaceinvoke $r2.<org.apache.http.HeaderIterator: org.apache.http.Header nextHeader()>();

        $z1 = r9 instanceof org.apache.http.FormattedHeader;

        if $z1 == 0 goto label2;

        $r6 = (org.apache.http.FormattedHeader) r9;

        r10 = interfaceinvoke $r6.<org.apache.http.FormattedHeader: org.apache.http.util.CharArrayBuffer getBuffer()>();

        r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.util.CharArrayBuffer buffer> = r10;

        $r7 = new org.apache.http.message.ParserCursor;

        $i2 = virtualinvoke r10.<org.apache.http.util.CharArrayBuffer: int length()>();

        specialinvoke $r7.<org.apache.http.message.ParserCursor: void <init>(int,int)>(0, $i2);

        r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.message.ParserCursor cursor> = $r7;

        $r8 = (org.apache.http.FormattedHeader) r9;

        $i3 = interfaceinvoke $r8.<org.apache.http.FormattedHeader: int getValuePos()>();

        virtualinvoke $r7.<org.apache.http.message.ParserCursor: void updatePos(int)>($i3);

        goto label4;

     label2:
        r12 = interfaceinvoke r9.<org.apache.http.Header: java.lang.String getValue()>();

        if r12 == null goto label3;

        $r3 = new org.apache.http.util.CharArrayBuffer;

        $i0 = virtualinvoke r12.<java.lang.String: int length()>();

        specialinvoke $r3.<org.apache.http.util.CharArrayBuffer: void <init>(int)>($i0);

        r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.util.CharArrayBuffer buffer> = $r3;

        virtualinvoke $r3.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>(r12);

        $r4 = new org.apache.http.message.ParserCursor;

        $r5 = r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.util.CharArrayBuffer buffer>;

        $i1 = virtualinvoke $r5.<org.apache.http.util.CharArrayBuffer: int length()>();

        specialinvoke $r4.<org.apache.http.message.ParserCursor: void <init>(int,int)>(0, $i1);

        r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.message.ParserCursor cursor> = $r4;

        goto label4;

     label3:
        goto label1;

     label4:
        return;
    }

    private void parseNextElement()
    {
        org.apache.http.message.BasicHeaderElementIterator r0;
        org.apache.http.message.ParserCursor $r1, $r2, $r3, $r8, r10, $r11;
        boolean $z0, $z1, $z2, $z3;
        org.apache.http.util.CharArrayBuffer $r4;
        org.apache.http.message.HeaderValueParser $r5;
        java.lang.String $r6, $r7;
        int $i0;
        org.apache.http.HeaderIterator $r9;
        org.apache.http.HeaderElement r12;

        r0 := @this: org.apache.http.message.BasicHeaderElementIterator;

     label01:
        $r9 = r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.HeaderIterator headerIt>;

        $z3 = interfaceinvoke $r9.<org.apache.http.HeaderIterator: boolean hasNext()>();

        if $z3 != 0 goto label03;

        $r8 = r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.message.ParserCursor cursor>;

        if $r8 == null goto label02;

        goto label03;

     label02:
        return;

     label03:
        r10 = r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.message.ParserCursor cursor>;

        if r10 == null goto label04;

        $z2 = virtualinvoke r10.<org.apache.http.message.ParserCursor: boolean atEnd()>();

        if $z2 == 0 goto label05;

     label04:
        specialinvoke r0.<org.apache.http.message.BasicHeaderElementIterator: void bufferHeaderValue()>();

     label05:
        $r11 = r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.message.ParserCursor cursor>;

        if $r11 == null goto label01;

     label06:
        $r1 = r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.message.ParserCursor cursor>;

        $z0 = virtualinvoke $r1.<org.apache.http.message.ParserCursor: boolean atEnd()>();

        if $z0 != 0 goto label09;

        $r5 = r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.message.HeaderValueParser parser>;

        $r4 = r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.util.CharArrayBuffer buffer>;

        $r3 = r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.message.ParserCursor cursor>;

        r12 = interfaceinvoke $r5.<org.apache.http.message.HeaderValueParser: org.apache.http.HeaderElement parseHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>($r4, $r3);

        $r6 = interfaceinvoke r12.<org.apache.http.HeaderElement: java.lang.String getName()>();

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i0 != 0 goto label08;

        $r7 = interfaceinvoke r12.<org.apache.http.HeaderElement: java.lang.String getValue()>();

        if $r7 == null goto label07;

        goto label08;

     label07:
        goto label06;

     label08:
        r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.HeaderElement currentElement> = r12;

        return;

     label09:
        $r2 = r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.message.ParserCursor cursor>;

        $z1 = virtualinvoke $r2.<org.apache.http.message.ParserCursor: boolean atEnd()>();

        if $z1 == 0 goto label10;

        r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.message.ParserCursor cursor> = null;

        r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.util.CharArrayBuffer buffer> = null;

        goto label01;

     label10:
        goto label01;
    }

    public boolean hasNext()
    {
        org.apache.http.message.BasicHeaderElementIterator r0;
        org.apache.http.HeaderElement $r1, $r2;
        boolean z0;

        r0 := @this: org.apache.http.message.BasicHeaderElementIterator;

        $r1 = r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.HeaderElement currentElement>;

        if $r1 != null goto label1;

        specialinvoke r0.<org.apache.http.message.BasicHeaderElementIterator: void parseNextElement()>();

     label1:
        $r2 = r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.HeaderElement currentElement>;

        if $r2 == null goto label2;

        z0 = 1;

        goto label3;

     label2:
        z0 = 0;

     label3:
        return z0;
    }

    public final java.lang.Object next() throws java.util.NoSuchElementException
    {
        org.apache.http.message.BasicHeaderElementIterator r0;
        org.apache.http.HeaderElement $r1;

        r0 := @this: org.apache.http.message.BasicHeaderElementIterator;

        $r1 = virtualinvoke r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.HeaderElement nextElement()>();

        return $r1;
    }

    public org.apache.http.HeaderElement nextElement() throws java.util.NoSuchElementException
    {
        org.apache.http.message.BasicHeaderElementIterator r0;
        org.apache.http.HeaderElement r1, $r2, $r3;
        java.util.NoSuchElementException $r4;

        r0 := @this: org.apache.http.message.BasicHeaderElementIterator;

        $r2 = r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.HeaderElement currentElement>;

        if $r2 != null goto label1;

        specialinvoke r0.<org.apache.http.message.BasicHeaderElementIterator: void parseNextElement()>();

     label1:
        $r3 = r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.HeaderElement currentElement>;

        if $r3 == null goto label2;

        r1 = r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.HeaderElement currentElement>;

        r0.<org.apache.http.message.BasicHeaderElementIterator: org.apache.http.HeaderElement currentElement> = null;

        return r1;

     label2:
        $r4 = new java.util.NoSuchElementException;

        specialinvoke $r4.<java.util.NoSuchElementException: void <init>(java.lang.String)>("No more header elements available");

        throw $r4;
    }

    public void remove() throws java.lang.UnsupportedOperationException
    {
        org.apache.http.message.BasicHeaderElementIterator r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: org.apache.http.message.BasicHeaderElementIterator;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Remove not supported");

        throw $r1;
    }
}
