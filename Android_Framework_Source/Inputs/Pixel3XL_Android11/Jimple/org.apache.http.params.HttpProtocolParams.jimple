public final class org.apache.http.params.HttpProtocolParams extends java.lang.Object implements org.apache.http.params.CoreProtocolPNames
{

    private void <init>()
    {
        org.apache.http.params.HttpProtocolParams r0;

        r0 := @this: org.apache.http.params.HttpProtocolParams;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getContentCharset(org.apache.http.params.HttpParams)
    {
        java.lang.String r0, r4;
        java.lang.IllegalArgumentException $r1;
        java.lang.Object $r2;
        org.apache.http.params.HttpParams r3;

        r3 := @parameter0: org.apache.http.params.HttpParams;

        if r3 == null goto label2;

        $r2 = interfaceinvoke r3.<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.protocol.content-charset");

        r0 = (java.lang.String) $r2;

        r4 = r0;

        if r0 != null goto label1;

        r4 = "ISO-8859-1";

     label1:
        return r4;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r1;
    }

    public static java.lang.String getHttpElementCharset(org.apache.http.params.HttpParams)
    {
        java.lang.String r0, r4;
        java.lang.IllegalArgumentException $r1;
        java.lang.Object $r2;
        org.apache.http.params.HttpParams r3;

        r3 := @parameter0: org.apache.http.params.HttpParams;

        if r3 == null goto label2;

        $r2 = interfaceinvoke r3.<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.protocol.element-charset");

        r0 = (java.lang.String) $r2;

        r4 = r0;

        if r0 != null goto label1;

        r4 = "US-ASCII";

     label1:
        return r4;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r1;
    }

    public static java.lang.String getUserAgent(org.apache.http.params.HttpParams)
    {
        org.apache.http.params.HttpParams r0;
        java.lang.IllegalArgumentException $r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        if r0 == null goto label1;

        $r2 = interfaceinvoke r0.<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.useragent");

        $r3 = (java.lang.String) $r2;

        return $r3;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r1;
    }

    public static org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams)
    {
        java.lang.IllegalArgumentException $r0;
        org.apache.http.ProtocolVersion $r1;
        org.apache.http.HttpVersion $r2;
        org.apache.http.params.HttpParams r3;
        java.lang.Object r4;

        r3 := @parameter0: org.apache.http.params.HttpParams;

        if r3 == null goto label2;

        r4 = interfaceinvoke r3.<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.protocol.version");

        if r4 != null goto label1;

        $r2 = <org.apache.http.HttpVersion: org.apache.http.HttpVersion HTTP_1_1>;

        return $r2;

     label1:
        $r1 = (org.apache.http.ProtocolVersion) r4;

        return $r1;

     label2:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r0;
    }

    public static void setContentCharset(org.apache.http.params.HttpParams, java.lang.String)
    {
        org.apache.http.params.HttpParams r0;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        interfaceinvoke r0.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.protocol.content-charset", r1);

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r2;
    }

    public static void setHttpElementCharset(org.apache.http.params.HttpParams, java.lang.String)
    {
        org.apache.http.params.HttpParams r0;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        interfaceinvoke r0.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.protocol.element-charset", r1);

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r2;
    }

    public static void setUseExpectContinue(org.apache.http.params.HttpParams, boolean)
    {
        org.apache.http.params.HttpParams r0;
        boolean z0;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        z0 := @parameter1: boolean;

        if r0 == null goto label1;

        interfaceinvoke r0.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean)>("http.protocol.expect-continue", z0);

        return;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r1;
    }

    public static void setUserAgent(org.apache.http.params.HttpParams, java.lang.String)
    {
        org.apache.http.params.HttpParams r0;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        interfaceinvoke r0.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.useragent", r1);

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r2;
    }

    public static void setVersion(org.apache.http.params.HttpParams, org.apache.http.ProtocolVersion)
    {
        org.apache.http.params.HttpParams r0;
        org.apache.http.ProtocolVersion r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        r1 := @parameter1: org.apache.http.ProtocolVersion;

        if r0 == null goto label1;

        interfaceinvoke r0.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.protocol.version", r1);

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r2;
    }

    public static boolean useExpectContinue(org.apache.http.params.HttpParams)
    {
        org.apache.http.params.HttpParams r0;
        java.lang.IllegalArgumentException $r1;
        boolean $z0;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        if r0 == null goto label1;

        $z0 = interfaceinvoke r0.<org.apache.http.params.HttpParams: boolean getBooleanParameter(java.lang.String,boolean)>("http.protocol.expect-continue", 0);

        return $z0;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r1;
    }
}
