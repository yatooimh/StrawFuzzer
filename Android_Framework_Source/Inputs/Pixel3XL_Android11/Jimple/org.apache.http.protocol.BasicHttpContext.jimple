public class org.apache.http.protocol.BasicHttpContext extends java.lang.Object implements org.apache.http.protocol.HttpContext
{
    private java.util.Map map;
    private final org.apache.http.protocol.HttpContext parentContext;

    public void <init>()
    {
        org.apache.http.protocol.BasicHttpContext r0;

        r0 := @this: org.apache.http.protocol.BasicHttpContext;

        specialinvoke r0.<org.apache.http.protocol.BasicHttpContext: void <init>(org.apache.http.protocol.HttpContext)>(null);

        return;
    }

    public void <init>(org.apache.http.protocol.HttpContext)
    {
        org.apache.http.protocol.BasicHttpContext r0;
        org.apache.http.protocol.HttpContext r1;

        r0 := @this: org.apache.http.protocol.BasicHttpContext;

        r1 := @parameter0: org.apache.http.protocol.HttpContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.http.protocol.BasicHttpContext: java.util.Map map> = null;

        r0.<org.apache.http.protocol.BasicHttpContext: org.apache.http.protocol.HttpContext parentContext> = r1;

        return;
    }

    public java.lang.Object getAttribute(java.lang.String)
    {
        org.apache.http.protocol.BasicHttpContext r0;
        java.lang.String r1;
        org.apache.http.protocol.HttpContext r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.Object r4, r6;
        java.util.Map r5;

        r0 := @this: org.apache.http.protocol.BasicHttpContext;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label3;

        r4 = null;

        r5 = r0.<org.apache.http.protocol.BasicHttpContext: java.util.Map map>;

        if r5 == null goto label1;

        r4 = interfaceinvoke r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

     label1:
        r6 = r4;

        if r4 != null goto label2;

        r2 = r0.<org.apache.http.protocol.BasicHttpContext: org.apache.http.protocol.HttpContext parentContext>;

        r6 = r4;

        if r2 == null goto label2;

        r6 = interfaceinvoke r2.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>(r1);

     label2:
        return r6;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Id may not be null");

        throw $r3;
    }

    public java.lang.Object removeAttribute(java.lang.String)
    {
        org.apache.http.protocol.BasicHttpContext r0;
        java.lang.String r1;
        java.util.Map r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.Object $r4;

        r0 := @this: org.apache.http.protocol.BasicHttpContext;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label2;

        r2 = r0.<org.apache.http.protocol.BasicHttpContext: java.util.Map map>;

        if r2 == null goto label1;

        $r4 = interfaceinvoke r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return $r4;

     label1:
        return null;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Id may not be null");

        throw $r3;
    }

    public void setAttribute(java.lang.String, java.lang.Object)
    {
        org.apache.http.protocol.BasicHttpContext r0;
        java.lang.String r1;
        java.lang.Object r2;
        java.lang.IllegalArgumentException $r3;
        java.util.Map $r4, $r5;
        java.util.HashMap $r7;

        r0 := @this: org.apache.http.protocol.BasicHttpContext;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        if r1 == null goto label2;

        $r4 = r0.<org.apache.http.protocol.BasicHttpContext: java.util.Map map>;

        if $r4 != null goto label1;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<org.apache.http.protocol.BasicHttpContext: java.util.Map map> = $r7;

     label1:
        $r5 = r0.<org.apache.http.protocol.BasicHttpContext: java.util.Map map>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Id may not be null");

        throw $r3;
    }
}
