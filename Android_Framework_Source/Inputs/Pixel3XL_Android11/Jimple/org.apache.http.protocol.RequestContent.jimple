public class org.apache.http.protocol.RequestContent extends java.lang.Object implements org.apache.http.HttpRequestInterceptor
{

    public void <init>()
    {
        org.apache.http.protocol.RequestContent r0;

        r0 := @this: org.apache.http.protocol.RequestContent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void process(org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.protocol.RequestContent r0;
        org.apache.http.HttpEntity r1;
        java.lang.IllegalArgumentException $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.http.ProtocolException $r3, $r4, $r11;
        org.apache.http.RequestLine $r5;
        org.apache.http.HttpEntityEnclosingRequest $r6;
        org.apache.http.HttpVersion $r7;
        java.lang.StringBuilder $r8;
        java.lang.String $r12, $r16;
        org.apache.http.Header $r13, $r14, $r15, $r20;
        long $l0, $l2;
        byte $b1;
        org.apache.http.HttpRequest r17;
        org.apache.http.protocol.HttpContext r18;
        org.apache.http.ProtocolVersion r19;

        r0 := @this: org.apache.http.protocol.RequestContent;

        r17 := @parameter0: org.apache.http.HttpRequest;

        r18 := @parameter1: org.apache.http.protocol.HttpContext;

        if r17 == null goto label10;

        $z0 = r17 instanceof org.apache.http.HttpEntityEnclosingRequest;

        if $z0 == 0 goto label09;

        $z1 = interfaceinvoke r17.<org.apache.http.HttpRequest: boolean containsHeader(java.lang.String)>("Transfer-Encoding");

        if $z1 != 0 goto label08;

        $z2 = interfaceinvoke r17.<org.apache.http.HttpRequest: boolean containsHeader(java.lang.String)>("Content-Length");

        if $z2 != 0 goto label07;

        $r5 = interfaceinvoke r17.<org.apache.http.HttpRequest: org.apache.http.RequestLine getRequestLine()>();

        r19 = interfaceinvoke $r5.<org.apache.http.RequestLine: org.apache.http.ProtocolVersion getProtocolVersion()>();

        $r6 = (org.apache.http.HttpEntityEnclosingRequest) r17;

        r1 = interfaceinvoke $r6.<org.apache.http.HttpEntityEnclosingRequest: org.apache.http.HttpEntity getEntity()>();

        if r1 != null goto label01;

        interfaceinvoke r17.<org.apache.http.HttpRequest: void addHeader(java.lang.String,java.lang.String)>("Content-Length", "0");

        return;

     label01:
        $z3 = interfaceinvoke r1.<org.apache.http.HttpEntity: boolean isChunked()>();

        if $z3 != 0 goto label03;

        $l0 = interfaceinvoke r1.<org.apache.http.HttpEntity: long getContentLength()>();

        $b1 = $l0 cmp 0L;

        if $b1 >= 0 goto label02;

        goto label03;

     label02:
        $l2 = interfaceinvoke r1.<org.apache.http.HttpEntity: long getContentLength()>();

        $r16 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l2);

        interfaceinvoke r17.<org.apache.http.HttpRequest: void addHeader(java.lang.String,java.lang.String)>("Content-Length", $r16);

        goto label04;

     label03:
        $r7 = <org.apache.http.HttpVersion: org.apache.http.HttpVersion HTTP_1_0>;

        $z4 = virtualinvoke r19.<org.apache.http.ProtocolVersion: boolean lessEquals(org.apache.http.ProtocolVersion)>($r7);

        if $z4 != 0 goto label06;

        interfaceinvoke r17.<org.apache.http.HttpRequest: void addHeader(java.lang.String,java.lang.String)>("Transfer-Encoding", "chunked");

     label04:
        $r13 = interfaceinvoke r1.<org.apache.http.HttpEntity: org.apache.http.Header getContentType()>();

        if $r13 == null goto label05;

        $z6 = interfaceinvoke r17.<org.apache.http.HttpRequest: boolean containsHeader(java.lang.String)>("Content-Type");

        if $z6 != 0 goto label05;

        $r15 = interfaceinvoke r1.<org.apache.http.HttpEntity: org.apache.http.Header getContentType()>();

        interfaceinvoke r17.<org.apache.http.HttpRequest: void addHeader(org.apache.http.Header)>($r15);

     label05:
        $r20 = interfaceinvoke r1.<org.apache.http.HttpEntity: org.apache.http.Header getContentEncoding()>();

        if $r20 == null goto label09;

        $z5 = interfaceinvoke r17.<org.apache.http.HttpRequest: boolean containsHeader(java.lang.String)>("Content-Encoding");

        if $z5 != 0 goto label09;

        $r14 = interfaceinvoke r1.<org.apache.http.HttpEntity: org.apache.http.Header getContentEncoding()>();

        interfaceinvoke r17.<org.apache.http.HttpRequest: void addHeader(org.apache.http.Header)>($r14);

        goto label09;

     label06:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Chunked transfer encoding not allowed for ");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r19);

        $r11 = new org.apache.http.ProtocolException;

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<org.apache.http.ProtocolException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label07:
        $r4 = new org.apache.http.ProtocolException;

        specialinvoke $r4.<org.apache.http.ProtocolException: void <init>(java.lang.String)>("Content-Length header already present");

        throw $r4;

     label08:
        $r3 = new org.apache.http.ProtocolException;

        specialinvoke $r3.<org.apache.http.ProtocolException: void <init>(java.lang.String)>("Transfer-encoding header already present");

        throw $r3;

     label09:
        return;

     label10:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP request may not be null");

        throw $r2;
    }
}
