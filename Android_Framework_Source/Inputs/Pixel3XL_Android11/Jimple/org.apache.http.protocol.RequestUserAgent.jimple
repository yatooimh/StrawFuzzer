public class org.apache.http.protocol.RequestUserAgent extends java.lang.Object implements org.apache.http.HttpRequestInterceptor
{

    public void <init>()
    {
        org.apache.http.protocol.RequestUserAgent r0;

        r0 := @this: org.apache.http.protocol.RequestUserAgent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void process(org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.protocol.RequestUserAgent r0;
        org.apache.http.HttpRequest r1;
        java.lang.IllegalArgumentException $r2;
        boolean $z0;
        org.apache.http.params.HttpParams $r3;
        org.apache.http.protocol.HttpContext r4;
        java.lang.String r5;

        r0 := @this: org.apache.http.protocol.RequestUserAgent;

        r1 := @parameter0: org.apache.http.HttpRequest;

        r4 := @parameter1: org.apache.http.protocol.HttpContext;

        if r1 == null goto label2;

        $z0 = interfaceinvoke r1.<org.apache.http.HttpRequest: boolean containsHeader(java.lang.String)>("User-Agent");

        if $z0 != 0 goto label1;

        $r3 = interfaceinvoke r1.<org.apache.http.HttpRequest: org.apache.http.params.HttpParams getParams()>();

        r5 = staticinvoke <org.apache.http.params.HttpProtocolParams: java.lang.String getUserAgent(org.apache.http.params.HttpParams)>($r3);

        if r5 == null goto label1;

        interfaceinvoke r1.<org.apache.http.HttpRequest: void addHeader(java.lang.String,java.lang.String)>("User-Agent", r5);

     label1:
        return;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP request may not be null");

        throw $r2;
    }
}
