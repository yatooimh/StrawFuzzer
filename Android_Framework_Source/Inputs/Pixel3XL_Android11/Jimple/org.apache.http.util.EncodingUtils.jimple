public final class org.apache.http.util.EncodingUtils extends java.lang.Object
{

    private void <init>()
    {
        org.apache.http.util.EncodingUtils r0;

        r0 := @this: org.apache.http.util.EncodingUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] getAsciiBytes(java.lang.String)
    {
        java.lang.IllegalArgumentException $r0;
        java.lang.Throwable $r1;
        java.lang.Error $r2;
        java.lang.String r3;
        byte[] r4;

        r3 := @parameter0: java.lang.String;

        if r3 == null goto label4;

     label1:
        r4 = virtualinvoke r3.<java.lang.String: byte[] getBytes(java.lang.String)>("US-ASCII");

     label2:
        return r4;

     label3:
        $r1 := @caughtexception;

        $r2 = new java.lang.Error;

        specialinvoke $r2.<java.lang.Error: void <init>(java.lang.String)>("HttpClient requires ASCII support");

        throw $r2;

     label4:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameter may not be null");

        throw $r0;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static java.lang.String getAsciiString(byte[])
    {
        byte[] r0;
        java.lang.IllegalArgumentException $r1;
        int $i0;
        java.lang.String $r2;

        r0 := @parameter0: byte[];

        if r0 == null goto label1;

        $i0 = lengthof r0;

        $r2 = staticinvoke <org.apache.http.util.EncodingUtils: java.lang.String getAsciiString(byte[],int,int)>(r0, 0, $i0);

        return $r2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameter may not be null");

        throw $r1;
    }

    public static java.lang.String getAsciiString(byte[], int, int)
    {
        int i0, i1;
        java.lang.IllegalArgumentException $r0;
        java.lang.String $r1;
        java.lang.Throwable $r2;
        java.lang.Error $r3;
        byte[] r4;

        r4 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r4 == null goto label4;

     label1:
        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r4, i0, i1, "US-ASCII");

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.Error;

        specialinvoke $r3.<java.lang.Error: void <init>(java.lang.String)>("HttpClient requires ASCII support");

        throw $r3;

     label4:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameter may not be null");

        throw $r0;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static byte[] getBytes(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r5;
        java.lang.IllegalArgumentException $r1, $r2;
        int $i0;
        java.lang.Throwable $r3;
        byte[] $r4, r6;

        r0 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        if r0 == null goto label5;

        if r5 == null goto label4;

        $i0 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i0 == 0 goto label4;

     label1:
        r6 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>(r5);

     label2:
        return r6;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>();

        return $r4;

     label4:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("charset may not be null or empty");

        throw $r2;

     label5:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("data may not be null");

        throw $r1;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static java.lang.String getString(byte[], int, int, java.lang.String)
    {
        byte[] r0;
        int i0, i1, $i2;
        java.lang.IllegalArgumentException $r1, $r2;
        java.lang.String $r3, $r5, r6;
        java.lang.Throwable $r4;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r6 := @parameter3: java.lang.String;

        if r0 == null goto label5;

        if r6 == null goto label4;

        $i2 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i2 == 0 goto label4;

     label1:
        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r0, i0, i1, r6);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(byte[],int,int)>(r0, i0, i1);

        return $r5;

     label4:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("charset may not be null or empty");

        throw $r2;

     label5:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameter may not be null");

        throw $r1;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static java.lang.String getString(byte[], java.lang.String)
    {
        byte[] r0;
        java.lang.String r1, $r3;
        java.lang.IllegalArgumentException $r2;
        int $i0;

        r0 := @parameter0: byte[];

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $i0 = lengthof r0;

        $r3 = staticinvoke <org.apache.http.util.EncodingUtils: java.lang.String getString(byte[],int,int,java.lang.String)>(r0, 0, $i0, r1);

        return $r3;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameter may not be null");

        throw $r2;
    }
}
