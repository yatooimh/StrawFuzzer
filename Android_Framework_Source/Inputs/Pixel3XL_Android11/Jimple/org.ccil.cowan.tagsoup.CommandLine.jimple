public class org.ccil.cowan.tagsoup.CommandLine extends java.lang.Object
{
    static java.util.Hashtable options;
    private static java.lang.String theOutputEncoding;
    private static org.ccil.cowan.tagsoup.Parser theParser;
    private static org.ccil.cowan.tagsoup.HTMLSchema theSchema;

    static void <clinit>()
    {
        java.util.Hashtable $r1, $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35, $r38, $r41, $r44, $r47, $r50, $r53, $r56, $r59, $r62, $r65, $r68, $r71;
        java.lang.Boolean $r2, $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r25, $r28, $r31, $r34, $r37, $r40, $r43, $r46, $r49, $r52, $r55, $r58, $r61, $r64, $r67, $r70;

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options> = $r1;

        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r1.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--nocdata", $r2);

        $r5 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r4 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r5.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--files", $r4);

        $r8 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r7 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r8.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--reuse", $r7);

        $r11 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r10 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r11.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--nons", $r10);

        $r14 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r13 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r14.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--nobogons", $r13);

        $r17 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r16 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r17.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--any", $r16);

        $r20 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r19 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r20.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--emptybogons", $r19);

        $r23 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r22 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r23.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--norootbogons", $r22);

        $r26 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r25 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r26.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--pyxin", $r25);

        $r29 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r28 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r29.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--lexical", $r28);

        $r32 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r31 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r32.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--pyx", $r31);

        $r35 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r34 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r35.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--html", $r34);

        $r38 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r37 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r38.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--method=", $r37);

        $r41 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r40 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r41.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--doctype-public=", $r40);

        $r44 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r43 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r44.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--doctype-system=", $r43);

        $r47 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r46 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r47.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--output-encoding=", $r46);

        $r50 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r49 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r50.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--omit-xml-declaration", $r49);

        $r53 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r52 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r53.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--encoding=", $r52);

        $r56 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r55 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r56.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--help", $r55);

        $r59 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r58 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r59.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--version", $r58);

        $r62 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r61 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r62.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--nodefaults", $r61);

        $r65 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r64 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r65.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--nocolons", $r64);

        $r68 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r67 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r68.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--norestart", $r67);

        $r71 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r70 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r71.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>("--ignorable", $r70);

        <org.ccil.cowan.tagsoup.CommandLine: org.ccil.cowan.tagsoup.Parser theParser> = null;

        <org.ccil.cowan.tagsoup.CommandLine: org.ccil.cowan.tagsoup.HTMLSchema theSchema> = null;

        <org.ccil.cowan.tagsoup.CommandLine: java.lang.String theOutputEncoding> = null;

        return;
    }

    public void <init>()
    {
        org.ccil.cowan.tagsoup.CommandLine r0;

        r0 := @this: org.ccil.cowan.tagsoup.CommandLine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static org.xml.sax.ContentHandler chooseContentHandler(java.io.Writer)
    {
        java.util.Hashtable $r0, $r2, $r3, $r6, $r8, $r10, $r12, $r18, $r20, $r22, $r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.ccil.cowan.tagsoup.XMLWriter $r1;
        org.ccil.cowan.tagsoup.HTMLSchema $r4;
        java.lang.String $r5, r17, r19, r21, r23;
        java.lang.Object $r7, $r9, $r11, $r13;
        org.ccil.cowan.tagsoup.PYXWriter $r14;
        java.io.Writer r15;

        r15 := @parameter0: java.io.Writer;

        $r0 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r0, "--pyx");

        if $z0 == 0 goto label1;

        $r14 = new org.ccil.cowan.tagsoup.PYXWriter;

        specialinvoke $r14.<org.ccil.cowan.tagsoup.PYXWriter: void <init>(java.io.Writer)>(r15);

        return $r14;

     label1:
        $r1 = new org.ccil.cowan.tagsoup.XMLWriter;

        specialinvoke $r1.<org.ccil.cowan.tagsoup.XMLWriter: void <init>(java.io.Writer)>(r15);

        $r2 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z1 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r2, "--html");

        if $z1 == 0 goto label2;

        virtualinvoke $r1.<org.ccil.cowan.tagsoup.XMLWriter: void setOutputProperty(java.lang.String,java.lang.String)>("method", "html");

        virtualinvoke $r1.<org.ccil.cowan.tagsoup.XMLWriter: void setOutputProperty(java.lang.String,java.lang.String)>("omit-xml-declaration", "yes");

     label2:
        $r3 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z2 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r3, "--method=");

        if $z2 == 0 goto label3;

        $r12 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r13 = virtualinvoke $r12.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("--method=");

        r17 = (java.lang.String) $r13;

        if r17 == null goto label3;

        virtualinvoke $r1.<org.ccil.cowan.tagsoup.XMLWriter: void setOutputProperty(java.lang.String,java.lang.String)>("method", r17);

     label3:
        $r18 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z3 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r18, "--doctype-public=");

        if $z3 == 0 goto label4;

        $r10 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r11 = virtualinvoke $r10.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("--doctype-public=");

        r19 = (java.lang.String) $r11;

        if r19 == null goto label4;

        virtualinvoke $r1.<org.ccil.cowan.tagsoup.XMLWriter: void setOutputProperty(java.lang.String,java.lang.String)>("doctype-public", r19);

     label4:
        $r20 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z4 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r20, "--doctype-system=");

        if $z4 == 0 goto label5;

        $r8 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r9 = virtualinvoke $r8.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("--doctype-system=");

        r21 = (java.lang.String) $r9;

        if r21 == null goto label5;

        virtualinvoke $r1.<org.ccil.cowan.tagsoup.XMLWriter: void setOutputProperty(java.lang.String,java.lang.String)>("doctype-system", r21);

     label5:
        $r22 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z5 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r22, "--output-encoding=");

        if $z5 == 0 goto label6;

        $r6 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r7 = virtualinvoke $r6.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("--output-encoding=");

        r23 = (java.lang.String) $r7;

        <org.ccil.cowan.tagsoup.CommandLine: java.lang.String theOutputEncoding> = r23;

        if r23 == null goto label6;

        virtualinvoke $r1.<org.ccil.cowan.tagsoup.XMLWriter: void setOutputProperty(java.lang.String,java.lang.String)>("encoding", r23);

     label6:
        $r24 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z6 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r24, "--omit-xml-declaration");

        if $z6 == 0 goto label7;

        virtualinvoke $r1.<org.ccil.cowan.tagsoup.XMLWriter: void setOutputProperty(java.lang.String,java.lang.String)>("omit-xml-declaration", "yes");

     label7:
        $r4 = <org.ccil.cowan.tagsoup.CommandLine: org.ccil.cowan.tagsoup.HTMLSchema theSchema>;

        $r5 = virtualinvoke $r4.<org.ccil.cowan.tagsoup.HTMLSchema: java.lang.String getURI()>();

        virtualinvoke $r1.<org.ccil.cowan.tagsoup.XMLWriter: void setPrefix(java.lang.String,java.lang.String)>($r5, "");

        return $r1;
    }

    private static void doHelp()
    {
        java.util.Enumeration r0;
        java.lang.String r1;
        java.io.PrintStream $r2, $r3, $r5, $r7, $r8, $r9, $r10;
        java.util.Hashtable $r4;
        boolean $z0, $z1, z2;
        java.lang.Object $r6;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void print(java.lang.String)>("usage: java -jar tagsoup-*.jar ");

        $r3 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r3.<java.io.PrintStream: void print(java.lang.String)>(" [ ");

        z2 = 1;

        $r4 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        r0 = virtualinvoke $r4.<java.util.Hashtable: java.util.Enumeration keys()>();

     label1:
        $z0 = interfaceinvoke r0.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label4;

        if z2 != 0 goto label2;

        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r10.<java.io.PrintStream: void print(java.lang.String)>("| ");

     label2:
        z2 = 0;

        $r6 = interfaceinvoke r0.<java.util.Enumeration: java.lang.Object nextElement()>();

        r1 = (java.lang.String) $r6;

        $r7 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r7.<java.io.PrintStream: void print(java.lang.String)>(r1);

        $z1 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("=");

        if $z1 == 0 goto label3;

        $r9 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r9.<java.io.PrintStream: void print(java.lang.String)>("?");

     label3:
        $r8 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r8.<java.io.PrintStream: void print(java.lang.String)>(" ");

        goto label1;

     label4:
        $r5 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("]*");

        return;
    }

    private static int getopts(java.util.Hashtable, java.lang.String[])
    {
        java.util.Hashtable r0;
        java.lang.String[] r1;
        java.lang.String r2, r8, r9;
        int i0, $i1, $i3, $i4, $i5, i6;
        char $c2;
        boolean $z0;
        java.io.PrintStream $r3, $r4;
        java.lang.Boolean $r6;

        r0 := @parameter0: java.util.Hashtable;

        r1 := @parameter1: java.lang.String[];

        i6 = 0;

     label1:
        $i1 = lengthof r1;

        if i6 >= $i1 goto label7;

        r2 = r1[i6];

        r8 = null;

        $c2 = virtualinvoke r2.<java.lang.String: char charAt(int)>(0);

        if $c2 == 45 goto label2;

        goto label7;

     label2:
        i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(61);

        r9 = r2;

        if i0 == -1 goto label3;

        $i3 = i0 + 1;

        $i4 = virtualinvoke r2.<java.lang.String: int length()>();

        r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>($i3, $i4);

        $i5 = i0 + 1;

        r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i5);

     label3:
        $z0 = virtualinvoke r0.<java.util.Hashtable: boolean containsKey(java.lang.Object)>(r9);

        if $z0 == 0 goto label5;

        if r8 != null goto label4;

        $r6 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, $r6);

        goto label6;

     label4:
        virtualinvoke r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, r8);

        goto label6;

     label5:
        $r3 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r3.<java.io.PrintStream: void print(java.lang.String)>("Unknown option ");

        $r4 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(r9);

        staticinvoke <java.lang.System: void exit(int)>(1);

     label6:
        i6 = i6 + 1;

        goto label1;

     label7:
        return i6;
    }

    private static boolean hasOption(java.util.Hashtable, java.lang.String)
    {
        java.util.Hashtable r0;
        java.lang.String r1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Boolean $r3;

        r0 := @parameter0: java.util.Hashtable;

        r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <java.lang.Boolean: boolean getBoolean(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r2 = virtualinvoke r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $r3 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        if $r2 == $r3 goto label2;

        return 1;

     label2:
        return 0;
    }

    public static void main(java.lang.String[]) throws java.io.IOException, org.xml.sax.SAXException
    {
        java.lang.String[] r0;
        int i0, $i1, $i2, $i3, i4;
        java.io.PrintStream r1, $r12, $r28, $r29, r38;
        java.util.Hashtable $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r7, $r14, $r22, $r25, $r35;
        java.lang.String $r9, $r11, $r13, $r15, r30, r32, $r36;
        java.io.FileOutputStream $r37;

        r0 := @parameter0: java.lang.String[];

        $r3 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        i4 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: int getopts(java.util.Hashtable,java.lang.String[])>($r3, r0);

        $r4 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r4, "--help");

        if $z0 == 0 goto label01;

        staticinvoke <org.ccil.cowan.tagsoup.CommandLine: void doHelp()>();

        return;

     label01:
        $r5 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z1 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r5, "--version");

        if $z1 == 0 goto label02;

        $r29 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>("TagSoup version 1.2");

        return;

     label02:
        $i1 = lengthof r0;

        if $i1 != i4 goto label03;

        $r28 = <java.lang.System: java.io.PrintStream out>;

        staticinvoke <org.ccil.cowan.tagsoup.CommandLine: void process(java.lang.String,java.io.OutputStream)>("", $r28);

        goto label10;

     label03:
        $r6 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z2 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r6, "--files");

        if $z2 == 0 goto label09;

     label04:
        $i3 = lengthof r0;

        if i4 >= $i3 goto label08;

        r30 = r0[i4];

        i0 = virtualinvoke r30.<java.lang.String: int lastIndexOf(int)>(46);

        if i0 != -1 goto label05;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xhtml");

        r32 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label07;

     label05:
        $z3 = virtualinvoke r30.<java.lang.String: boolean endsWith(java.lang.String)>(".xhtml");

        if $z3 == 0 goto label06;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        r32 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label07;

     label06:
        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke r30.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xhtml");

        r32 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

     label07:
        r1 = <java.lang.System: java.io.PrintStream err>;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("src: ");

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dst: ");

        virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.PrintStream: void println(java.lang.String)>($r36);

        $r37 = new java.io.FileOutputStream;

        specialinvoke $r37.<java.io.FileOutputStream: void <init>(java.lang.String)>(r32);

        staticinvoke <org.ccil.cowan.tagsoup.CommandLine: void process(java.lang.String,java.io.OutputStream)>(r30, $r37);

        i4 = i4 + 1;

        goto label04;

     label08:
        goto label10;

     label09:
        $i2 = lengthof r0;

        if i4 >= $i2 goto label10;

        r38 = <java.lang.System: java.io.PrintStream err>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("src: ");

        $r9 = r0[i4];

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r38.<java.io.PrintStream: void println(java.lang.String)>($r11);

        $r13 = r0[i4];

        $r12 = <java.lang.System: java.io.PrintStream out>;

        staticinvoke <org.ccil.cowan.tagsoup.CommandLine: void process(java.lang.String,java.io.OutputStream)>($r13, $r12);

        i4 = i4 + 1;

        goto label09;

     label10:
        return;
    }

    private static void process(java.lang.String, java.io.OutputStream) throws java.io.IOException, org.xml.sax.SAXException
    {
        java.util.Hashtable $r1, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r16, $r18, $r19, $r23, $r29, $r30;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        org.ccil.cowan.tagsoup.Parser $r2, $r24, $r25, r28;
        org.ccil.cowan.tagsoup.HTMLSchema $r3;
        java.lang.String $r13, $r15, r26, r35;
        java.io.OutputStreamWriter $r14, $r21, r31;
        java.io.InputStream $r17;
        java.lang.Object $r20;
        org.ccil.cowan.tagsoup.PYXScanner $r22;
        java.io.OutputStream r27;
        org.xml.sax.ContentHandler r32;
        org.xml.sax.InputSource $r33;

        r26 := @parameter0: java.lang.String;

        r27 := @parameter1: java.io.OutputStream;

        $r1 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z0 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r1, "--reuse");

        if $z0 == 0 goto label02;

        $r24 = <org.ccil.cowan.tagsoup.CommandLine: org.ccil.cowan.tagsoup.Parser theParser>;

        if $r24 != null goto label01;

        $r25 = new org.ccil.cowan.tagsoup.Parser;

        specialinvoke $r25.<org.ccil.cowan.tagsoup.Parser: void <init>()>();

        <org.ccil.cowan.tagsoup.CommandLine: org.ccil.cowan.tagsoup.Parser theParser> = $r25;

     label01:
        r28 = <org.ccil.cowan.tagsoup.CommandLine: org.ccil.cowan.tagsoup.Parser theParser>;

        goto label03;

     label02:
        $r2 = new org.ccil.cowan.tagsoup.Parser;

        specialinvoke $r2.<org.ccil.cowan.tagsoup.Parser: void <init>()>();

        r28 = $r2;

     label03:
        $r3 = new org.ccil.cowan.tagsoup.HTMLSchema;

        specialinvoke $r3.<org.ccil.cowan.tagsoup.HTMLSchema: void <init>()>();

        <org.ccil.cowan.tagsoup.CommandLine: org.ccil.cowan.tagsoup.HTMLSchema theSchema> = $r3;

        interfaceinvoke r28.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/properties/schema", $r3);

        $r4 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z1 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r4, "--nocdata");

        if $z1 == 0 goto label04;

        interfaceinvoke r28.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://www.ccil.org/~cowan/tagsoup/features/cdata-elements", 0);

     label04:
        $r5 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z2 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r5, "--nons");

        if $z2 != 0 goto label05;

        $r23 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z13 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r23, "--html");

        if $z13 == 0 goto label06;

     label05:
        interfaceinvoke r28.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/namespaces", 0);

     label06:
        $r29 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z14 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r29, "--nobogons");

        if $z14 == 0 goto label07;

        interfaceinvoke r28.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://www.ccil.org/~cowan/tagsoup/features/ignore-bogons", 1);

     label07:
        $r6 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z3 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r6, "--any");

        if $z3 == 0 goto label08;

        interfaceinvoke r28.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://www.ccil.org/~cowan/tagsoup/features/bogons-empty", 0);

        goto label09;

     label08:
        $r7 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z4 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r7, "--emptybogons");

        if $z4 == 0 goto label09;

        interfaceinvoke r28.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://www.ccil.org/~cowan/tagsoup/features/bogons-empty", 1);

     label09:
        $r30 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z15 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r30, "--norootbogons");

        if $z15 == 0 goto label10;

        interfaceinvoke r28.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://www.ccil.org/~cowan/tagsoup/features/root-bogons", 0);

     label10:
        $r8 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z5 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r8, "--nodefaults");

        if $z5 == 0 goto label11;

        interfaceinvoke r28.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://www.ccil.org/~cowan/tagsoup/features/default-attributes", 0);

     label11:
        $r9 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z6 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r9, "--nocolons");

        if $z6 == 0 goto label12;

        interfaceinvoke r28.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://www.ccil.org/~cowan/tagsoup/features/translate-colons", 1);

     label12:
        $r10 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z7 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r10, "--norestart");

        if $z7 == 0 goto label13;

        interfaceinvoke r28.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://www.ccil.org/~cowan/tagsoup/features/restart-elements", 0);

     label13:
        $r11 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z8 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r11, "--ignorable");

        if $z8 == 0 goto label14;

        interfaceinvoke r28.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://www.ccil.org/~cowan/tagsoup/features/ignorable-whitespace", 1);

     label14:
        $r12 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z9 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r12, "--pyxin");

        if $z9 == 0 goto label15;

        $r22 = new org.ccil.cowan.tagsoup.PYXScanner;

        specialinvoke $r22.<org.ccil.cowan.tagsoup.PYXScanner: void <init>()>();

        interfaceinvoke r28.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/properties/scanner", $r22);

     label15:
        $r13 = <org.ccil.cowan.tagsoup.CommandLine: java.lang.String theOutputEncoding>;

        if $r13 != null goto label16;

        $r21 = new java.io.OutputStreamWriter;

        specialinvoke $r21.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>(r27);

        r31 = $r21;

        goto label17;

     label16:
        $r14 = new java.io.OutputStreamWriter;

        $r15 = <org.ccil.cowan.tagsoup.CommandLine: java.lang.String theOutputEncoding>;

        specialinvoke $r14.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r27, $r15);

        r31 = $r14;

     label17:
        r32 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: org.xml.sax.ContentHandler chooseContentHandler(java.io.Writer)>(r31);

        interfaceinvoke r28.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>(r32);

        $r16 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z10 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r16, "--lexical");

        if $z10 == 0 goto label18;

        $z12 = r32 instanceof org.xml.sax.ext.LexicalHandler;

        if $z12 == 0 goto label18;

        interfaceinvoke r28.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://xml.org/sax/properties/lexical-handler", r32);

     label18:
        $r33 = new org.xml.sax.InputSource;

        specialinvoke $r33.<org.xml.sax.InputSource: void <init>()>();

        if r26 == "" goto label19;

        virtualinvoke $r33.<org.xml.sax.InputSource: void setSystemId(java.lang.String)>(r26);

        goto label20;

     label19:
        $r17 = <java.lang.System: java.io.InputStream in>;

        virtualinvoke $r33.<org.xml.sax.InputSource: void setByteStream(java.io.InputStream)>($r17);

     label20:
        $r18 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $z11 = staticinvoke <org.ccil.cowan.tagsoup.CommandLine: boolean hasOption(java.util.Hashtable,java.lang.String)>($r18, "--encoding=");

        if $z11 == 0 goto label21;

        $r19 = <org.ccil.cowan.tagsoup.CommandLine: java.util.Hashtable options>;

        $r20 = virtualinvoke $r19.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("--encoding=");

        r35 = (java.lang.String) $r20;

        if r35 == null goto label21;

        virtualinvoke $r33.<org.xml.sax.InputSource: void setEncoding(java.lang.String)>(r35);

     label21:
        interfaceinvoke r28.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>($r33);

        return;
    }
}
