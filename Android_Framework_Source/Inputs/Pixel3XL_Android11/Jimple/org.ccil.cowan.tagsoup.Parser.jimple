public class org.ccil.cowan.tagsoup.Parser extends org.xml.sax.helpers.DefaultHandler implements org.ccil.cowan.tagsoup.ScanHandler, org.xml.sax.XMLReader, org.xml.sax.ext.LexicalHandler
{
    public static final java.lang.String CDATAElementsFeature;
    private static boolean DEFAULT_BOGONS_EMPTY;
    private static boolean DEFAULT_CDATA_ELEMENTS;
    private static boolean DEFAULT_DEFAULT_ATTRIBUTES;
    private static boolean DEFAULT_IGNORABLE_WHITESPACE;
    private static boolean DEFAULT_IGNORE_BOGONS;
    private static boolean DEFAULT_NAMESPACES;
    private static boolean DEFAULT_RESTART_ELEMENTS;
    private static boolean DEFAULT_ROOT_BOGONS;
    private static boolean DEFAULT_TRANSLATE_COLONS;
    public static final java.lang.String XML11Feature;
    public static final java.lang.String autoDetectorProperty;
    public static final java.lang.String bogonsEmptyFeature;
    public static final java.lang.String defaultAttributesFeature;
    private static char[] etagchars;
    public static final java.lang.String externalGeneralEntitiesFeature;
    public static final java.lang.String externalParameterEntitiesFeature;
    public static final java.lang.String ignorableWhitespaceFeature;
    public static final java.lang.String ignoreBogonsFeature;
    public static final java.lang.String isStandaloneFeature;
    private static java.lang.String legal;
    public static final java.lang.String lexicalHandlerParameterEntitiesFeature;
    public static final java.lang.String lexicalHandlerProperty;
    public static final java.lang.String namespacePrefixesFeature;
    public static final java.lang.String namespacesFeature;
    public static final java.lang.String resolveDTDURIsFeature;
    public static final java.lang.String restartElementsFeature;
    public static final java.lang.String rootBogonsFeature;
    public static final java.lang.String scannerProperty;
    public static final java.lang.String schemaProperty;
    public static final java.lang.String stringInterningFeature;
    public static final java.lang.String translateColonsFeature;
    public static final java.lang.String unicodeNormalizationCheckingFeature;
    public static final java.lang.String useAttributes2Feature;
    public static final java.lang.String useEntityResolver2Feature;
    public static final java.lang.String useLocator2Feature;
    public static final java.lang.String validationFeature;
    public static final java.lang.String xmlnsURIsFeature;
    private boolean CDATAElements;
    private boolean bogonsEmpty;
    private boolean defaultAttributes;
    private boolean ignorableWhitespace;
    private boolean ignoreBogons;
    private boolean namespaces;
    private boolean restartElements;
    private boolean rootBogons;
    private java.lang.String theAttributeName;
    private org.ccil.cowan.tagsoup.AutoDetector theAutoDetector;
    private char[] theCommentBuffer;
    private org.xml.sax.ContentHandler theContentHandler;
    private org.xml.sax.DTDHandler theDTDHandler;
    private boolean theDoctypeIsPresent;
    private java.lang.String theDoctypeName;
    private java.lang.String theDoctypePublicId;
    private java.lang.String theDoctypeSystemId;
    private int theEntity;
    private org.xml.sax.EntityResolver theEntityResolver;
    private org.xml.sax.ErrorHandler theErrorHandler;
    private java.util.HashMap theFeatures;
    private org.xml.sax.ext.LexicalHandler theLexicalHandler;
    private org.ccil.cowan.tagsoup.Element theNewElement;
    private org.ccil.cowan.tagsoup.Element thePCDATA;
    private java.lang.String thePITarget;
    private org.ccil.cowan.tagsoup.Element theSaved;
    private org.ccil.cowan.tagsoup.Scanner theScanner;
    private org.ccil.cowan.tagsoup.Schema theSchema;
    private org.ccil.cowan.tagsoup.Element theStack;
    private boolean translateColons;
    private boolean virginStack;

    static void <clinit>()
    {
        char[] $r0;

        <org.ccil.cowan.tagsoup.Parser: java.lang.String xmlnsURIsFeature> = "http://xml.org/sax/features/xmlns-uris";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String validationFeature> = "http://xml.org/sax/features/validation";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String useLocator2Feature> = "http://xml.org/sax/features/use-locator2";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String useEntityResolver2Feature> = "http://xml.org/sax/features/use-entity-resolver2";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String useAttributes2Feature> = "http://xml.org/sax/features/use-attributes2";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String unicodeNormalizationCheckingFeature> = "http://xml.org/sax/features/unicode-normalization-checking";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String translateColonsFeature> = "http://www.ccil.org/~cowan/tagsoup/features/translate-colons";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String stringInterningFeature> = "http://xml.org/sax/features/string-interning";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String schemaProperty> = "http://www.ccil.org/~cowan/tagsoup/properties/schema";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String scannerProperty> = "http://www.ccil.org/~cowan/tagsoup/properties/scanner";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String rootBogonsFeature> = "http://www.ccil.org/~cowan/tagsoup/features/root-bogons";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String restartElementsFeature> = "http://www.ccil.org/~cowan/tagsoup/features/restart-elements";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String resolveDTDURIsFeature> = "http://xml.org/sax/features/resolve-dtd-uris";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String namespacesFeature> = "http://xml.org/sax/features/namespaces";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String namespacePrefixesFeature> = "http://xml.org/sax/features/namespace-prefixes";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String lexicalHandlerProperty> = "http://xml.org/sax/properties/lexical-handler";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String lexicalHandlerParameterEntitiesFeature> = "http://xml.org/sax/features/lexical-handler/parameter-entities";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String isStandaloneFeature> = "http://xml.org/sax/features/is-standalone";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String ignoreBogonsFeature> = "http://www.ccil.org/~cowan/tagsoup/features/ignore-bogons";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String ignorableWhitespaceFeature> = "http://www.ccil.org/~cowan/tagsoup/features/ignorable-whitespace";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String externalParameterEntitiesFeature> = "http://xml.org/sax/features/external-parameter-entities";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String externalGeneralEntitiesFeature> = "http://xml.org/sax/features/external-general-entities";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String defaultAttributesFeature> = "http://www.ccil.org/~cowan/tagsoup/features/default-attributes";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String bogonsEmptyFeature> = "http://www.ccil.org/~cowan/tagsoup/features/bogons-empty";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String autoDetectorProperty> = "http://www.ccil.org/~cowan/tagsoup/properties/auto-detector";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String XML11Feature> = "http://xml.org/sax/features/xml-1.1";

        <org.ccil.cowan.tagsoup.Parser: java.lang.String CDATAElementsFeature> = "http://www.ccil.org/~cowan/tagsoup/features/cdata-elements";

        <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_NAMESPACES> = 1;

        <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_IGNORE_BOGONS> = 0;

        <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_BOGONS_EMPTY> = 0;

        <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_ROOT_BOGONS> = 1;

        <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_DEFAULT_ATTRIBUTES> = 1;

        <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_TRANSLATE_COLONS> = 0;

        <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_RESTART_ELEMENTS> = 1;

        <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_IGNORABLE_WHITESPACE> = 0;

        <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_CDATA_ELEMENTS> = 1;

        $r0 = newarray (char)[3];

        $r0[0] = 60;

        $r0[1] = 47;

        $r0[2] = 62;

        <org.ccil.cowan.tagsoup.Parser: char[] etagchars> = $r0;

        <org.ccil.cowan.tagsoup.Parser: java.lang.String legal> = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-\'()+,./:=?;!*#@$_%";

        return;
    }

    public void <init>()
    {
        org.ccil.cowan.tagsoup.Parser r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17;
        java.util.HashMap $r2, $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r27, $r30, $r33, $r36, $r39, $r42, $r45, $r47, $r50, $r53, $r56, $r59, $r62, $r65, $r68;
        java.lang.Boolean $r3, $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35, $r38, $r41, $r44, $r48, $r51, $r54, $r57, $r60, $r63, $r66, $r69;
        char[] $r71;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        specialinvoke r0.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler> = r0;

        r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ext.LexicalHandler theLexicalHandler> = r0;

        r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.DTDHandler theDTDHandler> = r0;

        r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ErrorHandler theErrorHandler> = r0;

        r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.EntityResolver theEntityResolver> = r0;

        $z0 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_NAMESPACES>;

        r0.<org.ccil.cowan.tagsoup.Parser: boolean namespaces> = $z0;

        $z1 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_IGNORE_BOGONS>;

        r0.<org.ccil.cowan.tagsoup.Parser: boolean ignoreBogons> = $z1;

        $z2 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_BOGONS_EMPTY>;

        r0.<org.ccil.cowan.tagsoup.Parser: boolean bogonsEmpty> = $z2;

        $z3 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_ROOT_BOGONS>;

        r0.<org.ccil.cowan.tagsoup.Parser: boolean rootBogons> = $z3;

        $z4 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_DEFAULT_ATTRIBUTES>;

        r0.<org.ccil.cowan.tagsoup.Parser: boolean defaultAttributes> = $z4;

        $z5 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_TRANSLATE_COLONS>;

        r0.<org.ccil.cowan.tagsoup.Parser: boolean translateColons> = $z5;

        $z6 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_RESTART_ELEMENTS>;

        r0.<org.ccil.cowan.tagsoup.Parser: boolean restartElements> = $z6;

        $z7 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_IGNORABLE_WHITESPACE>;

        r0.<org.ccil.cowan.tagsoup.Parser: boolean ignorableWhitespace> = $z7;

        $z8 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_CDATA_ELEMENTS>;

        r0.<org.ccil.cowan.tagsoup.Parser: boolean CDATAElements> = $z8;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures> = $r2;

        $z9 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_NAMESPACES>;

        $r3 = staticinvoke <org.ccil.cowan.tagsoup.Parser: java.lang.Boolean truthValue(boolean)>($z9);

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xml.org/sax/features/namespaces", $r3);

        $r6 = r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r5 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xml.org/sax/features/namespace-prefixes", $r5);

        $r9 = r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r8 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xml.org/sax/features/external-general-entities", $r8);

        $r12 = r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r11 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xml.org/sax/features/external-parameter-entities", $r11);

        $r15 = r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r14 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r15.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xml.org/sax/features/is-standalone", $r14);

        $r18 = r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r17 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r18.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xml.org/sax/features/lexical-handler/parameter-entities", $r17);

        $r21 = r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r20 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r21.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xml.org/sax/features/resolve-dtd-uris", $r20);

        $r24 = r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r23 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r24.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xml.org/sax/features/string-interning", $r23);

        $r27 = r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r26 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r27.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xml.org/sax/features/use-attributes2", $r26);

        $r30 = r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r29 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r30.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xml.org/sax/features/use-locator2", $r29);

        $r33 = r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r32 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r33.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xml.org/sax/features/use-entity-resolver2", $r32);

        $r36 = r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r35 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r36.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xml.org/sax/features/validation", $r35);

        $r39 = r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r38 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r39.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xml.org/sax/features/xmlns-uris", $r38);

        $r42 = r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r41 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r42.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xml.org/sax/features/xmlns-uris", $r41);

        $r45 = r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r44 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r45.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://xml.org/sax/features/xml-1.1", $r44);

        $r47 = r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $z10 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_IGNORE_BOGONS>;

        $r48 = staticinvoke <org.ccil.cowan.tagsoup.Parser: java.lang.Boolean truthValue(boolean)>($z10);

        virtualinvoke $r47.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/features/ignore-bogons", $r48);

        $r50 = r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $z11 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_BOGONS_EMPTY>;

        $r51 = staticinvoke <org.ccil.cowan.tagsoup.Parser: java.lang.Boolean truthValue(boolean)>($z11);

        virtualinvoke $r50.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/features/bogons-empty", $r51);

        $r53 = r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $z12 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_ROOT_BOGONS>;

        $r54 = staticinvoke <org.ccil.cowan.tagsoup.Parser: java.lang.Boolean truthValue(boolean)>($z12);

        virtualinvoke $r53.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/features/root-bogons", $r54);

        $r56 = r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $z13 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_DEFAULT_ATTRIBUTES>;

        $r57 = staticinvoke <org.ccil.cowan.tagsoup.Parser: java.lang.Boolean truthValue(boolean)>($z13);

        virtualinvoke $r56.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/features/default-attributes", $r57);

        $r59 = r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $z14 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_TRANSLATE_COLONS>;

        $r60 = staticinvoke <org.ccil.cowan.tagsoup.Parser: java.lang.Boolean truthValue(boolean)>($z14);

        virtualinvoke $r59.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/features/translate-colons", $r60);

        $r62 = r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $z15 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_RESTART_ELEMENTS>;

        $r63 = staticinvoke <org.ccil.cowan.tagsoup.Parser: java.lang.Boolean truthValue(boolean)>($z15);

        virtualinvoke $r62.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/features/restart-elements", $r63);

        $r65 = r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $z16 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_IGNORABLE_WHITESPACE>;

        $r66 = staticinvoke <org.ccil.cowan.tagsoup.Parser: java.lang.Boolean truthValue(boolean)>($z16);

        virtualinvoke $r65.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/features/ignorable-whitespace", $r66);

        $r68 = r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $z17 = <org.ccil.cowan.tagsoup.Parser: boolean DEFAULT_CDATA_ELEMENTS>;

        $r69 = staticinvoke <org.ccil.cowan.tagsoup.Parser: java.lang.Boolean truthValue(boolean)>($z17);

        virtualinvoke $r68.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/features/cdata-elements", $r69);

        r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theNewElement> = null;

        r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theAttributeName> = null;

        r0.<org.ccil.cowan.tagsoup.Parser: boolean theDoctypeIsPresent> = 0;

        r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theDoctypePublicId> = null;

        r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theDoctypeSystemId> = null;

        r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theDoctypeName> = null;

        r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String thePITarget> = null;

        r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack> = null;

        r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theSaved> = null;

        r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element thePCDATA> = null;

        r0.<org.ccil.cowan.tagsoup.Parser: int theEntity> = 0;

        r0.<org.ccil.cowan.tagsoup.Parser: boolean virginStack> = 1;

        $r71 = newarray (char)[2000];

        r0.<org.ccil.cowan.tagsoup.Parser: char[] theCommentBuffer> = $r71;

        return;
    }

    private java.lang.String cleanPublicid(java.lang.String)
    {
        org.ccil.cowan.tagsoup.Parser r0;
        java.lang.String r1, $r4, $r5, $r6;
        int i0, $i2, i3;
        char c1;
        java.lang.StringBuffer $r3;
        boolean z0;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(int)>(i0);

        z0 = 1;

        i3 = 0;

     label2:
        if i3 >= i0 goto label6;

        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i3);

        $r6 = <org.ccil.cowan.tagsoup.Parser: java.lang.String legal>;

        $i2 = virtualinvoke $r6.<java.lang.String: int indexOf(int)>(c1);

        if $i2 == -1 goto label3;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c1);

        z0 = 0;

        goto label5;

     label3:
        if z0 == 0 goto label4;

        goto label5;

     label4:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        z0 = 1;

     label5:
        i3 = i3 + 1;

        goto label2;

     label6:
        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        return $r5;
    }

    private java.lang.String expandEntities(java.lang.String)
    {
        org.ccil.cowan.tagsoup.Parser r0;
        java.lang.String r1, $r3;
        int i0, $i2, $i3, $i6, $i7, $i8, $i11, $i12, $i13, i16, i17, i18, i19, i20, i21;
        char[] r2;
        char c1, $c4, $c5, $c9, $c10, $c14, $c15;
        boolean $z0, $z1;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 := @parameter0: java.lang.String;

        i16 = -1;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        r2 = newarray (char)[i0];

        i17 = 0;

        i18 = 0;

     label1:
        if i18 >= i0 goto label9;

        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i18);

        i19 = i17 + 1;

        r2[i17] = c1;

        if c1 != 38 goto label2;

        if i16 != -1 goto label2;

        i16 = i19;

        goto label8;

     label2:
        if i16 != -1 goto label3;

        goto label8;

     label3:
        $z0 = staticinvoke <java.lang.Character: boolean isLetter(char)>(c1);

        if $z0 != 0 goto label8;

        $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c1);

        if $z1 != 0 goto label8;

        if c1 != 35 goto label4;

        goto label8;

     label4:
        if c1 != 59 goto label7;

        $i2 = i19 - i16;

        $i3 = $i2 - 1;

        i20 = specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: int lookupEntity(char[],int,int)>(r2, i16, $i3);

        if i20 <= 65535 goto label5;

        i21 = i20 - 65536;

        $i11 = i16 - 1;

        $i7 = i21 >> 10;

        $i8 = $i7 + 55296;

        $c9 = (char) $i8;

        $c10 = (char) $c9;

        r2[$i11] = $c10;

        $i12 = i21 & 1023;

        $i13 = $i12 + 56320;

        $c14 = (char) $i13;

        $c15 = (char) $c14;

        r2[i16] = $c15;

        i19 = i16 + 1;

        goto label6;

     label5:
        if i20 == 0 goto label6;

        $i6 = i16 - 1;

        $c4 = (char) i20;

        $c5 = (char) $c4;

        r2[$i6] = $c5;

        i19 = i16;

     label6:
        i16 = -1;

        goto label8;

     label7:
        i16 = -1;

        goto label8;

     label8:
        i18 = i18 + 1;

        i17 = i19;

        goto label1;

     label9:
        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(char[],int,int)>(r2, 0, i17);

        return $r3;
    }

    private boolean foreign(java.lang.String, java.lang.String)
    {
        org.ccil.cowan.tagsoup.Parser r0;
        java.lang.String r1, r2, $r4;
        boolean $z0, $z1, $z2, z3;
        org.ccil.cowan.tagsoup.Schema $r3;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 != 0 goto label1;

        $r3 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        $r4 = virtualinvoke $r3.<org.ccil.cowan.tagsoup.Schema: java.lang.String getURI()>();

        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z2 != 0 goto label1;

        z3 = 1;

        goto label2;

     label1:
        z3 = 0;

     label2:
        return z3;
    }

    private java.io.InputStream getInputStream(java.lang.String, java.lang.String) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        java.lang.String r1, $r3, $r8, r11;
        java.lang.StringBuilder $r2;
        java.net.URL $r6, $r7;
        java.net.URLConnection $r9;
        java.io.InputStream $r10;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r11 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.dir");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/.");

        $r6 = new java.net.URL;

        $r7 = new java.net.URL;

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.net.URL: void <init>(java.lang.String,java.lang.String,java.lang.String)>("file", "", $r8);

        specialinvoke $r6.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r7, r1);

        $r9 = virtualinvoke $r6.<java.net.URL: java.net.URLConnection openConnection()>();

        $r10 = virtualinvoke $r9.<java.net.URLConnection: java.io.InputStream getInputStream()>();

        return $r10;
    }

    private java.io.Reader getReader(org.xml.sax.InputSource) throws org.xml.sax.SAXException, java.io.IOException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        java.io.Reader r1, r16;
        java.lang.String r2, r3, r4;
        org.ccil.cowan.tagsoup.AutoDetector $r5;
        java.lang.Throwable $r6;
        org.xml.sax.InputSource r8;
        java.io.InputStream r9, r11;
        java.lang.Object r10;
        java.io.InputStreamReader r14, r15;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r8 := @parameter0: org.xml.sax.InputSource;

        r1 = virtualinvoke r8.<org.xml.sax.InputSource: java.io.Reader getCharacterStream()>();

        r9 = virtualinvoke r8.<org.xml.sax.InputSource: java.io.InputStream getByteStream()>();

        r2 = virtualinvoke r8.<org.xml.sax.InputSource: java.lang.String getEncoding()>();

        r3 = virtualinvoke r8.<org.xml.sax.InputSource: java.lang.String getPublicId()>();

        r4 = virtualinvoke r8.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        r10 = r1;

        if r1 != null goto label5;

        r11 = r9;

        if r9 != null goto label1;

        r11 = specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: java.io.InputStream getInputStream(java.lang.String,java.lang.String)>(r3, r4);

     label1:
        if r2 != null goto label2;

        $r5 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.AutoDetector theAutoDetector>;

        r10 = interfaceinvoke $r5.<org.ccil.cowan.tagsoup.AutoDetector: java.io.Reader autoDetectingReader(java.io.InputStream)>(r11);

        goto label5;

     label2:
        r14 = new java.io.InputStreamReader;

        specialinvoke r14.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r11, r2);

     label3:
        r10 = r14;

        goto label5;

     label4:
        $r6 := @caughtexception;

        r15 = new java.io.InputStreamReader;

        specialinvoke r15.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r11);

        r10 = r15;

     label5:
        r16 = (java.io.Reader) r10;

        return r16;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }

    private int lookupEntity(char[], int, int)
    {
        org.ccil.cowan.tagsoup.Parser r0;
        int i0, $i2, $i3, $i4, $i5, $i7, $i8, $i9, i11, i12, i13;
        char $c1, $c6, $c10;
        java.lang.String $r1, r6, r8;
        org.ccil.cowan.tagsoup.Schema $r2;
        java.lang.Throwable $r3, $r4;
        char[] r5;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r5 := @parameter0: char[];

        i11 := @parameter1: int;

        i0 := @parameter2: int;

        if i0 >= 1 goto label1;

        return 0;

     label1:
        $c1 = r5[i11];

        if $c1 != 35 goto label8;

        if i0 <= 1 goto label5;

        $i5 = i11 + 1;

        $c6 = r5[$i5];

        if $c6 == 120 goto label2;

        $i9 = i11 + 1;

        $c10 = r5[$i9];

        if $c10 != 88 goto label5;

     label2:
        r6 = new java.lang.String;

        $i8 = i11 + 2;

        $i7 = i0 - 2;

        specialinvoke r6.<java.lang.String: void <init>(char[],int,int)>(r5, $i8, $i7);

        i12 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r6, 16);

     label3:
        return i12;

     label4:
        $r4 := @caughtexception;

        return 0;

     label5:
        r8 = new java.lang.String;

        $i4 = i11 + 1;

        $i3 = i0 - 1;

        specialinvoke r8.<java.lang.String: void <init>(char[],int,int)>(r5, $i4, $i3);

        i13 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(r8, 10);

     label6:
        return i13;

     label7:
        $r3 := @caughtexception;

        return 0;

     label8:
        $r2 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>(r5, i11, i0);

        $i2 = virtualinvoke $r2.<org.ccil.cowan.tagsoup.Schema: int getEntity(java.lang.String)>($r1);

        return $i2;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
        catch java.lang.NumberFormatException from label5 to label6 with label7;
    }

    private java.lang.String makeName(char[], int, int)
    {
        org.ccil.cowan.tagsoup.Parser r0;
        char[] r1;
        java.lang.StringBuffer $r3;
        int $i1, $i2, i4, i5, i6, i10;
        char $c3, c7, c8;
        boolean $z0, $z1, $z2, z3, z4, z5, z6;
        java.lang.String $r10, $r11;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 := @parameter0: char[];

        i4 := @parameter1: int;

        i5 := @parameter2: int;

        $r3 = new java.lang.StringBuffer;

        $i1 = i5 + 2;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(int)>($i1);

        z3 = 0;

        z4 = 1;

        i6 = i4;

     label01:
        if i5 <= 0 goto label11;

        c7 = r1[i6];

        $z0 = staticinvoke <java.lang.Character: boolean isLetter(char)>(c7);

        if $z0 != 0 goto label09;

        if c7 != 95 goto label02;

        goto label09;

     label02:
        $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c7);

        if $z1 != 0 goto label07;

        if c7 == 45 goto label07;

        if c7 != 46 goto label03;

        goto label07;

     label03:
        z5 = z3;

        z6 = z4;

        if c7 != 58 goto label10;

        z5 = z3;

        z6 = z4;

        if z3 != 0 goto label10;

        z5 = 1;

        if z4 == 0 goto label04;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(95);

     label04:
        z6 = 1;

        $z2 = r0.<org.ccil.cowan.tagsoup.Parser: boolean translateColons>;

        if $z2 == 0 goto label05;

        c8 = 95;

        goto label06;

     label05:
        c8 = c7;

     label06:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c8);

        goto label10;

     label07:
        if z4 == 0 goto label08;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(95);

     label08:
        z6 = 0;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c7);

        z5 = z3;

        goto label10;

     label09:
        z6 = 0;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c7);

        z5 = z3;

     label10:
        i6 = i6 + 1;

        i5 = i5 + -1;

        z3 = z5;

        z4 = z6;

        goto label01;

     label11:
        i10 = virtualinvoke $r3.<java.lang.StringBuffer: int length()>();

        if i10 == 0 goto label12;

        $i2 = i10 - 1;

        $c3 = virtualinvoke $r3.<java.lang.StringBuffer: char charAt(int)>($i2);

        if $c3 != 58 goto label13;

     label12:
        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(95);

     label13:
        $r10 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String intern()>();

        return $r11;
    }

    private void pop() throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        java.lang.String r1, $r8, r12, r13, r14, r16, r17;
        org.ccil.cowan.tagsoup.Element $r2, $r3, $r5, $r6, $r7, r11;
        boolean $z0, $z1, $z2;
        org.xml.sax.ContentHandler $r4, $r9, $r10;
        int $i0, i1;
        org.ccil.cowan.tagsoup.AttributesImpl r15;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r11 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        if r11 != null goto label1;

        return;

     label1:
        r1 = virtualinvoke r11.<org.ccil.cowan.tagsoup.Element: java.lang.String name()>();

        $r2 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        r12 = virtualinvoke $r2.<org.ccil.cowan.tagsoup.Element: java.lang.String localName()>();

        $r3 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        r13 = virtualinvoke $r3.<org.ccil.cowan.tagsoup.Element: java.lang.String namespace()>();

        r14 = specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String prefixOf(java.lang.String)>(r1);

        $z0 = r0.<org.ccil.cowan.tagsoup.Parser: boolean namespaces>;

        if $z0 != 0 goto label2;

        r12 = "";

        r13 = "";

     label2:
        $r4 = r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        interfaceinvoke $r4.<org.xml.sax.ContentHandler: void endElement(java.lang.String,java.lang.String,java.lang.String)>(r13, r12, r1);

        $z1 = specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: boolean foreign(java.lang.String,java.lang.String)>(r14, r13);

        if $z1 == 0 goto label3;

        $r10 = r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        interfaceinvoke $r10.<org.xml.sax.ContentHandler: void endPrefixMapping(java.lang.String)>(r14);

     label3:
        $r5 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        r15 = virtualinvoke $r5.<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.AttributesImpl atts()>();

        $i0 = interfaceinvoke r15.<org.xml.sax.Attributes: int getLength()>();

        i1 = $i0 - 1;

     label4:
        if i1 < 0 goto label6;

        r16 = interfaceinvoke r15.<org.xml.sax.Attributes: java.lang.String getURI(int)>(i1);

        $r8 = interfaceinvoke r15.<org.xml.sax.Attributes: java.lang.String getQName(int)>(i1);

        r17 = specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String prefixOf(java.lang.String)>($r8);

        $z2 = specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: boolean foreign(java.lang.String,java.lang.String)>(r17, r16);

        if $z2 == 0 goto label5;

        $r9 = r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        interfaceinvoke $r9.<org.xml.sax.ContentHandler: void endPrefixMapping(java.lang.String)>(r17);

     label5:
        i1 = i1 + -1;

        goto label4;

     label6:
        $r6 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        $r7 = virtualinvoke $r6.<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.Element next()>();

        r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack> = $r7;

        return;
    }

    private java.lang.String prefixOf(java.lang.String)
    {
        org.ccil.cowan.tagsoup.Parser r0;
        java.lang.String r1, r2;
        int i0;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(58);

        r2 = "";

        if i0 == -1 goto label1;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

     label1:
        return r2;
    }

    private void push(org.ccil.cowan.tagsoup.Element) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        org.ccil.cowan.tagsoup.Element r1, $r6;
        java.lang.String r2, r3, $r8, $r11, $r12, $r13, r17, r18, r19, r22;
        int i0, $i1, $i2, i3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.xml.sax.ContentHandler $r4, $r9, $r10;
        org.ccil.cowan.tagsoup.AttributesImpl $r5, r21;
        org.ccil.cowan.tagsoup.Scanner $r7;
        org.xml.sax.EntityResolver $r14;
        java.lang.Throwable $r16;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 := @parameter0: org.ccil.cowan.tagsoup.Element;

        r2 = virtualinvoke r1.<org.ccil.cowan.tagsoup.Element: java.lang.String name()>();

        r17 = virtualinvoke r1.<org.ccil.cowan.tagsoup.Element: java.lang.String localName()>();

        r18 = virtualinvoke r1.<org.ccil.cowan.tagsoup.Element: java.lang.String namespace()>();

        r19 = specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String prefixOf(java.lang.String)>(r2);

        virtualinvoke r1.<org.ccil.cowan.tagsoup.Element: void clean()>();

        $z0 = r0.<org.ccil.cowan.tagsoup.Parser: boolean namespaces>;

        if $z0 != 0 goto label01;

        r17 = "";

        r18 = "";

     label01:
        $z1 = r0.<org.ccil.cowan.tagsoup.Parser: boolean virginStack>;

        if $z1 == 0 goto label05;

        $r11 = r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theDoctypeName>;

        $z4 = virtualinvoke r17.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r11);

        if $z4 == 0 goto label05;

     label02:
        $r14 = r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.EntityResolver theEntityResolver>;

        $r13 = r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theDoctypePublicId>;

        $r12 = r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theDoctypeSystemId>;

        interfaceinvoke $r14.<org.xml.sax.EntityResolver: org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String)>($r13, $r12);

     label03:
        goto label05;

     label04:
        $r16 := @caughtexception;

     label05:
        $z5 = specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: boolean foreign(java.lang.String,java.lang.String)>(r19, r18);

        if $z5 == 0 goto label06;

        $r10 = r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        interfaceinvoke $r10.<org.xml.sax.ContentHandler: void startPrefixMapping(java.lang.String,java.lang.String)>(r19, r18);

     label06:
        r21 = virtualinvoke r1.<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.AttributesImpl atts()>();

        i0 = interfaceinvoke r21.<org.xml.sax.Attributes: int getLength()>();

        i3 = 0;

     label07:
        if i3 >= i0 goto label09;

        r22 = interfaceinvoke r21.<org.xml.sax.Attributes: java.lang.String getURI(int)>(i3);

        $r8 = interfaceinvoke r21.<org.xml.sax.Attributes: java.lang.String getQName(int)>(i3);

        r3 = specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String prefixOf(java.lang.String)>($r8);

        $z3 = specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: boolean foreign(java.lang.String,java.lang.String)>(r3, r22);

        if $z3 == 0 goto label08;

        $r9 = r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        interfaceinvoke $r9.<org.xml.sax.ContentHandler: void startPrefixMapping(java.lang.String,java.lang.String)>(r3, r22);

     label08:
        i3 = i3 + 1;

        goto label07;

     label09:
        $r4 = r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        $r5 = virtualinvoke r1.<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.AttributesImpl atts()>();

        interfaceinvoke $r4.<org.xml.sax.ContentHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(r18, r17, r2, $r5);

        $r6 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        virtualinvoke r1.<org.ccil.cowan.tagsoup.Element: void setNext(org.ccil.cowan.tagsoup.Element)>($r6);

        r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack> = r1;

        r0.<org.ccil.cowan.tagsoup.Parser: boolean virginStack> = 0;

        $z2 = r0.<org.ccil.cowan.tagsoup.Parser: boolean CDATAElements>;

        if $z2 == 0 goto label10;

        $i1 = virtualinvoke r1.<org.ccil.cowan.tagsoup.Element: int flags()>();

        $i2 = $i1 & 2;

        if $i2 == 0 goto label10;

        $r7 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Scanner theScanner>;

        interfaceinvoke $r7.<org.ccil.cowan.tagsoup.Scanner: void startCDATA()>();

     label10:
        return;

        catch java.io.IOException from label02 to label03 with label04;
    }

    private void rectify(org.ccil.cowan.tagsoup.Element) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        org.ccil.cowan.tagsoup.Element r1, $r2, $r4, $r5, $r6, $r7, r8, r9, r11, r12;
        boolean $z0, $z1, $z2;
        java.lang.String $r3;
        org.ccil.cowan.tagsoup.ElementType r10;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r8 := @parameter0: org.ccil.cowan.tagsoup.Element;

     label01:
        r9 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

     label02:
        if r9 == null goto label04;

        $z2 = virtualinvoke r9.<org.ccil.cowan.tagsoup.Element: boolean canContain(org.ccil.cowan.tagsoup.Element)>(r8);

        if $z2 == 0 goto label03;

        goto label04;

     label03:
        r9 = virtualinvoke r9.<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.Element next()>();

        goto label02;

     label04:
        if r9 == null goto label05;

        goto label06;

     label05:
        r10 = virtualinvoke r8.<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.ElementType parent()>();

        if r10 != null goto label12;

     label06:
        if r9 != null goto label07;

        return;

     label07:
        r1 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        r11 = r8;

        if r1 == r9 goto label09;

        r11 = r8;

        if r1 == null goto label09;

        r11 = r8;

        $r4 = virtualinvoke r1.<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.Element next()>();

        if $r4 == null goto label09;

        $r5 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        $r6 = virtualinvoke $r5.<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.Element next()>();

        $r7 = virtualinvoke $r6.<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.Element next()>();

        if $r7 != null goto label08;

        r11 = r8;

        goto label09;

     label08:
        specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: void restartablyPop()>();

        goto label07;

     label09:
        if r11 == null goto label11;

        r12 = virtualinvoke r11.<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.Element next()>();

        $r3 = virtualinvoke r11.<org.ccil.cowan.tagsoup.Element: java.lang.String name()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("<pcdata>");

        if $z1 != 0 goto label10;

        specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: void push(org.ccil.cowan.tagsoup.Element)>(r11);

     label10:
        r11 = r12;

        specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: void restart(org.ccil.cowan.tagsoup.Element)>(r12);

        goto label09;

     label11:
        r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theNewElement> = null;

        return;

     label12:
        $r2 = new org.ccil.cowan.tagsoup.Element;

        $z0 = r0.<org.ccil.cowan.tagsoup.Parser: boolean defaultAttributes>;

        specialinvoke $r2.<org.ccil.cowan.tagsoup.Element: void <init>(org.ccil.cowan.tagsoup.ElementType,boolean)>(r10, $z0);

        virtualinvoke $r2.<org.ccil.cowan.tagsoup.Element: void setNext(org.ccil.cowan.tagsoup.Element)>(r8);

        r8 = $r2;

        goto label01;
    }

    private void restart(org.ccil.cowan.tagsoup.Element) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        org.ccil.cowan.tagsoup.Element r1, $r2, $r3, $r4, $r5, r6, r7;
        boolean $z0, $z1;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 := @parameter0: org.ccil.cowan.tagsoup.Element;

     label1:
        r6 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theSaved>;

        if r6 == null goto label3;

        $r2 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        $z0 = virtualinvoke $r2.<org.ccil.cowan.tagsoup.Element: boolean canContain(org.ccil.cowan.tagsoup.Element)>(r6);

        if $z0 == 0 goto label3;

        if r1 == null goto label2;

        $r5 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theSaved>;

        $z1 = virtualinvoke $r5.<org.ccil.cowan.tagsoup.Element: boolean canContain(org.ccil.cowan.tagsoup.Element)>(r1);

        if $z1 == 0 goto label3;

     label2:
        $r3 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theSaved>;

        r7 = virtualinvoke $r3.<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.Element next()>();

        $r4 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theSaved>;

        specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: void push(org.ccil.cowan.tagsoup.Element)>($r4);

        r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theSaved> = r7;

        goto label1;

     label3:
        return;
    }

    private void restartablyPop() throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        org.ccil.cowan.tagsoup.Element r1, $r2;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: void pop()>();

        $z0 = r0.<org.ccil.cowan.tagsoup.Parser: boolean restartElements>;

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r1.<org.ccil.cowan.tagsoup.Element: int flags()>();

        $i1 = $i0 & 1;

        if $i1 == 0 goto label1;

        virtualinvoke r1.<org.ccil.cowan.tagsoup.Element: void anonymize()>();

        $r2 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theSaved>;

        virtualinvoke r1.<org.ccil.cowan.tagsoup.Element: void setNext(org.ccil.cowan.tagsoup.Element)>($r2);

        r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theSaved> = r1;

     label1:
        return;
    }

    private void setup()
    {
        org.ccil.cowan.tagsoup.Parser r0;
        org.ccil.cowan.tagsoup.Schema $r1, $r5, $r8;
        org.ccil.cowan.tagsoup.Scanner $r2;
        org.ccil.cowan.tagsoup.AutoDetector $r3;
        org.ccil.cowan.tagsoup.Element $r4, $r7;
        org.ccil.cowan.tagsoup.ElementType $r6, $r9;
        boolean $z0, $z1;
        org.ccil.cowan.tagsoup.Parser$1 $r10;
        org.ccil.cowan.tagsoup.HTMLScanner $r11;
        org.ccil.cowan.tagsoup.HTMLSchema $r12;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $r1 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        if $r1 != null goto label1;

        $r12 = new org.ccil.cowan.tagsoup.HTMLSchema;

        specialinvoke $r12.<org.ccil.cowan.tagsoup.HTMLSchema: void <init>()>();

        r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema> = $r12;

     label1:
        $r2 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Scanner theScanner>;

        if $r2 != null goto label2;

        $r11 = new org.ccil.cowan.tagsoup.HTMLScanner;

        specialinvoke $r11.<org.ccil.cowan.tagsoup.HTMLScanner: void <init>()>();

        r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Scanner theScanner> = $r11;

     label2:
        $r3 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.AutoDetector theAutoDetector>;

        if $r3 != null goto label3;

        $r10 = new org.ccil.cowan.tagsoup.Parser$1;

        specialinvoke $r10.<org.ccil.cowan.tagsoup.Parser$1: void <init>(org.ccil.cowan.tagsoup.Parser)>(r0);

        r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.AutoDetector theAutoDetector> = $r10;

     label3:
        $r4 = new org.ccil.cowan.tagsoup.Element;

        $r5 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        $r6 = virtualinvoke $r5.<org.ccil.cowan.tagsoup.Schema: org.ccil.cowan.tagsoup.ElementType getElementType(java.lang.String)>("<root>");

        $z0 = r0.<org.ccil.cowan.tagsoup.Parser: boolean defaultAttributes>;

        specialinvoke $r4.<org.ccil.cowan.tagsoup.Element: void <init>(org.ccil.cowan.tagsoup.ElementType,boolean)>($r6, $z0);

        r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack> = $r4;

        $r7 = new org.ccil.cowan.tagsoup.Element;

        $r8 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        $r9 = virtualinvoke $r8.<org.ccil.cowan.tagsoup.Schema: org.ccil.cowan.tagsoup.ElementType getElementType(java.lang.String)>("<pcdata>");

        $z1 = r0.<org.ccil.cowan.tagsoup.Parser: boolean defaultAttributes>;

        specialinvoke $r7.<org.ccil.cowan.tagsoup.Element: void <init>(org.ccil.cowan.tagsoup.ElementType,boolean)>($r9, $z1);

        r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element thePCDATA> = $r7;

        r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theNewElement> = null;

        r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theAttributeName> = null;

        r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String thePITarget> = null;

        r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theSaved> = null;

        r0.<org.ccil.cowan.tagsoup.Parser: int theEntity> = 0;

        r0.<org.ccil.cowan.tagsoup.Parser: boolean virginStack> = 1;

        r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theDoctypeSystemId> = null;

        r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theDoctypePublicId> = null;

        r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theDoctypeName> = null;

        return;
    }

    private static java.lang.String[] split(java.lang.String) throws java.lang.IllegalArgumentException
    {
        int i0, $i3, i4, i6, i7;
        char c1, c5;
        java.util.ArrayList $r1;
        java.lang.String $r2, $r6, r8, r9;
        java.lang.String[] $r3, $r5, $r7;
        java.lang.Object[] $r4;
        boolean $z1, z3, z4, z7, z9, z10, z11;

        r8 := @parameter0: java.lang.String;

        r9 = virtualinvoke r8.<java.lang.String: java.lang.String trim()>();

        $i3 = virtualinvoke r9.<java.lang.String: int length()>();

        if $i3 != 0 goto label01;

        $r7 = newarray (java.lang.String)[0];

        return $r7;

     label01:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        i4 = 0;

        z3 = 0;

        z4 = 0;

        c5 = 0;

        i0 = virtualinvoke r9.<java.lang.String: int length()>();

        i6 = 0;

     label02:
        if i6 >= i0 goto label12;

        c1 = virtualinvoke r9.<java.lang.String: char charAt(int)>(i6);

        if z4 != 0 goto label05;

        if c1 != 39 goto label05;

        if c5 == 92 goto label05;

        if z3 != 0 goto label03;

        z7 = 1;

        goto label04;

     label03:
        z7 = 0;

     label04:
        i7 = i4;

        z9 = z7;

        z10 = z4;

        if i4 >= 0 goto label11;

        i7 = i6;

        z9 = z7;

        z10 = z4;

        goto label11;

     label05:
        if z3 != 0 goto label08;

        if c1 != 34 goto label08;

        if c5 == 92 goto label08;

        if z4 != 0 goto label06;

        z11 = 1;

        goto label07;

     label06:
        z11 = 0;

     label07:
        i7 = i4;

        z9 = z3;

        z10 = z11;

        if i4 >= 0 goto label11;

        i7 = i6;

        z9 = z3;

        z10 = z11;

        goto label11;

     label08:
        i7 = i4;

        z9 = z3;

        z10 = z4;

        if z3 != 0 goto label11;

        i7 = i4;

        z9 = z3;

        z10 = z4;

        if z4 != 0 goto label11;

        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c1);

        if $z1 == 0 goto label10;

        if i4 < 0 goto label09;

        $r6 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int,int)>(i4, i6);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

     label09:
        i7 = -1;

        z9 = z3;

        z10 = z4;

        goto label11;

     label10:
        i7 = i4;

        z9 = z3;

        z10 = z4;

        if i4 >= 0 goto label11;

        i7 = i4;

        z9 = z3;

        z10 = z4;

        if c1 == 32 goto label11;

        i7 = i6;

        z10 = z4;

        z9 = z3;

     label11:
        i6 = i6 + 1;

        i4 = i7;

        z3 = z9;

        z4 = z10;

        c5 = c1;

        goto label02;

     label12:
        $r2 = virtualinvoke r9.<java.lang.String: java.lang.String substring(int,int)>(i4, i6);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $r3 = newarray (java.lang.String)[0];

        $r4 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (java.lang.String[]) $r4;

        return $r5;
    }

    private static java.lang.String trimquotes(java.lang.String)
    {
        java.lang.String r0, r1;
        int i0, $i2, $i4, $i5;
        char c1, $c3;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return r0;

     label1:
        i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 != 0 goto label2;

        return r0;

     label2:
        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        r1 = r0;

        $i2 = i0 - 1;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i2);

        if c1 != $c3 goto label4;

        if c1 == 39 goto label3;

        r1 = r0;

        if c1 != 34 goto label4;

     label3:
        $i4 = virtualinvoke r0.<java.lang.String: int length()>();

        $i5 = $i4 - 1;

        r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(1, $i5);

     label4:
        return r1;
    }

    private static java.lang.Boolean truthValue(boolean)
    {
        boolean z0;
        java.lang.Boolean r0;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        r0 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label2;

     label1:
        r0 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label2:
        return r0;
    }

    public void adup(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        int i0, i1;
        org.ccil.cowan.tagsoup.Element r1;
        char[] r2;
        java.lang.String r3;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r2 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theNewElement>;

        if r1 == null goto label2;

        r3 = r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theAttributeName>;

        if r3 != null goto label1;

        goto label2;

     label1:
        virtualinvoke r1.<org.ccil.cowan.tagsoup.Element: void setAttribute(java.lang.String,java.lang.String,java.lang.String)>(r3, null, r3);

        r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theAttributeName> = null;

        return;

     label2:
        return;
    }

    public void aname(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        char[] r1;
        int i0, i1;
        org.ccil.cowan.tagsoup.Element $r2;
        java.lang.String $r3, $r5;
        java.util.Locale $r4;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theNewElement>;

        if $r2 != null goto label1;

        return;

     label1:
        $r3 = specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String makeName(char[],int,int)>(r1, i0, i1);

        $r4 = <java.util.Locale: java.util.Locale ROOT>;

        $r5 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r4);

        r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theAttributeName> = $r5;

        return;
    }

    public void aval(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        int i0, i1;
        org.ccil.cowan.tagsoup.Element $r1, $r5;
        java.lang.String $r2, $r3, $r4, r7;
        char[] r6;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r6 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theNewElement>;

        if $r1 == null goto label2;

        $r2 = r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theAttributeName>;

        if $r2 != null goto label1;

        goto label2;

     label1:
        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(char[],int,int)>(r6, i0, i1);

        r7 = specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String expandEntities(java.lang.String)>($r3);

        $r5 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theNewElement>;

        $r4 = r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theAttributeName>;

        virtualinvoke $r5.<org.ccil.cowan.tagsoup.Element: void setAttribute(java.lang.String,java.lang.String,java.lang.String)>($r4, null, r7);

        r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theAttributeName> = null;

        return;

     label2:
        return;
    }

    public void cdsect(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        char[] r1;
        int i0, i1;
        org.xml.sax.ext.LexicalHandler $r2, $r3;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ext.LexicalHandler theLexicalHandler>;

        interfaceinvoke $r2.<org.xml.sax.ext.LexicalHandler: void startCDATA()>();

        virtualinvoke r0.<org.ccil.cowan.tagsoup.Parser: void pcdata(char[],int,int)>(r1, i0, i1);

        $r3 = r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ext.LexicalHandler theLexicalHandler>;

        interfaceinvoke $r3.<org.xml.sax.ext.LexicalHandler: void endCDATA()>();

        return;
    }

    public void cmnt(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        char[] r1;
        int i0, i1;
        org.xml.sax.ext.LexicalHandler $r2;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ext.LexicalHandler theLexicalHandler>;

        interfaceinvoke $r2.<org.xml.sax.ext.LexicalHandler: void comment(char[],int,int)>(r1, i0, i1);

        return;
    }

    public void comment(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        char[] r1;
        int i0, i1;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        return;
    }

    public void decl(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String[] r1;
        java.lang.String $r2, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, r18, r19, r20, r21, r22, r23, r24;
        org.xml.sax.ext.LexicalHandler $r3, $r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.xml.sax.Locator $r5;
        java.lang.Exception $r15;
        char[] r16;
        org.ccil.cowan.tagsoup.Scanner r25;
        java.net.URL r26, r27;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r16 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>(r16, i0, i1);

        r1 = staticinvoke <org.ccil.cowan.tagsoup.Parser: java.lang.String[] split(java.lang.String)>($r2);

        r18 = null;

        r19 = null;

        r20 = null;

        $i2 = lengthof r1;

        if $i2 <= 0 goto label4;

        r18 = null;

        r19 = null;

        r20 = null;

        $r10 = "DOCTYPE";

        $r9 = r1[0];

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r9);

        if $z1 == 0 goto label4;

        $z2 = r0.<org.ccil.cowan.tagsoup.Parser: boolean theDoctypeIsPresent>;

        if $z2 == 0 goto label1;

        return;

     label1:
        r0.<org.ccil.cowan.tagsoup.Parser: boolean theDoctypeIsPresent> = 1;

        r18 = null;

        r19 = null;

        r20 = null;

        $i3 = lengthof r1;

        if $i3 <= 1 goto label4;

        r21 = r1[1];

        $i4 = lengthof r1;

        if $i4 <= 3 goto label2;

        $r14 = "SYSTEM";

        $r13 = r1[2];

        $z4 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z4 == 0 goto label2;

        r19 = r1[3];

        r18 = r21;

        r20 = null;

        goto label4;

     label2:
        r18 = r21;

        r19 = null;

        r20 = null;

        $i5 = lengthof r1;

        if $i5 <= 3 goto label4;

        r18 = r21;

        r19 = null;

        r20 = null;

        $r12 = "PUBLIC";

        $r11 = r1[2];

        $z3 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z3 == 0 goto label4;

        r20 = r1[3];

        $i6 = lengthof r1;

        if $i6 <= 4 goto label3;

        r19 = r1[4];

        r18 = r21;

        goto label4;

     label3:
        r19 = "";

        r18 = r21;

     label4:
        r22 = staticinvoke <org.ccil.cowan.tagsoup.Parser: java.lang.String trimquotes(java.lang.String)>(r20);

        r23 = staticinvoke <org.ccil.cowan.tagsoup.Parser: java.lang.String trimquotes(java.lang.String)>(r19);

        if r18 == null goto label8;

        r24 = specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String cleanPublicid(java.lang.String)>(r22);

        $r3 = r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ext.LexicalHandler theLexicalHandler>;

        interfaceinvoke $r3.<org.xml.sax.ext.LexicalHandler: void startDTD(java.lang.String,java.lang.String,java.lang.String)>(r18, r24, r23);

        $r4 = r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ext.LexicalHandler theLexicalHandler>;

        interfaceinvoke $r4.<org.xml.sax.ext.LexicalHandler: void endDTD()>();

        r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theDoctypeName> = r18;

        r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theDoctypePublicId> = r24;

        r25 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Scanner theScanner>;

        $z0 = r25 instanceof org.xml.sax.Locator;

        if $z0 == 0 goto label8;

        $r5 = (org.xml.sax.Locator) r25;

        $r6 = interfaceinvoke $r5.<org.xml.sax.Locator: java.lang.String getSystemId()>();

        r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theDoctypeSystemId> = $r6;

     label5:
        r26 = new java.net.URL;

        r27 = new java.net.URL;

        $r7 = r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theDoctypeSystemId>;

        specialinvoke r27.<java.net.URL: void <init>(java.lang.String)>($r7);

        specialinvoke r26.<java.net.URL: void <init>(java.net.URL,java.lang.String)>(r27, r23);

        $r8 = virtualinvoke r26.<java.net.URL: java.lang.String toString()>();

        r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String theDoctypeSystemId> = $r8;

     label6:
        goto label8;

     label7:
        $r15 := @caughtexception;

     label8:
        return;

        catch java.lang.Exception from label5 to label6 with label7;
    }

    public void endCDATA() throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser r0;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        return;
    }

    public void endDTD() throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser r0;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        return;
    }

    public void endEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        java.lang.String r1;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void entity(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        char[] r1;
        int i0, i1, $i2;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: int lookupEntity(char[],int,int)>(r1, i0, i1);

        r0.<org.ccil.cowan.tagsoup.Parser: int theEntity> = $i2;

        return;
    }

    public void eof(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        char[] r1;
        int i0, i1;
        boolean $z0, $z1;
        org.ccil.cowan.tagsoup.Schema $r2, $r5;
        java.lang.String $r3, $r7;
        org.xml.sax.ContentHandler $r4, $r6;
        org.ccil.cowan.tagsoup.Element $r8, $r9, $r10;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0.<org.ccil.cowan.tagsoup.Parser: boolean virginStack>;

        if $z0 == 0 goto label1;

        $r8 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element thePCDATA>;

        specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: void rectify(org.ccil.cowan.tagsoup.Element)>($r8);

     label1:
        $r9 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        $r10 = virtualinvoke $r9.<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.Element next()>();

        if $r10 == null goto label2;

        specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: void pop()>();

        goto label1;

     label2:
        $r2 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        $r3 = virtualinvoke $r2.<org.ccil.cowan.tagsoup.Schema: java.lang.String getURI()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 != 0 goto label3;

        $r6 = r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        $r5 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        $r7 = virtualinvoke $r5.<org.ccil.cowan.tagsoup.Schema: java.lang.String getPrefix()>();

        interfaceinvoke $r6.<org.xml.sax.ContentHandler: void endPrefixMapping(java.lang.String)>($r7);

     label3:
        $r4 = r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        interfaceinvoke $r4.<org.xml.sax.ContentHandler: void endDocument()>();

        return;
    }

    public void etag(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        char[] r1;
        int i0, i1;
        boolean $z0;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = virtualinvoke r0.<org.ccil.cowan.tagsoup.Parser: boolean etag_cdata(char[],int,int)>(r1, i0, i1);

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<org.ccil.cowan.tagsoup.Parser: void etag_basic(char[],int,int)>(r1, i0, i1);

        return;
    }

    public void etag_basic(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        int i0, $i1, $i2, i3;
        org.ccil.cowan.tagsoup.Element $r1, $r2, $r3, $r4, $r5, r12, $r13;
        java.lang.String $r6, r9, r11;
        boolean $z0, z1, $z2;
        org.ccil.cowan.tagsoup.Schema $r7;
        char[] r8;
        org.ccil.cowan.tagsoup.ElementType r10;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r8 := @parameter0: char[];

        i3 := @parameter1: int;

        i0 := @parameter2: int;

        r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theNewElement> = null;

        if i0 == 0 goto label02;

        r9 = specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String makeName(char[],int,int)>(r8, i3, i0);

        $r7 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        r10 = virtualinvoke $r7.<org.ccil.cowan.tagsoup.Schema: org.ccil.cowan.tagsoup.ElementType getElementType(java.lang.String)>(r9);

        if r10 != null goto label01;

        return;

     label01:
        r11 = virtualinvoke r10.<org.ccil.cowan.tagsoup.ElementType: java.lang.String name()>();

        goto label03;

     label02:
        $r1 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        r11 = virtualinvoke $r1.<org.ccil.cowan.tagsoup.Element: java.lang.String name()>();

     label03:
        z1 = 0;

        r12 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

     label04:
        if r12 == null goto label07;

        $r6 = virtualinvoke r12.<org.ccil.cowan.tagsoup.Element: java.lang.String name()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r11);

        if $z0 == 0 goto label05;

        goto label07;

     label05:
        $i1 = virtualinvoke r12.<org.ccil.cowan.tagsoup.Element: int flags()>();

        $i2 = $i1 & 4;

        if $i2 == 0 goto label06;

        z1 = 1;

     label06:
        r12 = virtualinvoke r12.<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.Element next()>();

        goto label04;

     label07:
        if r12 != null goto label08;

        return;

     label08:
        $r2 = virtualinvoke r12.<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.Element next()>();

        if $r2 == null goto label14;

        $r3 = virtualinvoke r12.<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.Element next()>();

        $r4 = virtualinvoke $r3.<org.ccil.cowan.tagsoup.Element: org.ccil.cowan.tagsoup.Element next()>();

        if $r4 != null goto label09;

        goto label14;

     label09:
        if z1 == 0 goto label10;

        virtualinvoke r12.<org.ccil.cowan.tagsoup.Element: void preclose()>();

        goto label12;

     label10:
        $r5 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        if $r5 == r12 goto label11;

        specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: void restartablyPop()>();

        goto label10;

     label11:
        specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: void pop()>();

     label12:
        $r13 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        $z2 = virtualinvoke $r13.<org.ccil.cowan.tagsoup.Element: boolean isPreclosed()>();

        if $z2 == 0 goto label13;

        specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: void pop()>();

        goto label12;

     label13:
        specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: void restart(org.ccil.cowan.tagsoup.Element)>(null);

        return;

     label14:
        return;
    }

    public boolean etag_cdata(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        char[] r1, $r5, $r8;
        int i0, i1, $i2, $i3, $i4, $i5, i10;
        java.lang.String r2;
        org.ccil.cowan.tagsoup.Element $r3, $r4;
        boolean $z0, z1, z2;
        org.xml.sax.ContentHandler $r6, $r7, $r9;
        org.ccil.cowan.tagsoup.Scanner $r10;
        char $c6, $c7, $c8, $c9;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        r2 = virtualinvoke $r3.<org.ccil.cowan.tagsoup.Element: java.lang.String name()>();

        $z0 = r0.<org.ccil.cowan.tagsoup.Parser: boolean CDATAElements>;

        if $z0 == 0 goto label6;

        $r4 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        $i2 = virtualinvoke $r4.<org.ccil.cowan.tagsoup.Element: int flags()>();

        $i3 = $i2 & 2;

        if $i3 == 0 goto label6;

        $i4 = virtualinvoke r2.<java.lang.String: int length()>();

        if i1 != $i4 goto label1;

        z1 = 1;

        goto label2;

     label1:
        z1 = 0;

     label2:
        z2 = z1;

        if z1 == 0 goto label5;

        i10 = 0;

     label3:
        z2 = z1;

        if i10 >= i1 goto label5;

        $i5 = i0 + i10;

        $c6 = r1[$i5];

        $c7 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c6);

        $c8 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i10);

        $c9 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c8);

        if $c7 == $c9 goto label4;

        z2 = 0;

        goto label5;

     label4:
        i10 = i10 + 1;

        goto label3;

     label5:
        if z2 != 0 goto label6;

        $r6 = r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        $r5 = <org.ccil.cowan.tagsoup.Parser: char[] etagchars>;

        interfaceinvoke $r6.<org.xml.sax.ContentHandler: void characters(char[],int,int)>($r5, 0, 2);

        $r7 = r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        interfaceinvoke $r7.<org.xml.sax.ContentHandler: void characters(char[],int,int)>(r1, i0, i1);

        $r9 = r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        $r8 = <org.ccil.cowan.tagsoup.Parser: char[] etagchars>;

        interfaceinvoke $r9.<org.xml.sax.ContentHandler: void characters(char[],int,int)>($r8, 2, 1);

        $r10 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Scanner theScanner>;

        interfaceinvoke $r10.<org.ccil.cowan.tagsoup.Scanner: void startCDATA()>();

        return 1;

     label6:
        return 0;
    }

    public org.xml.sax.ContentHandler getContentHandler()
    {
        org.ccil.cowan.tagsoup.Parser r0;
        org.xml.sax.ContentHandler r1, r2;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 = r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        r2 = r1;

        if r1 != r0 goto label1;

        r2 = null;

     label1:
        return r2;
    }

    public org.xml.sax.DTDHandler getDTDHandler()
    {
        org.ccil.cowan.tagsoup.Parser r0;
        org.xml.sax.DTDHandler r1, r2;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 = r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.DTDHandler theDTDHandler>;

        r2 = r1;

        if r1 != r0 goto label1;

        r2 = null;

     label1:
        return r2;
    }

    public int getEntity()
    {
        org.ccil.cowan.tagsoup.Parser r0;
        int $i0;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        $i0 = r0.<org.ccil.cowan.tagsoup.Parser: int theEntity>;

        return $i0;
    }

    public org.xml.sax.EntityResolver getEntityResolver()
    {
        org.ccil.cowan.tagsoup.Parser r0;
        org.xml.sax.EntityResolver r1, r2;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 = r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.EntityResolver theEntityResolver>;

        r2 = r1;

        if r1 != r0 goto label1;

        r2 = null;

     label1:
        return r2;
    }

    public org.xml.sax.ErrorHandler getErrorHandler()
    {
        org.ccil.cowan.tagsoup.Parser r0;
        org.xml.sax.ErrorHandler r1, r2;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 = r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ErrorHandler theErrorHandler>;

        r2 = r1;

        if r1 != r0 goto label1;

        r2 = null;

     label1:
        return r2;
    }

    public boolean getFeature(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        java.lang.String r1, $r8;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        java.lang.StringBuilder $r4;
        org.xml.sax.SAXNotRecognizedException $r7;
        boolean $z0;
        java.lang.Boolean r9;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r9 = (java.lang.Boolean) $r3;

        if r9 == null goto label1;

        $z0 = virtualinvoke r9.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown feature ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = new org.xml.sax.SAXNotRecognizedException;

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    public java.lang.Object getProperty(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r1;
        org.xml.sax.SAXNotRecognizedException $r4;
        java.lang.String $r5, r9;
        org.ccil.cowan.tagsoup.AutoDetector $r6;
        org.ccil.cowan.tagsoup.Schema $r7;
        org.ccil.cowan.tagsoup.Scanner $r8;
        org.xml.sax.ext.LexicalHandler r10, r11;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r9 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.org/sax/properties/lexical-handler");

        if $z0 == 0 goto label2;

        r10 = r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ext.LexicalHandler theLexicalHandler>;

        r11 = r10;

        if r10 != r0 goto label1;

        r11 = null;

     label1:
        return r11;

     label2:
        $z1 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/properties/scanner");

        if $z1 == 0 goto label3;

        $r8 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Scanner theScanner>;

        return $r8;

     label3:
        $z2 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/properties/schema");

        if $z2 == 0 goto label4;

        $r7 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        return $r7;

     label4:
        $z3 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/properties/auto-detector");

        if $z3 == 0 goto label5;

        $r6 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.AutoDetector theAutoDetector>;

        return $r6;

     label5:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown property ");

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r4 = new org.xml.sax.SAXNotRecognizedException;

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    public void gi(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        java.lang.String r1, $r8;
        org.ccil.cowan.tagsoup.ElementType r2, $r7, r10;
        boolean z0, $z1, $z2, $z3, $z4;
        org.ccil.cowan.tagsoup.Element $r3, $r12;
        org.ccil.cowan.tagsoup.Schema $r4, $r5, $r6, r11;
        char[] r9;
        int i0, i1, i2;
        byte b3;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r9 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theNewElement>;

        if $r3 == null goto label1;

        return;

     label1:
        r1 = specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String makeName(char[],int,int)>(r9, i0, i1);

        if r1 != null goto label2;

        return;

     label2:
        $r4 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        r2 = virtualinvoke $r4.<org.ccil.cowan.tagsoup.Schema: org.ccil.cowan.tagsoup.ElementType getElementType(java.lang.String)>(r1);

        r10 = r2;

        if r2 != null goto label9;

        $z1 = r0.<org.ccil.cowan.tagsoup.Parser: boolean ignoreBogons>;

        if $z1 == 0 goto label3;

        return;

     label3:
        z0 = r0.<org.ccil.cowan.tagsoup.Parser: boolean bogonsEmpty>;

        i2 = -1;

        if z0 == 0 goto label4;

        b3 = 0;

        goto label5;

     label4:
        b3 = -1;

     label5:
        $z2 = r0.<org.ccil.cowan.tagsoup.Parser: boolean rootBogons>;

        if $z2 == 0 goto label6;

        goto label7;

     label6:
        i2 = 2147483647;

     label7:
        $r5 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        virtualinvoke $r5.<org.ccil.cowan.tagsoup.Schema: void elementType(java.lang.String,int,int,int)>(r1, b3, i2, 0);

        $z3 = r0.<org.ccil.cowan.tagsoup.Parser: boolean rootBogons>;

        if $z3 != 0 goto label8;

        r11 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        $r7 = virtualinvoke r11.<org.ccil.cowan.tagsoup.Schema: org.ccil.cowan.tagsoup.ElementType rootElementType()>();

        $r8 = virtualinvoke $r7.<org.ccil.cowan.tagsoup.ElementType: java.lang.String name()>();

        virtualinvoke r11.<org.ccil.cowan.tagsoup.Schema: void parent(java.lang.String,java.lang.String)>(r1, $r8);

     label8:
        $r6 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        r10 = virtualinvoke $r6.<org.ccil.cowan.tagsoup.Schema: org.ccil.cowan.tagsoup.ElementType getElementType(java.lang.String)>(r1);

     label9:
        $r12 = new org.ccil.cowan.tagsoup.Element;

        $z4 = r0.<org.ccil.cowan.tagsoup.Parser: boolean defaultAttributes>;

        specialinvoke $r12.<org.ccil.cowan.tagsoup.Element: void <init>(org.ccil.cowan.tagsoup.ElementType,boolean)>(r10, $z4);

        r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theNewElement> = $r12;

        return;
    }

    public void parse(java.lang.String) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        java.lang.String r1;
        org.xml.sax.InputSource $r2;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 := @parameter0: java.lang.String;

        $r2 = new org.xml.sax.InputSource;

        specialinvoke $r2.<org.xml.sax.InputSource: void <init>(java.lang.String)>(r1);

        virtualinvoke r0.<org.ccil.cowan.tagsoup.Parser: void parse(org.xml.sax.InputSource)>($r2);

        return;
    }

    public void parse(org.xml.sax.InputSource) throws java.io.IOException, org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        java.io.Reader r1;
        org.xml.sax.ContentHandler $r2, $r10, $r15;
        org.ccil.cowan.tagsoup.Scanner $r3, $r8, r17;
        java.lang.String $r4, $r5, $r7, $r11, $r13;
        boolean $z0, $z1;
        org.ccil.cowan.tagsoup.Schema $r6, $r9, $r12;
        org.xml.sax.Locator $r14;
        org.xml.sax.InputSource r16;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r16 := @parameter0: org.xml.sax.InputSource;

        specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: void setup()>();

        r1 = specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: java.io.Reader getReader(org.xml.sax.InputSource)>(r16);

        $r2 = r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        interfaceinvoke $r2.<org.xml.sax.ContentHandler: void startDocument()>();

        $r3 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Scanner theScanner>;

        $r4 = virtualinvoke r16.<org.xml.sax.InputSource: java.lang.String getPublicId()>();

        $r5 = virtualinvoke r16.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        interfaceinvoke $r3.<org.ccil.cowan.tagsoup.Scanner: void resetDocumentLocator(java.lang.String,java.lang.String)>($r4, $r5);

        r17 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Scanner theScanner>;

        $z0 = r17 instanceof org.xml.sax.Locator;

        if $z0 == 0 goto label1;

        $r15 = r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        $r14 = (org.xml.sax.Locator) r17;

        interfaceinvoke $r15.<org.xml.sax.ContentHandler: void setDocumentLocator(org.xml.sax.Locator)>($r14);

     label1:
        $r6 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        $r7 = virtualinvoke $r6.<org.ccil.cowan.tagsoup.Schema: java.lang.String getURI()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 != 0 goto label2;

        $r10 = r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        $r9 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        $r11 = virtualinvoke $r9.<org.ccil.cowan.tagsoup.Schema: java.lang.String getPrefix()>();

        $r12 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema>;

        $r13 = virtualinvoke $r12.<org.ccil.cowan.tagsoup.Schema: java.lang.String getURI()>();

        interfaceinvoke $r10.<org.xml.sax.ContentHandler: void startPrefixMapping(java.lang.String,java.lang.String)>($r11, $r13);

     label2:
        $r8 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Scanner theScanner>;

        interfaceinvoke $r8.<org.ccil.cowan.tagsoup.Scanner: void scan(java.io.Reader,org.ccil.cowan.tagsoup.ScanHandler)>(r1, r0);

        return;
    }

    public void pcdata(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        char[] r1;
        int i0, i1, $i2, i4;
        org.ccil.cowan.tagsoup.Element $r2, $r4, $r5;
        org.xml.sax.ContentHandler $r3, $r6;
        boolean $z0, $z1, $z2, z3;
        char $c3;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i1 != 0 goto label1;

        return;

     label1:
        z3 = 1;

        i4 = 0;

     label2:
        if i4 >= i1 goto label4;

        $i2 = i0 + i4;

        $c3 = r1[$i2];

        $z2 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c3);

        if $z2 != 0 goto label3;

        z3 = 0;

     label3:
        i4 = i4 + 1;

        goto label2;

     label4:
        if z3 == 0 goto label5;

        $r5 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        $r4 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element thePCDATA>;

        $z0 = virtualinvoke $r5.<org.ccil.cowan.tagsoup.Element: boolean canContain(org.ccil.cowan.tagsoup.Element)>($r4);

        if $z0 != 0 goto label5;

        $z1 = r0.<org.ccil.cowan.tagsoup.Parser: boolean ignorableWhitespace>;

        if $z1 == 0 goto label6;

        $r6 = r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        interfaceinvoke $r6.<org.xml.sax.ContentHandler: void ignorableWhitespace(char[],int,int)>(r1, i0, i1);

        goto label6;

     label5:
        $r2 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element thePCDATA>;

        specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: void rectify(org.ccil.cowan.tagsoup.Element)>($r2);

        $r3 = r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        interfaceinvoke $r3.<org.xml.sax.ContentHandler: void characters(char[],int,int)>(r1, i0, i1);

     label6:
        return;
    }

    public void pi(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        char[] r1;
        int i0, i1, $i2, i4;
        java.lang.String r2, $r4, $r6, $r7;
        org.ccil.cowan.tagsoup.Element $r3;
        boolean $z0;
        char $c3;
        org.xml.sax.ContentHandler $r5;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theNewElement>;

        if $r3 != null goto label4;

        r2 = r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String thePITarget>;

        if r2 != null goto label1;

        goto label4;

     label1:
        $r4 = "xml";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z0 == 0 goto label2;

        return;

     label2:
        i4 = i1;

        if i1 <= 0 goto label3;

        i4 = i1;

        $i2 = i1 - 1;

        $c3 = r1[$i2];

        if $c3 != 63 goto label3;

        i4 = i1 - 1;

     label3:
        $r5 = r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler>;

        $r6 = r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String thePITarget>;

        $r7 = new java.lang.String;

        specialinvoke $r7.<java.lang.String: void <init>(char[],int,int)>(r1, i0, i4);

        interfaceinvoke $r5.<org.xml.sax.ContentHandler: void processingInstruction(java.lang.String,java.lang.String)>($r6, $r7);

        r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String thePITarget> = null;

        return;

     label4:
        return;
    }

    public void pitarget(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        char[] r1;
        int i0, i1;
        org.ccil.cowan.tagsoup.Element $r2;
        java.lang.String $r3, $r4;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theNewElement>;

        if $r2 == null goto label1;

        return;

     label1:
        $r3 = specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String makeName(char[],int,int)>(r1, i0, i1);

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(char,char)>(58, 95);

        r0.<org.ccil.cowan.tagsoup.Parser: java.lang.String thePITarget> = $r4;

        return;
    }

    public void setContentHandler(org.xml.sax.ContentHandler)
    {
        org.ccil.cowan.tagsoup.Parser r0;
        java.lang.Object r1;
        org.xml.sax.ContentHandler r2;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 := @parameter0: org.xml.sax.ContentHandler;

        if r1 != null goto label1;

        r1 = r0;

        goto label1;

     label1:
        r2 = (org.xml.sax.ContentHandler) r1;

        r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ContentHandler theContentHandler> = r2;

        return;
    }

    public void setDTDHandler(org.xml.sax.DTDHandler)
    {
        org.ccil.cowan.tagsoup.Parser r0;
        java.lang.Object r1;
        org.xml.sax.DTDHandler r2;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 := @parameter0: org.xml.sax.DTDHandler;

        if r1 != null goto label1;

        r1 = r0;

        goto label1;

     label1:
        r2 = (org.xml.sax.DTDHandler) r1;

        r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.DTDHandler theDTDHandler> = r2;

        return;
    }

    public void setEntityResolver(org.xml.sax.EntityResolver)
    {
        org.ccil.cowan.tagsoup.Parser r0;
        java.lang.Object r1;
        org.xml.sax.EntityResolver r2;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 := @parameter0: org.xml.sax.EntityResolver;

        if r1 != null goto label1;

        r1 = r0;

        goto label1;

     label1:
        r2 = (org.xml.sax.EntityResolver) r1;

        r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.EntityResolver theEntityResolver> = r2;

        return;
    }

    public void setErrorHandler(org.xml.sax.ErrorHandler)
    {
        org.ccil.cowan.tagsoup.Parser r0;
        java.lang.Object r1;
        org.xml.sax.ErrorHandler r2;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 := @parameter0: org.xml.sax.ErrorHandler;

        if r1 != null goto label1;

        r1 = r0;

        goto label1;

     label1:
        r2 = (org.xml.sax.ErrorHandler) r1;

        r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ErrorHandler theErrorHandler> = r2;

        return;
    }

    public void setFeature(java.lang.String, boolean) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        java.lang.String r1, $r10;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.util.HashMap $r3, $r12, $r15;
        java.lang.Object $r4;
        java.lang.Boolean $r5, $r11, $r14;
        java.lang.StringBuilder $r6;
        org.xml.sax.SAXNotRecognizedException $r9;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r3 = r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (java.lang.Boolean) $r4;

        if $r5 == null goto label12;

        if z0 == 0 goto label01;

        $r15 = r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r14 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        virtualinvoke $r15.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r14);

        goto label02;

     label01:
        $r12 = r0.<org.ccil.cowan.tagsoup.Parser: java.util.HashMap theFeatures>;

        $r11 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        virtualinvoke $r12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r11);

     label02:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.org/sax/features/namespaces");

        if $z1 == 0 goto label03;

        r0.<org.ccil.cowan.tagsoup.Parser: boolean namespaces> = z0;

        goto label11;

     label03:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/features/ignore-bogons");

        if $z2 == 0 goto label04;

        r0.<org.ccil.cowan.tagsoup.Parser: boolean ignoreBogons> = z0;

        goto label11;

     label04:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/features/bogons-empty");

        if $z3 == 0 goto label05;

        r0.<org.ccil.cowan.tagsoup.Parser: boolean bogonsEmpty> = z0;

        goto label11;

     label05:
        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/features/root-bogons");

        if $z4 == 0 goto label06;

        r0.<org.ccil.cowan.tagsoup.Parser: boolean rootBogons> = z0;

        goto label11;

     label06:
        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/features/default-attributes");

        if $z5 == 0 goto label07;

        r0.<org.ccil.cowan.tagsoup.Parser: boolean defaultAttributes> = z0;

        goto label11;

     label07:
        $z6 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/features/translate-colons");

        if $z6 == 0 goto label08;

        r0.<org.ccil.cowan.tagsoup.Parser: boolean translateColons> = z0;

        goto label11;

     label08:
        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/features/restart-elements");

        if $z7 == 0 goto label09;

        r0.<org.ccil.cowan.tagsoup.Parser: boolean restartElements> = z0;

        goto label11;

     label09:
        $z8 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/features/ignorable-whitespace");

        if $z8 == 0 goto label10;

        r0.<org.ccil.cowan.tagsoup.Parser: boolean ignorableWhitespace> = z0;

        goto label11;

     label10:
        $z9 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/features/cdata-elements");

        if $z9 == 0 goto label11;

        r0.<org.ccil.cowan.tagsoup.Parser: boolean CDATAElements> = z0;

     label11:
        return;

     label12:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown feature ");

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = new org.xml.sax.SAXNotRecognizedException;

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>($r10);

        throw $r9;
    }

    public void setProperty(java.lang.String, java.lang.Object) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        java.lang.String r1, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.StringBuilder $r2;
        org.xml.sax.SAXNotRecognizedException $r5;
        org.xml.sax.SAXNotSupportedException $r7, $r9, $r11, $r13;
        org.ccil.cowan.tagsoup.AutoDetector $r8;
        org.ccil.cowan.tagsoup.Schema $r10;
        org.ccil.cowan.tagsoup.Scanner $r12;
        org.xml.sax.ext.LexicalHandler $r14;
        java.lang.Object r15;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 := @parameter0: java.lang.String;

        r15 := @parameter1: java.lang.Object;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://xml.org/sax/properties/lexical-handler");

        if $z0 == 0 goto label03;

        if r15 != null goto label01;

        r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ext.LexicalHandler theLexicalHandler> = r0;

        goto label08;

     label01:
        $z7 = r15 instanceof org.xml.sax.ext.LexicalHandler;

        if $z7 == 0 goto label02;

        $r14 = (org.xml.sax.ext.LexicalHandler) r15;

        r0.<org.ccil.cowan.tagsoup.Parser: org.xml.sax.ext.LexicalHandler theLexicalHandler> = $r14;

        goto label08;

     label02:
        $r13 = new org.xml.sax.SAXNotSupportedException;

        specialinvoke $r13.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>("Your lexical handler is not a LexicalHandler");

        throw $r13;

     label03:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/properties/scanner");

        if $z1 == 0 goto label05;

        $z6 = r15 instanceof org.ccil.cowan.tagsoup.Scanner;

        if $z6 == 0 goto label04;

        $r12 = (org.ccil.cowan.tagsoup.Scanner) r15;

        r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Scanner theScanner> = $r12;

        goto label08;

     label04:
        $r11 = new org.xml.sax.SAXNotSupportedException;

        specialinvoke $r11.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>("Your scanner is not a Scanner");

        throw $r11;

     label05:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/properties/schema");

        if $z2 == 0 goto label07;

        $z5 = r15 instanceof org.ccil.cowan.tagsoup.Schema;

        if $z5 == 0 goto label06;

        $r10 = (org.ccil.cowan.tagsoup.Schema) r15;

        r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Schema theSchema> = $r10;

        goto label08;

     label06:
        $r9 = new org.xml.sax.SAXNotSupportedException;

        specialinvoke $r9.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>("Your schema is not a Schema");

        throw $r9;

     label07:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("http://www.ccil.org/~cowan/tagsoup/properties/auto-detector");

        if $z3 == 0 goto label10;

        $z4 = r15 instanceof org.ccil.cowan.tagsoup.AutoDetector;

        if $z4 == 0 goto label09;

        $r8 = (org.ccil.cowan.tagsoup.AutoDetector) r15;

        r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.AutoDetector theAutoDetector> = $r8;

     label08:
        return;

     label09:
        $r7 = new org.xml.sax.SAXNotSupportedException;

        specialinvoke $r7.<org.xml.sax.SAXNotSupportedException: void <init>(java.lang.String)>("Your auto-detector is not an AutoDetector");

        throw $r7;

     label10:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown property ");

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = new org.xml.sax.SAXNotRecognizedException;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }

    public void stagc(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        char[] r1;
        int i0, i1, $i2;
        org.ccil.cowan.tagsoup.Element r2, $r3;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theNewElement>;

        if r2 != null goto label1;

        return;

     label1:
        specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: void rectify(org.ccil.cowan.tagsoup.Element)>(r2);

        $r3 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theStack>;

        $i2 = virtualinvoke $r3.<org.ccil.cowan.tagsoup.Element: int model()>();

        if $i2 != 0 goto label2;

        virtualinvoke r0.<org.ccil.cowan.tagsoup.Parser: void etag_basic(char[],int,int)>(r1, i0, i1);

     label2:
        return;
    }

    public void stage(char[], int, int) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        char[] r1;
        int i0, i1;
        org.ccil.cowan.tagsoup.Element r2;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = r0.<org.ccil.cowan.tagsoup.Parser: org.ccil.cowan.tagsoup.Element theNewElement>;

        if r2 != null goto label1;

        return;

     label1:
        specialinvoke r0.<org.ccil.cowan.tagsoup.Parser: void rectify(org.ccil.cowan.tagsoup.Element)>(r2);

        virtualinvoke r0.<org.ccil.cowan.tagsoup.Parser: void etag_basic(char[],int,int)>(r1, i0, i1);

        return;
    }

    public void startCDATA() throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser r0;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        return;
    }

    public void startDTD(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        java.lang.String r1, r2, r3;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        return;
    }

    public void startEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        org.ccil.cowan.tagsoup.Parser r0;
        java.lang.String r1;

        r0 := @this: org.ccil.cowan.tagsoup.Parser;

        r1 := @parameter0: java.lang.String;

        return;
    }
}
