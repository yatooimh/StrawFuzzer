public abstract class org.hamcrest.CustomTypeSafeMatcher extends org.hamcrest.TypeSafeMatcher
{
    private final java.lang.String fixedDescription;

    public void <init>(java.lang.String)
    {
        org.hamcrest.CustomTypeSafeMatcher r0;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.hamcrest.CustomTypeSafeMatcher;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.hamcrest.TypeSafeMatcher: void <init>()>();

        if r1 == null goto label1;

        r0.<org.hamcrest.CustomTypeSafeMatcher: java.lang.String fixedDescription> = r1;

        return;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Description must be non null!");

        throw $r2;
    }

    public final void describeTo(org.hamcrest.Description)
    {
        org.hamcrest.CustomTypeSafeMatcher r0;
        org.hamcrest.Description r1;
        java.lang.String $r2;

        r0 := @this: org.hamcrest.CustomTypeSafeMatcher;

        r1 := @parameter0: org.hamcrest.Description;

        $r2 = r0.<org.hamcrest.CustomTypeSafeMatcher: java.lang.String fixedDescription>;

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>($r2);

        return;
    }
}
