public class org.hamcrest.core.StringEndsWith extends org.hamcrest.core.SubstringMatcher
{

    public void <init>(boolean, java.lang.String)
    {
        org.hamcrest.core.StringEndsWith r0;
        boolean z0;
        java.lang.String r1;

        r0 := @this: org.hamcrest.core.StringEndsWith;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<org.hamcrest.core.SubstringMatcher: void <init>(java.lang.String,boolean,java.lang.String)>("ending with", z0, r1);

        return;
    }

    public static org.hamcrest.Matcher endsWith(java.lang.String)
    {
        java.lang.String r0;
        org.hamcrest.core.StringEndsWith $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new org.hamcrest.core.StringEndsWith;

        specialinvoke $r1.<org.hamcrest.core.StringEndsWith: void <init>(boolean,java.lang.String)>(0, r0);

        return $r1;
    }

    public static org.hamcrest.Matcher endsWithIgnoringCase(java.lang.String)
    {
        java.lang.String r0;
        org.hamcrest.core.StringEndsWith $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = new org.hamcrest.core.StringEndsWith;

        specialinvoke $r1.<org.hamcrest.core.StringEndsWith: void <init>(boolean,java.lang.String)>(1, r0);

        return $r1;
    }

    protected boolean evalSubstringOf(java.lang.String)
    {
        org.hamcrest.core.StringEndsWith r0;
        java.lang.String r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: org.hamcrest.core.StringEndsWith;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.hamcrest.core.StringEndsWith: java.lang.String converted(java.lang.String)>(r1);

        $r3 = r0.<org.hamcrest.core.StringEndsWith: java.lang.String substring>;

        $r4 = virtualinvoke r0.<org.hamcrest.core.StringEndsWith: java.lang.String converted(java.lang.String)>($r3);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>($r4);

        return $z0;
    }
}
