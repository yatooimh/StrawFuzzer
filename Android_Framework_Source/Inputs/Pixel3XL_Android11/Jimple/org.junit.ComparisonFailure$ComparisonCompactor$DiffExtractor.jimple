class org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor extends java.lang.Object
{
    private final java.lang.String sharedPrefix;
    private final java.lang.String sharedSuffix;
    final org.junit.ComparisonFailure$ComparisonCompactor this$0;

    private void <init>(org.junit.ComparisonFailure$ComparisonCompactor)
    {
        org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor r0;
        org.junit.ComparisonFailure$ComparisonCompactor r1;
        java.lang.String r2, $r3;

        r0 := @this: org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor;

        r1 := @parameter0: org.junit.ComparisonFailure$ComparisonCompactor;

        r0.<org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor: org.junit.ComparisonFailure$ComparisonCompactor this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r2 = staticinvoke <org.junit.ComparisonFailure$ComparisonCompactor: java.lang.String access$100(org.junit.ComparisonFailure$ComparisonCompactor)>(r1);

        r0.<org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor: java.lang.String sharedPrefix> = r2;

        $r3 = staticinvoke <org.junit.ComparisonFailure$ComparisonCompactor: java.lang.String access$200(org.junit.ComparisonFailure$ComparisonCompactor,java.lang.String)>(r1, r2);

        r0.<org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor: java.lang.String sharedSuffix> = $r3;

        return;
    }

    void <init>(org.junit.ComparisonFailure$ComparisonCompactor, org.junit.ComparisonFailure$1)
    {
        org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor r0;
        org.junit.ComparisonFailure$ComparisonCompactor r1;
        org.junit.ComparisonFailure$1 r2;

        r0 := @this: org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor;

        r1 := @parameter0: org.junit.ComparisonFailure$ComparisonCompactor;

        r2 := @parameter1: org.junit.ComparisonFailure$1;

        specialinvoke r0.<org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor: void <init>(org.junit.ComparisonFailure$ComparisonCompactor)>(r1);

        return;
    }

    private java.lang.String extractDiff(java.lang.String)
    {
        org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor r0;
        java.lang.String r1, $r5, $r6, $r7, $r10;
        java.lang.StringBuilder $r3;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r5 = r0.<org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor: java.lang.String sharedPrefix>;

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $r6 = r0.<org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor: java.lang.String sharedSuffix>;

        $i2 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i3 = $i1 - $i2;

        $r7 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i3);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public java.lang.String actualDiff()
    {
        org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor r0;
        org.junit.ComparisonFailure$ComparisonCompactor $r1;
        java.lang.String $r2, $r3;

        r0 := @this: org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor;

        $r1 = r0.<org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor: org.junit.ComparisonFailure$ComparisonCompactor this$0>;

        $r2 = staticinvoke <org.junit.ComparisonFailure$ComparisonCompactor: java.lang.String access$400(org.junit.ComparisonFailure$ComparisonCompactor)>($r1);

        $r3 = specialinvoke r0.<org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor: java.lang.String extractDiff(java.lang.String)>($r2);

        return $r3;
    }

    public java.lang.String compactPrefix()
    {
        org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor r0;
        java.lang.String r2, $r3, $r8, $r10, $r11;
        int $i0, $i1, $i2, $i3, $i4;
        org.junit.ComparisonFailure$ComparisonCompactor $r4, $r7;
        java.lang.StringBuilder $r5;

        r0 := @this: org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor;

        $r3 = r0.<org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor: java.lang.String sharedPrefix>;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        $r4 = r0.<org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor: org.junit.ComparisonFailure$ComparisonCompactor this$0>;

        $i1 = staticinvoke <org.junit.ComparisonFailure$ComparisonCompactor: int access$500(org.junit.ComparisonFailure$ComparisonCompactor)>($r4);

        if $i0 > $i1 goto label1;

        $r11 = r0.<org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor: java.lang.String sharedPrefix>;

        return $r11;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...");

        r2 = r0.<org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor: java.lang.String sharedPrefix>;

        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        $r7 = r0.<org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor: org.junit.ComparisonFailure$ComparisonCompactor this$0>;

        $i3 = staticinvoke <org.junit.ComparisonFailure$ComparisonCompactor: int access$500(org.junit.ComparisonFailure$ComparisonCompactor)>($r7);

        $i4 = $i2 - $i3;

        $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i4);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public java.lang.String compactSuffix()
    {
        org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor r0;
        java.lang.String $r2, $r6, $r7, $r10, $r11;
        int $i0, $i1, $i2;
        org.junit.ComparisonFailure$ComparisonCompactor $r3, $r5;
        java.lang.StringBuilder $r4;

        r0 := @this: org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor;

        $r2 = r0.<org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor: java.lang.String sharedSuffix>;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $r3 = r0.<org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor: org.junit.ComparisonFailure$ComparisonCompactor this$0>;

        $i1 = staticinvoke <org.junit.ComparisonFailure$ComparisonCompactor: int access$500(org.junit.ComparisonFailure$ComparisonCompactor)>($r3);

        if $i0 > $i1 goto label1;

        $r11 = r0.<org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor: java.lang.String sharedSuffix>;

        return $r11;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = r0.<org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor: java.lang.String sharedSuffix>;

        $r5 = r0.<org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor: org.junit.ComparisonFailure$ComparisonCompactor this$0>;

        $i2 = staticinvoke <org.junit.ComparisonFailure$ComparisonCompactor: int access$500(org.junit.ComparisonFailure$ComparisonCompactor)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...");

        $r10 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public java.lang.String expectedDiff()
    {
        org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor r0;
        org.junit.ComparisonFailure$ComparisonCompactor $r1;
        java.lang.String $r2, $r3;

        r0 := @this: org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor;

        $r1 = r0.<org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor: org.junit.ComparisonFailure$ComparisonCompactor this$0>;

        $r2 = staticinvoke <org.junit.ComparisonFailure$ComparisonCompactor: java.lang.String access$300(org.junit.ComparisonFailure$ComparisonCompactor)>($r1);

        $r3 = specialinvoke r0.<org.junit.ComparisonFailure$ComparisonCompactor$DiffExtractor: java.lang.String extractDiff(java.lang.String)>($r2);

        return $r3;
    }
}
