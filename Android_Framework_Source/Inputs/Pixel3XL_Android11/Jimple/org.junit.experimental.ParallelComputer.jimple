public class org.junit.experimental.ParallelComputer extends org.junit.runner.Computer
{
    private final boolean classes;
    private final boolean methods;

    public void <init>(boolean, boolean)
    {
        org.junit.experimental.ParallelComputer r0;
        boolean z0, z1;

        r0 := @this: org.junit.experimental.ParallelComputer;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        specialinvoke r0.<org.junit.runner.Computer: void <init>()>();

        r0.<org.junit.experimental.ParallelComputer: boolean classes> = z0;

        r0.<org.junit.experimental.ParallelComputer: boolean methods> = z1;

        return;
    }

    public static org.junit.runner.Computer classes()
    {
        org.junit.experimental.ParallelComputer $r0;

        $r0 = new org.junit.experimental.ParallelComputer;

        specialinvoke $r0.<org.junit.experimental.ParallelComputer: void <init>(boolean,boolean)>(1, 0);

        return $r0;
    }

    public static org.junit.runner.Computer methods()
    {
        org.junit.experimental.ParallelComputer $r0;

        $r0 = new org.junit.experimental.ParallelComputer;

        specialinvoke $r0.<org.junit.experimental.ParallelComputer: void <init>(boolean,boolean)>(0, 1);

        return $r0;
    }

    private static org.junit.runner.Runner parallelize(org.junit.runner.Runner)
    {
        org.junit.runner.Runner r0;
        boolean $z0;
        org.junit.experimental.ParallelComputer$1 $r1;
        org.junit.runners.ParentRunner $r2;

        r0 := @parameter0: org.junit.runner.Runner;

        $z0 = r0 instanceof org.junit.runners.ParentRunner;

        if $z0 == 0 goto label1;

        $r2 = (org.junit.runners.ParentRunner) r0;

        $r1 = new org.junit.experimental.ParallelComputer$1;

        specialinvoke $r1.<org.junit.experimental.ParallelComputer$1: void <init>()>();

        virtualinvoke $r2.<org.junit.runners.ParentRunner: void setScheduler(org.junit.runners.model.RunnerScheduler)>($r1);

     label1:
        return r0;
    }

    protected org.junit.runner.Runner getRunner(org.junit.runners.model.RunnerBuilder, java.lang.Class) throws java.lang.Throwable
    {
        org.junit.experimental.ParallelComputer r0;
        java.lang.Class r1;
        boolean $z0;
        org.junit.runners.model.RunnerBuilder r2;
        org.junit.runner.Runner r3;

        r0 := @this: org.junit.experimental.ParallelComputer;

        r2 := @parameter0: org.junit.runners.model.RunnerBuilder;

        r1 := @parameter1: java.lang.Class;

        r3 = specialinvoke r0.<org.junit.runner.Computer: org.junit.runner.Runner getRunner(org.junit.runners.model.RunnerBuilder,java.lang.Class)>(r2, r1);

        $z0 = r0.<org.junit.experimental.ParallelComputer: boolean methods>;

        if $z0 == 0 goto label1;

        r3 = staticinvoke <org.junit.experimental.ParallelComputer: org.junit.runner.Runner parallelize(org.junit.runner.Runner)>(r3);

        goto label1;

     label1:
        return r3;
    }

    public org.junit.runner.Runner getSuite(org.junit.runners.model.RunnerBuilder, java.lang.Class[]) throws org.junit.runners.model.InitializationError
    {
        org.junit.experimental.ParallelComputer r0;
        java.lang.Class[] r1;
        boolean $z0;
        org.junit.runners.model.RunnerBuilder r2;
        org.junit.runner.Runner r3;

        r0 := @this: org.junit.experimental.ParallelComputer;

        r2 := @parameter0: org.junit.runners.model.RunnerBuilder;

        r1 := @parameter1: java.lang.Class[];

        r3 = specialinvoke r0.<org.junit.runner.Computer: org.junit.runner.Runner getSuite(org.junit.runners.model.RunnerBuilder,java.lang.Class[])>(r2, r1);

        $z0 = r0.<org.junit.experimental.ParallelComputer: boolean classes>;

        if $z0 == 0 goto label1;

        r3 = staticinvoke <org.junit.experimental.ParallelComputer: org.junit.runner.Runner parallelize(org.junit.runner.Runner)>(r3);

        goto label1;

     label1:
        return r3;
    }
}
