public final class org.junit.experimental.categories.CategoryValidator extends org.junit.validator.AnnotationValidator
{
    private static final java.util.Set INCOMPATIBLE_ANNOTATIONS;

    static void <clinit>()
    {
        java.util.HashSet $r0;
        java.lang.Class[] $r1;
        java.util.List $r2;
        java.util.Set $r3;

        $r0 = new java.util.HashSet;

        $r1 = newarray (java.lang.Class)[4];

        $r1[0] = class "Lorg/junit/BeforeClass;";

        $r1[1] = class "Lorg/junit/AfterClass;";

        $r1[2] = class "Lorg/junit/Before;";

        $r1[3] = class "Lorg/junit/After;";

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        specialinvoke $r0.<java.util.HashSet: void <init>(java.util.Collection)>($r2);

        $r3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r0);

        <org.junit.experimental.categories.CategoryValidator: java.util.Set INCOMPATIBLE_ANNOTATIONS> = $r3;

        return;
    }

    public void <init>()
    {
        org.junit.experimental.categories.CategoryValidator r0;

        r0 := @this: org.junit.experimental.categories.CategoryValidator;

        specialinvoke r0.<org.junit.validator.AnnotationValidator: void <init>()>();

        return;
    }

    private void addErrorMessage(java.util.List, java.lang.Class)
    {
        org.junit.experimental.categories.CategoryValidator r0;
        java.util.List r1;
        java.lang.Class r2;
        java.lang.Exception $r3;
        java.lang.Object[] $r4;
        java.lang.String $r5, $r6;

        r0 := @this: org.junit.experimental.categories.CategoryValidator;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.lang.Class;

        $r3 = new java.lang.Exception;

        $r4 = newarray (java.lang.Object)[1];

        $r5 = virtualinvoke r2.<java.lang.Class: java.lang.String getSimpleName()>();

        $r4[0] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("@%s can not be combined with @Category", $r4);

        specialinvoke $r3.<java.lang.Exception: void <init>(java.lang.String)>($r6);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        return;
    }

    public java.util.List validateAnnotatedMethod(org.junit.runners.model.FrameworkMethod)
    {
        org.junit.experimental.categories.CategoryValidator r0;
        int i0, i1;
        java.lang.'annotation'.Annotation r2;
        java.util.Iterator r3;
        java.lang.Class r4, $r9;
        java.util.ArrayList $r5;
        java.util.List $r6;
        java.util.Set $r7;
        boolean $z0, $z1;
        java.lang.Object $r8;
        org.junit.runners.model.FrameworkMethod r10;
        java.lang.'annotation'.Annotation[] r11;

        r0 := @this: org.junit.experimental.categories.CategoryValidator;

        r10 := @parameter0: org.junit.runners.model.FrameworkMethod;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r11 = virtualinvoke r10.<org.junit.runners.model.FrameworkMethod: java.lang.'annotation'.Annotation[] getAnnotations()>();

        i0 = lengthof r11;

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        r2 = r11[i1];

        $r7 = <org.junit.experimental.categories.CategoryValidator: java.util.Set INCOMPATIBLE_ANNOTATIONS>;

        r3 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.Class) $r8;

        $r9 = interfaceinvoke r2.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $z1 = virtualinvoke $r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z1 == 0 goto label3;

        specialinvoke r0.<org.junit.experimental.categories.CategoryValidator: void addErrorMessage(java.util.List,java.lang.Class)>($r5, r4);

     label3:
        goto label2;

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        $r6 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r5);

        return $r6;
    }
}
