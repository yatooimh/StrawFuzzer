class org.junit.experimental.results.ResultMatchers$3 extends org.hamcrest.BaseMatcher
{
    final java.lang.String val$string;

    void <init>(java.lang.String)
    {
        org.junit.experimental.results.ResultMatchers$3 r0;
        java.lang.String r1;

        r0 := @this: org.junit.experimental.results.ResultMatchers$3;

        r1 := @parameter0: java.lang.String;

        r0.<org.junit.experimental.results.ResultMatchers$3: java.lang.String val$string> = r1;

        specialinvoke r0.<org.hamcrest.BaseMatcher: void <init>()>();

        return;
    }

    public void describeTo(org.hamcrest.Description)
    {
        org.junit.experimental.results.ResultMatchers$3 r0;
        org.hamcrest.Description r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r5, $r7;

        r0 := @this: org.junit.experimental.results.ResultMatchers$3;

        r1 := @parameter0: org.hamcrest.Description;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("has failure containing ");

        $r5 = r0.<org.junit.experimental.results.ResultMatchers$3: java.lang.String val$string>;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r1.<org.hamcrest.Description: org.hamcrest.Description appendText(java.lang.String)>($r7);

        return;
    }

    public boolean matches(java.lang.Object)
    {
        org.junit.experimental.results.ResultMatchers$3 r0;
        java.lang.Object r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: org.junit.experimental.results.ResultMatchers$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = r0.<org.junit.experimental.results.ResultMatchers$3: java.lang.String val$string>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>($r3);

        return $z0;
    }
}
