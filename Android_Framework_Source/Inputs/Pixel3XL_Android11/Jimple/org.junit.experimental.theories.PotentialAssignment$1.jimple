class org.junit.experimental.theories.PotentialAssignment$1 extends org.junit.experimental.theories.PotentialAssignment
{
    final java.lang.String val$name;
    final java.lang.Object val$value;

    void <init>(java.lang.Object, java.lang.String)
    {
        org.junit.experimental.theories.PotentialAssignment$1 r0;
        java.lang.Object r1;
        java.lang.String r2;

        r0 := @this: org.junit.experimental.theories.PotentialAssignment$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        r0.<org.junit.experimental.theories.PotentialAssignment$1: java.lang.Object val$value> = r1;

        r0.<org.junit.experimental.theories.PotentialAssignment$1: java.lang.String val$name> = r2;

        specialinvoke r0.<org.junit.experimental.theories.PotentialAssignment: void <init>()>();

        return;
    }

    public java.lang.String getDescription()
    {
        org.junit.experimental.theories.PotentialAssignment$1 r0;
        java.lang.Object[] $r1, $r3, $r10;
        java.lang.Throwable $r2;
        java.lang.Class $r4;
        java.lang.String $r5, $r6, r8, $r11, $r12;
        java.lang.Object r7;

        r0 := @this: org.junit.experimental.theories.PotentialAssignment$1;

        r7 = r0.<org.junit.experimental.theories.PotentialAssignment$1: java.lang.Object val$value>;

        if r7 != null goto label1;

        r8 = "null";

        goto label4;

     label1:
        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = r7;

        r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("\"%s\"", $r1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = newarray (java.lang.Object)[2];

        $r4 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();

        $r3[0] = $r5;

        $r6 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        $r3[1] = $r6;

        r8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[toString() threw %s: %s]", $r3);

     label4:
        $r10 = newarray (java.lang.Object)[2];

        $r10[0] = r8;

        $r11 = r0.<org.junit.experimental.theories.PotentialAssignment$1: java.lang.String val$name>;

        $r10[1] = $r11;

        $r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s <from %s>", $r10);

        return $r12;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public java.lang.Object getValue()
    {
        org.junit.experimental.theories.PotentialAssignment$1 r0;
        java.lang.Object $r1;

        r0 := @this: org.junit.experimental.theories.PotentialAssignment$1;

        $r1 = r0.<org.junit.experimental.theories.PotentialAssignment$1: java.lang.Object val$value>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.junit.experimental.theories.PotentialAssignment$1 r0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: org.junit.experimental.theories.PotentialAssignment$1;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = r0.<org.junit.experimental.theories.PotentialAssignment$1: java.lang.Object val$value>;

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%s]", $r1);

        return $r3;
    }
}
