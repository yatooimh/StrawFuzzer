public class org.junit.experimental.theories.internal.SpecificDataPointsSupplier extends org.junit.experimental.theories.internal.AllMembersSupplier
{

    public void <init>(org.junit.runners.model.TestClass)
    {
        org.junit.experimental.theories.internal.SpecificDataPointsSupplier r0;
        org.junit.runners.model.TestClass r1;

        r0 := @this: org.junit.experimental.theories.internal.SpecificDataPointsSupplier;

        r1 := @parameter0: org.junit.runners.model.TestClass;

        specialinvoke r0.<org.junit.experimental.theories.internal.AllMembersSupplier: void <init>(org.junit.runners.model.TestClass)>(r1);

        return;
    }

    protected java.util.Collection getDataPointsFields(org.junit.experimental.theories.ParameterSignature)
    {
        org.junit.experimental.theories.internal.SpecificDataPointsSupplier r0;
        java.lang.String r1;
        java.lang.reflect.Field r2;
        java.lang.'annotation'.Annotation $r3, $r7;
        org.junit.experimental.theories.FromDataPoints $r4;
        java.util.ArrayList $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        org.junit.experimental.theories.DataPoints $r8;
        java.lang.String[] $r9;
        java.util.List $r10;
        org.junit.experimental.theories.ParameterSignature r11;
        java.util.Collection r12;
        java.util.Iterator r14;

        r0 := @this: org.junit.experimental.theories.internal.SpecificDataPointsSupplier;

        r11 := @parameter0: org.junit.experimental.theories.ParameterSignature;

        r12 = specialinvoke r0.<org.junit.experimental.theories.internal.AllMembersSupplier: java.util.Collection getDataPointsFields(org.junit.experimental.theories.ParameterSignature)>(r11);

        $r3 = virtualinvoke r11.<org.junit.experimental.theories.ParameterSignature: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/junit/experimental/theories/FromDataPoints;");

        $r4 = (org.junit.experimental.theories.FromDataPoints) $r3;

        r1 = interfaceinvoke $r4.<org.junit.experimental.theories.FromDataPoints: java.lang.String value()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r14 = interfaceinvoke r12.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.lang.reflect.Field) $r6;

        $r7 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/junit/experimental/theories/DataPoints;");

        $r8 = (org.junit.experimental.theories.DataPoints) $r7;

        $r9 = interfaceinvoke $r8.<org.junit.experimental.theories.DataPoints: java.lang.String[] value()>();

        $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r9);

        $z1 = interfaceinvoke $r10.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r2);

     label2:
        goto label1;

     label3:
        return $r5;
    }

    protected java.util.Collection getDataPointsMethods(org.junit.experimental.theories.ParameterSignature)
    {
        org.junit.experimental.theories.internal.SpecificDataPointsSupplier r0;
        org.junit.runners.model.FrameworkMethod r2;
        java.lang.'annotation'.Annotation $r3, $r7;
        org.junit.experimental.theories.FromDataPoints $r4;
        java.util.ArrayList $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        org.junit.experimental.theories.DataPoints $r8;
        java.lang.String[] $r9;
        java.util.List $r10;
        org.junit.experimental.theories.ParameterSignature r11;
        java.util.Collection r12;
        java.lang.String r13;
        java.util.Iterator r14;

        r0 := @this: org.junit.experimental.theories.internal.SpecificDataPointsSupplier;

        r11 := @parameter0: org.junit.experimental.theories.ParameterSignature;

        r12 = specialinvoke r0.<org.junit.experimental.theories.internal.AllMembersSupplier: java.util.Collection getDataPointsMethods(org.junit.experimental.theories.ParameterSignature)>(r11);

        $r3 = virtualinvoke r11.<org.junit.experimental.theories.ParameterSignature: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/junit/experimental/theories/FromDataPoints;");

        $r4 = (org.junit.experimental.theories.FromDataPoints) $r3;

        r13 = interfaceinvoke $r4.<org.junit.experimental.theories.FromDataPoints: java.lang.String value()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r14 = interfaceinvoke r12.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r2 = (org.junit.runners.model.FrameworkMethod) $r6;

        $r7 = virtualinvoke r2.<org.junit.runners.model.FrameworkMethod: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/junit/experimental/theories/DataPoints;");

        $r8 = (org.junit.experimental.theories.DataPoints) $r7;

        $r9 = interfaceinvoke $r8.<org.junit.experimental.theories.DataPoints: java.lang.String[] value()>();

        $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r9);

        $z1 = interfaceinvoke $r10.<java.util.List: boolean contains(java.lang.Object)>(r13);

        if $z1 == 0 goto label2;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r2);

     label2:
        goto label1;

     label3:
        return $r5;
    }

    protected java.util.Collection getSingleDataPointFields(org.junit.experimental.theories.ParameterSignature)
    {
        org.junit.experimental.theories.internal.SpecificDataPointsSupplier r0;
        java.lang.reflect.Field r2;
        java.lang.'annotation'.Annotation $r3, $r7;
        org.junit.experimental.theories.FromDataPoints $r4;
        java.util.ArrayList $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        org.junit.experimental.theories.DataPoint $r8;
        java.lang.String[] $r9;
        java.util.List $r10;
        org.junit.experimental.theories.ParameterSignature r11;
        java.util.Collection r12;
        java.lang.String r13;
        java.util.Iterator r14;

        r0 := @this: org.junit.experimental.theories.internal.SpecificDataPointsSupplier;

        r11 := @parameter0: org.junit.experimental.theories.ParameterSignature;

        r12 = specialinvoke r0.<org.junit.experimental.theories.internal.AllMembersSupplier: java.util.Collection getSingleDataPointFields(org.junit.experimental.theories.ParameterSignature)>(r11);

        $r3 = virtualinvoke r11.<org.junit.experimental.theories.ParameterSignature: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/junit/experimental/theories/FromDataPoints;");

        $r4 = (org.junit.experimental.theories.FromDataPoints) $r3;

        r13 = interfaceinvoke $r4.<org.junit.experimental.theories.FromDataPoints: java.lang.String value()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r14 = interfaceinvoke r12.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.lang.reflect.Field) $r6;

        $r7 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/junit/experimental/theories/DataPoint;");

        $r8 = (org.junit.experimental.theories.DataPoint) $r7;

        $r9 = interfaceinvoke $r8.<org.junit.experimental.theories.DataPoint: java.lang.String[] value()>();

        $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r9);

        $z1 = interfaceinvoke $r10.<java.util.List: boolean contains(java.lang.Object)>(r13);

        if $z1 == 0 goto label2;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r2);

     label2:
        goto label1;

     label3:
        return $r5;
    }

    protected java.util.Collection getSingleDataPointMethods(org.junit.experimental.theories.ParameterSignature)
    {
        org.junit.experimental.theories.internal.SpecificDataPointsSupplier r0;
        java.lang.String r1;
        org.junit.runners.model.FrameworkMethod r2;
        java.lang.'annotation'.Annotation $r3, $r7;
        org.junit.experimental.theories.FromDataPoints $r4;
        java.util.ArrayList $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        org.junit.experimental.theories.DataPoint $r8;
        java.lang.String[] $r9;
        java.util.List $r10;
        org.junit.experimental.theories.ParameterSignature r11;
        java.util.Collection r12;
        java.util.Iterator r14;

        r0 := @this: org.junit.experimental.theories.internal.SpecificDataPointsSupplier;

        r11 := @parameter0: org.junit.experimental.theories.ParameterSignature;

        r12 = specialinvoke r0.<org.junit.experimental.theories.internal.AllMembersSupplier: java.util.Collection getSingleDataPointMethods(org.junit.experimental.theories.ParameterSignature)>(r11);

        $r3 = virtualinvoke r11.<org.junit.experimental.theories.ParameterSignature: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/junit/experimental/theories/FromDataPoints;");

        $r4 = (org.junit.experimental.theories.FromDataPoints) $r3;

        r1 = interfaceinvoke $r4.<org.junit.experimental.theories.FromDataPoints: java.lang.String value()>();

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r14 = interfaceinvoke r12.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r2 = (org.junit.runners.model.FrameworkMethod) $r6;

        $r7 = virtualinvoke r2.<org.junit.runners.model.FrameworkMethod: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/junit/experimental/theories/DataPoint;");

        $r8 = (org.junit.experimental.theories.DataPoint) $r7;

        $r9 = interfaceinvoke $r8.<org.junit.experimental.theories.DataPoint: java.lang.String[] value()>();

        $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r9);

        $z1 = interfaceinvoke $r10.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z1 == 0 goto label2;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r2);

     label2:
        goto label1;

     label3:
        return $r5;
    }
}
