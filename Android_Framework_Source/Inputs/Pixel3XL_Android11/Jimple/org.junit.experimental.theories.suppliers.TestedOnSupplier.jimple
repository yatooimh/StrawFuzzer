public class org.junit.experimental.theories.suppliers.TestedOnSupplier extends org.junit.experimental.theories.ParameterSupplier
{

    public void <init>()
    {
        org.junit.experimental.theories.suppliers.TestedOnSupplier r0;

        r0 := @this: org.junit.experimental.theories.suppliers.TestedOnSupplier;

        specialinvoke r0.<org.junit.experimental.theories.ParameterSupplier: void <init>()>();

        return;
    }

    public java.util.List getValueSources(org.junit.experimental.theories.ParameterSignature)
    {
        org.junit.experimental.theories.suppliers.TestedOnSupplier r0;
        int i0, $i1, i2;
        java.util.ArrayList $r2;
        java.lang.'annotation'.Annotation $r3;
        org.junit.experimental.theories.suppliers.TestedOn $r4;
        java.lang.Integer $r5;
        org.junit.experimental.theories.PotentialAssignment $r6;
        org.junit.experimental.theories.ParameterSignature r7;
        int[] r8;

        r0 := @this: org.junit.experimental.theories.suppliers.TestedOnSupplier;

        r7 := @parameter0: org.junit.experimental.theories.ParameterSignature;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r7.<org.junit.experimental.theories.ParameterSignature: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/junit/experimental/theories/suppliers/TestedOn;");

        $r4 = (org.junit.experimental.theories.suppliers.TestedOn) $r3;

        r8 = interfaceinvoke $r4.<org.junit.experimental.theories.suppliers.TestedOn: int[] ints()>();

        i0 = lengthof r8;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $i1 = r8[i2];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r6 = staticinvoke <org.junit.experimental.theories.PotentialAssignment: org.junit.experimental.theories.PotentialAssignment forValue(java.lang.String,java.lang.Object)>("ints", $r5);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r6);

        i2 = i2 + 1;

        goto label1;

     label2:
        return $r2;
    }
}
