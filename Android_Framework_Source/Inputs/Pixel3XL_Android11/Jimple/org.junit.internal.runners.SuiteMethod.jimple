public class org.junit.internal.runners.SuiteMethod extends org.junit.internal.runners.JUnit38ClassRunner
{

    public void <init>(java.lang.Class) throws java.lang.Throwable
    {
        org.junit.internal.runners.SuiteMethod r0;
        java.lang.Class r1;
        junit.framework.Test $r2;

        r0 := @this: org.junit.internal.runners.SuiteMethod;

        r1 := @parameter0: java.lang.Class;

        $r2 = staticinvoke <org.junit.internal.runners.SuiteMethod: junit.framework.Test testFromSuiteMethod(java.lang.Class)>(r1);

        specialinvoke r0.<org.junit.internal.runners.JUnit38ClassRunner: void <init>(junit.framework.Test)>($r2);

        return;
    }

    public static junit.framework.Test testFromSuiteMethod(java.lang.Class) throws java.lang.Throwable
    {
        java.lang.Class[] $r1;
        int $i0;
        boolean $z0;
        java.lang.String $r2, $r5;
        java.lang.Object[] $r6;
        java.lang.Object $r7;
        java.lang.Throwable $r8, $r9;
        java.lang.Class r10;
        java.lang.reflect.Method r11;
        junit.framework.Test r12;
        java.lang.StringBuilder r15;
        java.lang.Exception r16;
        java.lang.reflect.InvocationTargetException r17;

        r10 := @parameter0: java.lang.Class;

     label1:
        $r1 = newarray (java.lang.Class)[0];

        r11 = virtualinvoke r10.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("suite", $r1);

        $i0 = virtualinvoke r11.<java.lang.reflect.Method: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i0);

        if $z0 == 0 goto label3;

        $r6 = newarray (java.lang.Object)[0];

        $r7 = virtualinvoke r11.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r6);

        r12 = (junit.framework.Test) $r7;

     label2:
        return r12;

     label3:
        r16 = new java.lang.Exception;

        r15 = new java.lang.StringBuilder;

        specialinvoke r15.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r10.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".suite() must be static");

        $r5 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r16.<java.lang.Exception: void <init>(java.lang.String)>($r5);

        throw r16;

     label4:
        $r8 := @caughtexception;

        r17 = (java.lang.reflect.InvocationTargetException) $r8;

        $r9 = virtualinvoke r17.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        throw $r9;

        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label3 to label4 with label4;
    }
}
