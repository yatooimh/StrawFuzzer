public class org.junit.internal.runners.model.EachTestNotifier extends java.lang.Object
{
    private final org.junit.runner.Description description;
    private final org.junit.runner.notification.RunNotifier notifier;

    public void <init>(org.junit.runner.notification.RunNotifier, org.junit.runner.Description)
    {
        org.junit.internal.runners.model.EachTestNotifier r0;
        org.junit.runner.notification.RunNotifier r1;
        org.junit.runner.Description r2;

        r0 := @this: org.junit.internal.runners.model.EachTestNotifier;

        r1 := @parameter0: org.junit.runner.notification.RunNotifier;

        r2 := @parameter1: org.junit.runner.Description;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.junit.internal.runners.model.EachTestNotifier: org.junit.runner.notification.RunNotifier notifier> = r1;

        r0.<org.junit.internal.runners.model.EachTestNotifier: org.junit.runner.Description description> = r2;

        return;
    }

    private void addMultipleFailureException(org.junit.runners.model.MultipleFailureException)
    {
        org.junit.internal.runners.model.EachTestNotifier r0;
        java.util.List $r1;
        boolean $z0;
        java.lang.Object $r2;
        java.lang.Throwable $r3;
        org.junit.runners.model.MultipleFailureException r4;
        java.util.Iterator r5;

        r0 := @this: org.junit.internal.runners.model.EachTestNotifier;

        r4 := @parameter0: org.junit.runners.model.MultipleFailureException;

        $r1 = virtualinvoke r4.<org.junit.runners.model.MultipleFailureException: java.util.List getFailures()>();

        r5 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (java.lang.Throwable) $r2;

        virtualinvoke r0.<org.junit.internal.runners.model.EachTestNotifier: void addFailure(java.lang.Throwable)>($r3);

        goto label1;

     label2:
        return;
    }

    public void addFailedAssumption(org.junit.internal.AssumptionViolatedException)
    {
        org.junit.internal.runners.model.EachTestNotifier r0;
        org.junit.internal.AssumptionViolatedException r1;
        org.junit.runner.notification.Failure $r2;
        org.junit.runner.Description $r3;
        org.junit.runner.notification.RunNotifier $r4;

        r0 := @this: org.junit.internal.runners.model.EachTestNotifier;

        r1 := @parameter0: org.junit.internal.AssumptionViolatedException;

        $r4 = r0.<org.junit.internal.runners.model.EachTestNotifier: org.junit.runner.notification.RunNotifier notifier>;

        $r2 = new org.junit.runner.notification.Failure;

        $r3 = r0.<org.junit.internal.runners.model.EachTestNotifier: org.junit.runner.Description description>;

        specialinvoke $r2.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>($r3, r1);

        virtualinvoke $r4.<org.junit.runner.notification.RunNotifier: void fireTestAssumptionFailed(org.junit.runner.notification.Failure)>($r2);

        return;
    }

    public void addFailure(java.lang.Throwable)
    {
        org.junit.internal.runners.model.EachTestNotifier r0;
        java.lang.Throwable r1;
        boolean $z0;
        org.junit.runner.notification.Failure $r2;
        org.junit.runner.Description $r3;
        org.junit.runner.notification.RunNotifier $r4;
        org.junit.runners.model.MultipleFailureException $r5;

        r0 := @this: org.junit.internal.runners.model.EachTestNotifier;

        r1 := @parameter0: java.lang.Throwable;

        $z0 = r1 instanceof org.junit.runners.model.MultipleFailureException;

        if $z0 == 0 goto label1;

        $r5 = (org.junit.runners.model.MultipleFailureException) r1;

        specialinvoke r0.<org.junit.internal.runners.model.EachTestNotifier: void addMultipleFailureException(org.junit.runners.model.MultipleFailureException)>($r5);

        goto label2;

     label1:
        $r4 = r0.<org.junit.internal.runners.model.EachTestNotifier: org.junit.runner.notification.RunNotifier notifier>;

        $r2 = new org.junit.runner.notification.Failure;

        $r3 = r0.<org.junit.internal.runners.model.EachTestNotifier: org.junit.runner.Description description>;

        specialinvoke $r2.<org.junit.runner.notification.Failure: void <init>(org.junit.runner.Description,java.lang.Throwable)>($r3, r1);

        virtualinvoke $r4.<org.junit.runner.notification.RunNotifier: void fireTestFailure(org.junit.runner.notification.Failure)>($r2);

     label2:
        return;
    }

    public void fireTestFinished()
    {
        org.junit.internal.runners.model.EachTestNotifier r0;
        org.junit.runner.Description $r1;
        org.junit.runner.notification.RunNotifier $r2;

        r0 := @this: org.junit.internal.runners.model.EachTestNotifier;

        $r2 = r0.<org.junit.internal.runners.model.EachTestNotifier: org.junit.runner.notification.RunNotifier notifier>;

        $r1 = r0.<org.junit.internal.runners.model.EachTestNotifier: org.junit.runner.Description description>;

        virtualinvoke $r2.<org.junit.runner.notification.RunNotifier: void fireTestFinished(org.junit.runner.Description)>($r1);

        return;
    }

    public void fireTestIgnored()
    {
        org.junit.internal.runners.model.EachTestNotifier r0;
        org.junit.runner.Description $r1;
        org.junit.runner.notification.RunNotifier $r2;

        r0 := @this: org.junit.internal.runners.model.EachTestNotifier;

        $r2 = r0.<org.junit.internal.runners.model.EachTestNotifier: org.junit.runner.notification.RunNotifier notifier>;

        $r1 = r0.<org.junit.internal.runners.model.EachTestNotifier: org.junit.runner.Description description>;

        virtualinvoke $r2.<org.junit.runner.notification.RunNotifier: void fireTestIgnored(org.junit.runner.Description)>($r1);

        return;
    }

    public void fireTestStarted()
    {
        org.junit.internal.runners.model.EachTestNotifier r0;
        org.junit.runner.Description $r1;
        org.junit.runner.notification.RunNotifier $r2;

        r0 := @this: org.junit.internal.runners.model.EachTestNotifier;

        $r2 = r0.<org.junit.internal.runners.model.EachTestNotifier: org.junit.runner.notification.RunNotifier notifier>;

        $r1 = r0.<org.junit.internal.runners.model.EachTestNotifier: org.junit.runner.Description description>;

        virtualinvoke $r2.<org.junit.runner.notification.RunNotifier: void fireTestStarted(org.junit.runner.Description)>($r1);

        return;
    }
}
