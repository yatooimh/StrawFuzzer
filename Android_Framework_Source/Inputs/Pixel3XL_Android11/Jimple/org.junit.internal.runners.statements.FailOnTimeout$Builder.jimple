public class org.junit.internal.runners.statements.FailOnTimeout$Builder extends java.lang.Object
{
    private long timeout;
    private java.util.concurrent.TimeUnit unit;

    private void <init>()
    {
        org.junit.internal.runners.statements.FailOnTimeout$Builder r0;
        java.util.concurrent.TimeUnit $r1;

        r0 := @this: org.junit.internal.runners.statements.FailOnTimeout$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.junit.internal.runners.statements.FailOnTimeout$Builder: long timeout> = 0L;

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        r0.<org.junit.internal.runners.statements.FailOnTimeout$Builder: java.util.concurrent.TimeUnit unit> = $r1;

        return;
    }

    void <init>(org.junit.internal.runners.statements.FailOnTimeout$1)
    {
        org.junit.internal.runners.statements.FailOnTimeout$Builder r0;
        org.junit.internal.runners.statements.FailOnTimeout$1 r1;

        r0 := @this: org.junit.internal.runners.statements.FailOnTimeout$Builder;

        r1 := @parameter0: org.junit.internal.runners.statements.FailOnTimeout$1;

        specialinvoke r0.<org.junit.internal.runners.statements.FailOnTimeout$Builder: void <init>()>();

        return;
    }

    static long access$100(org.junit.internal.runners.statements.FailOnTimeout$Builder)
    {
        org.junit.internal.runners.statements.FailOnTimeout$Builder r0;
        long $l0;

        r0 := @parameter0: org.junit.internal.runners.statements.FailOnTimeout$Builder;

        $l0 = r0.<org.junit.internal.runners.statements.FailOnTimeout$Builder: long timeout>;

        return $l0;
    }

    static java.util.concurrent.TimeUnit access$200(org.junit.internal.runners.statements.FailOnTimeout$Builder)
    {
        org.junit.internal.runners.statements.FailOnTimeout$Builder r0;
        java.util.concurrent.TimeUnit $r1;

        r0 := @parameter0: org.junit.internal.runners.statements.FailOnTimeout$Builder;

        $r1 = r0.<org.junit.internal.runners.statements.FailOnTimeout$Builder: java.util.concurrent.TimeUnit unit>;

        return $r1;
    }

    public org.junit.internal.runners.statements.FailOnTimeout build(org.junit.runners.model.Statement)
    {
        org.junit.internal.runners.statements.FailOnTimeout$Builder r0;
        org.junit.runners.model.Statement r1;
        java.lang.NullPointerException $r2;
        org.junit.internal.runners.statements.FailOnTimeout $r3;

        r0 := @this: org.junit.internal.runners.statements.FailOnTimeout$Builder;

        r1 := @parameter0: org.junit.runners.model.Statement;

        if r1 == null goto label1;

        $r3 = new org.junit.internal.runners.statements.FailOnTimeout;

        specialinvoke $r3.<org.junit.internal.runners.statements.FailOnTimeout: void <init>(org.junit.internal.runners.statements.FailOnTimeout$Builder,org.junit.runners.model.Statement,org.junit.internal.runners.statements.FailOnTimeout$1)>(r0, r1, null);

        return $r3;

     label1:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("statement cannot be null");

        throw $r2;
    }

    public org.junit.internal.runners.statements.FailOnTimeout$Builder withTimeout(long, java.util.concurrent.TimeUnit)
    {
        org.junit.internal.runners.statements.FailOnTimeout$Builder r0;
        long l0;
        java.util.concurrent.TimeUnit r1;
        byte $b1;
        java.lang.IllegalArgumentException $r2;
        java.lang.NullPointerException $r3;

        r0 := @this: org.junit.internal.runners.statements.FailOnTimeout$Builder;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        $b1 = l0 cmp 0L;

        if $b1 < 0 goto label2;

        if r1 == null goto label1;

        r0.<org.junit.internal.runners.statements.FailOnTimeout$Builder: long timeout> = l0;

        r0.<org.junit.internal.runners.statements.FailOnTimeout$Builder: java.util.concurrent.TimeUnit unit> = r1;

        return r0;

     label1:
        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("TimeUnit cannot be null");

        throw $r3;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("timeout must be non-negative");

        throw $r2;
    }
}
