class org.junit.internal.runners.statements.FailOnTimeout$CallableStatement extends java.lang.Object implements java.util.concurrent.Callable
{
    private final java.util.concurrent.CountDownLatch startLatch;
    final org.junit.internal.runners.statements.FailOnTimeout this$0;

    private void <init>(org.junit.internal.runners.statements.FailOnTimeout)
    {
        org.junit.internal.runners.statements.FailOnTimeout$CallableStatement r0;
        org.junit.internal.runners.statements.FailOnTimeout r1;
        java.util.concurrent.CountDownLatch $r2;

        r0 := @this: org.junit.internal.runners.statements.FailOnTimeout$CallableStatement;

        r1 := @parameter0: org.junit.internal.runners.statements.FailOnTimeout;

        r0.<org.junit.internal.runners.statements.FailOnTimeout$CallableStatement: org.junit.internal.runners.statements.FailOnTimeout this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r2.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        r0.<org.junit.internal.runners.statements.FailOnTimeout$CallableStatement: java.util.concurrent.CountDownLatch startLatch> = $r2;

        return;
    }

    void <init>(org.junit.internal.runners.statements.FailOnTimeout, org.junit.internal.runners.statements.FailOnTimeout$1)
    {
        org.junit.internal.runners.statements.FailOnTimeout$CallableStatement r0;
        org.junit.internal.runners.statements.FailOnTimeout r1;
        org.junit.internal.runners.statements.FailOnTimeout$1 r2;

        r0 := @this: org.junit.internal.runners.statements.FailOnTimeout$CallableStatement;

        r1 := @parameter0: org.junit.internal.runners.statements.FailOnTimeout;

        r2 := @parameter1: org.junit.internal.runners.statements.FailOnTimeout$1;

        specialinvoke r0.<org.junit.internal.runners.statements.FailOnTimeout$CallableStatement: void <init>(org.junit.internal.runners.statements.FailOnTimeout)>(r1);

        return;
    }

    public void awaitStarted() throws java.lang.InterruptedException
    {
        org.junit.internal.runners.statements.FailOnTimeout$CallableStatement r0;
        java.util.concurrent.CountDownLatch $r1;

        r0 := @this: org.junit.internal.runners.statements.FailOnTimeout$CallableStatement;

        $r1 = r0.<org.junit.internal.runners.statements.FailOnTimeout$CallableStatement: java.util.concurrent.CountDownLatch startLatch>;

        virtualinvoke $r1.<java.util.concurrent.CountDownLatch: void await()>();

        return;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        org.junit.internal.runners.statements.FailOnTimeout$CallableStatement r0;
        java.lang.Throwable $r1;

        r0 := @this: org.junit.internal.runners.statements.FailOnTimeout$CallableStatement;

        $r1 = virtualinvoke r0.<org.junit.internal.runners.statements.FailOnTimeout$CallableStatement: java.lang.Throwable call()>();

        return $r1;
    }

    public java.lang.Throwable call() throws java.lang.Exception
    {
        org.junit.internal.runners.statements.FailOnTimeout$CallableStatement r0;
        java.util.concurrent.CountDownLatch $r1;
        org.junit.internal.runners.statements.FailOnTimeout $r2;
        org.junit.runners.model.Statement $r3;
        java.lang.Throwable $r4;
        java.lang.Exception $r5;

        r0 := @this: org.junit.internal.runners.statements.FailOnTimeout$CallableStatement;

     label1:
        $r1 = r0.<org.junit.internal.runners.statements.FailOnTimeout$CallableStatement: java.util.concurrent.CountDownLatch startLatch>;

        virtualinvoke $r1.<java.util.concurrent.CountDownLatch: void countDown()>();

        $r2 = r0.<org.junit.internal.runners.statements.FailOnTimeout$CallableStatement: org.junit.internal.runners.statements.FailOnTimeout this$0>;

        $r3 = staticinvoke <org.junit.internal.runners.statements.FailOnTimeout: org.junit.runners.model.Statement access$500(org.junit.internal.runners.statements.FailOnTimeout)>($r2);

        virtualinvoke $r3.<org.junit.runners.model.Statement: void evaluate()>();

     label2:
        return null;

     label3:
        $r4 := @caughtexception;

        return $r4;

     label4:
        $r5 := @caughtexception;

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
