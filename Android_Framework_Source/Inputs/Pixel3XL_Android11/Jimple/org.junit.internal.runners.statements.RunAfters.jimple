public class org.junit.internal.runners.statements.RunAfters extends org.junit.runners.model.Statement
{
    private final java.util.List afters;
    private final org.junit.runners.model.Statement next;
    private final java.lang.Object target;

    public void <init>(org.junit.runners.model.Statement, java.util.List, java.lang.Object)
    {
        org.junit.internal.runners.statements.RunAfters r0;
        org.junit.runners.model.Statement r1;
        java.util.List r2;
        java.lang.Object r3;

        r0 := @this: org.junit.internal.runners.statements.RunAfters;

        r1 := @parameter0: org.junit.runners.model.Statement;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.lang.Object;

        specialinvoke r0.<org.junit.runners.model.Statement: void <init>()>();

        r0.<org.junit.internal.runners.statements.RunAfters: org.junit.runners.model.Statement next> = r1;

        r0.<org.junit.internal.runners.statements.RunAfters: java.util.List afters> = r2;

        r0.<org.junit.internal.runners.statements.RunAfters: java.lang.Object target> = r3;

        return;
    }

    public void evaluate() throws java.lang.Throwable
    {
        org.junit.internal.runners.statements.RunAfters r0;
        java.util.ArrayList $r2;
        org.junit.runners.model.Statement $r3;
        java.util.List $r4, $r10, $r23;
        boolean $z0, $z2, $z4;
        java.lang.Object $r5, $r7, $r11, $r13, $r16, $r18;
        java.lang.Object[] $r6, $r12, $r17;
        java.lang.Throwable $r9, $r15, $r20, $r21, $r22;
        java.util.Iterator r24, r28, r32;
        org.junit.runners.model.FrameworkMethod r25, r29, r33;

        r0 := @this: org.junit.internal.runners.statements.RunAfters;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

     label01:
        $r3 = r0.<org.junit.internal.runners.statements.RunAfters: org.junit.runners.model.Statement next>;

        virtualinvoke $r3.<org.junit.runners.model.Statement: void evaluate()>();

     label02:
        $r4 = r0.<org.junit.internal.runners.statements.RunAfters: java.util.List afters>;

        r24 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r5 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        r25 = (org.junit.runners.model.FrameworkMethod) $r5;

     label04:
        $r7 = r0.<org.junit.internal.runners.statements.RunAfters: java.lang.Object target>;

        $r6 = newarray (java.lang.Object)[0];

        virtualinvoke r25.<org.junit.runners.model.FrameworkMethod: java.lang.Object invokeExplosively(java.lang.Object,java.lang.Object[])>($r7, $r6);

     label05:
        goto label07;

     label06:
        $r20 := @caughtexception;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r20);

     label07:
        goto label03;

     label08:
        goto label17;

     label09:
        $r9 := @caughtexception;

     label10:
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r9);

     label11:
        $r10 = r0.<org.junit.internal.runners.statements.RunAfters: java.util.List afters>;

        r28 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z2 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label08;

        $r11 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>();

        r29 = (org.junit.runners.model.FrameworkMethod) $r11;

     label13:
        $r13 = r0.<org.junit.internal.runners.statements.RunAfters: java.lang.Object target>;

        $r12 = newarray (java.lang.Object)[0];

        virtualinvoke r29.<org.junit.runners.model.FrameworkMethod: java.lang.Object invokeExplosively(java.lang.Object,java.lang.Object[])>($r13, $r12);

     label14:
        goto label16;

     label15:
        $r21 := @caughtexception;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r21);

     label16:
        goto label12;

     label17:
        staticinvoke <org.junit.runners.model.MultipleFailureException: void assertEmpty(java.util.List)>($r2);

        return;

     label18:
        $r22 := @caughtexception;

        $r23 = r0.<org.junit.internal.runners.statements.RunAfters: java.util.List afters>;

        r32 = interfaceinvoke $r23.<java.util.List: java.util.Iterator iterator()>();

     label19:
        $z4 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label24;

        $r16 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>();

        r33 = (org.junit.runners.model.FrameworkMethod) $r16;

     label20:
        $r18 = r0.<org.junit.internal.runners.statements.RunAfters: java.lang.Object target>;

        $r17 = newarray (java.lang.Object)[0];

        virtualinvoke r33.<org.junit.runners.model.FrameworkMethod: java.lang.Object invokeExplosively(java.lang.Object,java.lang.Object[])>($r18, $r17);

     label21:
        goto label23;

     label22:
        $r15 := @caughtexception;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r15);

     label23:
        goto label19;

     label24:
        throw $r22;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label20 to label21 with label22;
    }
}
