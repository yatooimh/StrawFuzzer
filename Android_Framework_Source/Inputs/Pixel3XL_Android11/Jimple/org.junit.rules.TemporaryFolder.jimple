public class org.junit.rules.TemporaryFolder extends org.junit.rules.ExternalResource
{
    private java.io.File folder;
    private final java.io.File parentFolder;

    public void <init>()
    {
        org.junit.rules.TemporaryFolder r0;

        r0 := @this: org.junit.rules.TemporaryFolder;

        specialinvoke r0.<org.junit.rules.TemporaryFolder: void <init>(java.io.File)>(null);

        return;
    }

    public void <init>(java.io.File)
    {
        org.junit.rules.TemporaryFolder r0;
        java.io.File r1;

        r0 := @this: org.junit.rules.TemporaryFolder;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<org.junit.rules.ExternalResource: void <init>()>();

        r0.<org.junit.rules.TemporaryFolder: java.io.File parentFolder> = r1;

        return;
    }

    private java.io.File createTemporaryFolderIn(java.io.File) throws java.io.IOException
    {
        org.junit.rules.TemporaryFolder r0;
        java.io.File r1, r2;

        r0 := @this: org.junit.rules.TemporaryFolder;

        r1 := @parameter0: java.io.File;

        r2 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>("junit", "", r1);

        virtualinvoke r2.<java.io.File: boolean delete()>();

        virtualinvoke r2.<java.io.File: boolean mkdir()>();

        return r2;
    }

    private boolean isLastElementInArray(int, java.lang.String[])
    {
        org.junit.rules.TemporaryFolder r0;
        int i0, i1, $i2;
        java.lang.String[] r1;
        boolean z0;

        r0 := @this: org.junit.rules.TemporaryFolder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String[];

        i1 = lengthof r1;

        z0 = 1;

        $i2 = i1 - 1;

        if i0 != $i2 goto label1;

        goto label2;

     label1:
        z0 = 0;

     label2:
        return z0;
    }

    private void recursiveDelete(java.io.File)
    {
        org.junit.rules.TemporaryFolder r0;
        java.io.File r1, $r3;
        java.io.File[] r2;
        int i0, i1;

        r0 := @this: org.junit.rules.TemporaryFolder;

        r1 := @parameter0: java.io.File;

        r2 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles()>();

        if r2 == null goto label2;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = r2[i1];

        specialinvoke r0.<org.junit.rules.TemporaryFolder: void recursiveDelete(java.io.File)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke r1.<java.io.File: boolean delete()>();

        return;
    }

    private void validateFolderName(java.lang.String) throws java.io.IOException
    {
        org.junit.rules.TemporaryFolder r0;
        java.lang.String r1, $r3;
        java.io.File $r2;
        java.io.IOException $r4;

        r0 := @this: org.junit.rules.TemporaryFolder;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getParent()>();

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("Folder name cannot consist of multiple path components separated by a file separator. Please use newFolder(\'MyParentFolder\',\'MyFolder\') to create hierarchies of folders");

        throw $r4;
    }

    protected void after()
    {
        org.junit.rules.TemporaryFolder r0;

        r0 := @this: org.junit.rules.TemporaryFolder;

        virtualinvoke r0.<org.junit.rules.TemporaryFolder: void delete()>();

        return;
    }

    protected void before() throws java.lang.Throwable
    {
        org.junit.rules.TemporaryFolder r0;

        r0 := @this: org.junit.rules.TemporaryFolder;

        virtualinvoke r0.<org.junit.rules.TemporaryFolder: void create()>();

        return;
    }

    public void create() throws java.io.IOException
    {
        org.junit.rules.TemporaryFolder r0;
        java.io.File $r1, $r2;

        r0 := @this: org.junit.rules.TemporaryFolder;

        $r1 = r0.<org.junit.rules.TemporaryFolder: java.io.File parentFolder>;

        $r2 = specialinvoke r0.<org.junit.rules.TemporaryFolder: java.io.File createTemporaryFolderIn(java.io.File)>($r1);

        r0.<org.junit.rules.TemporaryFolder: java.io.File folder> = $r2;

        return;
    }

    public void delete()
    {
        org.junit.rules.TemporaryFolder r0;
        java.io.File r1;

        r0 := @this: org.junit.rules.TemporaryFolder;

        r1 = r0.<org.junit.rules.TemporaryFolder: java.io.File folder>;

        if r1 == null goto label1;

        specialinvoke r0.<org.junit.rules.TemporaryFolder: void recursiveDelete(java.io.File)>(r1);

     label1:
        return;
    }

    public java.io.File getRoot()
    {
        org.junit.rules.TemporaryFolder r0;
        java.io.File r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: org.junit.rules.TemporaryFolder;

        r1 = r0.<org.junit.rules.TemporaryFolder: java.io.File folder>;

        if r1 == null goto label1;

        return r1;

     label1:
        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("the temporary folder has not yet been created");

        throw $r2;
    }

    public java.io.File newFile() throws java.io.IOException
    {
        org.junit.rules.TemporaryFolder r0;
        java.io.File $r1, $r2;

        r0 := @this: org.junit.rules.TemporaryFolder;

        $r1 = virtualinvoke r0.<org.junit.rules.TemporaryFolder: java.io.File getRoot()>();

        $r2 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>("junit", null, $r1);

        return $r2;
    }

    public java.io.File newFile(java.lang.String) throws java.io.IOException
    {
        org.junit.rules.TemporaryFolder r0;
        java.lang.String r1, $r9;
        java.io.File $r2, $r3;
        boolean $z0;
        java.lang.StringBuilder $r4;
        java.io.IOException $r8;

        r0 := @this: org.junit.rules.TemporaryFolder;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.io.File;

        $r3 = virtualinvoke r0.<org.junit.rules.TemporaryFolder: java.io.File getRoot()>();

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, r1);

        $z0 = virtualinvoke $r2.<java.io.File: boolean createNewFile()>();

        if $z0 == 0 goto label1;

        return $r2;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a file with the name \'");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' already exists in the test folder");

        $r8 = new java.io.IOException;

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r9);

        throw $r8;
    }

    public java.io.File newFolder() throws java.io.IOException
    {
        org.junit.rules.TemporaryFolder r0;
        java.io.File $r1, $r2;

        r0 := @this: org.junit.rules.TemporaryFolder;

        $r1 = virtualinvoke r0.<org.junit.rules.TemporaryFolder: java.io.File getRoot()>();

        $r2 = specialinvoke r0.<org.junit.rules.TemporaryFolder: java.io.File createTemporaryFolderIn(java.io.File)>($r1);

        return $r2;
    }

    public java.io.File newFolder(java.lang.String) throws java.io.IOException
    {
        org.junit.rules.TemporaryFolder r0;
        java.lang.String r1;
        java.lang.String[] $r2;
        java.io.File $r3;

        r0 := @this: org.junit.rules.TemporaryFolder;

        r1 := @parameter0: java.lang.String;

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = r1;

        $r3 = virtualinvoke r0.<org.junit.rules.TemporaryFolder: java.io.File newFolder(java.lang.String[])>($r2);

        return $r3;
    }

    public transient java.io.File newFolder(java.lang.String[]) throws java.io.IOException
    {
        org.junit.rules.TemporaryFolder r0;
        java.lang.String r1, $r8;
        int $i0, i1;
        java.io.File $r2, r10;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3;
        java.io.IOException $r7;
        java.lang.String[] r9;

        r0 := @this: org.junit.rules.TemporaryFolder;

        r9 := @parameter0: java.lang.String[];

        r10 = virtualinvoke r0.<org.junit.rules.TemporaryFolder: java.io.File getRoot()>();

        i1 = 0;

     label1:
        $i0 = lengthof r9;

        if i1 >= $i0 goto label4;

        r1 = r9[i1];

        specialinvoke r0.<org.junit.rules.TemporaryFolder: void validateFolderName(java.lang.String)>(r1);

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>(r10, r1);

        r10 = $r2;

        $z0 = virtualinvoke $r2.<java.io.File: boolean mkdir()>();

        if $z0 != 0 goto label3;

        $z1 = specialinvoke r0.<org.junit.rules.TemporaryFolder: boolean isLastElementInArray(int,java.lang.String[])>(i1, r9);

        if $z1 != 0 goto label2;

        goto label3;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a folder with the name \'");

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' already exists");

        $r7 = new java.io.IOException;

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r7;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return r10;
    }
}
