class org.junit.rules.TestWatcher$1 extends org.junit.runners.model.Statement
{
    final org.junit.rules.TestWatcher this$0;
    final org.junit.runners.model.Statement val$base;
    final org.junit.runner.Description val$description;

    void <init>(org.junit.rules.TestWatcher, org.junit.runner.Description, org.junit.runners.model.Statement)
    {
        org.junit.rules.TestWatcher$1 r0;
        org.junit.rules.TestWatcher r1;
        org.junit.runner.Description r2;
        org.junit.runners.model.Statement r3;

        r0 := @this: org.junit.rules.TestWatcher$1;

        r1 := @parameter0: org.junit.rules.TestWatcher;

        r2 := @parameter1: org.junit.runner.Description;

        r3 := @parameter2: org.junit.runners.model.Statement;

        r0.<org.junit.rules.TestWatcher$1: org.junit.rules.TestWatcher this$0> = r1;

        r0.<org.junit.rules.TestWatcher$1: org.junit.runner.Description val$description> = r2;

        r0.<org.junit.rules.TestWatcher$1: org.junit.runners.model.Statement val$base> = r3;

        specialinvoke r0.<org.junit.runners.model.Statement: void <init>()>();

        return;
    }

    public void evaluate() throws java.lang.Throwable
    {
        org.junit.rules.TestWatcher$1 r0;
        java.util.ArrayList $r2;
        org.junit.runner.Description $r3, $r6, $r9, $r12, $r15, $r18;
        org.junit.rules.TestWatcher $r4, $r7, $r10, $r13, $r16, $r17;
        org.junit.runners.model.Statement $r5;
        java.lang.Throwable $r8, $r11;
        org.junit.internal.AssumptionViolatedException $r14;

        r0 := @this: org.junit.rules.TestWatcher$1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r4 = r0.<org.junit.rules.TestWatcher$1: org.junit.rules.TestWatcher this$0>;

        $r3 = r0.<org.junit.rules.TestWatcher$1: org.junit.runner.Description val$description>;

        staticinvoke <org.junit.rules.TestWatcher: void access$000(org.junit.rules.TestWatcher,org.junit.runner.Description,java.util.List)>($r4, $r3, $r2);

     label01:
        $r5 = r0.<org.junit.rules.TestWatcher$1: org.junit.runners.model.Statement val$base>;

        virtualinvoke $r5.<org.junit.runners.model.Statement: void evaluate()>();

        $r7 = r0.<org.junit.rules.TestWatcher$1: org.junit.rules.TestWatcher this$0>;

        $r6 = r0.<org.junit.rules.TestWatcher$1: org.junit.runner.Description val$description>;

        staticinvoke <org.junit.rules.TestWatcher: void access$100(org.junit.rules.TestWatcher,org.junit.runner.Description,java.util.List)>($r7, $r6, $r2);

     label02:
        $r17 = r0.<org.junit.rules.TestWatcher$1: org.junit.rules.TestWatcher this$0>;

        $r18 = r0.<org.junit.rules.TestWatcher$1: org.junit.runner.Description val$description>;

        staticinvoke <org.junit.rules.TestWatcher: void access$400(org.junit.rules.TestWatcher,org.junit.runner.Description,java.util.List)>($r17, $r18, $r2);

        goto label09;

     label03:
        $r8 := @caughtexception;

     label04:
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r8);

        $r10 = r0.<org.junit.rules.TestWatcher$1: org.junit.rules.TestWatcher this$0>;

        $r9 = r0.<org.junit.rules.TestWatcher$1: org.junit.runner.Description val$description>;

        staticinvoke <org.junit.rules.TestWatcher: void access$300(org.junit.rules.TestWatcher,java.lang.Throwable,org.junit.runner.Description,java.util.List)>($r10, $r8, $r9, $r2);

     label05:
        goto label02;

     label06:
        $r14 := @caughtexception;

     label07:
        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r16 = r0.<org.junit.rules.TestWatcher$1: org.junit.rules.TestWatcher this$0>;

        $r15 = r0.<org.junit.rules.TestWatcher$1: org.junit.runner.Description val$description>;

        staticinvoke <org.junit.rules.TestWatcher: void access$200(org.junit.rules.TestWatcher,org.junit.internal.AssumptionViolatedException,org.junit.runner.Description,java.util.List)>($r16, $r14, $r15, $r2);

     label08:
        goto label02;

     label09:
        staticinvoke <org.junit.runners.model.MultipleFailureException: void assertEmpty(java.util.List)>($r2);

        return;

     label10:
        $r11 := @caughtexception;

        $r13 = r0.<org.junit.rules.TestWatcher$1: org.junit.rules.TestWatcher this$0>;

        $r12 = r0.<org.junit.rules.TestWatcher$1: org.junit.runner.Description val$description>;

        staticinvoke <org.junit.rules.TestWatcher: void access$400(org.junit.rules.TestWatcher,org.junit.runner.Description,java.util.List)>($r13, $r12, $r2);

        throw $r11;

        catch org.junit.internal.AssumptionViolatedException from label01 to label02 with label06;
        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label04 to label05 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
    }
}
