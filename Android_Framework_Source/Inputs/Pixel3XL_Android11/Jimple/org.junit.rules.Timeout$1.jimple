class org.junit.rules.Timeout$1 extends org.junit.runners.model.Statement
{
    final org.junit.rules.Timeout this$0;
    final java.lang.Exception val$e;

    void <init>(org.junit.rules.Timeout, java.lang.Exception)
    {
        org.junit.rules.Timeout$1 r0;
        org.junit.rules.Timeout r1;
        java.lang.Exception r2;

        r0 := @this: org.junit.rules.Timeout$1;

        r1 := @parameter0: org.junit.rules.Timeout;

        r2 := @parameter1: java.lang.Exception;

        r0.<org.junit.rules.Timeout$1: org.junit.rules.Timeout this$0> = r1;

        r0.<org.junit.rules.Timeout$1: java.lang.Exception val$e> = r2;

        specialinvoke r0.<org.junit.runners.model.Statement: void <init>()>();

        return;
    }

    public void evaluate() throws java.lang.Throwable
    {
        org.junit.rules.Timeout$1 r0;
        java.lang.RuntimeException $r1;
        java.lang.Exception $r2;

        r0 := @this: org.junit.rules.Timeout$1;

        $r1 = new java.lang.RuntimeException;

        $r2 = r0.<org.junit.rules.Timeout$1: java.lang.Exception val$e>;

        specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Invalid parameters for Timeout", $r2);

        throw $r1;
    }
}
