public class org.junit.rules.Timeout$Builder extends java.lang.Object
{
    private boolean lookForStuckThread;
    private java.util.concurrent.TimeUnit timeUnit;
    private long timeout;

    protected void <init>()
    {
        org.junit.rules.Timeout$Builder r0;
        java.util.concurrent.TimeUnit $r1;

        r0 := @this: org.junit.rules.Timeout$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.junit.rules.Timeout$Builder: boolean lookForStuckThread> = 0;

        r0.<org.junit.rules.Timeout$Builder: long timeout> = 0L;

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        r0.<org.junit.rules.Timeout$Builder: java.util.concurrent.TimeUnit timeUnit> = $r1;

        return;
    }

    public org.junit.rules.Timeout build()
    {
        org.junit.rules.Timeout$Builder r0;
        org.junit.rules.Timeout $r1;

        r0 := @this: org.junit.rules.Timeout$Builder;

        $r1 = new org.junit.rules.Timeout;

        specialinvoke $r1.<org.junit.rules.Timeout: void <init>(org.junit.rules.Timeout$Builder)>(r0);

        return $r1;
    }

    protected java.util.concurrent.TimeUnit getTimeUnit()
    {
        org.junit.rules.Timeout$Builder r0;
        java.util.concurrent.TimeUnit $r1;

        r0 := @this: org.junit.rules.Timeout$Builder;

        $r1 = r0.<org.junit.rules.Timeout$Builder: java.util.concurrent.TimeUnit timeUnit>;

        return $r1;
    }

    protected long getTimeout()
    {
        org.junit.rules.Timeout$Builder r0;
        long $l0;

        r0 := @this: org.junit.rules.Timeout$Builder;

        $l0 = r0.<org.junit.rules.Timeout$Builder: long timeout>;

        return $l0;
    }

    public org.junit.rules.Timeout$Builder withTimeout(long, java.util.concurrent.TimeUnit)
    {
        org.junit.rules.Timeout$Builder r0;
        long l0;
        java.util.concurrent.TimeUnit r1;

        r0 := @this: org.junit.rules.Timeout$Builder;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        r0.<org.junit.rules.Timeout$Builder: long timeout> = l0;

        r0.<org.junit.rules.Timeout$Builder: java.util.concurrent.TimeUnit timeUnit> = r1;

        return r0;
    }
}
