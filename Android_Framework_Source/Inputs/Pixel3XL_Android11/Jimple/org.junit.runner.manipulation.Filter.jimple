public abstract class org.junit.runner.manipulation.Filter extends java.lang.Object
{
    public static final org.junit.runner.manipulation.Filter ALL;

    static void <clinit>()
    {
        org.junit.runner.manipulation.Filter$1 $r0;

        $r0 = new org.junit.runner.manipulation.Filter$1;

        specialinvoke $r0.<org.junit.runner.manipulation.Filter$1: void <init>()>();

        <org.junit.runner.manipulation.Filter: org.junit.runner.manipulation.Filter ALL> = $r0;

        return;
    }

    public void <init>()
    {
        org.junit.runner.manipulation.Filter r0;

        r0 := @this: org.junit.runner.manipulation.Filter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.junit.runner.manipulation.Filter matchMethodDescription(org.junit.runner.Description)
    {
        org.junit.runner.Description r0;
        org.junit.runner.manipulation.Filter$2 $r1;

        r0 := @parameter0: org.junit.runner.Description;

        $r1 = new org.junit.runner.manipulation.Filter$2;

        specialinvoke $r1.<org.junit.runner.manipulation.Filter$2: void <init>(org.junit.runner.Description)>(r0);

        return $r1;
    }

    public void apply(java.lang.Object) throws org.junit.runner.manipulation.NoTestsRemainException
    {
        org.junit.runner.manipulation.Filter r0;
        java.lang.Object r1;
        boolean $z0;
        org.junit.runner.manipulation.Filterable $r2;

        r0 := @this: org.junit.runner.manipulation.Filter;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof org.junit.runner.manipulation.Filterable;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = (org.junit.runner.manipulation.Filterable) r1;

        interfaceinvoke $r2.<org.junit.runner.manipulation.Filterable: void filter(org.junit.runner.manipulation.Filter)>(r0);

        return;
    }

    public abstract java.lang.String describe();

    public org.junit.runner.manipulation.Filter intersect(org.junit.runner.manipulation.Filter)
    {
        org.junit.runner.manipulation.Filter r0, r1, $r2;
        org.junit.runner.manipulation.Filter$3 $r3;

        r0 := @this: org.junit.runner.manipulation.Filter;

        r1 := @parameter0: org.junit.runner.manipulation.Filter;

        if r1 == r0 goto label2;

        $r2 = <org.junit.runner.manipulation.Filter: org.junit.runner.manipulation.Filter ALL>;

        if r1 != $r2 goto label1;

        goto label2;

     label1:
        $r3 = new org.junit.runner.manipulation.Filter$3;

        specialinvoke $r3.<org.junit.runner.manipulation.Filter$3: void <init>(org.junit.runner.manipulation.Filter,org.junit.runner.manipulation.Filter,org.junit.runner.manipulation.Filter)>(r0, r0, r1);

        return $r3;

     label2:
        return r0;
    }

    public abstract boolean shouldRun(org.junit.runner.Description);
}
