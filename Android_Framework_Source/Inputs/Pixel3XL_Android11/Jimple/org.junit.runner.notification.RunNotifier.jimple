public class org.junit.runner.notification.RunNotifier extends java.lang.Object
{
    private final java.util.List listeners;
    private volatile boolean pleaseStop;

    public void <init>()
    {
        org.junit.runner.notification.RunNotifier r0;
        java.util.concurrent.CopyOnWriteArrayList $r1;

        r0 := @this: org.junit.runner.notification.RunNotifier;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r1.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<org.junit.runner.notification.RunNotifier: java.util.List listeners> = $r1;

        r0.<org.junit.runner.notification.RunNotifier: boolean pleaseStop> = 0;

        return;
    }

    static java.util.List access$000(org.junit.runner.notification.RunNotifier)
    {
        org.junit.runner.notification.RunNotifier r0;
        java.util.List $r1;

        r0 := @parameter0: org.junit.runner.notification.RunNotifier;

        $r1 = r0.<org.junit.runner.notification.RunNotifier: java.util.List listeners>;

        return $r1;
    }

    static void access$100(org.junit.runner.notification.RunNotifier, java.util.List, java.util.List)
    {
        org.junit.runner.notification.RunNotifier r0;
        java.util.List r1, r2;

        r0 := @parameter0: org.junit.runner.notification.RunNotifier;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.List;

        specialinvoke r0.<org.junit.runner.notification.RunNotifier: void fireTestFailures(java.util.List,java.util.List)>(r1, r2);

        return;
    }

    private void fireTestFailures(java.util.List, java.util.List)
    {
        org.junit.runner.notification.RunNotifier r0;
        java.util.List r1, r2;
        boolean $z0;
        org.junit.runner.notification.RunNotifier$4 $r3;

        r0 := @this: org.junit.runner.notification.RunNotifier;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r3 = new org.junit.runner.notification.RunNotifier$4;

        specialinvoke $r3.<org.junit.runner.notification.RunNotifier$4: void <init>(org.junit.runner.notification.RunNotifier,java.util.List,java.util.List)>(r0, r1, r2);

        virtualinvoke $r3.<org.junit.runner.notification.RunNotifier$4: void run()>();

     label1:
        return;
    }

    public void addFirstListener(org.junit.runner.notification.RunListener)
    {
        org.junit.runner.notification.RunNotifier r0;
        org.junit.runner.notification.RunListener r1, $r4;
        java.lang.NullPointerException $r2;
        java.util.List $r3;

        r0 := @this: org.junit.runner.notification.RunNotifier;

        r1 := @parameter0: org.junit.runner.notification.RunListener;

        if r1 == null goto label1;

        $r3 = r0.<org.junit.runner.notification.RunNotifier: java.util.List listeners>;

        $r4 = virtualinvoke r0.<org.junit.runner.notification.RunNotifier: org.junit.runner.notification.RunListener wrapIfNotThreadSafe(org.junit.runner.notification.RunListener)>(r1);

        interfaceinvoke $r3.<java.util.List: void add(int,java.lang.Object)>(0, $r4);

        return;

     label1:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot add a null listener");

        throw $r2;
    }

    public void addListener(org.junit.runner.notification.RunListener)
    {
        org.junit.runner.notification.RunNotifier r0;
        org.junit.runner.notification.RunListener r1, $r4;
        java.lang.NullPointerException $r2;
        java.util.List $r3;

        r0 := @this: org.junit.runner.notification.RunNotifier;

        r1 := @parameter0: org.junit.runner.notification.RunListener;

        if r1 == null goto label1;

        $r3 = r0.<org.junit.runner.notification.RunNotifier: java.util.List listeners>;

        $r4 = virtualinvoke r0.<org.junit.runner.notification.RunNotifier: org.junit.runner.notification.RunListener wrapIfNotThreadSafe(org.junit.runner.notification.RunListener)>(r1);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        return;

     label1:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot add a null listener");

        throw $r2;
    }

    public void fireTestAssumptionFailed(org.junit.runner.notification.Failure)
    {
        org.junit.runner.notification.RunNotifier r0;
        org.junit.runner.notification.Failure r1;
        org.junit.runner.notification.RunNotifier$5 $r2;

        r0 := @this: org.junit.runner.notification.RunNotifier;

        r1 := @parameter0: org.junit.runner.notification.Failure;

        $r2 = new org.junit.runner.notification.RunNotifier$5;

        specialinvoke $r2.<org.junit.runner.notification.RunNotifier$5: void <init>(org.junit.runner.notification.RunNotifier,org.junit.runner.notification.Failure)>(r0, r1);

        virtualinvoke $r2.<org.junit.runner.notification.RunNotifier$5: void run()>();

        return;
    }

    public void fireTestFailure(org.junit.runner.notification.Failure)
    {
        org.junit.runner.notification.RunNotifier r0;
        org.junit.runner.notification.Failure r1;
        org.junit.runner.notification.Failure[] $r2;
        java.util.List $r3, $r4;

        r0 := @this: org.junit.runner.notification.RunNotifier;

        r1 := @parameter0: org.junit.runner.notification.Failure;

        $r3 = r0.<org.junit.runner.notification.RunNotifier: java.util.List listeners>;

        $r2 = newarray (org.junit.runner.notification.Failure)[1];

        $r2[0] = r1;

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        specialinvoke r0.<org.junit.runner.notification.RunNotifier: void fireTestFailures(java.util.List,java.util.List)>($r3, $r4);

        return;
    }

    public void fireTestFinished(org.junit.runner.Description)
    {
        org.junit.runner.notification.RunNotifier r0;
        org.junit.runner.Description r1;
        org.junit.runner.notification.RunNotifier$7 $r2;

        r0 := @this: org.junit.runner.notification.RunNotifier;

        r1 := @parameter0: org.junit.runner.Description;

        $r2 = new org.junit.runner.notification.RunNotifier$7;

        specialinvoke $r2.<org.junit.runner.notification.RunNotifier$7: void <init>(org.junit.runner.notification.RunNotifier,org.junit.runner.Description)>(r0, r1);

        virtualinvoke $r2.<org.junit.runner.notification.RunNotifier$7: void run()>();

        return;
    }

    public void fireTestIgnored(org.junit.runner.Description)
    {
        org.junit.runner.notification.RunNotifier r0;
        org.junit.runner.Description r1;
        org.junit.runner.notification.RunNotifier$6 $r2;

        r0 := @this: org.junit.runner.notification.RunNotifier;

        r1 := @parameter0: org.junit.runner.Description;

        $r2 = new org.junit.runner.notification.RunNotifier$6;

        specialinvoke $r2.<org.junit.runner.notification.RunNotifier$6: void <init>(org.junit.runner.notification.RunNotifier,org.junit.runner.Description)>(r0, r1);

        virtualinvoke $r2.<org.junit.runner.notification.RunNotifier$6: void run()>();

        return;
    }

    public void fireTestRunFinished(org.junit.runner.Result)
    {
        org.junit.runner.notification.RunNotifier r0;
        org.junit.runner.Result r1;
        org.junit.runner.notification.RunNotifier$2 $r2;

        r0 := @this: org.junit.runner.notification.RunNotifier;

        r1 := @parameter0: org.junit.runner.Result;

        $r2 = new org.junit.runner.notification.RunNotifier$2;

        specialinvoke $r2.<org.junit.runner.notification.RunNotifier$2: void <init>(org.junit.runner.notification.RunNotifier,org.junit.runner.Result)>(r0, r1);

        virtualinvoke $r2.<org.junit.runner.notification.RunNotifier$2: void run()>();

        return;
    }

    public void fireTestRunStarted(org.junit.runner.Description)
    {
        org.junit.runner.notification.RunNotifier r0;
        org.junit.runner.Description r1;
        org.junit.runner.notification.RunNotifier$1 $r2;

        r0 := @this: org.junit.runner.notification.RunNotifier;

        r1 := @parameter0: org.junit.runner.Description;

        $r2 = new org.junit.runner.notification.RunNotifier$1;

        specialinvoke $r2.<org.junit.runner.notification.RunNotifier$1: void <init>(org.junit.runner.notification.RunNotifier,org.junit.runner.Description)>(r0, r1);

        virtualinvoke $r2.<org.junit.runner.notification.RunNotifier$1: void run()>();

        return;
    }

    public void fireTestStarted(org.junit.runner.Description) throws org.junit.runner.notification.StoppedByUserException
    {
        org.junit.runner.notification.RunNotifier r0;
        org.junit.runner.Description r1;
        boolean $z0;
        org.junit.runner.notification.StoppedByUserException $r2;
        org.junit.runner.notification.RunNotifier$3 $r3;

        r0 := @this: org.junit.runner.notification.RunNotifier;

        r1 := @parameter0: org.junit.runner.Description;

        $z0 = r0.<org.junit.runner.notification.RunNotifier: boolean pleaseStop>;

        if $z0 != 0 goto label1;

        $r3 = new org.junit.runner.notification.RunNotifier$3;

        specialinvoke $r3.<org.junit.runner.notification.RunNotifier$3: void <init>(org.junit.runner.notification.RunNotifier,org.junit.runner.Description)>(r0, r1);

        virtualinvoke $r3.<org.junit.runner.notification.RunNotifier$3: void run()>();

        return;

     label1:
        $r2 = new org.junit.runner.notification.StoppedByUserException;

        specialinvoke $r2.<org.junit.runner.notification.StoppedByUserException: void <init>()>();

        throw $r2;
    }

    public void pleaseStop()
    {
        org.junit.runner.notification.RunNotifier r0;

        r0 := @this: org.junit.runner.notification.RunNotifier;

        r0.<org.junit.runner.notification.RunNotifier: boolean pleaseStop> = 1;

        return;
    }

    public void removeListener(org.junit.runner.notification.RunListener)
    {
        org.junit.runner.notification.RunNotifier r0;
        org.junit.runner.notification.RunListener r1, $r4;
        java.lang.NullPointerException $r2;
        java.util.List $r3;

        r0 := @this: org.junit.runner.notification.RunNotifier;

        r1 := @parameter0: org.junit.runner.notification.RunListener;

        if r1 == null goto label1;

        $r3 = r0.<org.junit.runner.notification.RunNotifier: java.util.List listeners>;

        $r4 = virtualinvoke r0.<org.junit.runner.notification.RunNotifier: org.junit.runner.notification.RunListener wrapIfNotThreadSafe(org.junit.runner.notification.RunListener)>(r1);

        interfaceinvoke $r3.<java.util.List: boolean remove(java.lang.Object)>($r4);

        return;

     label1:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Cannot remove a null listener");

        throw $r2;
    }

    org.junit.runner.notification.RunListener wrapIfNotThreadSafe(org.junit.runner.notification.RunListener)
    {
        org.junit.runner.notification.RunNotifier r0;
        java.lang.Class $r1;
        boolean $z0;
        org.junit.runner.notification.SynchronizedRunListener $r2;
        org.junit.runner.notification.RunListener r3;

        r0 := @this: org.junit.runner.notification.RunNotifier;

        r3 := @parameter0: org.junit.runner.notification.RunListener;

        $r1 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>(class "Lorg/junit/runner/notification/RunListener$ThreadSafe;");

        if $z0 == 0 goto label1;

        goto label2;

     label1:
        $r2 = new org.junit.runner.notification.SynchronizedRunListener;

        specialinvoke $r2.<org.junit.runner.notification.SynchronizedRunListener: void <init>(org.junit.runner.notification.RunListener,java.lang.Object)>(r3, r0);

        r3 = $r2;

     label2:
        return r3;
    }
}
