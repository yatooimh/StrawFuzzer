class org.junit.runners.model.FrameworkMethod$1 extends org.junit.internal.runners.model.ReflectiveCallable
{
    final org.junit.runners.model.FrameworkMethod this$0;
    final java.lang.Object[] val$params;
    final java.lang.Object val$target;

    void <init>(org.junit.runners.model.FrameworkMethod, java.lang.Object, java.lang.Object[])
    {
        org.junit.runners.model.FrameworkMethod$1 r0;
        org.junit.runners.model.FrameworkMethod r1;
        java.lang.Object r2;
        java.lang.Object[] r3;

        r0 := @this: org.junit.runners.model.FrameworkMethod$1;

        r1 := @parameter0: org.junit.runners.model.FrameworkMethod;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object[];

        r0.<org.junit.runners.model.FrameworkMethod$1: org.junit.runners.model.FrameworkMethod this$0> = r1;

        r0.<org.junit.runners.model.FrameworkMethod$1: java.lang.Object val$target> = r2;

        r0.<org.junit.runners.model.FrameworkMethod$1: java.lang.Object[] val$params> = r3;

        specialinvoke r0.<org.junit.internal.runners.model.ReflectiveCallable: void <init>()>();

        return;
    }

    protected java.lang.Object runReflectiveCall() throws java.lang.Throwable
    {
        org.junit.runners.model.FrameworkMethod$1 r0;
        org.junit.runners.model.FrameworkMethod $r1;
        java.lang.reflect.Method $r2;
        java.lang.Object[] $r3;
        java.lang.Object $r4, $r5;

        r0 := @this: org.junit.runners.model.FrameworkMethod$1;

        $r1 = r0.<org.junit.runners.model.FrameworkMethod$1: org.junit.runners.model.FrameworkMethod this$0>;

        $r2 = staticinvoke <org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method access$000(org.junit.runners.model.FrameworkMethod)>($r1);

        $r4 = r0.<org.junit.runners.model.FrameworkMethod$1: java.lang.Object val$target>;

        $r3 = r0.<org.junit.runners.model.FrameworkMethod$1: java.lang.Object[] val$params>;

        $r5 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r4, $r3);

        return $r5;
    }
}
