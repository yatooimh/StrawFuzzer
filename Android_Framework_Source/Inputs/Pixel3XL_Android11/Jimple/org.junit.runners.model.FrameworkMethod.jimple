public class org.junit.runners.model.FrameworkMethod extends org.junit.runners.model.FrameworkMember
{
    private final java.lang.reflect.Method method;

    public void <init>(java.lang.reflect.Method)
    {
        org.junit.runners.model.FrameworkMethod r0;
        java.lang.reflect.Method r1;
        java.lang.NullPointerException $r2;

        r0 := @this: org.junit.runners.model.FrameworkMethod;

        r1 := @parameter0: java.lang.reflect.Method;

        specialinvoke r0.<org.junit.runners.model.FrameworkMember: void <init>()>();

        if r1 == null goto label1;

        r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method> = r1;

        return;

     label1:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("FrameworkMethod cannot be created without an underlying method.");

        throw $r2;
    }

    static java.lang.reflect.Method access$000(org.junit.runners.model.FrameworkMethod)
    {
        org.junit.runners.model.FrameworkMethod r0;
        java.lang.reflect.Method $r1;

        r0 := @parameter0: org.junit.runners.model.FrameworkMethod;

        $r1 = r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        return $r1;
    }

    private java.lang.Class[] getParameterTypes()
    {
        org.junit.runners.model.FrameworkMethod r0;
        java.lang.reflect.Method $r1;
        java.lang.Class[] $r2;

        r0 := @this: org.junit.runners.model.FrameworkMethod;

        $r1 = r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        org.junit.runners.model.FrameworkMethod r0, $r3;
        java.lang.Object r1;
        java.lang.Class $r2;
        boolean $z0, $z1;
        java.lang.reflect.Method $r4, $r5;

        r0 := @this: org.junit.runners.model.FrameworkMethod;

        r1 := @parameter0: java.lang.Object;

        $r2 = class "Lorg/junit/runners/model/FrameworkMethod;";

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isInstance(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r3 = (org.junit.runners.model.FrameworkMethod) r1;

        $r5 = $r3.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $r4 = r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $z1 = virtualinvoke $r5.<java.lang.reflect.Method: boolean equals(java.lang.Object)>($r4);

        return $z1;
    }

    public java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)
    {
        org.junit.runners.model.FrameworkMethod r0;
        java.lang.Class r1;
        java.lang.reflect.Method $r2;
        java.lang.'annotation'.Annotation $r3;

        r0 := @this: org.junit.runners.model.FrameworkMethod;

        r1 := @parameter0: java.lang.Class;

        $r2 = r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(r1);

        return $r3;
    }

    public java.lang.'annotation'.Annotation[] getAnnotations()
    {
        org.junit.runners.model.FrameworkMethod r0;
        java.lang.reflect.Method $r1;
        java.lang.'annotation'.Annotation[] $r2;

        r0 := @this: org.junit.runners.model.FrameworkMethod;

        $r1 = r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[] getAnnotations()>();

        return $r2;
    }

    public java.lang.Class getDeclaringClass()
    {
        org.junit.runners.model.FrameworkMethod r0;
        java.lang.reflect.Method $r1;
        java.lang.Class $r2;

        r0 := @this: org.junit.runners.model.FrameworkMethod;

        $r1 = r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        return $r2;
    }

    public java.lang.reflect.Method getMethod()
    {
        org.junit.runners.model.FrameworkMethod r0;
        java.lang.reflect.Method $r1;

        r0 := @this: org.junit.runners.model.FrameworkMethod;

        $r1 = r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        return $r1;
    }

    protected int getModifiers()
    {
        org.junit.runners.model.FrameworkMethod r0;
        java.lang.reflect.Method $r1;
        int $i0;

        r0 := @this: org.junit.runners.model.FrameworkMethod;

        $r1 = r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $i0 = virtualinvoke $r1.<java.lang.reflect.Method: int getModifiers()>();

        return $i0;
    }

    public java.lang.String getName()
    {
        org.junit.runners.model.FrameworkMethod r0;
        java.lang.reflect.Method $r1;
        java.lang.String $r2;

        r0 := @this: org.junit.runners.model.FrameworkMethod;

        $r1 = r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.String getName()>();

        return $r2;
    }

    public java.lang.Class getReturnType()
    {
        org.junit.runners.model.FrameworkMethod r0;
        java.lang.reflect.Method $r1;
        java.lang.Class $r2;

        r0 := @this: org.junit.runners.model.FrameworkMethod;

        $r1 = r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        return $r2;
    }

    public java.lang.Class getType()
    {
        org.junit.runners.model.FrameworkMethod r0;
        java.lang.Class $r1;

        r0 := @this: org.junit.runners.model.FrameworkMethod;

        $r1 = virtualinvoke r0.<org.junit.runners.model.FrameworkMethod: java.lang.Class getReturnType()>();

        return $r1;
    }

    public int hashCode()
    {
        org.junit.runners.model.FrameworkMethod r0;
        java.lang.reflect.Method $r1;
        int $i0;

        r0 := @this: org.junit.runners.model.FrameworkMethod;

        $r1 = r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $i0 = virtualinvoke $r1.<java.lang.reflect.Method: int hashCode()>();

        return $i0;
    }

    public transient java.lang.Object invokeExplosively(java.lang.Object, java.lang.Object[]) throws java.lang.Throwable
    {
        org.junit.runners.model.FrameworkMethod r0;
        java.lang.Object r1, $r4;
        java.lang.Object[] r2;
        org.junit.runners.model.FrameworkMethod$1 $r3;

        r0 := @this: org.junit.runners.model.FrameworkMethod;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object[];

        $r3 = new org.junit.runners.model.FrameworkMethod$1;

        specialinvoke $r3.<org.junit.runners.model.FrameworkMethod$1: void <init>(org.junit.runners.model.FrameworkMethod,java.lang.Object,java.lang.Object[])>(r0, r1, r2);

        $r4 = virtualinvoke $r3.<org.junit.runners.model.FrameworkMethod$1: java.lang.Object run()>();

        return $r4;
    }

    public volatile boolean isShadowedBy(org.junit.runners.model.FrameworkMember)
    {
        org.junit.runners.model.FrameworkMethod r0, $r2;
        org.junit.runners.model.FrameworkMember r1;
        boolean $z0;

        r0 := @this: org.junit.runners.model.FrameworkMethod;

        r1 := @parameter0: org.junit.runners.model.FrameworkMember;

        $r2 = (org.junit.runners.model.FrameworkMethod) r1;

        $z0 = virtualinvoke r0.<org.junit.runners.model.FrameworkMethod: boolean isShadowedBy(org.junit.runners.model.FrameworkMethod)>($r2);

        return $z0;
    }

    public boolean isShadowedBy(org.junit.runners.model.FrameworkMethod)
    {
        org.junit.runners.model.FrameworkMethod r0, r1;
        java.lang.String $r2, $r3;
        boolean $z0, $z1;
        java.lang.Class[] $r4, $r5, $r6, $r7, $r9;
        int $i0, $i1, $i2, i3;
        java.lang.Class $r8, $r10;

        r0 := @this: org.junit.runners.model.FrameworkMethod;

        r1 := @parameter0: org.junit.runners.model.FrameworkMethod;

        $r2 = virtualinvoke r1.<org.junit.runners.model.FrameworkMethod: java.lang.String getName()>();

        $r3 = virtualinvoke r0.<org.junit.runners.model.FrameworkMethod: java.lang.String getName()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r4 = specialinvoke r1.<org.junit.runners.model.FrameworkMethod: java.lang.Class[] getParameterTypes()>();

        $i0 = lengthof $r4;

        $r5 = specialinvoke r0.<org.junit.runners.model.FrameworkMethod: java.lang.Class[] getParameterTypes()>();

        $i1 = lengthof $r5;

        if $i0 == $i1 goto label2;

        return 0;

     label2:
        i3 = 0;

     label3:
        $r6 = specialinvoke r1.<org.junit.runners.model.FrameworkMethod: java.lang.Class[] getParameterTypes()>();

        $i2 = lengthof $r6;

        if i3 >= $i2 goto label5;

        $r7 = specialinvoke r1.<org.junit.runners.model.FrameworkMethod: java.lang.Class[] getParameterTypes()>();

        $r8 = $r7[i3];

        $r9 = specialinvoke r0.<org.junit.runners.model.FrameworkMethod: java.lang.Class[] getParameterTypes()>();

        $r10 = $r9[i3];

        $z1 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>($r10);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        i3 = i3 + 1;

        goto label3;

     label5:
        return 1;
    }

    public boolean producesType(java.lang.reflect.Type)
    {
        org.junit.runners.model.FrameworkMethod r0;
        java.lang.reflect.Type r1;
        java.lang.Class[] $r2;
        int $i0;
        boolean $z0, $z1, z2;
        java.lang.reflect.Method $r3;
        java.lang.Class $r4, $r5;

        r0 := @this: org.junit.runners.model.FrameworkMethod;

        r1 := @parameter0: java.lang.reflect.Type;

        $r2 = specialinvoke r0.<org.junit.runners.model.FrameworkMethod: java.lang.Class[] getParameterTypes()>();

        $i0 = lengthof $r2;

        if $i0 != 0 goto label1;

        $z0 = r1 instanceof java.lang.Class;

        if $z0 == 0 goto label1;

        $r4 = (java.lang.Class) r1;

        $r3 = r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $r5 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $z1 = virtualinvoke $r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r5);

        if $z1 == 0 goto label1;

        z2 = 1;

        goto label2;

     label1:
        z2 = 0;

     label2:
        return z2;
    }

    public java.lang.String toString()
    {
        org.junit.runners.model.FrameworkMethod r0;
        java.lang.reflect.Method $r1;
        java.lang.String $r2;

        r0 := @this: org.junit.runners.model.FrameworkMethod;

        $r1 = r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.String toString()>();

        return $r2;
    }

    public void validateNoTypeParametersOnArgs(java.util.List)
    {
        org.junit.runners.model.FrameworkMethod r0;
        java.util.List r1;
        org.junit.runners.model.NoGenericTypeParametersValidator $r2;
        java.lang.reflect.Method $r3;

        r0 := @this: org.junit.runners.model.FrameworkMethod;

        r1 := @parameter0: java.util.List;

        $r2 = new org.junit.runners.model.NoGenericTypeParametersValidator;

        $r3 = r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        specialinvoke $r2.<org.junit.runners.model.NoGenericTypeParametersValidator: void <init>(java.lang.reflect.Method)>($r3);

        virtualinvoke $r2.<org.junit.runners.model.NoGenericTypeParametersValidator: void validate(java.util.List)>(r1);

        return;
    }

    public void validatePublicVoid(boolean, java.util.List)
    {
        org.junit.runners.model.FrameworkMethod r0;
        boolean z0, $z1, $z5;
        java.util.List r1;
        java.lang.reflect.Method $r3, $r8, $r16, $r24;
        java.lang.Class $r4, $r5;
        java.lang.StringBuilder $r6, $r14, $r22;
        java.lang.String $r9, $r13, $r17, $r21, $r25, $r31, r32;
        java.lang.Exception $r12, $r20, $r30;

        r0 := @this: org.junit.runners.model.FrameworkMethod;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.util.List;

        $z1 = virtualinvoke r0.<org.junit.runners.model.FrameworkMethod: boolean isStatic()>();

        if $z1 == z0 goto label3;

        if z0 == 0 goto label1;

        r32 = "should";

        goto label2;

     label1:
        r32 = "should not";

     label2:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Method ");

        $r24 = r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $r25 = virtualinvoke $r24.<java.lang.reflect.Method: java.lang.String getName()>();

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("() ");

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32);

        virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" be static");

        $r30 = new java.lang.Exception;

        $r31 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<java.lang.Exception: void <init>(java.lang.String)>($r31);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r30);

     label3:
        $z5 = virtualinvoke r0.<org.junit.runners.model.FrameworkMethod: boolean isPublic()>();

        if $z5 != 0 goto label4;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Method ");

        $r16 = r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $r17 = virtualinvoke $r16.<java.lang.reflect.Method: java.lang.String getName()>();

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("() should be public");

        $r20 = new java.lang.Exception;

        $r21 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.Exception: void <init>(java.lang.String)>($r21);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r20);

     label4:
        $r3 = r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r5 = <java.lang.Void: java.lang.Class TYPE>;

        if $r4 == $r5 goto label5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Method ");

        $r8 = r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $r9 = virtualinvoke $r8.<java.lang.reflect.Method: java.lang.String getName()>();

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("() should be void");

        $r12 = new java.lang.Exception;

        $r13 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.Exception: void <init>(java.lang.String)>($r13);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r12);

     label5:
        return;
    }

    public void validatePublicVoidNoArg(boolean, java.util.List)
    {
        org.junit.runners.model.FrameworkMethod r0;
        boolean z0;
        java.util.List r1;
        java.lang.reflect.Method $r3, $r7;
        java.lang.Class[] $r4;
        int $i0;
        java.lang.StringBuilder $r5;
        java.lang.String $r8, $r12;
        java.lang.Exception $r11;

        r0 := @this: org.junit.runners.model.FrameworkMethod;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.util.List;

        virtualinvoke r0.<org.junit.runners.model.FrameworkMethod: void validatePublicVoid(boolean,java.util.List)>(z0, r1);

        $r3 = r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i0 = lengthof $r4;

        if $i0 == 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Method ");

        $r7 = r0.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method method>;

        $r8 = virtualinvoke $r7.<java.lang.reflect.Method: java.lang.String getName()>();

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should have no parameters");

        $r11 = new java.lang.Exception;

        $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.Exception: void <init>(java.lang.String)>($r12);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r11);

     label1:
        return;
    }
}
