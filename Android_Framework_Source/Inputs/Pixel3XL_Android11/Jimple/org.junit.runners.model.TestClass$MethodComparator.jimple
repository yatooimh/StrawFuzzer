class org.junit.runners.model.TestClass$MethodComparator extends java.lang.Object implements java.util.Comparator
{

    private void <init>()
    {
        org.junit.runners.model.TestClass$MethodComparator r0;

        r0 := @this: org.junit.runners.model.TestClass$MethodComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(org.junit.runners.model.TestClass$1)
    {
        org.junit.runners.model.TestClass$MethodComparator r0;
        org.junit.runners.model.TestClass$1 r1;

        r0 := @this: org.junit.runners.model.TestClass$MethodComparator;

        r1 := @parameter0: org.junit.runners.model.TestClass$1;

        specialinvoke r0.<org.junit.runners.model.TestClass$MethodComparator: void <init>()>();

        return;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        org.junit.runners.model.TestClass$MethodComparator r0;
        java.lang.Object r1, r2;
        org.junit.runners.model.FrameworkMethod $r3, $r4;
        int $i0;

        r0 := @this: org.junit.runners.model.TestClass$MethodComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.junit.runners.model.FrameworkMethod) r1;

        $r3 = (org.junit.runners.model.FrameworkMethod) r2;

        $i0 = virtualinvoke r0.<org.junit.runners.model.TestClass$MethodComparator: int compare(org.junit.runners.model.FrameworkMethod,org.junit.runners.model.FrameworkMethod)>($r4, $r3);

        return $i0;
    }

    public int compare(org.junit.runners.model.FrameworkMethod, org.junit.runners.model.FrameworkMethod)
    {
        org.junit.runners.model.TestClass$MethodComparator r0;
        org.junit.runners.model.FrameworkMethod r1, r2;
        java.util.Comparator $r3;
        java.lang.reflect.Method $r4, $r5;
        int $i0;

        r0 := @this: org.junit.runners.model.TestClass$MethodComparator;

        r1 := @parameter0: org.junit.runners.model.FrameworkMethod;

        r2 := @parameter1: org.junit.runners.model.FrameworkMethod;

        $r3 = <org.junit.internal.MethodSorter: java.util.Comparator NAME_ASCENDING>;

        $r4 = virtualinvoke r1.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method getMethod()>();

        $r5 = virtualinvoke r2.<org.junit.runners.model.FrameworkMethod: java.lang.reflect.Method getMethod()>();

        $i0 = interfaceinvoke $r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r4, $r5);

        return $i0;
    }
}
