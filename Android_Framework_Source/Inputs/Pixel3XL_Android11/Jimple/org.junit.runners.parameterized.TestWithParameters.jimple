public class org.junit.runners.parameterized.TestWithParameters extends java.lang.Object
{
    private final java.lang.String name;
    private final java.util.List parameters;
    private final org.junit.runners.model.TestClass testClass;

    public void <init>(java.lang.String, org.junit.runners.model.TestClass, java.util.List)
    {
        org.junit.runners.parameterized.TestWithParameters r0;
        java.lang.String r1;
        org.junit.runners.model.TestClass r2;
        java.util.List r3, $r5;
        java.util.ArrayList $r4;

        r0 := @this: org.junit.runners.parameterized.TestWithParameters;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.junit.runners.model.TestClass;

        r3 := @parameter2: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.junit.runners.parameterized.TestWithParameters: void notNull(java.lang.Object,java.lang.String)>(r1, "The name is missing.");

        staticinvoke <org.junit.runners.parameterized.TestWithParameters: void notNull(java.lang.Object,java.lang.String)>(r2, "The test class is missing.");

        staticinvoke <org.junit.runners.parameterized.TestWithParameters: void notNull(java.lang.Object,java.lang.String)>(r3, "The parameters are missing.");

        r0.<org.junit.runners.parameterized.TestWithParameters: java.lang.String name> = r1;

        r0.<org.junit.runners.parameterized.TestWithParameters: org.junit.runners.model.TestClass testClass> = r2;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>(r3);

        $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4);

        r0.<org.junit.runners.parameterized.TestWithParameters: java.util.List parameters> = $r5;

        return;
    }

    private static void notNull(java.lang.Object, java.lang.String)
    {
        java.lang.Object r0;
        java.lang.String r1;
        java.lang.NullPointerException $r2;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        return;

     label1:
        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>(r1);

        throw $r2;
    }

    public boolean equals(java.lang.Object)
    {
        org.junit.runners.parameterized.TestWithParameters r0, r10;
        java.lang.Class $r1, $r2;
        java.lang.String $r3, $r4;
        boolean $z0, $z1, $z2, z3;
        java.util.List $r5, $r6;
        org.junit.runners.model.TestClass $r7, $r8;
        java.lang.Object r9;

        r0 := @this: org.junit.runners.parameterized.TestWithParameters;

        r9 := @parameter0: java.lang.Object;

        z3 = 1;

        if r0 != r9 goto label1;

        return 1;

     label1:
        if r9 != null goto label2;

        return 0;

     label2:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke r9.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == $r2 goto label3;

        return 0;

     label3:
        r10 = (org.junit.runners.parameterized.TestWithParameters) r9;

        $r4 = r0.<org.junit.runners.parameterized.TestWithParameters: java.lang.String name>;

        $r3 = r10.<org.junit.runners.parameterized.TestWithParameters: java.lang.String name>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label4;

        $r6 = r0.<org.junit.runners.parameterized.TestWithParameters: java.util.List parameters>;

        $r5 = r10.<org.junit.runners.parameterized.TestWithParameters: java.util.List parameters>;

        $z1 = interfaceinvoke $r6.<java.util.List: boolean equals(java.lang.Object)>($r5);

        if $z1 == 0 goto label4;

        $r8 = r0.<org.junit.runners.parameterized.TestWithParameters: org.junit.runners.model.TestClass testClass>;

        $r7 = r10.<org.junit.runners.parameterized.TestWithParameters: org.junit.runners.model.TestClass testClass>;

        $z2 = virtualinvoke $r8.<org.junit.runners.model.TestClass: boolean equals(java.lang.Object)>($r7);

        if $z2 == 0 goto label4;

        goto label5;

     label4:
        z3 = 0;

     label5:
        return z3;
    }

    public java.lang.String getName()
    {
        org.junit.runners.parameterized.TestWithParameters r0;
        java.lang.String $r1;

        r0 := @this: org.junit.runners.parameterized.TestWithParameters;

        $r1 = r0.<org.junit.runners.parameterized.TestWithParameters: java.lang.String name>;

        return $r1;
    }

    public java.util.List getParameters()
    {
        org.junit.runners.parameterized.TestWithParameters r0;
        java.util.List $r1;

        r0 := @this: org.junit.runners.parameterized.TestWithParameters;

        $r1 = r0.<org.junit.runners.parameterized.TestWithParameters: java.util.List parameters>;

        return $r1;
    }

    public org.junit.runners.model.TestClass getTestClass()
    {
        org.junit.runners.parameterized.TestWithParameters r0;
        org.junit.runners.model.TestClass $r1;

        r0 := @this: org.junit.runners.parameterized.TestWithParameters;

        $r1 = r0.<org.junit.runners.parameterized.TestWithParameters: org.junit.runners.model.TestClass testClass>;

        return $r1;
    }

    public int hashCode()
    {
        org.junit.runners.parameterized.TestWithParameters r0;
        java.lang.String $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        org.junit.runners.model.TestClass $r2;
        java.util.List $r3;

        r0 := @this: org.junit.runners.parameterized.TestWithParameters;

        $r1 = r0.<org.junit.runners.parameterized.TestWithParameters: java.lang.String name>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $i1 = $i0 + 14747;

        $i2 = 14747 * $i1;

        $r2 = r0.<org.junit.runners.parameterized.TestWithParameters: org.junit.runners.model.TestClass testClass>;

        $i3 = virtualinvoke $r2.<org.junit.runners.model.TestClass: int hashCode()>();

        $i4 = $i2 + $i3;

        $i5 = 14747 * $i4;

        $r3 = r0.<org.junit.runners.parameterized.TestWithParameters: java.util.List parameters>;

        $i6 = interfaceinvoke $r3.<java.util.List: int hashCode()>();

        $i7 = $i5 + $i6;

        return $i7;
    }

    public java.lang.String toString()
    {
        org.junit.runners.parameterized.TestWithParameters r0;
        java.lang.StringBuilder $r2;
        org.junit.runners.model.TestClass $r3;
        java.lang.String $r4, $r7, $r12;
        java.util.List $r10;

        r0 := @this: org.junit.runners.parameterized.TestWithParameters;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<org.junit.runners.parameterized.TestWithParameters: org.junit.runners.model.TestClass testClass>;

        $r4 = virtualinvoke $r3.<org.junit.runners.model.TestClass: java.lang.String getName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \'");

        $r7 = r0.<org.junit.runners.parameterized.TestWithParameters: java.lang.String name>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' with parameters ");

        $r10 = r0.<org.junit.runners.parameterized.TestWithParameters: java.util.List parameters>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }
}
