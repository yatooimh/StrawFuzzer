abstract class org.junit.validator.AnnotationsValidator$AnnotatableValidator extends java.lang.Object
{
    private static final org.junit.validator.AnnotationValidatorFactory ANNOTATION_VALIDATOR_FACTORY;

    static void <clinit>()
    {
        org.junit.validator.AnnotationValidatorFactory $r0;

        $r0 = new org.junit.validator.AnnotationValidatorFactory;

        specialinvoke $r0.<org.junit.validator.AnnotationValidatorFactory: void <init>()>();

        <org.junit.validator.AnnotationsValidator$AnnotatableValidator: org.junit.validator.AnnotationValidatorFactory ANNOTATION_VALIDATOR_FACTORY> = $r0;

        return;
    }

    private void <init>()
    {
        org.junit.validator.AnnotationsValidator$AnnotatableValidator r0;

        r0 := @this: org.junit.validator.AnnotationsValidator$AnnotatableValidator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(org.junit.validator.AnnotationsValidator$1)
    {
        org.junit.validator.AnnotationsValidator$AnnotatableValidator r0;
        org.junit.validator.AnnotationsValidator$1 r1;

        r0 := @this: org.junit.validator.AnnotationsValidator$AnnotatableValidator;

        r1 := @parameter0: org.junit.validator.AnnotationsValidator$1;

        specialinvoke r0.<org.junit.validator.AnnotationsValidator$AnnotatableValidator: void <init>()>();

        return;
    }

    private java.util.List validateAnnotatable(org.junit.runners.model.Annotatable)
    {
        org.junit.validator.AnnotationsValidator$AnnotatableValidator r0;
        org.junit.runners.model.Annotatable r1;
        java.lang.'annotation'.Annotation[] r3;
        int i0, i1;
        java.util.ArrayList $r4;
        java.lang.Class $r5;
        java.lang.'annotation'.Annotation $r6, r10;
        org.junit.validator.AnnotationValidatorFactory $r7;
        org.junit.validator.AnnotationValidator $r8;
        java.util.List $r9;
        org.junit.validator.ValidateWith r11;

        r0 := @this: org.junit.validator.AnnotationsValidator$AnnotatableValidator;

        r1 := @parameter0: org.junit.runners.model.Annotatable;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r3 = interfaceinvoke r1.<org.junit.runners.model.Annotatable: java.lang.'annotation'.Annotation[] getAnnotations()>();

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r10 = r3[i1];

        $r5 = interfaceinvoke r10.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/junit/validator/ValidateWith;");

        r11 = (org.junit.validator.ValidateWith) $r6;

        if r11 == null goto label2;

        $r7 = <org.junit.validator.AnnotationsValidator$AnnotatableValidator: org.junit.validator.AnnotationValidatorFactory ANNOTATION_VALIDATOR_FACTORY>;

        $r8 = virtualinvoke $r7.<org.junit.validator.AnnotationValidatorFactory: org.junit.validator.AnnotationValidator createAnnotationValidator(org.junit.validator.ValidateWith)>(r11);

        $r9 = virtualinvoke r0.<org.junit.validator.AnnotationsValidator$AnnotatableValidator: java.util.List validateAnnotatable(org.junit.validator.AnnotationValidator,org.junit.runners.model.Annotatable)>($r8, r1);

        interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>($r9);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return $r4;
    }

    abstract java.lang.Iterable getAnnotatablesForTestClass(org.junit.runners.model.TestClass);

    abstract java.util.List validateAnnotatable(org.junit.validator.AnnotationValidator, org.junit.runners.model.Annotatable);

    public java.util.List validateTestClass(org.junit.runners.model.TestClass)
    {
        org.junit.validator.AnnotationsValidator$AnnotatableValidator r0;
        java.util.ArrayList $r2;
        java.lang.Iterable $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.junit.runners.model.Annotatable $r5;
        java.util.List $r6;
        org.junit.runners.model.TestClass r7;
        java.util.Iterator r8;

        r0 := @this: org.junit.validator.AnnotationsValidator$AnnotatableValidator;

        r7 := @parameter0: org.junit.runners.model.TestClass;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.junit.validator.AnnotationsValidator$AnnotatableValidator: java.lang.Iterable getAnnotatablesForTestClass(org.junit.runners.model.TestClass)>(r7);

        r8 = interfaceinvoke $r3.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (org.junit.runners.model.Annotatable) $r4;

        $r6 = specialinvoke r0.<org.junit.validator.AnnotationsValidator$AnnotatableValidator: java.util.List validateAnnotatable(org.junit.runners.model.Annotatable)>($r5);

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>($r6);

        goto label1;

     label2:
        return $r2;
    }
}
