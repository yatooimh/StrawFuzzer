public final class org.junit.validator.AnnotationsValidator extends java.lang.Object implements org.junit.validator.TestClassValidator
{
    private static final java.util.List VALIDATORS;

    static void <clinit>()
    {
        org.junit.validator.AnnotationsValidator$AnnotatableValidator[] $r0;
        org.junit.validator.AnnotationsValidator$ClassValidator $r1;
        org.junit.validator.AnnotationsValidator$MethodValidator $r2;
        org.junit.validator.AnnotationsValidator$FieldValidator $r3;
        java.util.List $r4;

        $r0 = newarray (org.junit.validator.AnnotationsValidator$AnnotatableValidator)[3];

        $r1 = new org.junit.validator.AnnotationsValidator$ClassValidator;

        specialinvoke $r1.<org.junit.validator.AnnotationsValidator$ClassValidator: void <init>(org.junit.validator.AnnotationsValidator$1)>(null);

        $r0[0] = $r1;

        $r2 = new org.junit.validator.AnnotationsValidator$MethodValidator;

        specialinvoke $r2.<org.junit.validator.AnnotationsValidator$MethodValidator: void <init>(org.junit.validator.AnnotationsValidator$1)>(null);

        $r0[1] = $r2;

        $r3 = new org.junit.validator.AnnotationsValidator$FieldValidator;

        specialinvoke $r3.<org.junit.validator.AnnotationsValidator$FieldValidator: void <init>(org.junit.validator.AnnotationsValidator$1)>(null);

        $r0[2] = $r3;

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        <org.junit.validator.AnnotationsValidator: java.util.List VALIDATORS> = $r4;

        return;
    }

    public void <init>()
    {
        org.junit.validator.AnnotationsValidator r0;

        r0 := @this: org.junit.validator.AnnotationsValidator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.List validateTestClass(org.junit.runners.model.TestClass)
    {
        org.junit.validator.AnnotationsValidator r0;
        org.junit.runners.model.TestClass r1;
        java.util.Iterator r3;
        org.junit.validator.AnnotationsValidator$AnnotatableValidator r4;
        java.util.ArrayList $r5;
        java.util.List $r6, $r8;
        boolean $z0;
        java.lang.Object $r7;

        r0 := @this: org.junit.validator.AnnotationsValidator;

        r1 := @parameter0: org.junit.runners.model.TestClass;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        $r6 = <org.junit.validator.AnnotationsValidator: java.util.List VALIDATORS>;

        r3 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.junit.validator.AnnotationsValidator$AnnotatableValidator) $r7;

        $r8 = virtualinvoke r4.<org.junit.validator.AnnotationsValidator$AnnotatableValidator: java.util.List validateTestClass(org.junit.runners.model.TestClass)>(r1);

        interfaceinvoke $r5.<java.util.List: boolean addAll(java.util.Collection)>($r8);

        goto label1;

     label2:
        return $r5;
    }
}
