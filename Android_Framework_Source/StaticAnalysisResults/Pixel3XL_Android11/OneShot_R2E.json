{"<android.os.Parcel: android.util.SparseArray readSparseArray(java.lang.ClassLoader)>":["<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetProvider(android.content.ComponentName,android.widget.RemoteViews)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellLocation(android.telephony.CellIdentity)>","<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void partiallyUpdateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: com.android.internal.compat.CompatibilityChangeConfig getAppConfig(android.content.pm.ApplicationInfo)>","<android.net.IConnectivityManager$Stub$Proxy: void startLegacyVpn(com.android.internal.net.VpnProfile)>","<android.app.job.IJobScheduler$Stub$Proxy: int schedule(android.app.job.JobInfo)>","<android.app.INotificationManager$Stub$Proxy: void enqueueNotificationWithTag(java.lang.String,java.lang.String,java.lang.String,int,android.app.Notification,int)>","<android.net.IConnectivityManager$Stub$Proxy: void registerConnectivityDiagnosticsCallback(android.net.IConnectivityDiagnosticsCallback,android.net.NetworkRequest,java.lang.String)>","<android.app.IActivityTaskManager$Stub$Proxy: boolean updateConfiguration(android.content.res.Configuration)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyPhoneCapabilityChanged(android.telephony.PhoneCapability)>","<android.app.IActivityManager$Stub$Proxy: void unbindBackupAgent(android.content.pm.ApplicationInfo)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkRequest listenForNetwork(android.net.NetworkCapabilities,android.os.Messenger,android.os.IBinder,java.lang.String)>","<android.net.IConnectivityManager$Stub$Proxy: void declareNetworkRequestUnfulfillable(android.net.NetworkRequest)>","<android.os.IVibratorService$Stub$Proxy: boolean setAlwaysOnEffect(int,java.lang.String,int,android.os.VibrationEffect,android.os.VibrationAttributes)>","<android.app.IActivityManager$Stub$Proxy: boolean updateConfiguration(android.content.res.Configuration)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: void reportChange(long,android.content.pm.ApplicationInfo)>","<android.net.IConnectivityManager$Stub$Proxy: boolean provisionVpnProfile(com.android.internal.net.VpnProfile,java.lang.String)>","<android.app.IActivityTaskManager$Stub$Proxy: void activityIdle(android.os.IBinder,android.content.res.Configuration,boolean)>","<android.content.pm.IShortcutService$Stub$Proxy: void disableShortcuts(java.lang.String,java.util.List,java.lang.CharSequence,int,int)>","<android.content.pm.IShortcutService$Stub$Proxy: void enableShortcuts(java.lang.String,java.util.List,int)>","<android.content.pm.IShortcutService$Stub$Proxy: void removeLongLivedShortcuts(java.lang.String,java.util.List,int)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkRequest pendingRequestForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent,java.lang.String)>","<com.android.internal.telephony.IMms$Stub$Proxy: boolean updateStoredMessageStatus(java.lang.String,android.net.Uri,android.content.ContentValues)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.Network registerNetworkAgent(android.os.Messenger,android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,int,android.net.NetworkAgentConfig,int)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyServiceStateForPhoneId(int,int,android.telephony.ServiceState)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: int addOverrideApn(android.content.ComponentName,android.telephony.data.ApnSetting)>","<android.os.IVibratorService$Stub$Proxy: void vibrate(int,java.lang.String,android.os.VibrationEffect,android.os.VibrationAttributes,java.lang.String,android.os.IBinder)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setPermittedAccessibilityServices(android.content.ComponentName,java.util.List)>","<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent,int)>","<android.net.IConnectivityManager$Stub$Proxy: void pendingListenForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent,java.lang.String)>","<android.app.job.IJobScheduler$Stub$Proxy: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: boolean isChangeEnabled(long,android.content.pm.ApplicationInfo)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setPermittedInputMethods(android.content.ComponentName,java.util.List)>","<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>","<android.view.autofill.IAutoFillManager$Stub$Proxy: void setUserData(android.service.autofill.UserData)>","<android.app.IActivityManager$Stub$Proxy: void updatePersistentConfiguration(android.content.res.Configuration)>","<android.net.IConnectivityManager$Stub$Proxy: void releaseNetworkRequest(android.net.NetworkRequest)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyRegistrationFailed(int,int,android.telephony.CellIdentity,java.lang.String,int,int,int)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellLocationForSubscriber(int,android.telephony.CellIdentity)>","<android.content.pm.IShortcutService$Stub$Proxy: void removeDynamicShortcuts(java.lang.String,java.util.List,int)>","<android.app.job.IJobScheduler$Stub$Proxy: int scheduleAsPackage(android.app.job.JobInfo,java.lang.String,int,java.lang.String)>","<android.view.contentcapture.IContentCaptureManager$Stub$Proxy: void removeData(android.view.contentcapture.DataRemovalRequest)>","<android.app.IActivityTaskManager$Stub$Proxy: int startActivityWithConfig(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle,int)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkRequest requestNetwork(android.net.NetworkCapabilities,android.os.Messenger,int,android.os.IBinder,int,java.lang.String)>","<android.app.IActivityManager$Stub$Proxy: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,int,int)>","<android.accounts.IAccountManager$Stub$Proxy: boolean addAccountExplicitlyWithVisibility(android.accounts.Account,java.lang.String,android.os.Bundle,java.util.Map)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyBarringInfoChanged(int,int,android.telephony.BarringInfo)>"],"<android.os.Parcel: java.lang.String[] createString8Array()>":["<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetProvider(android.content.ComponentName,android.widget.RemoteViews)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyRegistrationFailed(int,int,android.telephony.CellIdentity,java.lang.String,int,int,int)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellLocationForSubscriber(int,android.telephony.CellIdentity)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellLocation(android.telephony.CellIdentity)>","<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void partiallyUpdateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: com.android.internal.compat.CompatibilityChangeConfig getAppConfig(android.content.pm.ApplicationInfo)>","<android.app.IActivityManager$Stub$Proxy: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,int,int)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: void reportChange(long,android.content.pm.ApplicationInfo)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: boolean isChangeEnabled(long,android.content.pm.ApplicationInfo)>","<android.app.INotificationManager$Stub$Proxy: void enqueueNotificationWithTag(java.lang.String,java.lang.String,java.lang.String,int,android.app.Notification,int)>","<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>","<android.app.IActivityManager$Stub$Proxy: void unbindBackupAgent(android.content.pm.ApplicationInfo)>"],"<com.android.server.security.KeyAttestationApplicationIdProviderService: android.security.keymaster.KeyAttestationApplicationId getKeyAttestationApplicationId(int)>":["<android.security.keymaster.IKeyAttestationApplicationIdProvider$Stub$Proxy: android.security.keymaster.KeyAttestationApplicationId getKeyAttestationApplicationId(int)>"],"<android.view.contentcapture.DataRemovalRequest: void <init>(android.os.Parcel)>":["<android.view.contentcapture.IContentCaptureManager$Stub$Proxy: void removeData(android.view.contentcapture.DataRemovalRequest)>"],"<com.android.server.pm.PackageManagerService: java.lang.String[] getNamesForUids(int[])>":["<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] getNamesForUids(int[])>"],"<android.os.Parcel: java.util.List readParcelableList(java.util.List,java.lang.ClassLoader)>":["<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStartWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int,boolean)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiBatchedScanStartedFromSource(android.os.WorkSource,int)>","<android.app.IActivityTaskManager$Stub$Proxy: void setPictureInPictureParams(android.os.IBinder,android.app.PictureInPictureParams)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteGpsChanged(android.os.WorkSource,android.os.WorkSource)>","<android.app.INotificationManager$Stub$Proxy: void updateNotificationChannelGroupFromPrivilegedListener(android.service.notification.INotificationListener,java.lang.String,android.os.UserHandle,android.app.NotificationChannelGroup)>","<android.os.IPowerManager$Stub$Proxy: void updateWakeLockWorkSource(android.os.IBinder,android.os.WorkSource,java.lang.String)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiStopped(android.os.WorkSource)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteFullWifiLockReleasedFromSource(android.os.WorkSource)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteLongPartialWakelockFinishFromSource(java.lang.String,java.lang.String,android.os.WorkSource)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiScanStartedFromSource(android.os.WorkSource)>","<android.companion.ICompanionDeviceManager$Stub$Proxy: void associate(android.companion.AssociationRequest,android.companion.IFindDeviceCallback,java.lang.String)>","<android.app.IActivityManager$Stub$Proxy: void noteAlarmStart(android.content.IIntentSender,android.os.WorkSource,int,java.lang.String)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteFullWifiLockAcquiredFromSource(android.os.WorkSource)>","<android.os.IPowerManager$Stub$Proxy: void acquireWakeLock(android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String)>","<android.content.pm.ILauncherApps$Stub$Proxy: void registerShortcutChangeCallback(java.lang.String,android.content.pm.ShortcutQueryWrapper,android.content.pm.IShortcutChangeCallback)>","<android.service.textclassifier.ITextClassifierService$Stub$Proxy: void onSuggestConversationActions(android.view.textclassifier.TextClassificationSessionId,android.view.textclassifier.ConversationActions$Request,android.service.textclassifier.ITextClassifierCallback)>","<android.companion.ICompanionDeviceManager$Stub$Proxy: void stopScan(android.companion.AssociationRequest,android.companion.IFindDeviceCallback,java.lang.String)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiRunningChanged(android.os.WorkSource,android.os.WorkSource)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStopWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteBleScanStopped(android.os.WorkSource,boolean)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteBleScanStarted(android.os.WorkSource,boolean)>","<android.app.IActivityTaskManager$Stub$Proxy: boolean enterPictureInPictureMode(android.os.IBinder,android.app.PictureInPictureParams)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteBleScanResults(android.os.WorkSource,int)>","<android.app.INotificationManager$Stub$Proxy: void updateNotificationChannelGroupForPackage(java.lang.String,int,android.app.NotificationChannelGroup)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteLongPartialWakelockStartFromSource(java.lang.String,java.lang.String,android.os.WorkSource)>","<android.app.IAlarmManager$Stub$Proxy: void set(java.lang.String,int,long,long,long,int,android.app.PendingIntent,android.app.IAlarmListener,java.lang.String,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiRunning(android.os.WorkSource)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiScanStoppedFromSource(android.os.WorkSource)>","<android.content.pm.ILauncherApps$Stub$Proxy: android.content.pm.ParceledListSlice getShortcuts(java.lang.String,android.content.pm.ShortcutQueryWrapper,android.os.UserHandle)>","<android.app.IActivityManager$Stub$Proxy: void noteWakeupAlarm(android.content.IIntentSender,android.os.WorkSource,int,java.lang.String,java.lang.String)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiBatchedScanStoppedFromSource(android.os.WorkSource)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteChangeWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int,android.os.WorkSource,int,java.lang.String,java.lang.String,int,boolean)>","<android.app.IActivityManager$Stub$Proxy: void noteAlarmFinish(android.content.IIntentSender,android.os.WorkSource,int,java.lang.String)>"],"<android.os.Parcel: java.lang.String[] createString16Array()>":["<android.media.IAudioService$Stub$Proxy: int getMinVolumeIndexForAttributes(android.media.AudioAttributes)>","<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetProvider(android.content.ComponentName,android.widget.RemoteViews)>","<android.app.IActivityManager$Stub$Proxy: void updateLockTaskPackages(int,java.lang.String[])>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiBatchedScanStartedFromSource(android.os.WorkSource,int)>","<android.app.backup.IBackupManager$Stub$Proxy: void fullTransportBackupForUser(int,java.lang.String[])>","<android.app.INotificationManager$Stub$Proxy: void setNotificationsShownFromListener(android.service.notification.INotificationListener,java.lang.String[])>","<android.app.slice.ISliceManager$Stub$Proxy: int checkSlicePermission(android.net.Uri,java.lang.String,java.lang.String,int,int,java.lang.String[])>","<android.os.INetworkManagementService$Stub$Proxy: void startTethering(java.lang.String[])>","<android.accounts.IAccountManager$Stub$Proxy: void addAccount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>","<android.app.IActivityManager$Stub$Proxy: void unbindBackupAgent(android.content.pm.ApplicationInfo)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteLongPartialWakelockFinishFromSource(java.lang.String,java.lang.String,android.os.WorkSource)>","<android.media.IAudioService$Stub$Proxy: int requestAudioFocus(android.media.AudioAttributes,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String,int,android.media.audiopolicy.IAudioPolicyCallback,int)>","<android.nfc.INfcAdapter$Stub$Proxy: void setForegroundDispatch(android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel)>","<android.app.usage.IUsageStatsManager$Stub$Proxy: void registerUsageSessionObserver(int,java.lang.String[],long,long,android.app.PendingIntent,android.app.PendingIntent,java.lang.String)>","<android.media.IAudioService$Stub$Proxy: void playerAttributes(int,android.media.AudioAttributes)>","<android.app.IActivityTaskManager$Stub$Proxy: int startActivities(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle,int)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteFullWifiLockAcquiredFromSource(android.os.WorkSource)>","<android.os.IPowerManager$Stub$Proxy: void acquireWakeLock(android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String)>","<android.permission.IPermissionManager$Stub$Proxy: void revokeDefaultPermissionsFromLuiApps(java.lang.String[],int)>","<android.app.IActivityManager$Stub$Proxy: boolean updateConfiguration(android.content.res.Configuration)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: void reportChange(long,android.content.pm.ApplicationInfo)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStopWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int)>","<android.net.IConnectivityManager$Stub$Proxy: boolean provisionVpnProfile(com.android.internal.net.VpnProfile,java.lang.String)>","<android.accounts.IAccountManager$Stub$Proxy: void hasFeatures(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[],java.lang.String)>","<android.app.IActivityTaskManager$Stub$Proxy: void activityIdle(android.os.IBinder,android.content.res.Configuration,boolean)>","<android.os.INetworkManagementService$Stub$Proxy: void setDnsForwarders(android.net.Network,java.lang.String[])>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteBleScanStopped(android.os.WorkSource,boolean)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteBleScanStarted(android.os.WorkSource,boolean)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkRequest pendingRequestForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent,java.lang.String)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setPermittedAccessibilityServices(android.content.ComponentName,java.util.List)>","<android.net.IConnectivityManager$Stub$Proxy: void pendingListenForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent,java.lang.String)>","<com.android.internal.view.IInputMethodManager$Stub$Proxy: com.android.internal.view.InputBindResult startInputOrWindowGainedFocus(int,com.android.internal.view.IInputMethodClient,android.os.IBinder,int,int,int,android.view.inputmethod.EditorInfo,com.android.internal.view.IInputContext,int,int)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setPermittedInputMethods(android.content.ComponentName,java.util.List)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiRunning(android.os.WorkSource)>","<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>","<android.media.IAudioService$Stub$Proxy: int setUidDeviceAffinity(android.media.audiopolicy.IAudioPolicyCallback,int,int[],java.lang.String[])>","<android.view.autofill.IAutoFillManager$Stub$Proxy: void setUserData(android.service.autofill.UserData)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiBatchedScanStoppedFromSource(android.os.WorkSource)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteChangeWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int,android.os.WorkSource,int,java.lang.String,java.lang.String,int,boolean)>","<android.view.contentcapture.IContentCaptureManager$Stub$Proxy: void removeData(android.view.contentcapture.DataRemovalRequest)>","<android.app.IActivityTaskManager$Stub$Proxy: int startActivityWithConfig(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle,int)>","<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])>","<android.app.INotificationManager$Stub$Proxy: void cancelNotificationsFromListener(android.service.notification.INotificationListener,java.lang.String[])>","<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void registerUiTestAutomationService(android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo,int)>","<android.accounts.IAccountManager$Stub$Proxy: boolean addAccountExplicitlyWithVisibility(android.accounts.Account,java.lang.String,android.os.Bundle,java.util.Map)>","<android.content.pm.ILauncherApps$Stub$Proxy: void startSessionDetailsActivityAsUser(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.pm.PackageInstaller$SessionInfo,android.graphics.Rect,android.os.Bundle,android.os.UserHandle)>","<android.app.IActivityManager$Stub$Proxy: android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)>","<android.content.pm.IPackageManager$Stub$Proxy: void notifyPackagesReplacedReceived(java.lang.String[])>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteGpsChanged(android.os.WorkSource,android.os.WorkSource)>","<android.app.job.IJobScheduler$Stub$Proxy: int schedule(android.app.job.JobInfo)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: com.android.internal.compat.CompatibilityChangeConfig getAppConfig(android.content.pm.ApplicationInfo)>","<android.accounts.IAccountManager$Stub$Proxy: void getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[],java.lang.String)>","<android.app.backup.IBackupManager$Stub$Proxy: java.lang.String[] filterAppsEligibleForBackupForUser(int,java.lang.String[])>","<android.app.INotificationManager$Stub$Proxy: void enqueueNotificationWithTag(java.lang.String,java.lang.String,java.lang.String,int,android.app.Notification,int)>","<android.app.IActivityManager$Stub$Proxy: void startDelegateShellPermissionIdentity(int,java.lang.String[])>","<android.net.IConnectivityManager$Stub$Proxy: void registerConnectivityDiagnosticsCallback(android.net.IConnectivityDiagnosticsCallback,android.net.NetworkRequest,java.lang.String)>","<android.os.IPowerManager$Stub$Proxy: void updateWakeLockWorkSource(android.os.IBinder,android.os.WorkSource,java.lang.String)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyPhoneCapabilityChanged(android.telephony.PhoneCapability)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteFullWifiLockReleasedFromSource(android.os.WorkSource)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiScanStartedFromSource(android.os.WorkSource)>","<android.app.IActivityManager$Stub$Proxy: int broadcastIntentWithFeature(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int)>","<android.media.IAudioService$Stub$Proxy: void setFocusRequestResultFromExtPolicy(android.media.AudioFocusInfo,int,android.media.audiopolicy.IAudioPolicyCallback)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setRecommendedGlobalProxy(android.content.ComponentName,android.net.ProxyInfo)>","<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] setPackagesSuspendedAsUser(java.lang.String[],boolean,android.os.PersistableBundle,android.os.PersistableBundle,android.content.pm.SuspendDialogInfo,java.lang.String,int)>","<android.accounts.IAccountManager$Stub$Proxy: void getAccountByTypeAndFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[],java.lang.String)>","<android.os.IVibratorService$Stub$Proxy: boolean setAlwaysOnEffect(int,java.lang.String,int,android.os.VibrationEffect,android.os.VibrationAttributes)>","<android.app.IActivityManager$Stub$Proxy: void handleApplicationStrictModeViolation(android.os.IBinder,int,android.os.StrictMode$ViolationInfo)>","<android.net.INetworkPolicyManager$Stub$Proxy: void snoozeLimit(android.net.NetworkTemplate)>","<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])>","<android.permission.IPermissionManager$Stub$Proxy: void grantDefaultPermissionsToEnabledTelephonyDataServices(java.lang.String[],int)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.Network registerNetworkAgent(android.os.Messenger,android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,int,android.net.NetworkAgentConfig,int)>","<android.app.job.IJobScheduler$Stub$Proxy: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: boolean isChangeEnabled(long,android.content.pm.ApplicationInfo)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiScanStoppedFromSource(android.os.WorkSource)>","<android.media.IAudioService$Stub$Proxy: int trackPlayer(android.media.PlayerBase$PlayerIdCard)>","<android.app.IActivityManager$Stub$Proxy: void updatePersistentConfiguration(android.content.res.Configuration)>","<android.net.IConnectivityManager$Stub$Proxy: void releaseNetworkRequest(android.net.NetworkRequest)>","<android.app.job.IJobScheduler$Stub$Proxy: int scheduleAsPackage(android.app.job.JobInfo,java.lang.String,int,java.lang.String)>","<android.app.IActivityManager$Stub$Proxy: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,int,int)>","<android.accounts.IAccountManager$Stub$Proxy: void startAddAccountSession(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>","<android.app.IActivityManager$Stub$Proxy: void noteAlarmFinish(android.content.IIntentSender,android.os.WorkSource,int,java.lang.String)>","<android.app.INotificationManager$Stub$Proxy: void updateNotificationChannelFromPrivilegedListener(android.service.notification.INotificationListener,java.lang.String,android.os.UserHandle,android.app.NotificationChannel)>","<android.os.INetworkManagementService$Stub$Proxy: void startTetheringWithConfiguration(boolean,java.lang.String[])>","<android.accounts.IAccountManager$Stub$Proxy: void addAccountAsUser(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle,int)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyBarringInfoChanged(int,int,android.telephony.BarringInfo)>","<android.media.IAudioService$Stub$Proxy: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String,android.media.AudioAttributes,java.lang.String)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellLocation(android.telephony.CellIdentity)>","<android.media.midi.IMidiManager$Stub$Proxy: void openDevice(android.os.IBinder,android.media.midi.MidiDeviceInfo,android.media.midi.IMidiDeviceOpenCallback)>","<android.app.usage.IUsageStatsManager$Stub$Proxy: void reportChooserSelection(java.lang.String,int,java.lang.String,java.lang.String[],java.lang.String)>","<android.media.IAudioService$Stub$Proxy: java.util.List getDevicesForAttributes(android.media.AudioAttributes)>","<android.app.INotificationManager$Stub$Proxy: void createConversationNotificationChannelForPackage(java.lang.String,int,java.lang.String,android.app.NotificationChannel,java.lang.String)>","<android.permission.IPermissionManager$Stub$Proxy: void grantDefaultPermissionsToEnabledImsServices(java.lang.String[],int)>","<android.app.IActivityTaskManager$Stub$Proxy: boolean updateConfiguration(android.content.res.Configuration)>","<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice getPackagesHoldingPermissions(java.lang.String[],int,int)>","<android.net.IConnectivityManager$Stub$Proxy: void declareNetworkRequestUnfulfillable(android.net.NetworkRequest)>","<android.app.IActivityManager$Stub$Proxy: void noteAlarmStart(android.content.IIntentSender,android.os.WorkSource,int,java.lang.String)>","<android.net.IConnectivityManager$Stub$Proxy: void setGlobalProxy(android.net.ProxyInfo)>","<android.hardware.usb.IUsbManager$Stub$Proxy: void removeDevicePackagesFromPreferenceDenied(android.hardware.usb.UsbDevice,java.lang.String[],android.os.UserHandle)>","<android.app.usage.IUsageStatsManager$Stub$Proxy: void registerAppUsageLimitObserver(int,java.lang.String[],long,long,android.app.PendingIntent,java.lang.String)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiRunningChanged(android.os.WorkSource,android.os.WorkSource)>","<android.accounts.IAccountManager$Stub$Proxy: void unregisterAccountListener(java.lang.String[],java.lang.String)>","<android.media.midi.IMidiManager$Stub$Proxy: android.media.midi.MidiDeviceInfo registerDeviceServer(android.media.midi.IMidiDeviceServer,int,int,java.lang.String[],java.lang.String[],android.os.Bundle,int)>","<android.media.IAudioService$Stub$Proxy: int getVolumeIndexForAttributes(android.media.AudioAttributes)>","<android.content.pm.IShortcutService$Stub$Proxy: void enableShortcuts(java.lang.String,java.util.List,int)>","<android.content.pm.IShortcutService$Stub$Proxy: void removeLongLivedShortcuts(java.lang.String,java.util.List,int)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyServiceStateForPhoneId(int,int,android.telephony.ServiceState)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: int addOverrideApn(android.content.ComponentName,android.telephony.data.ApnSetting)>","<android.os.IVibratorService$Stub$Proxy: void vibrate(int,java.lang.String,android.os.VibrationEffect,android.os.VibrationAttributes,java.lang.String,android.os.IBinder)>","<android.permission.IPermissionManager$Stub$Proxy: void grantDefaultPermissionsToEnabledCarrierApps(java.lang.String[],int)>","<android.app.IActivityTaskManager$Stub$Proxy: void updateLockTaskPackages(int,java.lang.String[])>","<android.app.INotificationManager$Stub$Proxy: android.content.pm.ParceledListSlice getActiveNotificationsFromListener(android.service.notification.INotificationListener,java.lang.String[],int)>","<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent,int)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteLongPartialWakelockStartFromSource(java.lang.String,java.lang.String,android.os.WorkSource)>","<com.android.internal.app.IAppOpsService$Stub$Proxy: void setUserRestriction(int,boolean,android.os.IBinder,int,java.lang.String[])>","<android.media.IAudioService$Stub$Proxy: void setVolumeIndexForAttributes(android.media.AudioAttributes,int,int,java.lang.String)>","<android.os.IUserManager$Stub$Proxy: android.content.pm.UserInfo createProfileForUserWithThrow(java.lang.String,java.lang.String,int,int,java.lang.String[])>","<android.content.pm.IPackageManagerNative$Stub$Proxy: boolean[] isAudioPlaybackCaptureAllowed(java.lang.String[])>","<android.media.midi.IMidiManager$Stub$Proxy: android.media.midi.MidiDeviceStatus getDeviceStatus(android.media.midi.MidiDeviceInfo)>","<android.permission.IPermissionManager$Stub$Proxy: void revokeDefaultPermissionsFromDisabledTelephonyDataServices(java.lang.String[],int)>","<android.accounts.IAccountManager$Stub$Proxy: void registerAccountListener(java.lang.String[],java.lang.String)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStartWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int,boolean)>","<android.app.backup.IBackupManager$Stub$Proxy: int requestBackupForUser(int,java.lang.String[],android.app.backup.IBackupObserver,android.app.backup.IBackupManagerMonitor,int)>","<android.media.IAudioService$Stub$Proxy: int dispatchFocusChange(android.media.AudioFocusInfo,int,android.media.audiopolicy.IAudioPolicyCallback)>","<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void partiallyUpdateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>","<android.app.backup.IBackupManager$Stub$Proxy: void initializeTransportsForUser(int,java.lang.String[],android.app.backup.IBackupObserver)>","<android.net.IConnectivityManager$Stub$Proxy: void startLegacyVpn(com.android.internal.net.VpnProfile)>","<android.media.IAudioService$Stub$Proxy: int setUserIdDeviceAffinity(android.media.audiopolicy.IAudioPolicyCallback,int,int[],java.lang.String[])>","<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] setDistractingPackageRestrictionsAsUser(java.lang.String[],int,int)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiStopped(android.os.WorkSource)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkRequest listenForNetwork(android.net.NetworkCapabilities,android.os.Messenger,android.os.IBinder,java.lang.String)>","<android.hardware.usb.IUsbManager$Stub$Proxy: void addDevicePackagesToPreferenceDenied(android.hardware.usb.UsbDevice,java.lang.String[],android.os.UserHandle)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setLockTaskPackages(android.content.ComponentName,java.lang.String[])>","<com.android.internal.app.IAppOpsService$Stub$Proxy: void setAudioRestriction(int,int,int,int,java.lang.String[])>","<android.app.IActivityManager$Stub$Proxy: android.content.IIntentSender getIntentSenderWithFeature(int,java.lang.String,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)>","<android.media.IAudioService$Stub$Proxy: int getFocusRampTimeMs(int,android.media.AudioAttributes)>","<android.hardware.usb.IUsbManager$Stub$Proxy: void removeAccessoryPackagesFromPreferenceDenied(android.hardware.usb.UsbAccessory,java.lang.String[],android.os.UserHandle)>","<android.app.IActivityManager$Stub$Proxy: int broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int)>","<android.hardware.usb.IUsbManager$Stub$Proxy: void addAccessoryPackagesToPreferenceDenied(android.hardware.usb.UsbAccessory,java.lang.String[],android.os.UserHandle)>","<android.os.IUserManager$Stub$Proxy: android.content.pm.UserInfo createProfileForUserEvenWhenDisallowedWithThrow(java.lang.String,java.lang.String,int,int,java.lang.String[])>","<android.content.pm.IShortcutService$Stub$Proxy: void disableShortcuts(java.lang.String,java.util.List,java.lang.CharSequence,int,int)>","<com.android.internal.telephony.IMms$Stub$Proxy: boolean updateStoredMessageStatus(java.lang.String,android.net.Uri,android.content.ContentValues)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteBleScanResults(android.os.WorkSource,int)>","<android.net.INetworkStatsService$Stub$Proxy: android.net.NetworkStats getDetailedUidStats(java.lang.String[])>","<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] getUnsuspendablePackagesForUser(java.lang.String[],int)>","<android.app.IAlarmManager$Stub$Proxy: void set(java.lang.String,int,long,long,long,int,android.app.PendingIntent,android.app.IAlarmListener,java.lang.String,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo)>","<android.app.IActivityManager$Stub$Proxy: void noteWakeupAlarm(android.content.IIntentSender,android.os.WorkSource,int,java.lang.String,java.lang.String)>","<android.service.textclassifier.ITextClassifierService$Stub$Proxy: void onTextClassifierEvent(android.view.textclassifier.TextClassificationSessionId,android.view.textclassifier.TextClassifierEvent)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyRegistrationFailed(int,int,android.telephony.CellIdentity,java.lang.String,int,int,int)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellLocationForSubscriber(int,android.telephony.CellIdentity)>","<android.media.IAudioService$Stub$Proxy: int getMaxVolumeIndexForAttributes(android.media.AudioAttributes)>","<android.app.INotificationManager$Stub$Proxy: void updateNotificationChannelForPackage(java.lang.String,int,android.app.NotificationChannel)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: void uninstallCaCerts(android.content.ComponentName,java.lang.String,java.lang.String[])>","<android.content.pm.IShortcutService$Stub$Proxy: void removeDynamicShortcuts(java.lang.String,java.util.List,int)>","<android.app.usage.IUsageStatsManager$Stub$Proxy: void registerAppUsageObserver(int,java.lang.String[],long,android.app.PendingIntent,java.lang.String)>","<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],java.lang.String[],android.content.Intent,java.lang.String,int,int)>","<android.app.backup.IBackupManager$Stub$Proxy: int requestBackup(java.lang.String[],android.app.backup.IBackupObserver,android.app.backup.IBackupManagerMonitor,int)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkRequest requestNetwork(android.net.NetworkCapabilities,android.os.Messenger,int,android.os.IBinder,int,java.lang.String)>","<android.app.backup.IBackupManager$Stub$Proxy: void adbBackup(int,android.os.ParcelFileDescriptor,boolean,boolean,boolean,boolean,boolean,boolean,boolean,boolean,java.lang.String[])>"],"<android.nfc.Tag$1: android.nfc.Tag createFromParcel(android.os.Parcel)>":["<android.nfc.INfcAdapter$Stub$Proxy: void dispatch(android.nfc.Tag)>"],"<com.android.server.pm.PackageManagerService$PackageManagerNative: boolean[] isAudioPlaybackCaptureAllowed(java.lang.String[])>":["<android.content.pm.IPackageManagerNative$Stub$Proxy: boolean[] isAudioPlaybackCaptureAllowed(java.lang.String[])>"],"<android.view.accessibility.AccessibilityEvent: void initFromParcel(android.os.Parcel)>":["<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent,int)>"],"<com.android.server.textservices.TextServicesManagerService: android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers(int)>":["<com.android.internal.textservice.ITextServicesManager$Stub$Proxy: android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers(int)>"],"<android.os.WorkSource: void <init>(android.os.Parcel)>":["<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteBleScanStopped(android.os.WorkSource,boolean)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteBleScanStarted(android.os.WorkSource,boolean)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStartWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int,boolean)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiBatchedScanStartedFromSource(android.os.WorkSource,int)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteBleScanResults(android.os.WorkSource,int)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteGpsChanged(android.os.WorkSource,android.os.WorkSource)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteLongPartialWakelockStartFromSource(java.lang.String,java.lang.String,android.os.WorkSource)>","<android.app.IAlarmManager$Stub$Proxy: void set(java.lang.String,int,long,long,long,int,android.app.PendingIntent,android.app.IAlarmListener,java.lang.String,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiRunning(android.os.WorkSource)>","<android.os.IPowerManager$Stub$Proxy: void updateWakeLockWorkSource(android.os.IBinder,android.os.WorkSource,java.lang.String)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiStopped(android.os.WorkSource)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiScanStoppedFromSource(android.os.WorkSource)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteFullWifiLockReleasedFromSource(android.os.WorkSource)>","<android.app.IActivityManager$Stub$Proxy: void noteWakeupAlarm(android.content.IIntentSender,android.os.WorkSource,int,java.lang.String,java.lang.String)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteLongPartialWakelockFinishFromSource(java.lang.String,java.lang.String,android.os.WorkSource)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiBatchedScanStoppedFromSource(android.os.WorkSource)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiScanStartedFromSource(android.os.WorkSource)>","<android.app.IActivityManager$Stub$Proxy: void noteAlarmStart(android.content.IIntentSender,android.os.WorkSource,int,java.lang.String)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteChangeWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int,android.os.WorkSource,int,java.lang.String,java.lang.String,int,boolean)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteFullWifiLockAcquiredFromSource(android.os.WorkSource)>","<android.os.IPowerManager$Stub$Proxy: void acquireWakeLock(android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiRunningChanged(android.os.WorkSource,android.os.WorkSource)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStopWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int)>","<android.app.IActivityManager$Stub$Proxy: void noteAlarmFinish(android.content.IIntentSender,android.os.WorkSource,int,java.lang.String)>"],"<com.android.server.pm.PackageManagerService: android.content.pm.ChangedPackages getChangedPackages(int,int)>":["<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ChangedPackages getChangedPackages(int,int)>"],"<com.android.server.power.ThermalManagerService$1: android.os.CoolingDevice[] getCurrentCoolingDevicesWithType(int)>":["<android.os.IThermalService$Stub$Proxy: android.os.CoolingDevice[] getCurrentCoolingDevicesWithType(int)>"],"<android.os.Parcel: android.util.ArraySet readArraySet(java.lang.ClassLoader)>":["<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkRequest pendingRequestForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent,java.lang.String)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.Network registerNetworkAgent(android.os.Messenger,android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,int,android.net.NetworkAgentConfig,int)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellLocation(android.telephony.CellIdentity)>","<android.app.job.IJobScheduler$Stub$Proxy: int schedule(android.app.job.JobInfo)>","<android.app.job.IJobScheduler$Stub$Proxy: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>","<android.net.IConnectivityManager$Stub$Proxy: void pendingListenForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent,java.lang.String)>","<android.app.INotificationManager$Stub$Proxy: void enqueueNotificationWithTag(java.lang.String,java.lang.String,java.lang.String,int,android.app.Notification,int)>","<android.net.IConnectivityManager$Stub$Proxy: void registerConnectivityDiagnosticsCallback(android.net.IConnectivityDiagnosticsCallback,android.net.NetworkRequest,java.lang.String)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkRequest listenForNetwork(android.net.NetworkCapabilities,android.os.Messenger,android.os.IBinder,java.lang.String)>","<android.net.IConnectivityManager$Stub$Proxy: void releaseNetworkRequest(android.net.NetworkRequest)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyRegistrationFailed(int,int,android.telephony.CellIdentity,java.lang.String,int,int,int)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellLocationForSubscriber(int,android.telephony.CellIdentity)>","<android.net.IConnectivityManager$Stub$Proxy: void declareNetworkRequestUnfulfillable(android.net.NetworkRequest)>","<android.app.job.IJobScheduler$Stub$Proxy: int scheduleAsPackage(android.app.job.JobInfo,java.lang.String,int,java.lang.String)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkRequest requestNetwork(android.net.NetworkCapabilities,android.os.Messenger,int,android.os.IBinder,int,java.lang.String)>","<android.app.IActivityManager$Stub$Proxy: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,int,int)>"],"<com.android.server.VibratorService: int[] areEffectsSupported(int[])>":["<android.os.IVibratorService$Stub$Proxy: int[] areEffectsSupported(int[])>"],"<com.android.server.power.ThermalManagerService$1: android.os.Temperature[] getCurrentTemperaturesWithType(int)>":["<android.os.IThermalService$Stub$Proxy: android.os.Temperature[] getCurrentTemperaturesWithType(int)>"],"<android.os.BaseBundle: java.util.ArrayList deepcopyArrayList(java.util.ArrayList)>":["<android.media.IAudioService$Stub$Proxy: int getMinVolumeIndexForAttributes(android.media.AudioAttributes)>","<android.media.IAudioService$Stub$Proxy: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String,android.media.AudioAttributes,java.lang.String)>","<android.media.IAudioService$Stub$Proxy: int dispatchFocusChange(android.media.AudioFocusInfo,int,android.media.audiopolicy.IAudioPolicyCallback)>","<android.media.IAudioService$Stub$Proxy: java.util.List getDevicesForAttributes(android.media.AudioAttributes)>","<android.app.INotificationManager$Stub$Proxy: void createConversationNotificationChannelForPackage(java.lang.String,int,java.lang.String,android.app.NotificationChannel,java.lang.String)>","<android.app.INotificationManager$Stub$Proxy: void enqueueNotificationWithTag(java.lang.String,java.lang.String,java.lang.String,int,android.app.Notification,int)>","<android.media.IAudioService$Stub$Proxy: int trackPlayer(android.media.PlayerBase$PlayerIdCard)>","<android.media.IAudioService$Stub$Proxy: int requestAudioFocus(android.media.AudioAttributes,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String,int,android.media.audiopolicy.IAudioPolicyCallback,int)>","<android.media.IAudioService$Stub$Proxy: void setVolumeIndexForAttributes(android.media.AudioAttributes,int,int,java.lang.String)>","<android.app.INotificationManager$Stub$Proxy: void updateNotificationChannelForPackage(java.lang.String,int,android.app.NotificationChannel)>","<android.media.IAudioService$Stub$Proxy: void playerAttributes(int,android.media.AudioAttributes)>","<android.media.IAudioService$Stub$Proxy: int getMaxVolumeIndexForAttributes(android.media.AudioAttributes)>","<android.media.IAudioService$Stub$Proxy: int getFocusRampTimeMs(int,android.media.AudioAttributes)>","<android.media.IAudioService$Stub$Proxy: void setFocusRequestResultFromExtPolicy(android.media.AudioFocusInfo,int,android.media.audiopolicy.IAudioPolicyCallback)>","<android.app.IActivityManager$Stub$Proxy: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,int,int)>","<android.app.INotificationManager$Stub$Proxy: void updateNotificationChannelFromPrivilegedListener(android.service.notification.INotificationListener,java.lang.String,android.os.UserHandle,android.app.NotificationChannel)>","<android.media.IAudioService$Stub$Proxy: int getVolumeIndexForAttributes(android.media.AudioAttributes)>"],"<com.android.server.notification.NotificationManagerService$10: android.content.pm.ParceledListSlice getActiveNotificationsFromListener(android.service.notification.INotificationListener,java.lang.String[],int)>":["<android.app.INotificationManager$Stub$Proxy: android.content.pm.ParceledListSlice getActiveNotificationsFromListener(android.service.notification.INotificationListener,java.lang.String[],int)>"],"<android.os.Parcel: java.lang.CharSequence[] readCharSequenceArray()>":["<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetProvider(android.content.ComponentName,android.widget.RemoteViews)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellLocation(android.telephony.CellIdentity)>","<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void partiallyUpdateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: com.android.internal.compat.CompatibilityChangeConfig getAppConfig(android.content.pm.ApplicationInfo)>","<android.net.IConnectivityManager$Stub$Proxy: void startLegacyVpn(com.android.internal.net.VpnProfile)>","<android.app.job.IJobScheduler$Stub$Proxy: int schedule(android.app.job.JobInfo)>","<android.app.INotificationManager$Stub$Proxy: void enqueueNotificationWithTag(java.lang.String,java.lang.String,java.lang.String,int,android.app.Notification,int)>","<android.net.IConnectivityManager$Stub$Proxy: void registerConnectivityDiagnosticsCallback(android.net.IConnectivityDiagnosticsCallback,android.net.NetworkRequest,java.lang.String)>","<android.app.IActivityTaskManager$Stub$Proxy: boolean updateConfiguration(android.content.res.Configuration)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyPhoneCapabilityChanged(android.telephony.PhoneCapability)>","<android.app.IActivityManager$Stub$Proxy: void unbindBackupAgent(android.content.pm.ApplicationInfo)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkRequest listenForNetwork(android.net.NetworkCapabilities,android.os.Messenger,android.os.IBinder,java.lang.String)>","<android.net.IConnectivityManager$Stub$Proxy: void declareNetworkRequestUnfulfillable(android.net.NetworkRequest)>","<android.os.IVibratorService$Stub$Proxy: boolean setAlwaysOnEffect(int,java.lang.String,int,android.os.VibrationEffect,android.os.VibrationAttributes)>","<android.app.IActivityManager$Stub$Proxy: boolean updateConfiguration(android.content.res.Configuration)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: void reportChange(long,android.content.pm.ApplicationInfo)>","<android.net.IConnectivityManager$Stub$Proxy: boolean provisionVpnProfile(com.android.internal.net.VpnProfile,java.lang.String)>","<android.app.IActivityTaskManager$Stub$Proxy: void activityIdle(android.os.IBinder,android.content.res.Configuration,boolean)>","<android.content.pm.IShortcutService$Stub$Proxy: void disableShortcuts(java.lang.String,java.util.List,java.lang.CharSequence,int,int)>","<android.content.pm.IShortcutService$Stub$Proxy: void enableShortcuts(java.lang.String,java.util.List,int)>","<android.content.pm.IShortcutService$Stub$Proxy: void removeLongLivedShortcuts(java.lang.String,java.util.List,int)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkRequest pendingRequestForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent,java.lang.String)>","<com.android.internal.telephony.IMms$Stub$Proxy: boolean updateStoredMessageStatus(java.lang.String,android.net.Uri,android.content.ContentValues)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.Network registerNetworkAgent(android.os.Messenger,android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,int,android.net.NetworkAgentConfig,int)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyServiceStateForPhoneId(int,int,android.telephony.ServiceState)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: int addOverrideApn(android.content.ComponentName,android.telephony.data.ApnSetting)>","<android.os.IVibratorService$Stub$Proxy: void vibrate(int,java.lang.String,android.os.VibrationEffect,android.os.VibrationAttributes,java.lang.String,android.os.IBinder)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setPermittedAccessibilityServices(android.content.ComponentName,java.util.List)>","<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent,int)>","<android.net.IConnectivityManager$Stub$Proxy: void pendingListenForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent,java.lang.String)>","<android.app.job.IJobScheduler$Stub$Proxy: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: boolean isChangeEnabled(long,android.content.pm.ApplicationInfo)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setPermittedInputMethods(android.content.ComponentName,java.util.List)>","<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>","<android.view.autofill.IAutoFillManager$Stub$Proxy: void setUserData(android.service.autofill.UserData)>","<android.app.IActivityManager$Stub$Proxy: void updatePersistentConfiguration(android.content.res.Configuration)>","<android.net.IConnectivityManager$Stub$Proxy: void releaseNetworkRequest(android.net.NetworkRequest)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyRegistrationFailed(int,int,android.telephony.CellIdentity,java.lang.String,int,int,int)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellLocationForSubscriber(int,android.telephony.CellIdentity)>","<android.content.pm.IShortcutService$Stub$Proxy: void removeDynamicShortcuts(java.lang.String,java.util.List,int)>","<android.app.job.IJobScheduler$Stub$Proxy: int scheduleAsPackage(android.app.job.JobInfo,java.lang.String,int,java.lang.String)>","<android.view.contentcapture.IContentCaptureManager$Stub$Proxy: void removeData(android.view.contentcapture.DataRemovalRequest)>","<android.app.IActivityTaskManager$Stub$Proxy: int startActivityWithConfig(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle,int)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkRequest requestNetwork(android.net.NetworkCapabilities,android.os.Messenger,int,android.os.IBinder,int,java.lang.String)>","<android.app.IActivityManager$Stub$Proxy: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,int,int)>","<android.accounts.IAccountManager$Stub$Proxy: boolean addAccountExplicitlyWithVisibility(android.accounts.Account,java.lang.String,android.os.Bundle,java.util.Map)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyBarringInfoChanged(int,int,android.telephony.BarringInfo)>"],"<android.nfc.Tag: java.lang.String[] generateTechStringList(int[])>":["<android.nfc.INfcAdapter$Stub$Proxy: void dispatch(android.nfc.Tag)>"],"<com.android.server.accessibility.AccessibilityManagerService: java.util.List getEnabledAccessibilityServiceList(int,int)>":["<android.view.accessibility.IAccessibilityManager$Stub$Proxy: java.util.List getEnabledAccessibilityServiceList(int,int)>"],"<android.nfc.TechListParcel$1: android.nfc.TechListParcel createFromParcel(android.os.Parcel)>":["<android.nfc.INfcAdapter$Stub$Proxy: void setForegroundDispatch(android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel)>"],"<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>":["<android.print.IPrintManager$Stub$Proxy: void startPrinterStateTracking(android.print.PrinterId,int)>","<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetProvider(android.content.ComponentName,android.widget.RemoteViews)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiBatchedScanStartedFromSource(android.os.WorkSource,int)>","<android.content.pm.IShortcutService$Stub$Proxy: boolean requestPinShortcut(java.lang.String,android.content.pm.ShortcutInfo,android.content.IntentSender,int)>","<android.app.prediction.IPredictionManager$Stub$Proxy: void notifyAppTargetEvent(android.app.prediction.AppPredictionSessionId,android.app.prediction.AppTargetEvent)>","<android.app.IActivityManager$Stub$Proxy: void unbindBackupAgent(android.content.pm.ApplicationInfo)>","<android.media.IMediaRouterService$Stub$Proxy: void selectRouteWithRouter2(android.media.IMediaRouter2,java.lang.String,android.media.MediaRoute2Info)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteLongPartialWakelockFinishFromSource(java.lang.String,java.lang.String,android.os.WorkSource)>","<android.view.IWindowManager$Stub$Proxy: void modifyDisplayWindowInsets(int,android.view.InsetsState)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteFullWifiLockAcquiredFromSource(android.os.WorkSource)>","<android.os.IPowerManager$Stub$Proxy: void acquireWakeLock(android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String)>","<android.content.pm.ILauncherApps$Stub$Proxy: void registerShortcutChangeCallback(java.lang.String,android.content.pm.ShortcutQueryWrapper,android.content.pm.IShortcutChangeCallback)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: void reportChange(long,android.content.pm.ApplicationInfo)>","<android.app.IActivityManager$Stub$Proxy: boolean updateConfiguration(android.content.res.Configuration)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStopWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int)>","<android.net.IEthernetManager$Stub$Proxy: void setConfiguration(java.lang.String,android.net.IpConfiguration)>","<android.media.IMediaRouterService$Stub$Proxy: void deselectRouteWithManager(android.media.IMediaRouter2Manager,int,java.lang.String,android.media.MediaRoute2Info)>","<android.net.IConnectivityManager$Stub$Proxy: boolean provisionVpnProfile(com.android.internal.net.VpnProfile,java.lang.String)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyDataConnectionForSubscriber(int,int,int,android.telephony.PreciseDataConnectionState)>","<android.net.IIpSecService$Stub$Proxy: android.net.IpSecTransformResponse createTransform(android.net.IpSecConfig,android.os.IBinder,java.lang.String)>","<android.app.IActivityTaskManager$Stub$Proxy: void activityIdle(android.os.IBinder,android.content.res.Configuration,boolean)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteBleScanStopped(android.os.WorkSource,boolean)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteBleScanStarted(android.os.WorkSource,boolean)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkRequest pendingRequestForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent,java.lang.String)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setPermittedAccessibilityServices(android.content.ComponentName,java.util.List)>","<android.service.textclassifier.ITextClassifierService$Stub$Proxy: void onGenerateLinks(android.view.textclassifier.TextClassificationSessionId,android.view.textclassifier.TextLinks$Request,android.service.textclassifier.ITextClassifierCallback)>","<android.net.IConnectivityManager$Stub$Proxy: void pendingListenForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent,java.lang.String)>","<com.android.internal.view.IInputMethodManager$Stub$Proxy: com.android.internal.view.InputBindResult startInputOrWindowGainedFocus(int,com.android.internal.view.IInputMethodClient,android.os.IBinder,int,int,int,android.view.inputmethod.EditorInfo,com.android.internal.view.IInputContext,int,int)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setPermittedInputMethods(android.content.ComponentName,java.util.List)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiRunning(android.os.WorkSource)>","<android.content.pm.ILauncherApps$Stub$Proxy: android.content.pm.ParceledListSlice getShortcuts(java.lang.String,android.content.pm.ShortcutQueryWrapper,android.os.UserHandle)>","<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>","<android.view.autofill.IAutoFillManager$Stub$Proxy: void setUserData(android.service.autofill.UserData)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiBatchedScanStoppedFromSource(android.os.WorkSource)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteChangeWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int,android.os.WorkSource,int,java.lang.String,java.lang.String,int,boolean)>","<android.view.contentcapture.IContentCaptureManager$Stub$Proxy: void removeData(android.view.contentcapture.DataRemovalRequest)>","<android.app.IActivityTaskManager$Stub$Proxy: int startActivityWithConfig(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle,int)>","<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void registerUiTestAutomationService(android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo,int)>","<android.media.IMediaRouterService$Stub$Proxy: void setRouteVolumeWithRouter2(android.media.IMediaRouter2,android.media.MediaRoute2Info,int)>","<android.accounts.IAccountManager$Stub$Proxy: boolean addAccountExplicitlyWithVisibility(android.accounts.Account,java.lang.String,android.os.Bundle,java.util.Map)>","<android.media.IMediaRouterService$Stub$Proxy: void requestCreateSessionWithManager(android.media.IMediaRouter2Manager,int,android.media.RoutingSessionInfo,android.media.MediaRoute2Info)>","<android.content.pm.ILauncherApps$Stub$Proxy: void startSessionDetailsActivityAsUser(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.pm.PackageInstaller$SessionInfo,android.graphics.Rect,android.os.Bundle,android.os.UserHandle)>","<android.app.INotificationManager$Stub$Proxy: void setAutomaticZenRuleState(java.lang.String,android.service.notification.Condition)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteGpsChanged(android.os.WorkSource,android.os.WorkSource)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: com.android.internal.compat.CompatibilityChangeConfig getAppConfig(android.content.pm.ApplicationInfo)>","<android.app.job.IJobScheduler$Stub$Proxy: int schedule(android.app.job.JobInfo)>","<android.service.textclassifier.ITextClassifierService$Stub$Proxy: void onSelectionEvent(android.view.textclassifier.TextClassificationSessionId,android.view.textclassifier.SelectionEvent)>","<android.content.IContentService$Stub$Proxy: void cancelRequest(android.content.SyncRequest)>","<android.app.INotificationManager$Stub$Proxy: void enqueueNotificationWithTag(java.lang.String,java.lang.String,java.lang.String,int,android.app.Notification,int)>","<android.net.IConnectivityManager$Stub$Proxy: void registerConnectivityDiagnosticsCallback(android.net.IConnectivityDiagnosticsCallback,android.net.NetworkRequest,java.lang.String)>","<android.os.IPowerManager$Stub$Proxy: void updateWakeLockWorkSource(android.os.IBinder,android.os.WorkSource,java.lang.String)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyPhoneCapabilityChanged(android.telephony.PhoneCapability)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteFullWifiLockReleasedFromSource(android.os.WorkSource)>","<android.service.textclassifier.ITextClassifierService$Stub$Proxy: void onCreateTextClassificationSession(android.view.textclassifier.TextClassificationContext,android.view.textclassifier.TextClassificationSessionId)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiScanStartedFromSource(android.os.WorkSource)>","<android.service.textclassifier.ITextClassifierService$Stub$Proxy: void onSuggestConversationActions(android.view.textclassifier.TextClassificationSessionId,android.view.textclassifier.ConversationActions$Request,android.service.textclassifier.ITextClassifierCallback)>","<android.os.IVibratorService$Stub$Proxy: boolean setAlwaysOnEffect(int,java.lang.String,int,android.os.VibrationEffect,android.os.VibrationAttributes)>","<android.companion.ICompanionDeviceManager$Stub$Proxy: void stopScan(android.companion.AssociationRequest,android.companion.IFindDeviceCallback,java.lang.String)>","<android.app.IActivityTaskManager$Stub$Proxy: boolean enterPictureInPictureMode(android.os.IBinder,android.app.PictureInPictureParams)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.Network registerNetworkAgent(android.os.Messenger,android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,int,android.net.NetworkAgentConfig,int)>","<android.print.IPrintManager$Stub$Proxy: android.graphics.drawable.Icon getCustomPrinterIcon(android.print.PrinterId,int)>","<android.os.INetworkManagementService$Stub$Proxy: void addLegacyRouteForNetId(int,android.net.RouteInfo,int)>","<android.media.IMediaRouterService$Stub$Proxy: void transferToRouteWithManager(android.media.IMediaRouter2Manager,int,java.lang.String,android.media.MediaRoute2Info)>","<android.app.job.IJobScheduler$Stub$Proxy: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>","<android.net.INetworkStatsService$Stub$Proxy: void unregisterUsageRequest(android.net.DataUsageRequest)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: boolean isChangeEnabled(long,android.content.pm.ApplicationInfo)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiScanStoppedFromSource(android.os.WorkSource)>","<android.app.IActivityManager$Stub$Proxy: void updatePersistentConfiguration(android.content.res.Configuration)>","<android.net.IConnectivityManager$Stub$Proxy: void releaseNetworkRequest(android.net.NetworkRequest)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifySignalStrengthForPhoneId(int,int,android.telephony.SignalStrength)>","<android.app.job.IJobScheduler$Stub$Proxy: int scheduleAsPackage(android.app.job.JobInfo,java.lang.String,int,java.lang.String)>","<android.app.IActivityManager$Stub$Proxy: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,int,int)>","<android.app.IActivityManager$Stub$Proxy: void noteAlarmFinish(android.content.IIntentSender,android.os.WorkSource,int,java.lang.String)>","<android.media.IMediaRouterService$Stub$Proxy: void requestCreateSessionWithRouter2(android.media.IMediaRouter2,int,long,android.media.RoutingSessionInfo,android.media.MediaRoute2Info,android.os.Bundle)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyBarringInfoChanged(int,int,android.telephony.BarringInfo)>","<android.app.INotificationManager$Stub$Proxy: java.lang.String addAutomaticZenRule(android.app.AutomaticZenRule)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellLocation(android.telephony.CellIdentity)>","<android.hardware.usb.IUsbManager$Stub$Proxy: void setDevicePersistentPermission(android.hardware.usb.UsbDevice,int,android.os.UserHandle,boolean)>","<android.app.INotificationManager$Stub$Proxy: void updateNotificationChannelGroupFromPrivilegedListener(android.service.notification.INotificationListener,java.lang.String,android.os.UserHandle,android.app.NotificationChannelGroup)>","<android.app.IActivityTaskManager$Stub$Proxy: boolean updateConfiguration(android.content.res.Configuration)>","<android.companion.ICompanionDeviceManager$Stub$Proxy: void associate(android.companion.AssociationRequest,android.companion.IFindDeviceCallback,java.lang.String)>","<android.net.IConnectivityManager$Stub$Proxy: void declareNetworkRequestUnfulfillable(android.net.NetworkRequest)>","<android.app.IActivityManager$Stub$Proxy: void noteAlarmStart(android.content.IIntentSender,android.os.WorkSource,int,java.lang.String)>","<android.net.INetworkStatsService$Stub$Proxy: android.net.DataUsageRequest registerUsageCallback(java.lang.String,android.net.DataUsageRequest,android.os.Messenger,android.os.IBinder)>","<android.media.IMediaRouterService$Stub$Proxy: void transferToRouteWithRouter2(android.media.IMediaRouter2,java.lang.String,android.media.MediaRoute2Info)>","<android.hardware.usb.IUsbManager$Stub$Proxy: boolean hasDevicePermission(android.hardware.usb.UsbDevice,java.lang.String)>","<android.hardware.usb.IUsbManager$Stub$Proxy: void removeDevicePackagesFromPreferenceDenied(android.hardware.usb.UsbDevice,java.lang.String[],android.os.UserHandle)>","<android.media.IMediaRouterService$Stub$Proxy: void deselectRouteWithRouter2(android.media.IMediaRouter2,java.lang.String,android.media.MediaRoute2Info)>","<android.print.IPrintManager$Stub$Proxy: void stopPrinterStateTracking(android.print.PrinterId,int)>","<android.app.INotificationManager$Stub$Proxy: boolean updateAutomaticZenRule(java.lang.String,android.app.AutomaticZenRule)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiRunningChanged(android.os.WorkSource,android.os.WorkSource)>","<android.os.INetworkManagementService$Stub$Proxy: void addRoute(int,android.net.RouteInfo)>","<com.android.internal.app.IAppOpsService$Stub$Proxy: void addHistoricalOps(android.app.AppOpsManager$HistoricalOps)>","<android.content.pm.IShortcutService$Stub$Proxy: void enableShortcuts(java.lang.String,java.util.List,int)>","<android.content.pm.IShortcutService$Stub$Proxy: void removeLongLivedShortcuts(java.lang.String,java.util.List,int)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyServiceStateForPhoneId(int,int,android.telephony.ServiceState)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: int addOverrideApn(android.content.ComponentName,android.telephony.data.ApnSetting)>","<android.os.IVibratorService$Stub$Proxy: void vibrate(int,java.lang.String,android.os.VibrationEffect,android.os.VibrationAttributes,java.lang.String,android.os.IBinder)>","<android.net.INetworkPolicyManager$Stub$Proxy: android.net.NetworkQuotaInfo getNetworkQuotaInfo(android.net.NetworkState)>","<android.content.pm.IShortcutService$Stub$Proxy: void pushDynamicShortcut(java.lang.String,android.content.pm.ShortcutInfo,int)>","<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent,int)>","<android.app.INotificationManager$Stub$Proxy: void updateNotificationChannelGroupForPackage(java.lang.String,int,android.app.NotificationChannelGroup)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteLongPartialWakelockStartFromSource(java.lang.String,java.lang.String,android.os.WorkSource)>","<android.content.IContentService$Stub$Proxy: void syncAsUser(android.content.SyncRequest,int,java.lang.String)>","<android.media.IMediaRouterService$Stub$Proxy: void setRouteVolumeWithManager(android.media.IMediaRouter2Manager,int,android.media.MediaRoute2Info,int)>","<android.os.INetworkManagementService$Stub$Proxy: void removeRoute(int,android.net.RouteInfo)>","<android.nfc.INfcAdapter$Stub$Proxy: void invokeBeamInternal(android.nfc.BeamShareData)>","<android.os.INetworkManagementService$Stub$Proxy: void setInterfaceConfig(java.lang.String,android.net.InterfaceConfiguration)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteStartWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int,boolean)>","<android.content.pm.IShortcutService$Stub$Proxy: android.content.Intent createShortcutResultIntent(java.lang.String,android.content.pm.ShortcutInfo,int)>","<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void partiallyUpdateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>","<android.app.IActivityTaskManager$Stub$Proxy: void setPictureInPictureParams(android.os.IBinder,android.app.PictureInPictureParams)>","<android.net.IConnectivityManager$Stub$Proxy: void startLegacyVpn(com.android.internal.net.VpnProfile)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void notePhoneSignalStrength(android.telephony.SignalStrength)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteWifiStopped(android.os.WorkSource)>","<android.hardware.usb.IUsbManager$Stub$Proxy: void setDevicePackage(android.hardware.usb.UsbDevice,java.lang.String,int)>","<android.service.textclassifier.ITextClassifierService$Stub$Proxy: void onDetectLanguage(android.view.textclassifier.TextClassificationSessionId,android.view.textclassifier.TextLanguage$Request,android.service.textclassifier.ITextClassifierCallback)>","<android.net.IConnectivityManager$Stub$Proxy: android.os.ParcelFileDescriptor establishVpn(com.android.internal.net.VpnConfig)>","<android.hardware.usb.IUsbManager$Stub$Proxy: void addDevicePackagesToPreferenceDenied(android.hardware.usb.UsbDevice,java.lang.String[],android.os.UserHandle)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkRequest listenForNetwork(android.net.NetworkCapabilities,android.os.Messenger,android.os.IBinder,java.lang.String)>","<android.net.IIpConnectivityMetrics$Stub$Proxy: int logEvent(android.net.ConnectivityMetricsEvent)>","<android.hardware.usb.IUsbManager$Stub$Proxy: void grantDevicePermission(android.hardware.usb.UsbDevice,int)>","<android.content.IContentService$Stub$Proxy: void sync(android.content.SyncRequest,java.lang.String)>","<android.content.pm.IShortcutService$Stub$Proxy: void disableShortcuts(java.lang.String,java.util.List,java.lang.CharSequence,int,int)>","<com.android.internal.telephony.IMms$Stub$Proxy: boolean updateStoredMessageStatus(java.lang.String,android.net.Uri,android.content.ContentValues)>","<android.media.IMediaRouterService$Stub$Proxy: void selectRouteWithManager(android.media.IMediaRouter2Manager,int,java.lang.String,android.media.MediaRoute2Info)>","<android.hardware.usb.IUsbManager$Stub$Proxy: void requestDevicePermission(android.hardware.usb.UsbDevice,java.lang.String,android.app.PendingIntent)>","<com.android.internal.app.IBatteryStats$Stub$Proxy: void noteBleScanResults(android.os.WorkSource,int)>","<android.service.textclassifier.ITextClassifierService$Stub$Proxy: void onClassifyText(android.view.textclassifier.TextClassificationSessionId,android.view.textclassifier.TextClassification$Request,android.service.textclassifier.ITextClassifierCallback)>","<android.app.IAlarmManager$Stub$Proxy: void set(java.lang.String,int,long,long,long,int,android.app.PendingIntent,android.app.IAlarmListener,java.lang.String,android.os.WorkSource,android.app.AlarmManager$AlarmClockInfo)>","<android.app.IActivityManager$Stub$Proxy: void noteWakeupAlarm(android.content.IIntentSender,android.os.WorkSource,int,java.lang.String,java.lang.String)>","<android.service.textclassifier.ITextClassifierService$Stub$Proxy: void onTextClassifierEvent(android.view.textclassifier.TextClassificationSessionId,android.view.textclassifier.TextClassifierEvent)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyRegistrationFailed(int,int,android.telephony.CellIdentity,java.lang.String,int,int,int)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellLocationForSubscriber(int,android.telephony.CellIdentity)>","<android.service.textclassifier.ITextClassifierService$Stub$Proxy: void onSuggestSelection(android.view.textclassifier.TextClassificationSessionId,android.view.textclassifier.TextSelection$Request,android.service.textclassifier.ITextClassifierCallback)>","<android.content.pm.IShortcutService$Stub$Proxy: void removeDynamicShortcuts(java.lang.String,java.util.List,int)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkRequest requestNetwork(android.net.NetworkCapabilities,android.os.Messenger,int,android.os.IBinder,int,java.lang.String)>","<android.media.midi.IMidiManager$Stub$Proxy: void setDeviceStatus(android.media.midi.IMidiDeviceServer,android.media.midi.MidiDeviceStatus)>"],"<android.os.Parcel: void readList(java.util.List,java.lang.ClassLoader)>":["<android.net.IConnectivityManager$Stub$Proxy: android.net.Network registerNetworkAgent(android.os.Messenger,android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,int,android.net.NetworkAgentConfig,int)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyServiceStateForPhoneId(int,int,android.telephony.ServiceState)>","<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent,int)>","<android.net.IConnectivityManager$Stub$Proxy: void startLegacyVpn(com.android.internal.net.VpnProfile)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyPhoneCapabilityChanged(android.telephony.PhoneCapability)>","<android.net.IConnectivityManager$Stub$Proxy: boolean provisionVpnProfile(com.android.internal.net.VpnProfile,java.lang.String)>"],"<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable$Creator)>":["<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetProvider(android.content.ComponentName,android.widget.RemoteViews)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellLocation(android.telephony.CellIdentity)>","<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void partiallyUpdateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>","<com.android.internal.telephony.ISms$Stub$Proxy: void sendStoredMultipartText(int,java.lang.String,java.lang.String,android.net.Uri,java.lang.String,java.util.List,java.util.List)>","<android.security.keystore.IKeystoreService$Stub$Proxy: int attestKey(android.security.keystore.IKeystoreCertificateChainCallback,java.lang.String,android.security.keymaster.KeymasterArguments)>","<android.security.keystore.IKeystoreService$Stub$Proxy: int generateKey(android.security.keystore.IKeystoreKeyCharacteristicsCallback,java.lang.String,android.security.keymaster.KeymasterArguments,byte[],int,int)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: com.android.internal.compat.CompatibilityChangeConfig getAppConfig(android.content.pm.ApplicationInfo)>","<android.os.INetworkManagementService$Stub$Proxy: int removeRoutesFromLocalNetwork(java.util.List)>","<android.app.INotificationManager$Stub$Proxy: void enqueueNotificationWithTag(java.lang.String,java.lang.String,java.lang.String,int,android.app.Notification,int)>","<android.view.autofill.IAutoFillManager$Stub$Proxy: void setAutofillFailure(int,java.util.List,int)>","<android.app.IActivityManager$Stub$Proxy: void unbindBackupAgent(android.content.pm.ApplicationInfo)>","<com.android.internal.telephony.ISms$Stub$Proxy: void sendMultipartTextForSubscriber(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List,boolean,long)>","<com.android.internal.telephony.ITelephony$Stub$Proxy: void setSystemSelectionChannels(java.util.List,int,com.android.internal.telephony.IBooleanConsumer)>","<android.security.keystore.IKeystoreService$Stub$Proxy: int attestDeviceIds(android.security.keystore.IKeystoreCertificateChainCallback,android.security.keymaster.KeymasterArguments)>","<com.android.internal.telecom.ITelecomService$Stub$Proxy: void startConference(java.util.List,android.os.Bundle,java.lang.String)>","<android.security.keystore.IKeystoreService$Stub$Proxy: int importWrappedKey(android.security.keystore.IKeystoreKeyCharacteristicsCallback,java.lang.String,byte[],java.lang.String,byte[],android.security.keymaster.KeymasterArguments,long,long)>","<android.print.IPrintManager$Stub$Proxy: void validatePrinters(java.util.List,int)>","<android.print.IPrintManager$Stub$Proxy: void startPrinterDiscovery(android.print.IPrinterDiscoveryObserver,java.util.List,int)>","<android.os.INetworkManagementService$Stub$Proxy: void addInterfaceToLocalNetwork(java.lang.String,java.util.List)>","<android.content.pm.IPackageManager$Stub$Proxy: void querySyncProviders(java.util.List,java.util.List)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: void reportChange(long,android.content.pm.ApplicationInfo)>","<android.app.INotificationManager$Stub$Proxy: void applyAdjustmentsFromAssistant(android.service.notification.INotificationListener,java.util.List)>","<com.android.internal.telephony.ISms$Stub$Proxy: void sendMultipartTextForSubscriberWithOptions(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List,boolean,int,boolean,int)>","<com.android.internal.telephony.IOns$Stub$Proxy: void updateAvailableNetworks(java.util.List,com.android.internal.telephony.IUpdateAvailableNetworksCallback,java.lang.String)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellInfo(java.util.List)>","<android.app.IActivityManager$Stub$Proxy: void publishContentProviders(android.app.IApplicationThread,java.util.List)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: boolean isChangeEnabled(long,android.content.pm.ApplicationInfo)>","<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>","<android.security.keystore.IKeystoreService$Stub$Proxy: int finish(android.security.keystore.IKeystoreOperationResultCallback,android.os.IBinder,android.security.keymaster.KeymasterArguments,byte[],byte[],byte[])>","<android.security.keystore.IKeystoreService$Stub$Proxy: int update(android.security.keystore.IKeystoreOperationResultCallback,android.os.IBinder,android.security.keymaster.KeymasterArguments,byte[])>","<android.telephony.ims.aidl.IImsRcsController$Stub$Proxy: void requestCapabilities(int,java.lang.String,java.lang.String,java.util.List,android.telephony.ims.aidl.IRcsUceControllerCallback)>","<android.app.contentsuggestions.IContentSuggestionsManager$Stub$Proxy: void classifyContentSelections(int,android.app.contentsuggestions.ClassificationsRequest,android.app.contentsuggestions.IClassificationsCallback)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyRegistrationFailed(int,int,android.telephony.CellIdentity,java.lang.String,int,int,int)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellLocationForSubscriber(int,android.telephony.CellIdentity)>","<android.view.autofill.IAutoFillManager$Stub$Proxy: void setAugmentedAutofillWhitelist(java.util.List,java.util.List,com.android.internal.os.IResultReceiver)>","<android.security.keystore.IKeystoreService$Stub$Proxy: int importKey(android.security.keystore.IKeystoreKeyCharacteristicsCallback,java.lang.String,android.security.keymaster.KeymasterArguments,int,byte[],int,int)>","<android.app.IActivityManager$Stub$Proxy: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,int,int)>","<android.security.keystore.IKeystoreService$Stub$Proxy: int begin(android.security.keystore.IKeystoreOperationResultCallback,android.os.IBinder,java.lang.String,int,boolean,android.security.keymaster.KeymasterArguments,byte[],int)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellInfoForSubscriber(int,java.util.List)>"],"<com.android.server.am.BatteryStatsService: android.os.health.HealthStatsParceler[] takeUidSnapshots(int[])>":["<com.android.internal.app.IBatteryStats$Stub$Proxy: android.os.health.HealthStatsParceler[] takeUidSnapshots(int[])>"],"<android.os.VibrationEffect$Waveform: void <init>(long[],int[],int)>":["<android.os.IVibratorService$Stub$Proxy: void vibrate(int,java.lang.String,android.os.VibrationEffect,android.os.VibrationAttributes,java.lang.String,android.os.IBinder)>","<android.os.IVibratorService$Stub$Proxy: boolean setAlwaysOnEffect(int,java.lang.String,int,android.os.VibrationEffect,android.os.VibrationAttributes)>"],"<android.telephony.ImsiEncryptionInfo: void <init>(android.os.Parcel)>":["<com.android.internal.telephony.IPhoneSubInfo$Stub$Proxy: void setCarrierInfoForImsiEncryption(int,java.lang.String,android.telephony.ImsiEncryptionInfo)>"],"<android.os.Parcel: java.util.ArrayList createStringArrayList()>":["<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setCrossProfilePackages(android.content.ComponentName,java.util.List)>","<android.app.IActivityTaskManager$Stub$Proxy: int startActivityIntentSender(android.app.IApplicationThread,android.content.IIntentSender,android.os.IBinder,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)>","<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetProvider(android.content.ComponentName,android.widget.RemoteViews)>","<android.app.IActivityTaskManager$Stub$Proxy: boolean launchAssistIntent(android.content.Intent,int,java.lang.String,int,android.os.Bundle)>","<com.android.internal.telephony.ISms$Stub$Proxy: void sendMultipartTextForSubscriber(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List,boolean,long)>","<android.media.IMediaRouterService$Stub$Proxy: void selectRouteWithRouter2(android.media.IMediaRouter2,java.lang.String,android.media.MediaRoute2Info)>","<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ResolveInfo getLastChosenActivity(android.content.Intent,java.lang.String,int)>","<android.app.IActivityTaskManager$Stub$Proxy: void reportAssistContextExtras(android.os.IBinder,android.os.Bundle,android.app.assist.AssistStructure,android.app.assist.AssistContent,android.net.Uri)>","<android.media.IMediaRouterService$Stub$Proxy: void deselectRouteWithManager(android.media.IMediaRouter2Manager,int,java.lang.String,android.media.MediaRoute2Info)>","<android.app.IActivityManager$Stub$Proxy: int bindIsolatedService(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int,java.lang.String,java.lang.String,int)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setCrossProfileCalendarPackages(android.content.ComponentName,java.util.List)>","<android.content.IClipboard$Stub$Proxy: void setPrimaryClip(android.content.ClipData,java.lang.String,int)>","<android.app.IActivityManager$Stub$Proxy: int sendIntentSender(android.content.IIntentSender,android.os.IBinder,int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String,android.os.Bundle)>","<android.app.IActivityTaskManager$Stub$Proxy: boolean finishActivity(android.os.IBinder,int,android.content.Intent,int)>","<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>","<android.content.pm.ILauncherApps$Stub$Proxy: void cacheShortcuts(java.lang.String,java.lang.String,java.util.List,android.os.UserHandle,int)>","<android.app.IActivityManager$Stub$Proxy: boolean finishActivity(android.os.IBinder,int,android.content.Intent,int)>","<com.android.internal.telephony.ITelephony$Stub$Proxy: int getSubIdForPhoneAccount(android.telecom.PhoneAccount)>","<android.app.IActivityTaskManager$Stub$Proxy: int startActivityWithConfig(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle,int)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List setMeteredDataDisabledPackages(android.content.ComponentName,java.util.List)>","<android.media.IMediaRouterService$Stub$Proxy: void setRouteVolumeWithRouter2(android.media.IMediaRouter2,android.media.MediaRoute2Info,int)>","<android.media.IMediaRouterService$Stub$Proxy: void requestCreateSessionWithManager(android.media.IMediaRouter2Manager,int,android.media.RoutingSessionInfo,android.media.MediaRoute2Info)>","<android.content.pm.ILauncherApps$Stub$Proxy: void startSessionDetailsActivityAsUser(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.pm.PackageInstaller$SessionInfo,android.graphics.Rect,android.os.Bundle,android.os.UserHandle)>","<android.app.job.IJobScheduler$Stub$Proxy: int schedule(android.app.job.JobInfo)>","<android.app.INotificationManager$Stub$Proxy: void enqueueNotificationWithTag(java.lang.String,java.lang.String,java.lang.String,int,android.app.Notification,int)>","<android.app.IActivityManager$Stub$Proxy: int broadcastIntentWithFeature(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int)>","<android.app.IActivityTaskManager$Stub$Proxy: int startActivityAsCaller(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,android.os.IBinder,boolean,int)>","<android.content.pm.IPackageManager$Stub$Proxy: void querySyncProviders(java.util.List,java.util.List)>","<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice queryIntentServices(android.content.Intent,java.lang.String,int,int)>","<android.content.pm.IPackageManager$Stub$Proxy: boolean runBackgroundDexoptJob(java.util.List)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyOutgoingEmergencyCall(int,int,android.telephony.emergency.EmergencyNumber)>","<android.content.pm.IPackageManager$Stub$Proxy: boolean activitySupportsIntent(android.content.ComponentName,android.content.Intent,java.lang.String)>","<android.app.IActivityTaskManager$Stub$Proxy: int startAssistantActivity(java.lang.String,java.lang.String,int,int,android.content.Intent,java.lang.String,android.os.Bundle,int)>","<android.app.backup.IBackupManager$Stub$Proxy: void updateTransportAttributesForUser(int,android.content.ComponentName,java.lang.String,android.content.Intent,java.lang.String,android.content.Intent,java.lang.CharSequence)>","<android.app.IActivityManager$Stub$Proxy: int startActivityWithFeature(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle)>","<android.media.IMediaRouterService$Stub$Proxy: void transferToRouteWithManager(android.media.IMediaRouter2Manager,int,java.lang.String,android.media.MediaRoute2Info)>","<android.app.job.IJobScheduler$Stub$Proxy: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>","<android.content.pm.ICrossProfileApps$Stub$Proxy: void startActivityAsUserByIntent(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,int,android.os.IBinder,android.os.Bundle)>","<android.app.IActivityManager$Stub$Proxy: void startRecentsActivity(android.content.Intent,android.app.IAssistDataReceiver,android.view.IRecentsAnimationRunner)>","<android.app.backup.IBackupManager$Stub$Proxy: void excludeKeysFromRestore(java.lang.String,java.util.List)>","<android.content.pm.ILauncherApps$Stub$Proxy: void pinShortcuts(java.lang.String,java.lang.String,java.util.List,android.os.UserHandle)>","<android.app.job.IJobScheduler$Stub$Proxy: int scheduleAsPackage(android.app.job.JobInfo,java.lang.String,int,java.lang.String)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyOutgoingEmergencySms(int,int,android.telephony.emergency.EmergencyNumber)>","<android.app.IActivityManager$Stub$Proxy: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,int,int)>","<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice queryIntentReceivers(android.content.Intent,java.lang.String,int,int)>","<com.android.internal.app.IVoiceInteractionManagerService$Stub$Proxy: int startVoiceActivity(android.os.IBinder,android.content.Intent,java.lang.String,java.lang.String)>","<android.media.IMediaRouterService$Stub$Proxy: void requestCreateSessionWithRouter2(android.media.IMediaRouter2,int,long,android.media.RoutingSessionInfo,android.media.MediaRoute2Info,android.os.Bundle)>","<android.content.pm.IPackageManager$Stub$Proxy: boolean canForwardTo(android.content.Intent,java.lang.String,int,int)>","<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: boolean bindRemoteViewsService(java.lang.String,int,android.content.Intent,android.app.IApplicationThread,android.os.IBinder,android.app.IServiceConnection,int)>","<android.app.IActivityTaskManager$Stub$Proxy: int startActivityAsUser(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>","<android.net.IConnectivityManager$Stub$Proxy: boolean setAlwaysOnVpnPackage(int,java.lang.String,boolean,java.util.List)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellLocation(android.telephony.CellIdentity)>","<android.media.IMediaRouterService$Stub$Proxy: void setDiscoveryRequestWithRouter2(android.media.IMediaRouter2,android.media.RouteDiscoveryPreference)>","<android.app.IActivityManager$Stub$Proxy: int stopService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)>","<android.app.IActivityManager$Stub$Proxy: void scheduleApplicationInfoChanged(java.util.List,int)>","<com.android.internal.app.IAppOpsService$Stub$Proxy: void getHistoricalOpsFromDiskRaw(int,java.lang.String,java.lang.String,java.util.List,int,long,long,int,android.os.RemoteCallback)>","<android.content.pm.IPackageManager$Stub$Proxy: void setMimeGroup(java.lang.String,java.lang.String,java.util.List)>","<android.app.IActivityTaskManager$Stub$Proxy: int startVoiceActivity(java.lang.String,java.lang.String,int,int,android.content.Intent,java.lang.String,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,int,android.app.ProfilerInfo,android.os.Bundle,int)>","<android.app.IActivityManager$Stub$Proxy: void publishService(android.os.IBinder,android.content.Intent,android.os.IBinder)>","<android.content.pm.ILauncherApps$Stub$Proxy: void uncacheShortcuts(java.lang.String,java.lang.String,java.util.List,android.os.UserHandle,int)>","<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ResolveInfo findPersistentPreferredActivity(android.content.Intent,int)>","<android.media.IMediaRouterService$Stub$Proxy: void transferToRouteWithRouter2(android.media.IMediaRouter2,java.lang.String,android.media.MediaRoute2Info)>","<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int)>","<android.media.IMediaRouterService$Stub$Proxy: void deselectRouteWithRouter2(android.media.IMediaRouter2,java.lang.String,android.media.MediaRoute2Info)>","<android.os.IDeviceIdleController$Stub$Proxy: int addPowerSaveWhitelistApps(java.util.List)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setPermittedCrossProfileNotificationListeners(android.content.ComponentName,java.util.List)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setDelegatedScopes(android.content.ComponentName,java.lang.String,java.util.List)>","<com.android.internal.telephony.ITelephony$Stub$Proxy: void enableVisualVoicemailSmsFilter(java.lang.String,int,android.telephony.VisualVoicemailSmsFilterSettings)>","<com.android.internal.telecom.ITelecomService$Stub$Proxy: void registerPhoneAccount(android.telecom.PhoneAccount)>","<android.app.IActivityManager$Stub$Proxy: android.os.IBinder peekService(android.content.Intent,java.lang.String,java.lang.String)>","<android.app.IActivityTaskManager$Stub$Proxy: int addAppTask(android.os.IBinder,android.content.Intent,android.app.ActivityManager$TaskDescription,android.graphics.Bitmap)>","<com.android.internal.telephony.ISms$Stub$Proxy: void sendMultipartTextForSubscriberWithOptions(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List,boolean,int,boolean,int)>","<android.app.IActivityTaskManager$Stub$Proxy: void clearLaunchParamsForPackages(java.util.List)>","<android.app.IActivityTaskManager$Stub$Proxy: boolean startNextMatchingActivity(android.os.IBinder,android.content.Intent,android.os.Bundle)>","<android.app.role.IRoleManager$Stub$Proxy: void setRoleNamesFromController(java.util.List)>","<com.android.internal.telephony.euicc.IEuiccController$Stub$Proxy: void continueOperation(int,android.content.Intent,android.os.Bundle)>","<com.android.internal.telecom.ITelecomService$Stub$Proxy: void handleCallIntent(android.content.Intent,java.lang.String)>","<android.app.IActivityManager$Stub$Proxy: int bindService(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int,java.lang.String,int)>","<android.app.IActivityTaskManager$Stub$Proxy: android.app.WaitResult startActivityAndWait(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>","<android.media.IMediaRouterService$Stub$Proxy: void setRouteVolumeWithManager(android.media.IMediaRouter2Manager,int,android.media.MediaRoute2Info,int)>","<android.content.pm.IPackageManager$Stub$Proxy: void verifyIntentFilter(int,int,java.util.List)>","<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ResolveInfo resolveService(android.content.Intent,java.lang.String,int,int)>","<android.view.autofill.IAutoFillManager$Stub$Proxy: void setAugmentedAutofillWhitelist(java.util.List,java.util.List,com.android.internal.os.IResultReceiver)>","<com.android.internal.telephony.euicc.IEuiccController$Stub$Proxy: void setSupportedCountries(boolean,java.util.List)>","<android.app.IActivityManager$Stub$Proxy: int startActivityAsUserWithFeature(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>","<android.app.IActivityTaskManager$Stub$Proxy: void startRecentsActivity(android.content.Intent,android.app.IAssistDataReceiver,android.view.IRecentsAnimationRunner)>","<android.content.pm.ICrossProfileApps$Stub$Proxy: void resetInteractAcrossProfilesAppOps(java.util.List)>","<android.app.IActivityTaskManager$Stub$Proxy: boolean startDreamActivity(android.content.Intent)>","<com.android.internal.app.IVoiceInteractionManagerService$Stub$Proxy: int startAssistantActivity(android.os.IBinder,android.content.Intent,java.lang.String,java.lang.String)>","<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void partiallyUpdateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>","<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice queryIntentActivities(android.content.Intent,java.lang.String,int,int)>","<android.app.IActivityManager$Stub$Proxy: int startActivityAsUser(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>","<com.android.internal.telephony.ITelephony$Stub$Proxy: void updateEmergencyNumberListTestMode(int,android.telephony.emergency.EmergencyNumber)>","<android.app.IActivityTaskManager$Stub$Proxy: boolean isActivityStartAllowedOnDisplay(int,android.content.Intent,java.lang.String,int)>","<com.android.internal.app.IVoiceInteractionManagerService$Stub$Proxy: void getActiveServiceSupportedActions(java.util.List,com.android.internal.app.IVoiceActionCheckCallback)>","<android.net.IConnectivityManager$Stub$Proxy: android.os.ParcelFileDescriptor establishVpn(com.android.internal.net.VpnConfig)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setAffiliationIds(android.content.ComponentName,java.util.List)>","<android.app.IActivityManager$Stub$Proxy: android.content.ComponentName startService(android.app.IApplicationThread,android.content.Intent,java.lang.String,boolean,java.lang.String,java.lang.String,int)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: int enableSystemAppWithIntent(android.content.ComponentName,java.lang.String,android.content.Intent)>","<android.app.IActivityManager$Stub$Proxy: void unbroadcastIntent(android.app.IApplicationThread,android.content.Intent,int)>","<android.app.IActivityManager$Stub$Proxy: int broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String[],int,android.os.Bundle,boolean,boolean,int)>","<android.content.pm.IPackageManager$Stub$Proxy: int installExistingPackageAsUser(java.lang.String,int,int,int,java.util.List)>","<android.app.IActivityManager$Stub$Proxy: void unbindFinished(android.os.IBinder,android.content.Intent,boolean)>","<android.media.IMediaRouterService$Stub$Proxy: void selectRouteWithManager(android.media.IMediaRouter2Manager,int,java.lang.String,android.media.MediaRoute2Info)>","<com.android.internal.app.IAppOpsService$Stub$Proxy: void getHistoricalOps(int,java.lang.String,java.lang.String,java.util.List,int,long,long,int,android.os.RemoteCallback)>","<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice queryIntentContentProviders(android.content.Intent,java.lang.String,int,int)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setUserControlDisabledPackages(android.content.ComponentName,java.util.List)>","<android.app.IActivityManager$Stub$Proxy: void startConfirmDeviceCredentialIntent(android.content.Intent,android.os.Bundle)>","<android.app.IActivityTaskManager$Stub$Proxy: int startActivity(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyRegistrationFailed(int,int,android.telephony.CellIdentity,java.lang.String,int,int,int)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellLocationForSubscriber(int,android.telephony.CellIdentity)>","<android.app.IActivityTaskManager$Stub$Proxy: boolean navigateUpTo(android.os.IBinder,android.content.Intent,int,android.content.Intent)>","<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],java.lang.String[],android.content.Intent,java.lang.String,int,int)>","<android.content.pm.IPackageManager$Stub$Proxy: void setLastChosenActivity(android.content.Intent,java.lang.String,int,android.content.IntentFilter,int,android.content.ComponentName)>","<android.app.IActivityManager$Stub$Proxy: int startActivity(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle)>","<com.android.internal.telephony.ITelephony$Stub$Proxy: java.util.List getCarrierPackageNamesForIntentAndPhone(android.content.Intent,int)>"],"<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getPackagesHoldingPermissions(java.lang.String[],int,int)>":["<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice getPackagesHoldingPermissions(java.lang.String[],int,int)>"],"<android.nfc.BeamShareData$1: android.nfc.BeamShareData createFromParcel(android.os.Parcel)>":["<android.nfc.INfcAdapter$Stub$Proxy: void invokeBeamInternal(android.nfc.BeamShareData)>"],"<android.hardware.location.NanoAppBinary: void <init>(android.os.Parcel)>":["<android.hardware.location.IContextHubService$Stub$Proxy: void loadNanoAppOnHub(int,android.hardware.location.IContextHubTransactionCallback,android.hardware.location.NanoAppBinary)>"],"<android.content.res.ColorStateList$1: android.content.res.ColorStateList createFromParcel(android.os.Parcel)>":["<com.android.internal.telecom.ITelecomService$Stub$Proxy: void registerPhoneAccount(android.telecom.PhoneAccount)>","<android.app.IActivityTaskManager$Stub$Proxy: void setTaskDescription(android.os.IBinder,android.app.ActivityManager$TaskDescription)>","<android.app.IActivityTaskManager$Stub$Proxy: int addAppTask(android.os.IBinder,android.content.Intent,android.app.ActivityManager$TaskDescription,android.graphics.Bitmap)>","<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void registerSystemAction(android.app.RemoteAction,int)>","<com.android.internal.telephony.ITelephony$Stub$Proxy: int getSubIdForPhoneAccount(android.telecom.PhoneAccount)>","<android.app.IActivityManager$Stub$Proxy: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,int,int)>","<com.android.internal.statusbar.IStatusBarService$Stub$Proxy: void onNotificationActionClick(java.lang.String,int,android.app.Notification$Action,com.android.internal.statusbar.NotificationVisibility,boolean)>","<android.app.INotificationManager$Stub$Proxy: void enqueueNotificationWithTag(java.lang.String,java.lang.String,java.lang.String,int,android.app.Notification,int)>"],"<android.nfc.Tag: byte[] readBytesWithNull(android.os.Parcel)>":["<android.nfc.INfcAdapter$Stub$Proxy: void dispatch(android.nfc.Tag)>"],"<com.android.server.pm.PackageManagerService: java.lang.String[] setDistractingPackageRestrictionsAsUser(java.lang.String[],int,int)>":["<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] setDistractingPackageRestrictionsAsUser(java.lang.String[],int,int)>"],"<com.android.server.appwidget.AppWidgetServiceImpl: android.content.pm.ParceledListSlice startListening(com.android.internal.appwidget.IAppWidgetHost,java.lang.String,int,int[])>":["<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: android.content.pm.ParceledListSlice startListening(com.android.internal.appwidget.IAppWidgetHost,java.lang.String,int,int[])>"],"<android.content.pm.ShortcutInfo: void <init>(android.os.Parcel)>":["<android.content.pm.IShortcutService$Stub$Proxy: boolean requestPinShortcut(java.lang.String,android.content.pm.ShortcutInfo,android.content.IntentSender,int)>","<android.content.pm.IShortcutService$Stub$Proxy: android.content.Intent createShortcutResultIntent(java.lang.String,android.content.pm.ShortcutInfo,int)>","<android.content.pm.IShortcutService$Stub$Proxy: void pushDynamicShortcut(java.lang.String,android.content.pm.ShortcutInfo,int)>"],"<android.content.ContentValues: void <init>(android.os.Parcel)>":["<com.android.internal.telephony.IMms$Stub$Proxy: boolean updateStoredMessageStatus(java.lang.String,android.net.Uri,android.content.ContentValues)>"],"<android.os.BaseBundle: void copyInternal(android.os.BaseBundle,boolean)>":["<android.media.IAudioService$Stub$Proxy: int getMinVolumeIndexForAttributes(android.media.AudioAttributes)>","<android.media.IAudioService$Stub$Proxy: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String,android.media.AudioAttributes,java.lang.String)>","<android.media.IAudioService$Stub$Proxy: int dispatchFocusChange(android.media.AudioFocusInfo,int,android.media.audiopolicy.IAudioPolicyCallback)>","<android.media.IAudioService$Stub$Proxy: java.util.List getDevicesForAttributes(android.media.AudioAttributes)>","<android.app.INotificationManager$Stub$Proxy: void createConversationNotificationChannelForPackage(java.lang.String,int,java.lang.String,android.app.NotificationChannel,java.lang.String)>","<android.app.INotificationManager$Stub$Proxy: void enqueueNotificationWithTag(java.lang.String,java.lang.String,java.lang.String,int,android.app.Notification,int)>","<android.media.IAudioService$Stub$Proxy: int trackPlayer(android.media.PlayerBase$PlayerIdCard)>","<android.media.IAudioService$Stub$Proxy: int requestAudioFocus(android.media.AudioAttributes,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String,int,android.media.audiopolicy.IAudioPolicyCallback,int)>","<android.media.IAudioService$Stub$Proxy: void setVolumeIndexForAttributes(android.media.AudioAttributes,int,int,java.lang.String)>","<android.app.INotificationManager$Stub$Proxy: void updateNotificationChannelForPackage(java.lang.String,int,android.app.NotificationChannel)>","<android.media.IAudioService$Stub$Proxy: void playerAttributes(int,android.media.AudioAttributes)>","<android.media.IAudioService$Stub$Proxy: int getMaxVolumeIndexForAttributes(android.media.AudioAttributes)>","<android.media.IAudioService$Stub$Proxy: int getFocusRampTimeMs(int,android.media.AudioAttributes)>","<android.media.IAudioService$Stub$Proxy: void setFocusRequestResultFromExtPolicy(android.media.AudioFocusInfo,int,android.media.audiopolicy.IAudioPolicyCallback)>","<android.app.IActivityManager$Stub$Proxy: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,int,int)>","<android.app.INotificationManager$Stub$Proxy: void updateNotificationChannelFromPrivilegedListener(android.service.notification.INotificationListener,java.lang.String,android.os.UserHandle,android.app.NotificationChannel)>","<android.media.IAudioService$Stub$Proxy: int getVolumeIndexForAttributes(android.media.AudioAttributes)>"],"<android.widget.RemoteViews: void readActionsFromParcel(android.os.Parcel,int)>":["<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetProvider(android.content.ComponentName,android.widget.RemoteViews)>","<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void partiallyUpdateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>","<android.app.IActivityManager$Stub$Proxy: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,int,int)>","<android.app.INotificationManager$Stub$Proxy: void enqueueNotificationWithTag(java.lang.String,java.lang.String,java.lang.String,int,android.app.Notification,int)>","<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>"],"<com.android.server.accessibility.AccessibilityManagerService: void interrupt(int)>":["<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void interrupt(int)>"],"<android.media.midi.MidiDeviceStatus: void <init>(android.media.midi.MidiDeviceInfo,boolean[],int[])>":["<android.media.midi.IMidiManager$Stub$Proxy: void setDeviceStatus(android.media.midi.IMidiDeviceServer,android.media.midi.MidiDeviceStatus)>"],"<android.os.StrictMode$ViolationInfo: void <init>(android.os.Parcel,boolean)>":["<android.app.IActivityManager$Stub$Proxy: void handleApplicationStrictModeViolation(android.os.IBinder,int,android.os.StrictMode$ViolationInfo)>"],"<com.android.server.usage.StorageStatsService: android.app.usage.StorageStats queryStatsForUid(java.lang.String,int,java.lang.String)>":["<android.app.usage.IStorageStatsManager$Stub$Proxy: android.app.usage.StorageStats queryStatsForUid(java.lang.String,int,java.lang.String)>"],"<com.android.server.pm.PackageManagerService: java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])>":["<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])>"],"<android.os.Parcel: java.lang.Object[] readArray(java.lang.ClassLoader)>":["<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetProvider(android.content.ComponentName,android.widget.RemoteViews)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellLocation(android.telephony.CellIdentity)>","<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void partiallyUpdateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: com.android.internal.compat.CompatibilityChangeConfig getAppConfig(android.content.pm.ApplicationInfo)>","<android.net.IConnectivityManager$Stub$Proxy: void startLegacyVpn(com.android.internal.net.VpnProfile)>","<android.app.job.IJobScheduler$Stub$Proxy: int schedule(android.app.job.JobInfo)>","<android.app.INotificationManager$Stub$Proxy: void enqueueNotificationWithTag(java.lang.String,java.lang.String,java.lang.String,int,android.app.Notification,int)>","<android.net.IConnectivityManager$Stub$Proxy: void registerConnectivityDiagnosticsCallback(android.net.IConnectivityDiagnosticsCallback,android.net.NetworkRequest,java.lang.String)>","<android.app.IActivityTaskManager$Stub$Proxy: boolean updateConfiguration(android.content.res.Configuration)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyPhoneCapabilityChanged(android.telephony.PhoneCapability)>","<android.app.IActivityManager$Stub$Proxy: void unbindBackupAgent(android.content.pm.ApplicationInfo)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkRequest listenForNetwork(android.net.NetworkCapabilities,android.os.Messenger,android.os.IBinder,java.lang.String)>","<android.net.IConnectivityManager$Stub$Proxy: void declareNetworkRequestUnfulfillable(android.net.NetworkRequest)>","<android.os.IVibratorService$Stub$Proxy: boolean setAlwaysOnEffect(int,java.lang.String,int,android.os.VibrationEffect,android.os.VibrationAttributes)>","<android.app.IActivityManager$Stub$Proxy: boolean updateConfiguration(android.content.res.Configuration)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: void reportChange(long,android.content.pm.ApplicationInfo)>","<android.net.IConnectivityManager$Stub$Proxy: boolean provisionVpnProfile(com.android.internal.net.VpnProfile,java.lang.String)>","<android.app.IActivityTaskManager$Stub$Proxy: void activityIdle(android.os.IBinder,android.content.res.Configuration,boolean)>","<android.content.pm.IShortcutService$Stub$Proxy: void disableShortcuts(java.lang.String,java.util.List,java.lang.CharSequence,int,int)>","<android.content.pm.IShortcutService$Stub$Proxy: void enableShortcuts(java.lang.String,java.util.List,int)>","<android.content.pm.IShortcutService$Stub$Proxy: void removeLongLivedShortcuts(java.lang.String,java.util.List,int)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkRequest pendingRequestForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent,java.lang.String)>","<com.android.internal.telephony.IMms$Stub$Proxy: boolean updateStoredMessageStatus(java.lang.String,android.net.Uri,android.content.ContentValues)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.Network registerNetworkAgent(android.os.Messenger,android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,int,android.net.NetworkAgentConfig,int)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyServiceStateForPhoneId(int,int,android.telephony.ServiceState)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: int addOverrideApn(android.content.ComponentName,android.telephony.data.ApnSetting)>","<android.os.IVibratorService$Stub$Proxy: void vibrate(int,java.lang.String,android.os.VibrationEffect,android.os.VibrationAttributes,java.lang.String,android.os.IBinder)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setPermittedAccessibilityServices(android.content.ComponentName,java.util.List)>","<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent,int)>","<android.net.IConnectivityManager$Stub$Proxy: void pendingListenForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent,java.lang.String)>","<android.app.job.IJobScheduler$Stub$Proxy: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: boolean isChangeEnabled(long,android.content.pm.ApplicationInfo)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setPermittedInputMethods(android.content.ComponentName,java.util.List)>","<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>","<android.view.autofill.IAutoFillManager$Stub$Proxy: void setUserData(android.service.autofill.UserData)>","<android.app.IActivityManager$Stub$Proxy: void updatePersistentConfiguration(android.content.res.Configuration)>","<android.net.IConnectivityManager$Stub$Proxy: void releaseNetworkRequest(android.net.NetworkRequest)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyRegistrationFailed(int,int,android.telephony.CellIdentity,java.lang.String,int,int,int)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellLocationForSubscriber(int,android.telephony.CellIdentity)>","<android.content.pm.IShortcutService$Stub$Proxy: void removeDynamicShortcuts(java.lang.String,java.util.List,int)>","<android.app.job.IJobScheduler$Stub$Proxy: int scheduleAsPackage(android.app.job.JobInfo,java.lang.String,int,java.lang.String)>","<android.view.contentcapture.IContentCaptureManager$Stub$Proxy: void removeData(android.view.contentcapture.DataRemovalRequest)>","<android.app.IActivityTaskManager$Stub$Proxy: int startActivityWithConfig(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle,int)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkRequest requestNetwork(android.net.NetworkCapabilities,android.os.Messenger,int,android.os.IBinder,int,java.lang.String)>","<android.app.IActivityManager$Stub$Proxy: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,int,int)>","<android.accounts.IAccountManager$Stub$Proxy: boolean addAccountExplicitlyWithVisibility(android.accounts.Account,java.lang.String,android.os.Bundle,java.util.Map)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyBarringInfoChanged(int,int,android.telephony.BarringInfo)>"],"<android.util.SparseArray: void <init>(int)>":["<android.app.IActivityTaskManager$Stub$Proxy: void registerRemoteAnimationsForDisplay(int,android.view.RemoteAnimationDefinition)>","<android.app.IActivityTaskManager$Stub$Proxy: void registerRemoteAnimations(android.os.IBinder,android.view.RemoteAnimationDefinition)>"],"<android.view.textclassifier.TextClassifierEvent: void <init>(android.os.Parcel)>":["<android.service.textclassifier.ITextClassifierService$Stub$Proxy: void onTextClassifierEvent(android.view.textclassifier.TextClassificationSessionId,android.view.textclassifier.TextClassifierEvent)>"],"<android.view.RemoteAnimationDefinition: void <init>(android.os.Parcel)>":["<android.app.IActivityTaskManager$Stub$Proxy: void registerRemoteAnimationsForDisplay(int,android.view.RemoteAnimationDefinition)>","<android.app.IActivityTaskManager$Stub$Proxy: void registerRemoteAnimations(android.os.IBinder,android.view.RemoteAnimationDefinition)>"],"<android.util.ArraySet: void allocArrays(int)>":["<android.content.pm.IShortcutService$Stub$Proxy: boolean requestPinShortcut(java.lang.String,android.content.pm.ShortcutInfo,android.content.IntentSender,int)>","<android.content.pm.IShortcutService$Stub$Proxy: android.content.Intent createShortcutResultIntent(java.lang.String,android.content.pm.ShortcutInfo,int)>","<android.content.pm.IShortcutService$Stub$Proxy: void pushDynamicShortcut(java.lang.String,android.content.pm.ShortcutInfo,int)>"],"<android.os.Parcel: android.os.Parcelable[] readParcelableArray(java.lang.ClassLoader)>":["<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetProvider(android.content.ComponentName,android.widget.RemoteViews)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellLocation(android.telephony.CellIdentity)>","<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void partiallyUpdateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: com.android.internal.compat.CompatibilityChangeConfig getAppConfig(android.content.pm.ApplicationInfo)>","<android.net.IConnectivityManager$Stub$Proxy: void startLegacyVpn(com.android.internal.net.VpnProfile)>","<android.app.job.IJobScheduler$Stub$Proxy: int schedule(android.app.job.JobInfo)>","<android.app.INotificationManager$Stub$Proxy: void enqueueNotificationWithTag(java.lang.String,java.lang.String,java.lang.String,int,android.app.Notification,int)>","<android.net.IConnectivityManager$Stub$Proxy: void registerConnectivityDiagnosticsCallback(android.net.IConnectivityDiagnosticsCallback,android.net.NetworkRequest,java.lang.String)>","<android.app.IActivityTaskManager$Stub$Proxy: boolean updateConfiguration(android.content.res.Configuration)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyPhoneCapabilityChanged(android.telephony.PhoneCapability)>","<android.app.IActivityManager$Stub$Proxy: void unbindBackupAgent(android.content.pm.ApplicationInfo)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkRequest listenForNetwork(android.net.NetworkCapabilities,android.os.Messenger,android.os.IBinder,java.lang.String)>","<android.net.IConnectivityManager$Stub$Proxy: void declareNetworkRequestUnfulfillable(android.net.NetworkRequest)>","<android.os.IVibratorService$Stub$Proxy: boolean setAlwaysOnEffect(int,java.lang.String,int,android.os.VibrationEffect,android.os.VibrationAttributes)>","<android.app.IActivityManager$Stub$Proxy: boolean updateConfiguration(android.content.res.Configuration)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: void reportChange(long,android.content.pm.ApplicationInfo)>","<android.net.IConnectivityManager$Stub$Proxy: boolean provisionVpnProfile(com.android.internal.net.VpnProfile,java.lang.String)>","<android.app.IActivityTaskManager$Stub$Proxy: void activityIdle(android.os.IBinder,android.content.res.Configuration,boolean)>","<android.content.pm.IShortcutService$Stub$Proxy: void disableShortcuts(java.lang.String,java.util.List,java.lang.CharSequence,int,int)>","<android.content.pm.IShortcutService$Stub$Proxy: void enableShortcuts(java.lang.String,java.util.List,int)>","<android.content.pm.IShortcutService$Stub$Proxy: void removeLongLivedShortcuts(java.lang.String,java.util.List,int)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkRequest pendingRequestForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent,java.lang.String)>","<com.android.internal.telephony.IMms$Stub$Proxy: boolean updateStoredMessageStatus(java.lang.String,android.net.Uri,android.content.ContentValues)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.Network registerNetworkAgent(android.os.Messenger,android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,int,android.net.NetworkAgentConfig,int)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyServiceStateForPhoneId(int,int,android.telephony.ServiceState)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: int addOverrideApn(android.content.ComponentName,android.telephony.data.ApnSetting)>","<android.os.IVibratorService$Stub$Proxy: void vibrate(int,java.lang.String,android.os.VibrationEffect,android.os.VibrationAttributes,java.lang.String,android.os.IBinder)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setPermittedAccessibilityServices(android.content.ComponentName,java.util.List)>","<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent,int)>","<android.net.IConnectivityManager$Stub$Proxy: void pendingListenForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent,java.lang.String)>","<android.app.job.IJobScheduler$Stub$Proxy: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: boolean isChangeEnabled(long,android.content.pm.ApplicationInfo)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setPermittedInputMethods(android.content.ComponentName,java.util.List)>","<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>","<android.view.autofill.IAutoFillManager$Stub$Proxy: void setUserData(android.service.autofill.UserData)>","<android.app.IActivityManager$Stub$Proxy: void updatePersistentConfiguration(android.content.res.Configuration)>","<android.net.IConnectivityManager$Stub$Proxy: void releaseNetworkRequest(android.net.NetworkRequest)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyRegistrationFailed(int,int,android.telephony.CellIdentity,java.lang.String,int,int,int)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellLocationForSubscriber(int,android.telephony.CellIdentity)>","<android.content.pm.IShortcutService$Stub$Proxy: void removeDynamicShortcuts(java.lang.String,java.util.List,int)>","<android.app.job.IJobScheduler$Stub$Proxy: int scheduleAsPackage(android.app.job.JobInfo,java.lang.String,int,java.lang.String)>","<android.view.contentcapture.IContentCaptureManager$Stub$Proxy: void removeData(android.view.contentcapture.DataRemovalRequest)>","<android.app.IActivityTaskManager$Stub$Proxy: int startActivityWithConfig(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle,int)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkRequest requestNetwork(android.net.NetworkCapabilities,android.os.Messenger,int,android.os.IBinder,int,java.lang.String)>","<android.app.IActivityManager$Stub$Proxy: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,int,int)>","<android.accounts.IAccountManager$Stub$Proxy: boolean addAccountExplicitlyWithVisibility(android.accounts.Account,java.lang.String,android.os.Bundle,java.util.Map)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyBarringInfoChanged(int,int,android.telephony.BarringInfo)>"],"<com.android.server.appop.AppOpsService: void getHistoricalOps(int,java.lang.String,java.lang.String,java.util.List,int,long,long,int,android.os.RemoteCallback)>":["<com.android.internal.app.IAppOpsService$Stub$Proxy: void getHistoricalOps(int,java.lang.String,java.lang.String,java.util.List,int,long,long,int,android.os.RemoteCallback)>"],"<android.util.ArrayMap: void allocArrays(int)>":["<android.media.IAudioService$Stub$Proxy: int getMinVolumeIndexForAttributes(android.media.AudioAttributes)>","<com.android.internal.telephony.IMms$Stub$Proxy: boolean updateStoredMessageStatus(java.lang.String,android.net.Uri,android.content.ContentValues)>","<android.media.IAudioService$Stub$Proxy: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String,android.media.AudioAttributes,java.lang.String)>","<android.media.IAudioService$Stub$Proxy: int dispatchFocusChange(android.media.AudioFocusInfo,int,android.media.audiopolicy.IAudioPolicyCallback)>","<android.os.IPowerManager$Stub$Proxy: boolean setAdaptivePowerSavePolicy(android.os.BatterySaverPolicyConfig)>","<android.media.IAudioService$Stub$Proxy: java.util.List getDevicesForAttributes(android.media.AudioAttributes)>","<android.app.INotificationManager$Stub$Proxy: void createConversationNotificationChannelForPackage(java.lang.String,int,java.lang.String,android.app.NotificationChannel,java.lang.String)>","<android.app.INotificationManager$Stub$Proxy: void enqueueNotificationWithTag(java.lang.String,java.lang.String,java.lang.String,int,android.app.Notification,int)>","<android.media.IAudioService$Stub$Proxy: int trackPlayer(android.media.PlayerBase$PlayerIdCard)>","<android.media.IAudioService$Stub$Proxy: int requestAudioFocus(android.media.AudioAttributes,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String,int,android.media.audiopolicy.IAudioPolicyCallback,int)>","<android.media.IAudioService$Stub$Proxy: void setVolumeIndexForAttributes(android.media.AudioAttributes,int,int,java.lang.String)>","<android.media.IAudioService$Stub$Proxy: void playerAttributes(int,android.media.AudioAttributes)>","<android.media.IAudioService$Stub$Proxy: int getMaxVolumeIndexForAttributes(android.media.AudioAttributes)>","<android.app.INotificationManager$Stub$Proxy: void updateNotificationChannelForPackage(java.lang.String,int,android.app.NotificationChannel)>","<android.media.IAudioService$Stub$Proxy: int getFocusRampTimeMs(int,android.media.AudioAttributes)>","<android.media.IAudioService$Stub$Proxy: void setFocusRequestResultFromExtPolicy(android.media.AudioFocusInfo,int,android.media.audiopolicy.IAudioPolicyCallback)>","<android.app.IActivityManager$Stub$Proxy: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,int,int)>","<android.app.INotificationManager$Stub$Proxy: void updateNotificationChannelFromPrivilegedListener(android.service.notification.INotificationListener,java.lang.String,android.os.UserHandle,android.app.NotificationChannel)>","<android.media.IAudioService$Stub$Proxy: int getVolumeIndexForAttributes(android.media.AudioAttributes)>"],"<android.os.Parcel: java.util.ArrayList readArrayList(java.lang.ClassLoader)>":["<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetProvider(android.content.ComponentName,android.widget.RemoteViews)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellLocation(android.telephony.CellIdentity)>","<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void partiallyUpdateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: com.android.internal.compat.CompatibilityChangeConfig getAppConfig(android.content.pm.ApplicationInfo)>","<android.net.IConnectivityManager$Stub$Proxy: void startLegacyVpn(com.android.internal.net.VpnProfile)>","<android.app.job.IJobScheduler$Stub$Proxy: int schedule(android.app.job.JobInfo)>","<android.app.INotificationManager$Stub$Proxy: void enqueueNotificationWithTag(java.lang.String,java.lang.String,java.lang.String,int,android.app.Notification,int)>","<android.net.IConnectivityManager$Stub$Proxy: void registerConnectivityDiagnosticsCallback(android.net.IConnectivityDiagnosticsCallback,android.net.NetworkRequest,java.lang.String)>","<android.app.IActivityTaskManager$Stub$Proxy: boolean updateConfiguration(android.content.res.Configuration)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyPhoneCapabilityChanged(android.telephony.PhoneCapability)>","<android.app.IActivityManager$Stub$Proxy: void unbindBackupAgent(android.content.pm.ApplicationInfo)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkRequest listenForNetwork(android.net.NetworkCapabilities,android.os.Messenger,android.os.IBinder,java.lang.String)>","<android.net.IConnectivityManager$Stub$Proxy: void declareNetworkRequestUnfulfillable(android.net.NetworkRequest)>","<android.os.IVibratorService$Stub$Proxy: boolean setAlwaysOnEffect(int,java.lang.String,int,android.os.VibrationEffect,android.os.VibrationAttributes)>","<android.app.IActivityManager$Stub$Proxy: boolean updateConfiguration(android.content.res.Configuration)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: void reportChange(long,android.content.pm.ApplicationInfo)>","<android.net.IConnectivityManager$Stub$Proxy: boolean provisionVpnProfile(com.android.internal.net.VpnProfile,java.lang.String)>","<android.app.IActivityTaskManager$Stub$Proxy: void activityIdle(android.os.IBinder,android.content.res.Configuration,boolean)>","<android.content.pm.IShortcutService$Stub$Proxy: void disableShortcuts(java.lang.String,java.util.List,java.lang.CharSequence,int,int)>","<android.content.pm.IShortcutService$Stub$Proxy: void enableShortcuts(java.lang.String,java.util.List,int)>","<android.content.pm.IShortcutService$Stub$Proxy: void removeLongLivedShortcuts(java.lang.String,java.util.List,int)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkRequest pendingRequestForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent,java.lang.String)>","<com.android.internal.telephony.IMms$Stub$Proxy: boolean updateStoredMessageStatus(java.lang.String,android.net.Uri,android.content.ContentValues)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.Network registerNetworkAgent(android.os.Messenger,android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,int,android.net.NetworkAgentConfig,int)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyServiceStateForPhoneId(int,int,android.telephony.ServiceState)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: int addOverrideApn(android.content.ComponentName,android.telephony.data.ApnSetting)>","<android.os.IVibratorService$Stub$Proxy: void vibrate(int,java.lang.String,android.os.VibrationEffect,android.os.VibrationAttributes,java.lang.String,android.os.IBinder)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setPermittedAccessibilityServices(android.content.ComponentName,java.util.List)>","<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent,int)>","<android.net.IConnectivityManager$Stub$Proxy: void pendingListenForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent,java.lang.String)>","<android.app.job.IJobScheduler$Stub$Proxy: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: boolean isChangeEnabled(long,android.content.pm.ApplicationInfo)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setPermittedInputMethods(android.content.ComponentName,java.util.List)>","<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>","<android.view.autofill.IAutoFillManager$Stub$Proxy: void setUserData(android.service.autofill.UserData)>","<android.app.IActivityManager$Stub$Proxy: void updatePersistentConfiguration(android.content.res.Configuration)>","<android.net.IConnectivityManager$Stub$Proxy: void releaseNetworkRequest(android.net.NetworkRequest)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyRegistrationFailed(int,int,android.telephony.CellIdentity,java.lang.String,int,int,int)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellLocationForSubscriber(int,android.telephony.CellIdentity)>","<android.content.pm.IShortcutService$Stub$Proxy: void removeDynamicShortcuts(java.lang.String,java.util.List,int)>","<android.app.job.IJobScheduler$Stub$Proxy: int scheduleAsPackage(android.app.job.JobInfo,java.lang.String,int,java.lang.String)>","<android.view.contentcapture.IContentCaptureManager$Stub$Proxy: void removeData(android.view.contentcapture.DataRemovalRequest)>","<android.app.IActivityTaskManager$Stub$Proxy: int startActivityWithConfig(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle,int)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkRequest requestNetwork(android.net.NetworkCapabilities,android.os.Messenger,int,android.os.IBinder,int,java.lang.String)>","<android.app.IActivityManager$Stub$Proxy: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,int,int)>","<android.accounts.IAccountManager$Stub$Proxy: boolean addAccountExplicitlyWithVisibility(android.accounts.Account,java.lang.String,android.os.Bundle,java.util.Map)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyBarringInfoChanged(int,int,android.telephony.BarringInfo)>"],"<android.hardware.location.ContextHubMessage: void <init>(android.os.Parcel)>":["<android.hardware.location.IContextHubService$Stub$Proxy: int sendMessage(int,int,android.hardware.location.ContextHubMessage)>"],"<android.os.LocaleList: android.os.LocaleList forLanguageTags(java.lang.String)>":["<com.android.internal.view.IInputMethodManager$Stub$Proxy: com.android.internal.view.InputBindResult startInputOrWindowGainedFocus(int,com.android.internal.view.IInputMethodClient,android.os.IBinder,int,int,int,android.view.inputmethod.EditorInfo,com.android.internal.view.IInputContext,int,int)>"],"<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getActiveAdmins(int)>":["<android.app.admin.IDevicePolicyManager$Stub$Proxy: java.util.List getActiveAdmins(int)>"],"<com.android.server.appop.AppOpsService: void getHistoricalOpsFromDiskRaw(int,java.lang.String,java.lang.String,java.util.List,int,long,long,int,android.os.RemoteCallback)>":["<com.android.internal.app.IAppOpsService$Stub$Proxy: void getHistoricalOpsFromDiskRaw(int,java.lang.String,java.lang.String,java.util.List,int,long,long,int,android.os.RemoteCallback)>"],"<com.android.server.devicepolicy.DevicePolicyManagerService: void setUserControlDisabledPackages(android.content.ComponentName,java.util.List)>":["<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setUserControlDisabledPackages(android.content.ComponentName,java.util.List)>"],"<android.os.LocaleList: void <init>(java.util.Locale[])>":["<com.android.internal.view.IInputMethodManager$Stub$Proxy: com.android.internal.view.InputBindResult startInputOrWindowGainedFocus(int,com.android.internal.view.IInputMethodClient,android.os.IBinder,int,int,int,android.view.inputmethod.EditorInfo,com.android.internal.view.IInputContext,int,int)>"],"<android.os.Parcel: android.util.SparseBooleanArray readSparseBooleanArray()>":["<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetProvider(android.content.ComponentName,android.widget.RemoteViews)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellLocation(android.telephony.CellIdentity)>","<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void partiallyUpdateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: com.android.internal.compat.CompatibilityChangeConfig getAppConfig(android.content.pm.ApplicationInfo)>","<android.net.IConnectivityManager$Stub$Proxy: void startLegacyVpn(com.android.internal.net.VpnProfile)>","<android.app.job.IJobScheduler$Stub$Proxy: int schedule(android.app.job.JobInfo)>","<android.app.INotificationManager$Stub$Proxy: void enqueueNotificationWithTag(java.lang.String,java.lang.String,java.lang.String,int,android.app.Notification,int)>","<android.net.IConnectivityManager$Stub$Proxy: void registerConnectivityDiagnosticsCallback(android.net.IConnectivityDiagnosticsCallback,android.net.NetworkRequest,java.lang.String)>","<android.app.IActivityTaskManager$Stub$Proxy: boolean updateConfiguration(android.content.res.Configuration)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyPhoneCapabilityChanged(android.telephony.PhoneCapability)>","<android.app.IActivityManager$Stub$Proxy: void unbindBackupAgent(android.content.pm.ApplicationInfo)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkRequest listenForNetwork(android.net.NetworkCapabilities,android.os.Messenger,android.os.IBinder,java.lang.String)>","<android.net.IConnectivityManager$Stub$Proxy: void declareNetworkRequestUnfulfillable(android.net.NetworkRequest)>","<android.os.IVibratorService$Stub$Proxy: boolean setAlwaysOnEffect(int,java.lang.String,int,android.os.VibrationEffect,android.os.VibrationAttributes)>","<android.app.IActivityManager$Stub$Proxy: boolean updateConfiguration(android.content.res.Configuration)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: void reportChange(long,android.content.pm.ApplicationInfo)>","<android.net.IConnectivityManager$Stub$Proxy: boolean provisionVpnProfile(com.android.internal.net.VpnProfile,java.lang.String)>","<android.app.IActivityTaskManager$Stub$Proxy: void activityIdle(android.os.IBinder,android.content.res.Configuration,boolean)>","<android.content.pm.IShortcutService$Stub$Proxy: void disableShortcuts(java.lang.String,java.util.List,java.lang.CharSequence,int,int)>","<android.content.pm.IShortcutService$Stub$Proxy: void enableShortcuts(java.lang.String,java.util.List,int)>","<android.content.pm.IShortcutService$Stub$Proxy: void removeLongLivedShortcuts(java.lang.String,java.util.List,int)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkRequest pendingRequestForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent,java.lang.String)>","<com.android.internal.telephony.IMms$Stub$Proxy: boolean updateStoredMessageStatus(java.lang.String,android.net.Uri,android.content.ContentValues)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.Network registerNetworkAgent(android.os.Messenger,android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,int,android.net.NetworkAgentConfig,int)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyServiceStateForPhoneId(int,int,android.telephony.ServiceState)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: int addOverrideApn(android.content.ComponentName,android.telephony.data.ApnSetting)>","<android.os.IVibratorService$Stub$Proxy: void vibrate(int,java.lang.String,android.os.VibrationEffect,android.os.VibrationAttributes,java.lang.String,android.os.IBinder)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setPermittedAccessibilityServices(android.content.ComponentName,java.util.List)>","<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent,int)>","<android.net.IConnectivityManager$Stub$Proxy: void pendingListenForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent,java.lang.String)>","<android.app.job.IJobScheduler$Stub$Proxy: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: boolean isChangeEnabled(long,android.content.pm.ApplicationInfo)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setPermittedInputMethods(android.content.ComponentName,java.util.List)>","<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>","<android.view.autofill.IAutoFillManager$Stub$Proxy: void setUserData(android.service.autofill.UserData)>","<android.app.IActivityManager$Stub$Proxy: void updatePersistentConfiguration(android.content.res.Configuration)>","<android.net.IConnectivityManager$Stub$Proxy: void releaseNetworkRequest(android.net.NetworkRequest)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyRegistrationFailed(int,int,android.telephony.CellIdentity,java.lang.String,int,int,int)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellLocationForSubscriber(int,android.telephony.CellIdentity)>","<android.content.pm.IShortcutService$Stub$Proxy: void removeDynamicShortcuts(java.lang.String,java.util.List,int)>","<android.app.job.IJobScheduler$Stub$Proxy: int scheduleAsPackage(android.app.job.JobInfo,java.lang.String,int,java.lang.String)>","<android.view.contentcapture.IContentCaptureManager$Stub$Proxy: void removeData(android.view.contentcapture.DataRemovalRequest)>","<android.app.IActivityTaskManager$Stub$Proxy: int startActivityWithConfig(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle,int)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkRequest requestNetwork(android.net.NetworkCapabilities,android.os.Messenger,int,android.os.IBinder,int,java.lang.String)>","<android.app.IActivityManager$Stub$Proxy: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,int,int)>","<android.accounts.IAccountManager$Stub$Proxy: boolean addAccountExplicitlyWithVisibility(android.accounts.Account,java.lang.String,android.os.Bundle,java.util.Map)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyBarringInfoChanged(int,int,android.telephony.BarringInfo)>"],"<android.media.midi.MidiDeviceInfo: void <init>(int,int,int,int,java.lang.String[],java.lang.String[],android.os.Bundle,boolean)>":["<android.media.midi.IMidiManager$Stub$Proxy: void openDevice(android.os.IBinder,android.media.midi.MidiDeviceInfo,android.media.midi.IMidiDeviceOpenCallback)>","<android.media.midi.IMidiManager$Stub$Proxy: android.media.midi.MidiDeviceStatus getDeviceStatus(android.media.midi.MidiDeviceInfo)>"],"<android.os.Parcel: void readStringList(java.util.List)>":["<android.content.pm.IPackageManager$Stub$Proxy: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)>","<android.content.pm.IPackageManager$Stub$Proxy: void addCrossProfileIntentFilter(android.content.IntentFilter,java.lang.String,int,int,int)>","<android.app.IActivityManager$Stub$Proxy: android.content.Intent registerReceiver(android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int,int)>","<android.content.pm.IShortcutService$Stub$Proxy: android.content.pm.ParceledListSlice getShareTargets(java.lang.String,android.content.IntentFilter,int)>","<android.content.pm.ILauncherApps$Stub$Proxy: android.content.pm.ParceledListSlice getShortcuts(java.lang.String,android.content.pm.ShortcutQueryWrapper,android.os.UserHandle)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: void addPersistentPreferredActivity(android.content.ComponentName,android.content.IntentFilter,android.content.ComponentName)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: void addCrossProfileIntentFilter(android.content.ComponentName,android.content.IntentFilter,int)>","<android.content.pm.IPackageManager$Stub$Proxy: void addPersistentPreferredActivity(android.content.IntentFilter,android.content.ComponentName,int)>","<android.content.pm.IPackageManager$Stub$Proxy: void replacePreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)>","<android.content.pm.ILauncherApps$Stub$Proxy: void registerShortcutChangeCallback(java.lang.String,android.content.pm.ShortcutQueryWrapper,android.content.pm.IShortcutChangeCallback)>","<android.service.textclassifier.ITextClassifierService$Stub$Proxy: void onSuggestConversationActions(android.view.textclassifier.TextClassificationSessionId,android.view.textclassifier.ConversationActions$Request,android.service.textclassifier.ITextClassifierCallback)>","<android.content.pm.IPackageManager$Stub$Proxy: void setLastChosenActivity(android.content.Intent,java.lang.String,int,android.content.IntentFilter,int,android.content.ComponentName)>","<android.app.IActivityManager$Stub$Proxy: android.content.Intent registerReceiverWithFeature(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int,int)>"],"<android.view.WindowManager$LayoutParams: void <init>(android.os.Parcel)>":["<android.view.IWindowManager$Stub$Proxy: boolean getWindowInsets(android.view.WindowManager$LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.DisplayCutout$ParcelableWrapper,android.view.InsetsState)>"],"<com.android.server.devicepolicy.DevicePolicyManagerService: void setCrossProfileCalendarPackages(android.content.ComponentName,java.util.List)>":["<android.app.admin.IDevicePolicyManager$Stub$Proxy: void setCrossProfileCalendarPackages(android.content.ComponentName,java.util.List)>"],"<android.os.Parcel: java.util.HashMap readHashMap(java.lang.ClassLoader)>":["<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetProvider(android.content.ComponentName,android.widget.RemoteViews)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellLocation(android.telephony.CellIdentity)>","<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void partiallyUpdateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: com.android.internal.compat.CompatibilityChangeConfig getAppConfig(android.content.pm.ApplicationInfo)>","<android.net.IConnectivityManager$Stub$Proxy: void startLegacyVpn(com.android.internal.net.VpnProfile)>","<android.app.job.IJobScheduler$Stub$Proxy: int schedule(android.app.job.JobInfo)>","<android.app.INotificationManager$Stub$Proxy: void enqueueNotificationWithTag(java.lang.String,java.lang.String,java.lang.String,int,android.app.Notification,int)>","<android.net.IConnectivityManager$Stub$Proxy: void registerConnectivityDiagnosticsCallback(android.net.IConnectivityDiagnosticsCallback,android.net.NetworkRequest,java.lang.String)>","<android.app.IActivityTaskManager$Stub$Proxy: boolean updateConfiguration(android.content.res.Configuration)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyPhoneCapabilityChanged(android.telephony.PhoneCapability)>","<android.app.IActivityManager$Stub$Proxy: void unbindBackupAgent(android.content.pm.ApplicationInfo)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkRequest listenForNetwork(android.net.NetworkCapabilities,android.os.Messenger,android.os.IBinder,java.lang.String)>","<android.net.IConnectivityManager$Stub$Proxy: void declareNetworkRequestUnfulfillable(android.net.NetworkRequest)>","<android.os.IVibratorService$Stub$Proxy: boolean setAlwaysOnEffect(int,java.lang.String,int,android.os.VibrationEffect,android.os.VibrationAttributes)>","<android.app.IActivityManager$Stub$Proxy: boolean updateConfiguration(android.content.res.Configuration)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: void reportChange(long,android.content.pm.ApplicationInfo)>","<android.net.IConnectivityManager$Stub$Proxy: boolean provisionVpnProfile(com.android.internal.net.VpnProfile,java.lang.String)>","<android.app.IActivityTaskManager$Stub$Proxy: void activityIdle(android.os.IBinder,android.content.res.Configuration,boolean)>","<android.content.pm.IShortcutService$Stub$Proxy: void disableShortcuts(java.lang.String,java.util.List,java.lang.CharSequence,int,int)>","<android.content.pm.IShortcutService$Stub$Proxy: void enableShortcuts(java.lang.String,java.util.List,int)>","<android.content.pm.IShortcutService$Stub$Proxy: void removeLongLivedShortcuts(java.lang.String,java.util.List,int)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkRequest pendingRequestForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent,java.lang.String)>","<com.android.internal.telephony.IMms$Stub$Proxy: boolean updateStoredMessageStatus(java.lang.String,android.net.Uri,android.content.ContentValues)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.Network registerNetworkAgent(android.os.Messenger,android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,int,android.net.NetworkAgentConfig,int)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyServiceStateForPhoneId(int,int,android.telephony.ServiceState)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: int addOverrideApn(android.content.ComponentName,android.telephony.data.ApnSetting)>","<android.os.IVibratorService$Stub$Proxy: void vibrate(int,java.lang.String,android.os.VibrationEffect,android.os.VibrationAttributes,java.lang.String,android.os.IBinder)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setPermittedAccessibilityServices(android.content.ComponentName,java.util.List)>","<android.view.accessibility.IAccessibilityManager$Stub$Proxy: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent,int)>","<android.net.IConnectivityManager$Stub$Proxy: void pendingListenForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent,java.lang.String)>","<android.app.job.IJobScheduler$Stub$Proxy: int enqueue(android.app.job.JobInfo,android.app.job.JobWorkItem)>","<com.android.internal.compat.IPlatformCompat$Stub$Proxy: boolean isChangeEnabled(long,android.content.pm.ApplicationInfo)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean setPermittedInputMethods(android.content.ComponentName,java.util.List)>","<com.android.internal.appwidget.IAppWidgetService$Stub$Proxy: void updateAppWidgetIds(java.lang.String,int[],android.widget.RemoteViews)>","<android.view.autofill.IAutoFillManager$Stub$Proxy: void setUserData(android.service.autofill.UserData)>","<android.app.IActivityManager$Stub$Proxy: void updatePersistentConfiguration(android.content.res.Configuration)>","<android.net.IConnectivityManager$Stub$Proxy: void releaseNetworkRequest(android.net.NetworkRequest)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyRegistrationFailed(int,int,android.telephony.CellIdentity,java.lang.String,int,int,int)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyCellLocationForSubscriber(int,android.telephony.CellIdentity)>","<android.content.pm.IShortcutService$Stub$Proxy: void removeDynamicShortcuts(java.lang.String,java.util.List,int)>","<android.app.job.IJobScheduler$Stub$Proxy: int scheduleAsPackage(android.app.job.JobInfo,java.lang.String,int,java.lang.String)>","<android.view.contentcapture.IContentCaptureManager$Stub$Proxy: void removeData(android.view.contentcapture.DataRemovalRequest)>","<android.app.IActivityTaskManager$Stub$Proxy: int startActivityWithConfig(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle,int)>","<android.net.IConnectivityManager$Stub$Proxy: android.net.NetworkRequest requestNetwork(android.net.NetworkCapabilities,android.os.Messenger,int,android.os.IBinder,int,java.lang.String)>","<android.app.IActivityManager$Stub$Proxy: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,int,int)>","<android.accounts.IAccountManager$Stub$Proxy: boolean addAccountExplicitlyWithVisibility(android.accounts.Account,java.lang.String,android.os.Bundle,java.util.Map)>","<com.android.internal.telephony.ITelephonyRegistry$Stub$Proxy: void notifyBarringInfoChanged(int,int,android.telephony.BarringInfo)>"],"<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice queryContentProviders(java.lang.String,int,int,java.lang.String)>":["<android.content.pm.IPackageManager$Stub$Proxy: android.content.pm.ParceledListSlice queryContentProviders(java.lang.String,int,int,java.lang.String)>"],"<com.android.server.input.InputManagerService: android.hardware.input.KeyboardLayout[] getKeyboardLayoutsForInputDevice(android.hardware.input.InputDeviceIdentifier)>":["<android.hardware.input.IInputManager$Stub$Proxy: android.hardware.input.KeyboardLayout[] getKeyboardLayoutsForInputDevice(android.hardware.input.InputDeviceIdentifier)>"],"<com.android.server.VibratorService: boolean[] arePrimitivesSupported(int[])>":["<android.os.IVibratorService$Stub$Proxy: boolean[] arePrimitivesSupported(int[])>"],"<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isPasswordSufficientAfterProfileUnification(int,int)>":["<android.app.admin.IDevicePolicyManager$Stub$Proxy: boolean isPasswordSufficientAfterProfileUnification(int,int)>"],"<android.os.Parcel: void readTypedList(java.util.List,android.os.Parcelable$Creator)>":["<com.android.internal.telephony.euicc.IEuiccController$Stub$Proxy: void downloadSubscription(int,android.telephony.euicc.DownloadableSubscription,boolean,java.lang.String,android.os.Bundle,android.app.PendingIntent)>","<com.android.internal.telephony.ITelephony$Stub$Proxy: int setAllowedCarriers(android.telephony.CarrierRestrictionRules)>","<android.location.ILocationManager$Stub$Proxy: void injectGnssMeasurementCorrections(android.location.GnssMeasurementCorrections,java.lang.String)>","<android.net.IConnectivityManager$Stub$Proxy: android.os.ParcelFileDescriptor establishVpn(com.android.internal.net.VpnConfig)>","<com.android.internal.telephony.euicc.IEuiccController$Stub$Proxy: void getDownloadableSubscriptionMetadata(int,android.telephony.euicc.DownloadableSubscription,java.lang.String,android.app.PendingIntent)>"],"<com.android.server.pm.PackageManagerService: java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])>":["<android.content.pm.IPackageManager$Stub$Proxy: java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])>"],"<android.content.IntentFilter: void <init>(android.os.Parcel)>":["<android.app.admin.IDevicePolicyManager$Stub$Proxy: void addCrossProfileIntentFilter(android.content.ComponentName,android.content.IntentFilter,int)>","<android.content.pm.IPackageManager$Stub$Proxy: void addPersistentPreferredActivity(android.content.IntentFilter,android.content.ComponentName,int)>","<android.content.pm.IPackageManager$Stub$Proxy: void replacePreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)>","<android.content.pm.IPackageManager$Stub$Proxy: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)>","<android.content.pm.IPackageManager$Stub$Proxy: void setLastChosenActivity(android.content.Intent,java.lang.String,int,android.content.IntentFilter,int,android.content.ComponentName)>","<android.app.IActivityManager$Stub$Proxy: android.content.Intent registerReceiverWithFeature(android.app.IApplicationThread,java.lang.String,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int,int)>","<android.content.pm.IPackageManager$Stub$Proxy: void addCrossProfileIntentFilter(android.content.IntentFilter,java.lang.String,int,int,int)>","<android.app.IActivityManager$Stub$Proxy: android.content.Intent registerReceiver(android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int,int)>","<android.content.pm.IShortcutService$Stub$Proxy: android.content.pm.ParceledListSlice getShareTargets(java.lang.String,android.content.IntentFilter,int)>","<android.app.admin.IDevicePolicyManager$Stub$Proxy: void addPersistentPreferredActivity(android.content.ComponentName,android.content.IntentFilter,android.content.ComponentName)>"],"<android.hardware.location.NanoApp: void <init>(android.os.Parcel)>":["<android.hardware.location.IContextHubService$Stub$Proxy: int loadNanoApp(int,android.hardware.location.NanoApp)>"],"<android.os.BatterySaverPolicyConfig: void <init>(android.os.Parcel)>":["<android.os.IPowerManager$Stub$Proxy: boolean setAdaptivePowerSavePolicy(android.os.BatterySaverPolicyConfig)>"]}